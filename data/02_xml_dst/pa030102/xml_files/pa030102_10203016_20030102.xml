<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004951A1-20030102-D00000.TIF SYSTEM "US20030004951A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00001.TIF SYSTEM "US20030004951A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00002.TIF SYSTEM "US20030004951A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00003.TIF SYSTEM "US20030004951A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00004.TIF SYSTEM "US20030004951A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00005.TIF SYSTEM "US20030004951A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00006.TIF SYSTEM "US20030004951A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00007.TIF SYSTEM "US20030004951A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00008.TIF SYSTEM "US20030004951A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00009.TIF SYSTEM "US20030004951A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00010.TIF SYSTEM "US20030004951A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00011.TIF SYSTEM "US20030004951A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00012.TIF SYSTEM "US20030004951A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00013.TIF SYSTEM "US20030004951A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00014.TIF SYSTEM "US20030004951A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00015.TIF SYSTEM "US20030004951A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030004951A1-20030102-D00016.TIF SYSTEM "US20030004951A1-20030102-D00016.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004951</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10203016</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020802</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>010000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Automated client-server data validation</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Sandip</given-name>
<family-name>Chokshi</family-name>
</name>
<residence>
<residence-us>
<city>San Jose</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>GLENN PATENT GROUP</name-1>
<name-2></name-2>
<address>
<address-1>3475 EDISON WAY</address-1>
<address-2>SUITE L</address-2>
<city>MENLO PARK</city>
<state>CA</state>
<postalcode>94025</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
<international-conventions>
<pct-application>
<document-id>
<doc-number>PCT/US01/03050</doc-number>
<document-date>20010130</document-date>
<country-code>WO</country-code>
</document-id>
</pct-application>
</international-conventions>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The present invention provides a way to validate data entry at both the client and the server with minimal engineering effort. The system allows the specification of data validation rules for a form on a server. The system provides a version of the rules with the form to the client computer. The system also executes the rules on the server for further validation. The system may translate the rules into JavaScript data structures, passed as the version to the client for client-side validation. Because the rules for the form are specific only once, there is no possibility of the rules becoming out of sync betwen the form on the client and on the server. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates to checking the validity of data entry in web-based Systems. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND ART </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In web-based systems involving data entry, there is a problem in checking the validity of the data. The prior art provides three choices, each having disadvantageous consequences: </paragraph>
<paragraph id="P-0003" lvl="1"><number>&lsqb;0003&rsqb;</number> 1. Check the data only at the client. This lets you be responsive to the user (you can display helpful messages in a timely way), but leaves your system open to bad data from entities that bypass your client and speak directly to your server. </paragraph>
<paragraph id="P-0004" lvl="1"><number>&lsqb;0004&rsqb;</number> 2. Check the data only at the server. This ensures that the server does not accept bad data, no matter what client is used to send it, but is harder to use because it may take a while to display messages to the user when data is incorrectly entered. </paragraph>
<paragraph id="P-0005" lvl="1"><number>&lsqb;0005&rsqb;</number> 3. Check the data at the client and at the server. This is responsive to the user and is safe from bad data, but requires a lot of engineering work because the data validation code has to be maintained on two platforms. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The present invention provides a way to validate data entry at both the client and the server with minimal engineering effort. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The system allows engineers to specify data validation rules for a form on a server. The system provides a version of the rules with the form to the client computer. The system also executes the rules on the server for further validation. The system may translate the rules into JavaScript data structures, passed as the version to the client for client-side validation. Because engineers only specify the rules for the form once, there is no possibility of the rules becoming out of sync between the form on the client and on the server. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> A set of validation rules can be specified for each form (web page where data entry is allowed). Each rule is associated with a form element (e.g. the users email address or a phone number) and defines what is allowed and what is required for that form element. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Each rule can be created from a set of reusable, configurable constraints. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> There is a set of pre-written constraints. New constraints can be added. Currently there are number constraints and string constraints. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Number constraints produce rules that force a field to be numeric and may also specify minimum and/or maximum values that the user must meet. String constraints produce rules that may have minimum or maximum lengths, may allow only certain characters, may require certain characters and may or may not allow white space (e.g. spaces, tabs). </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Each supported constraint consists of server-side Java code and client-side JavaScript code. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> When the server sends the form down to the browser it includes some JavaScript data structures, which are automatically generated from the set of rules that were defined for the form. When the user attempts to submit the form, some JavaScript code first iterates through each rule that was included in the automatically generated data structures. Each rule is checked against the appropriate entry field. If there is a violation of the rule, the JavaScript code immediately displays a message without involving the server. The generated data structure includes message text for each rule that can be displayed if the user violates a rule. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> When the server receives a posted form, it iterates through each of the rules defined for that set. If there is a violation of the rule, the server responds to the client with an error message. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> These and other advantages of the present invention will become apparent upon reading the following detailed descriptions and studying the various figures of the drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> depicts a system supporting server computer <highlight><bold>4</bold></highlight> communicatively coupled <highlight><bold>40</bold></highlight>-<highlight><bold>42</bold></highlight> to client computer <highlight><bold>50</bold></highlight> operated <highlight><bold>52</bold></highlight> by client <highlight><bold>54</bold></highlight>, in accordance with certain embodiments of the invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> depicts a detail flowchart of operation <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> further performing validating client <highlight><bold>54</bold></highlight> data entry <highlight><bold>52</bold></highlight> by a client computer <highlight><bold>50</bold></highlight> and by a server computer <highlight><bold>40</bold></highlight> based upon a form <highlight><bold>10</bold></highlight> containing at least one form entry <highlight><bold>12</bold></highlight> with at least one associated validation rule <highlight><bold>14</bold></highlight>; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> depicts a detail flowchart of operation <highlight><bold>132</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the server computer validating the client form data entry received from the client computer; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> depicts a detail flowchart of operation <highlight><bold>122</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the client computer processing the client form entry; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> depicts a detail flowchart of operation <highlight><bold>182</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> further performing the client computer sending the initial client form data entry to the server computer; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> depicts a detail flowchart of operation <highlight><bold>216</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> further performing the client computer sending the initial client form data entry to the server computer; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> depicts a detail flowchart of operation <highlight><bold>152</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> further performing the server computer receiving the client form data entry from the client computer; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> depicts a server system <highlight><bold>2</bold></highlight> including server computer <highlight><bold>4</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> communicating <highlight><bold>40</bold></highlight>-<highlight><bold>42</bold></highlight> with client computer <highlight><bold>50</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> depicts server system <highlight><bold>2</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> further including server computer <highlight><bold>74</bold></highlight> communicating <highlight><bold>44</bold></highlight>-<highlight><bold>42</bold></highlight> with client computer <highlight><bold>50</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and including server computer <highlight><bold>84</bold></highlight> with accessibly coupled <highlight><bold>86</bold></highlight> memory <highlight><bold>88</bold></highlight> containing form <highlight><bold>10</bold></highlight>; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> depicts a detail flowchart of operation <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing validating client data entry by the client computer and by the server computer; </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7B</cross-reference> depicts a detail flowchart of operation <highlight><bold>112</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the client computer receiving the one form entry and at least one associated validation rule; </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8A</cross-reference> depicts a detail flowchart of operation <highlight><bold>272</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> further performing the second server computer providing the client computer the version of all the associated validation rules of the form entry; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8B</cross-reference> depicts a detail flowchart of operation <highlight><bold>112</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the client computer creating the client form entry with at least one associated local client rule; </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9A</cross-reference> depicts a detail flowchart of operation <highlight><bold>272</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> further performing the second server computer providing the client computer the client form entry; </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9B</cross-reference> depicts a detail flowchart of operation <highlight><bold>122</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the client computer processing the client form entry; </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10A</cross-reference> depicts a detail flowchart of operation <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the method validating client data entry at both the client computer and the server computer; </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10B</cross-reference> depicts a detail flowchart of operation <highlight><bold>412</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10A</cross-reference> further performing maintaining the form collection; </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11A</cross-reference> depicts a flowchart of preparing and sending a first form containing at least one form entry with at least one associated validation rule for use in the methods using forms with both client validation and server validation of form entries with validation rules; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11B</cross-reference> depicts a detail flowchart of operation <highlight><bold>452</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 11A</cross-reference> further performing developing the first form and specifying the associated validation rule set for the first form; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12A</cross-reference> depicts a detail flowchart of operation <highlight><bold>112</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the client computer receiving the client form entry; </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12B</cross-reference> depicts a detail flowchart of operation <highlight><bold>132</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the server computer validating the client form data entry; </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> depicts a detail flowchart of operation <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> further performing the method of using the form and validating form entries by both server computer <highlight><bold>4</bold></highlight> and client computer <highlight><bold>50</bold></highlight>; </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14A</cross-reference> depicts a detail flowchart of operation <highlight><bold>602</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference> further performing client computer operations supporting the method of using the form by both server computer <highlight><bold>4</bold></highlight> and client computer <highlight><bold>50</bold></highlight>; </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14B</cross-reference> depicts a detail flowchart of operation <highlight><bold>612</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference> further performing server computer operations supporting the method of using the form by both server computer <highlight><bold>4</bold></highlight> and client computer <highlight><bold>50</bold></highlight>; </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15A</cross-reference> depicts a detail flowchart of operation <highlight><bold>632</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 14</cross-reference> further performing the client computer receiving the client form; and </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15B</cross-reference> depicts a detail flowchart of operation <highlight><bold>632</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 14</cross-reference> further performing the client computer receiving the client form.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The present invention provides a way to validate data entry at both the client and the server with minimal engineering effort. The system allows engineers to specify data validation rules for each form or web page where data entry is allowed. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> depicts a system supporting server computer <highlight><bold>4</bold></highlight> communicatively coupled <highlight><bold>40</bold></highlight>-<highlight><bold>42</bold></highlight> to client computer <highlight><bold>50</bold></highlight> operated <highlight><bold>52</bold></highlight> by client <highlight><bold>54</bold></highlight>, in accordance with certain embodiments of the invention. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Server computer <highlight><bold>4</bold></highlight> is accessibly coupled <highlight><bold>6</bold></highlight> to memory <highlight><bold>8</bold></highlight> containing one form entry <highlight><bold>12</bold></highlight> associated with at least server rule <highlight><bold>14</bold></highlight> and at least one client rule <highlight><bold>16</bold></highlight> based upon form <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Form <highlight><bold>10</bold></highlight> may further comprise a second form entry <highlight><bold>22</bold></highlight> associated with at least one server rule <highlight><bold>24</bold></highlight> and at least one client rule <highlight><bold>26</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> There may be a second form <highlight><bold>30</bold></highlight> comprising at least one form entry <highlight><bold>32</bold></highlight> associated with at least server rule <highlight><bold>34</bold></highlight> and at least one client rule <highlight><bold>36</bold></highlight>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Memory <highlight><bold>8</bold></highlight> may further include program system <highlight><bold>100</bold></highlight> operating server computer <highlight><bold>4</bold></highlight> communicating <highlight><bold>40</bold></highlight>-<highlight><bold>42</bold></highlight> with client computer <highlight><bold>50</bold></highlight> to embody validation of data entry <highlight><bold>52</bold></highlight> by client <highlight><bold>54</bold></highlight> both by the client computer <highlight><bold>50</bold></highlight> using local client rules <highlight><bold>66</bold></highlight> and server computer <highlight><bold>4</bold></highlight> using server rules <highlight><bold>44</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Memory <highlight><bold>8</bold></highlight> may include, but is not limited to, volatile memory and non-volatile memory. Memory <highlight><bold>8</bold></highlight> may include, but is not limited to, at least two memory components. The memory components may include volatile memory components and non-volatile memory components. At least one memory component may be organized as a file management system. The file management system, memory component may include, but is not limited to, at least one of the following: a semiconductor memory device, a disk drive and a disk array. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Server computer <highlight><bold>4</bold></highlight> communicatively couples <highlight><bold>40</bold></highlight>-<highlight><bold>42</bold></highlight> to client computer <highlight><bold>50</bold></highlight>. Where arrows <highlight><bold>40</bold></highlight> and <highlight><bold>42</bold></highlight> meet may include, but is not limited to, a gateway, <highlight><bold>5</bold></highlight> which may or may not possess redundant portals. Where arrows <highlight><bold>40</bold></highlight> and <highlight><bold>42</bold></highlight> meet may include, but is not limited to, a firewall. Where arrows <highlight><bold>40</bold></highlight> and <highlight><bold>42</bold></highlight> meet may include, but is not limited to, a web site. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> As used herein, a computer will include, but is not limited to, instruction processors operating on one or more data streams concurrently and may execute one or more concurrent instruction streams. A computer will include, but is not limited to, inferential engines controlled by an inferential state. The inferential state may be changed by alterations in the active inferential rules, facts contained in a fact database and facts derived from interactions such as client data entry. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> As used herein, the operational steps of the methods of this invention may be performed in finite state machines. The operational steps of the methods of this invention may be performed as program steps residing in memory accessibly coupled to a collection of one or more computers. Program steps may be interpreted or natively executed by the computers. Program steps may represent instructions in machine portable interpreted languages including, but not limited to various forms of one or more of the following: HTTP, XML, JAVA, Prolog, LISP, Scheme, C, C&plus;&plus;, Smalltalk, FORTRAN and COBOL. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The program steps may implement machine language operations of a computer, interpreted instructions or inferential rules or facts carried out by at least one computer in the systems described herein. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> depicts a detail flowchart of operation <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> further performing validating client <highlight><bold>54</bold></highlight> data entry <highlight><bold>52</bold></highlight> by a client computer <highlight><bold>50</bold></highlight> and by a server computer <highlight><bold>40</bold></highlight> based upon a form <highlight><bold>10</bold></highlight> containing at least one form entry <highlight><bold>12</bold></highlight> with at least one associated validation rule <highlight><bold>14</bold></highlight>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> Arrow <highlight><bold>110</bold></highlight> directs the flow of execution from starting operation <highlight><bold>100</bold></highlight> to operation <highlight><bold>112</bold></highlight>. Operation <highlight><bold>112</bold></highlight> performs the client computer receiving the form entry and at least one associated validation rule contained in the form to create the client form entry with at least one associated local client rule. Arrow <highlight><bold>114</bold></highlight> directs execution from operation <highlight><bold>112</bold></highlight> to operation <highlight><bold>116</bold></highlight>. Operation <highlight><bold>116</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Arrow <highlight><bold>120</bold></highlight> directs the flow of execution from starting operation <highlight><bold>100</bold></highlight> to operation <highlight><bold>122</bold></highlight>. Operation <highlight><bold>122</bold></highlight> performs the client computer processing the client form entry using the client data entry and satisfying all of the associated local client rules to create a client form data entry received by the server computer. Arrow <highlight><bold>124</bold></highlight> directs execution from operation <highlight><bold>122</bold></highlight> to operation <highlight><bold>116</bold></highlight>. Operation <highlight><bold>116</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Arrow <highlight><bold>130</bold></highlight> directs the flow of execution from starting operation <highlight><bold>100</bold></highlight> to operation <highlight><bold>132</bold></highlight>. Operation <highlight><bold>132</bold></highlight> performs the server computer validating the client form data entry received from the client computer based upon all of the associated validation rules of the form entry contained in the form. Arrow <highlight><bold>134</bold></highlight> directs execution from operation <highlight><bold>132</bold></highlight> to operation <highlight><bold>116</bold></highlight>. Operation <highlight><bold>116</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> depicts a detail flowchart of operation <highlight><bold>132</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the server computer validating the client form data entry received from the client computer. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Arrow <highlight><bold>150</bold></highlight> directs the flow of execution from starting operation <highlight><bold>132</bold></highlight> to operation <highlight><bold>152</bold></highlight>. Operation <highlight><bold>152</bold></highlight> performs the server computer receiving the client form data entry from the client computer. Arrow <highlight><bold>154</bold></highlight> directs execution from operation <highlight><bold>152</bold></highlight> to operation <highlight><bold>156</bold></highlight>. Operation <highlight><bold>156</bold></highlight> performs the server computer validating the client form data entry based upon all of the associated validation rules of the form entry contained in the form. Arrow <highlight><bold>158</bold></highlight> directs execution from operation <highlight><bold>156</bold></highlight> to operation <highlight><bold>160</bold></highlight>. Operation <highlight><bold>160</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> Note that as used herein, the flowcharts of this document depict an illustrative manner by which to understand the operations of the various methods of certain embodiments of the invention. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> In certain embodiments of the invention, concurrent object paradigms, often supporting real-time event-driven operating system may be supported. Such embodiments may further support message passing as a way to trigger events. As such, an arrow and the flow of execution represented by that arrow may serve to depict disparate actions in a variety of distinct objects, which taken in their entirety form an embodiment of the invention. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Note that operation <highlight><bold>152</bold></highlight> may be performed a different number of times than operation <highlight><bold>156</bold></highlight>, in such embodiments of the invention utilizing real-time event-driven operating environments for concurrent objects supporting messaging, Is such as JAVA and C&plus;&plus;. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> In certain embodiments of the invention supporting inferential engines, these flowcharts portray the inferential action of the components of the inference system embodied. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> depicts a detail flowchart of operation <highlight><bold>122</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the client computer processing the client form entry. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Arrow <highlight><bold>170</bold></highlight> directs the flow of execution from starting operation <highlight><bold>122</bold></highlight> to operation <highlight><bold>172</bold></highlight>. Operation <highlight><bold>172</bold></highlight> performs the client computer processing the client form entry based upon input from the client to create an initial client form data entry. Arrow <highlight><bold>174</bold></highlight> directs execution from operation <highlight><bold>172</bold></highlight> to operation <highlight><bold>176</bold></highlight>. Operation <highlight><bold>176</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Arrow <highlight><bold>180</bold></highlight> directs the flow of execution from starting operation <highlight><bold>122</bold></highlight> to operation <highlight><bold>182</bold></highlight>. Operation <highlight><bold>182</bold></highlight> performs the client computer sending the initial client form data entry to the server computer to create the client form data entry whenever the initial client form data entry satisfies all of the associated local client rules. Arrow <highlight><bold>184</bold></highlight> directs execution from operation <highlight><bold>182</bold></highlight> to operation <highlight><bold>176</bold></highlight>. Operation <highlight><bold>176</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> depicts a detail flowchart of operation <highlight><bold>182</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> further performing the client computer sending the initial client form data entry to the server computer. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Arrow <highlight><bold>210</bold></highlight> directs the flow of execution from starting operation <highlight><bold>182</bold></highlight> to operation <highlight><bold>212</bold></highlight>. Operation <highlight><bold>212</bold></highlight> determines when the initial client form data entry satisfies all of the associated local client rules. Arrow <highlight><bold>214</bold></highlight> directs execution from operation <highlight><bold>212</bold></highlight> to operation <highlight><bold>216</bold></highlight> when the determination is &lsquo;Yes&rsquo;. Arrow <highlight><bold>228</bold></highlight> directs execution to <highlight><bold>220</bold></highlight> when the determination is &lsquo;No&rsquo;. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Operation <highlight><bold>216</bold></highlight> performs the client computer sending the initial client form data entry to the server computer to create the client form data entry. Arrow <highlight><bold>218</bold></highlight> directs execution from operation <highlight><bold>216</bold></highlight> to operation <highlight><bold>220</bold></highlight>. Operation <highlight><bold>220</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> depicts a detail flowchart of operation <highlight><bold>216</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> further performing the client computer sending the initial client form data entry to the server computer. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Arrow <highlight><bold>230</bold></highlight> directs the flow of execution from starting operation <highlight><bold>216</bold></highlight> to operation <highlight><bold>232</bold></highlight>. Operation <highlight><bold>232</bold></highlight> performs the client encrypting the initial client form data entry to create an encrypted data entry. Arrow <highlight><bold>234</bold></highlight> directs execution from operation <highlight><bold>232</bold></highlight> to operation <highlight><bold>236</bold></highlight>. Operation <highlight><bold>236</bold></highlight> performs the client sending the encrypted data entry to the server computer. Arrow <highlight><bold>238</bold></highlight> directs execution from operation <highlight><bold>236</bold></highlight> to operation <highlight><bold>240</bold></highlight>. Operation <highlight><bold>240</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> depicts a detail flowchart of operation <highlight><bold>152</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> further performing the server computer receiving the client form data entry from the client computer. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Arrow <highlight><bold>250</bold></highlight> directs the flow of execution from starting operation <highlight><bold>152</bold></highlight> to operation <highlight><bold>252</bold></highlight>. Operation <highlight><bold>252</bold></highlight> performs the server receiving the encrypted data entry. Arrow <highlight><bold>254</bold></highlight> directs execution from operation <highlight><bold>252</bold></highlight> to operation <highlight><bold>256</bold></highlight>. Operation <highlight><bold>256</bold></highlight> performs the server computer decrypting the encrypted data entry to create the client form data entry. Arrow <highlight><bold>258</bold></highlight> directs execution from operation <highlight><bold>256</bold></highlight> to operation <highlight><bold>260</bold></highlight>. Operation <highlight><bold>260</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> depicts a server system <highlight><bold>2</bold></highlight> including server computer <highlight><bold>4</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> communicating <highlight><bold>40</bold></highlight>-<highlight><bold>42</bold></highlight> with client computer <highlight><bold>50</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> Memory <highlight><bold>8</bold></highlight> may contain form <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> Memory <highlight><bold>58</bold></highlight> may include a web browser <highlight><bold>60</bold></highlight>. Web browser <highlight><bold>60</bold></highlight> may further perform client operations supporting the program system <highlight><bold>100</bold></highlight>. Note that in certain embodiments of the invention, the browser <highlight><bold>60</bold></highlight> may download a version of those client operations and form as a web page. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> Memory <highlight><bold>58</bold></highlight> may include client form <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Note that rule <highlight><bold>16</bold></highlight> is associated with form entry <highlight><bold>12</bold></highlight> and form entry <highlight><bold>22</bold></highlight>. An example of a rule which is associated with more than one form entry would be a rule which validates that birth date and age must be close to each other. A birth date entry indicating an age of 16 and an age entry of 21 should fail such a validation rule. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> depicts server system <highlight><bold>2</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> further including server computer <highlight><bold>74</bold></highlight> communicating <highlight><bold>44</bold></highlight>-<highlight><bold>42</bold></highlight> with client computer <highlight><bold>50</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and including server computer <highlight><bold>84</bold></highlight> with accessibly coupled <highlight><bold>86</bold></highlight> memory <highlight><bold>88</bold></highlight> containing form <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Server computer <highlight><bold>74</bold></highlight> may provide client computer <highlight><bold>50</bold></highlight> with client form entry <highlight><bold>62</bold></highlight> and associated local client rules <highlight><bold>66</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Server computer <highlight><bold>84</bold></highlight> may provide server rules <highlight><bold>14</bold></highlight> to server computer <highlight><bold>4</bold></highlight>. Server computer <highlight><bold>84</bold></highlight> may further provide form <highlight><bold>10</bold></highlight> to server computer <highlight><bold>74</bold></highlight>. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> Server computer <highlight><bold>84</bold></highlight> may provide a version of form <highlight><bold>10</bold></highlight> to server computer <highlight><bold>74</bold></highlight>. Server computer <highlight><bold>84</bold></highlight> may generate a version of form <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Server computer <highlight><bold>74</bold></highlight> may generate a version of form <highlight><bold>10</bold></highlight> to send to client computer <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> Note that in certain embodiments, form <highlight><bold>10</bold></highlight> may include form entries <highlight><bold>12</bold></highlight> with pre-computed versions of the server rules <highlight><bold>14</bold></highlight> and client rules <highlight><bold>16</bold></highlight>. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> depicts a detail flowchart of operation <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing validating client data entry by the client computer and by the server computer. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> Arrow <highlight><bold>270</bold></highlight> directs the flow of execution from starting operation <highlight><bold>100</bold></highlight> to operation <highlight><bold>272</bold></highlight>. Operation <highlight><bold>272</bold></highlight> performs a second server computer providing the client computer a version of the form entry and at least one associated validation rule. Arrow <highlight><bold>274</bold></highlight> directs execution from operation <highlight><bold>272</bold></highlight> to operation <highlight><bold>276</bold></highlight>. Operation <highlight><bold>276</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7B</cross-reference> depicts a detail flowchart of operation <highlight><bold>112</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the client computer receiving the one form entry and at least one associated validation rule. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Arrow <highlight><bold>290</bold></highlight> directs the flow of execution from starting operation <highlight><bold>112</bold></highlight> to operation <highlight><bold>292</bold></highlight>. Operation <highlight><bold>292</bold></highlight> performs the client computer receiving the one form entry and all of the associated validation rules from the second server computer to create the client form entry with at least one associated local client rule. Arrow <highlight><bold>294</bold></highlight> directs execution from operation <highlight><bold>292</bold></highlight> to operation <highlight><bold>296</bold></highlight>. Operation <highlight><bold>296</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8A</cross-reference> depicts a detail flowchart of operation <highlight><bold>272</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> further performing the second server computer providing the client computer the version of all the associated validation rules of the form entry. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> Arrow <highlight><bold>310</bold></highlight> directs the flow of execution from starting operation <highlight><bold>272</bold></highlight> to operation <highlight><bold>312</bold></highlight>. Operation <highlight><bold>312</bold></highlight> performs the second server computer generating a version of all the associated validation rules based upon the one form entry and all of the associated validation rules. Arrow <highlight><bold>314</bold></highlight> directs execution from operation <highlight><bold>312</bold></highlight> to operation <highlight><bold>316</bold></highlight>. Operation <highlight><bold>316</bold></highlight> performs the second server computer sending the version to the client computer to create all the associated local client rules. Arrow <highlight><bold>318</bold></highlight> directs execution from operation <highlight><bold>316</bold></highlight> to operation <highlight><bold>320</bold></highlight>. Operation <highlight><bold>320</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8B</cross-reference> depicts a detail flowchart of operation <highlight><bold>112</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the client computer creating the client form entry with at least one associated local client rule. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Arrow <highlight><bold>330</bold></highlight> directs the flow of execution from starting operation <highlight><bold>112</bold></highlight> to operation <highlight><bold>332</bold></highlight>. Operation <highlight><bold>332</bold></highlight> performs the client computer receiving the one form entry to create the client form entry. Arrow <highlight><bold>334</bold></highlight> directs execution from operation <highlight><bold>332</bold></highlight> to operation <highlight><bold>336</bold></highlight>. Operation <highlight><bold>336</bold></highlight> performs the client computer receiving the version of all the associated validation rules to create all the local client rules associated with the client form entry. Arrow <highlight><bold>338</bold></highlight> directs execution from operation <highlight><bold>336</bold></highlight> to operation <highlight><bold>340</bold></highlight>. Operation <highlight><bold>340</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> Note that in certain embodiments of the invention, a version of the form entry may be received as well. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9A</cross-reference> depicts a detail flowchart of operation <highlight><bold>272</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> further performing the second server computer providing the client computer the client form entry. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> Arrow <highlight><bold>350</bold></highlight> directs the flow of execution from starting operation <highlight><bold>272</bold></highlight> to operation <highlight><bold>352</bold></highlight>. Operation <highlight><bold>352</bold></highlight> performs the second server computer providing the client computer the form entry and all the associated validation rules to create the client form entry with all the associated local client rules, for each of the form entries with the associated validation rules contained in the form. Arrow <highlight><bold>354</bold></highlight> directs execution from operation <highlight><bold>352</bold></highlight> to operation <highlight><bold>356</bold></highlight>. Operation <highlight><bold>356</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9B</cross-reference> depicts a detail flowchart of operation <highlight><bold>122</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the client computer processing the client form entry. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> Arrow <highlight><bold>370</bold></highlight> directs the flow of execution from starting operation <highlight><bold>122</bold></highlight> to operation <highlight><bold>372</bold></highlight>. Operation <highlight><bold>372</bold></highlight> performs the client computer receiving a submission request from the client to create a form submission request. Arrow <highlight><bold>374</bold></highlight> directs execution from operation <highlight><bold>372</bold></highlight> to operation <highlight><bold>376</bold></highlight>. Operation <highlight><bold>376</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> Arrow <highlight><bold>380</bold></highlight> directs the flow of execution from starting operation <highlight><bold>122</bold></highlight> to operation <highlight><bold>382</bold></highlight>. Operation <highlight><bold>382</bold></highlight> performs the client computer validating the client form entry based upon all of the associated local client rules to create a validated. client form data entry, whenever the client computer receives the form submission request, for each form entry with at least one associated validation rule contained in the form. Arrow <highlight><bold>384</bold></highlight> directs execution from operation <highlight><bold>382</bold></highlight> to operation <highlight><bold>376</bold></highlight>. Operation <highlight><bold>376</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Arrow <highlight><bold>390</bold></highlight> directs the flow of execution from starting operation <highlight><bold>122</bold></highlight> to operation <highlight><bold>392</bold></highlight>. Operation <highlight><bold>392</bold></highlight> performs the client computer sending all of the validated client form data entries to the server computer to create all of the client form data entries for the form whenever the initial client form data entries satisfy all of the associated local client rules, for all of the at least one form entry with at least one associated validation rule contained in the form. Arrow <highlight><bold>394</bold></highlight> directs execution from operation <highlight><bold>392</bold></highlight> to operation <highlight><bold>376</bold></highlight>. Operation <highlight><bold>376</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10A</cross-reference> depicts a detail flowchart of operation <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the method validating client data entry at both the client computer and the server computer. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> Arrow <highlight><bold>410</bold></highlight> directs the flow of execution from starting operation <highlight><bold>100</bold></highlight> to operation <highlight><bold>412</bold></highlight>. Operation <highlight><bold>412</bold></highlight> performs maintaining a form collection including at least one form comprised of at least one form entry with at least one associated validation rule. Arrow <highlight><bold>414</bold></highlight> directs execution from operation <highlight><bold>412</bold></highlight> to operation <highlight><bold>416</bold></highlight>. Operation <highlight><bold>416</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10B</cross-reference> depicts a detail flowchart of operation <highlight><bold>412</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10A</cross-reference> further performing maintaining the form collection. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> Arrow <highlight><bold>430</bold></highlight> directs the flow of execution from starting operation <highlight><bold>412</bold></highlight> to operation <highlight><bold>432</bold></highlight>. Operation <highlight><bold>432</bold></highlight> performs receiving a first form and specifying an associated validation rule set for the first form from a development computer. Arrow <highlight><bold>434</bold></highlight> directs execution from operation <highlight><bold>432</bold></highlight> to operation <highlight><bold>436</bold></highlight>. Operation <highlight><bold>436</bold></highlight> performs adding the first form and the associated validation rule set into the form collection. Arrow <highlight><bold>438</bold></highlight> directs execution from operation <highlight><bold>436</bold></highlight> to operation <highlight><bold>440</bold></highlight>. Operation <highlight><bold>440</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> Certain embodiments of the invention may include preparing a form containing at least one form entry with at least one associated validation, and sending that form to be added to a form collection. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> Such operations may be performed as program steps residing in memory accessibly coupled to a development computer. The development computer may further be a server development computer or a client development computer. The server development computer may further belong to the server system containing the server computer. The server development computer may further be any of the following: the server computer <highlight><bold>4</bold></highlight> the second server computer <highlight><bold>74</bold></highlight> or the third server computer <highlight><bold>84</bold></highlight>. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> Sending the form to be added to the maintained form collection may further include sending the form as a message to a method of an object of a class maintaining a form collection available to server computer <highlight><bold>4</bold></highlight>. The form collection may further be available to second server computer <highlight><bold>74</bold></highlight>. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11A</cross-reference> depicts a flowchart of preparing and sending a first form containing at least one form entry with at least one associated validation rule for use in the methods using forms with both client validation and server validation of form entries with validation rules. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> Arrow <highlight><bold>450</bold></highlight> directs the flow of execution from starting operation <highlight><bold>100</bold></highlight> to operation <highlight><bold>452</bold></highlight>. Operation <highlight><bold>452</bold></highlight> performs developing the first form and specifying an associated validation rule set for the first form. Arrow <highlight><bold>454</bold></highlight> directs execution from operation <highlight><bold>452</bold></highlight> to operation <highlight><bold>456</bold></highlight>. Operation <highlight><bold>456</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> Arrow <highlight><bold>460</bold></highlight> directs the flow of execution from starting operation <highlight><bold>100</bold></highlight> to operation <highlight><bold>462</bold></highlight>. Operation <highlight><bold>462</bold></highlight> performs sending the first form and the associated validation rule set for addition into the form collection. Arrow <highlight><bold>464</bold></highlight> directs execution from operation <highlight><bold>462</bold></highlight> to operation <highlight><bold>456</bold></highlight>. Operation <highlight><bold>456</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> Note that the associated validation rule set may be comprised of at least one associated validation rule. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Each of the associated validation rules may be associated with at least one form entry of the form collection. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> Each rule may be created from a set of reusable, configurable constraints. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> There may be a set of pre-written constraints. Currently there are number constraints and string constraints. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> New constraints may be added. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> Number constraints produce rules that force a field to be numeric and may also specify minimum and/or maximum values that the user must meet. String constraints produce rules that may have minimum or maximum lengths, may allow only certain characters, may require certain characters and may or may not allow white space (e.g. spaces, tabs). </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> Each supported constraint consists of server-side Java code and client-side JavaScript code. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The system may translate the rules of the form into JavaScript data structures, which are passed to the client for client-side validation of the form entries and the system also executes the rules on the server for further validation of the form entries. Because engineers only specify the rules once for the form, there is no possibility of the rules becoming out of sync between the form on the client and on the server. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11B</cross-reference> depicts a detail flowchart of operation <highlight><bold>452</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 11A</cross-reference> further performing developing the first form and specifying the associated validation rule set for the first form. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> Arrow <highlight><bold>470</bold></highlight> directs the flow of execution from starting operation <highlight><bold>452</bold></highlight> to operation <highlight><bold>472</bold></highlight>. Operation <highlight><bold>472</bold></highlight> performs maintaining a form entry collection containing at least one form entry. Arrow <highlight><bold>474</bold></highlight> directs execution from operation <highlight><bold>472</bold></highlight> to operation <highlight><bold>476</bold></highlight>. Operation <highlight><bold>476</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> Arrow <highlight><bold>480</bold></highlight> directs the flow of execution from starting operation <highlight><bold>452</bold></highlight> to operation <highlight><bold>482</bold></highlight>. Operation <highlight><bold>482</bold></highlight> performs specifying the associated validation rule set based upon the form entry collection. Arrow <highlight><bold>484</bold></highlight> directs execution from operation <highlight><bold>482</bold></highlight> to operation <highlight><bold>476</bold></highlight>. Operation <highlight><bold>476</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12A</cross-reference> depicts a detail flowchart of operation <highlight><bold>112</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the client computer receiving the client form entry. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> Arrow <highlight><bold>490</bold></highlight> directs the flow of execution from starting operation <highlight><bold>112</bold></highlight> to operation <highlight><bold>492</bold></highlight>. Operation <highlight><bold>492</bold></highlight> performs the client computer receiving the step <highlight><bold>122</bold></highlight> of the client computer processing the client form entry. Arrow <highlight><bold>494</bold></highlight> directs execution from operation <highlight><bold>492</bold></highlight> to operation <highlight><bold>496</bold></highlight>. Operation <highlight><bold>496</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> The server may send the form to the client computer. The client computer may be operating a browser receiving the sent form as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. The form may include some JavaScript data structures. The JavaScript structures may be automatically generated from the set of rules defined for the form. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> When the user attempts to submit the form, some JavaScript code may first iterate through each rule that was included in the automatically generated data structures. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> Each rule is checked against the appropriate entry field. If there is a violation of the rule, the JavaScript code immediately displays a message without involving the server. The generated data structure includes message text for each rule that can be displayed if the user violates a rule. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12B</cross-reference> depicts a detail flowchart of operation <highlight><bold>132</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> further performing the server computer validating the client form data entry. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> Arrow <highlight><bold>510</bold></highlight> directs the flow of execution from starting operation <highlight><bold>132</bold></highlight> to operation <highlight><bold>512</bold></highlight>. Operation <highlight><bold>512</bold></highlight> performs the server computer receiving all the associated server validation rules based upon the form entry with at least one associated validation rule. Arrow <highlight><bold>514</bold></highlight> directs execution from operation <highlight><bold>512</bold></highlight> to operation <highlight><bold>516</bold></highlight>. Operation <highlight><bold>516</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> Arrow <highlight><bold>520</bold></highlight> directs the flow of execution from starting operation <highlight><bold>132</bold></highlight> to operation <highlight><bold>522</bold></highlight>. Operation <highlight><bold>522</bold></highlight> performs the server computer validating the client form data entry based upon all the associated server validation rules. Arrow <highlight><bold>524</bold></highlight> directs execution from operation <highlight><bold>522</bold></highlight> to operation <highlight><bold>516</bold></highlight>. Operation <highlight><bold>516</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> When the server receives a posted form, it iterates through each of the rules defined for that set. If there is a violation of the rule, the server responds to the client with an error message. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> Certain embodiments of the invention include a method of using a form containing at least one form entry with at least one associated validation rule performing data validation by both a server computer and a client computer. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> depicts a detail flowchart of operation <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> further performing the method of using the form and validating form entries by both server computer <highlight><bold>4</bold></highlight> and client computer <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> Arrow <highlight><bold>600</bold></highlight> directs the flow of execution from starting operation <highlight><bold>100</bold></highlight> to operation <highlight><bold>602</bold></highlight>. Operation <highlight><bold>602</bold></highlight> performs client computer operations supporting the method using the form and validating the form entries with at least one validation rule. Arrow <highlight><bold>604</bold></highlight> directs execution from operation <highlight><bold>602</bold></highlight> to operation <highlight><bold>606</bold></highlight>. Operation <highlight><bold>606</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> Arrow <highlight><bold>610</bold></highlight> directs the flow of execution from starting operation <highlight><bold>100</bold></highlight> to operation <highlight><bold>612</bold></highlight>. Operation <highlight><bold>612</bold></highlight> performs server computer operations supporting the method using the form and validating the form entries with at least one validation rule. Arrow <highlight><bold>614</bold></highlight> directs execution from operation <highlight><bold>612</bold></highlight> to operation <highlight><bold>606</bold></highlight>. Operation <highlight><bold>606</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14A</cross-reference> depicts a detail flowchart of operation <highlight><bold>602</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference> further performing client computer operations supporting the method using the form and validating the form entries with at least one validation rule. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> Arrow <highlight><bold>630</bold></highlight> directs the flow of execution from starting operation <highlight><bold>602</bold></highlight> to operation <highlight><bold>632</bold></highlight>. Operation <highlight><bold>632</bold></highlight> performs receiving a client form containing at least one client form entry with at least one associated local client rule based upon the form containing the at least one form entry with at least one associated validation rule. Arrow <highlight><bold>634</bold></highlight> directs execution from operation <highlight><bold>632</bold></highlight> to operation <highlight><bold>636</bold></highlight>. Operation <highlight><bold>636</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> Arrow <highlight><bold>640</bold></highlight> directs the flow of execution from starting operation <highlight><bold>602</bold></highlight> to operation <highlight><bold>642</bold></highlight>. Operation <highlight><bold>642</bold></highlight> performs processing client data entry based upon the client form to create a client form data entry for the at least one client form entry. Arrow <highlight><bold>644</bold></highlight> directs execution from operation <highlight><bold>642</bold></highlight> to operation <highlight><bold>636</bold></highlight>. Operation <highlight><bold>636</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> Arrow <highlight><bold>650</bold></highlight> directs the flow of execution from starting operation <highlight><bold>602</bold></highlight> to operation <highlight><bold>652</bold></highlight>. Operation <highlight><bold>652</bold></highlight> performs receiving a submission request from the client to create a form submission request. Arrow <highlight><bold>654</bold></highlight> directs execution from operation <highlight><bold>652</bold></highlight> to operation <highlight><bold>636</bold></highlight>. Operation <highlight><bold>636</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> Arrow <highlight><bold>660</bold></highlight> directs the flow of execution from starting operation <highlight><bold>602</bold></highlight> to operation <highlight><bold>662</bold></highlight>. Operation <highlight><bold>662</bold></highlight> performs validating the client form entry based upon all the associated local client rules to create a validated client form data entry whenever the client computer receives the form submission request, for each form entry with at least one associated validation rule contained in the form. Arrow <highlight><bold>664</bold></highlight> directs execution from operation <highlight><bold>662</bold></highlight> to operation <highlight><bold>636</bold></highlight>. Operation <highlight><bold>636</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> Arrow <highlight><bold>670</bold></highlight> directs the flow of execution from starting operation <highlight><bold>602</bold></highlight> to operation <highlight><bold>672</bold></highlight>. Operation <highlight><bold>672</bold></highlight> performs sending all of the validated client form data entries to the server computer to create the sent client form data entry for each form entry with at least one associated validation rule, whenever the client requests form submission and whenever all client form data entries satisfy all of the associated local client rules. Arrow <highlight><bold>674</bold></highlight> directs execution from operation <highlight><bold>672</bold></highlight> to operation <highlight><bold>636</bold></highlight>. Operation <highlight><bold>636</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14B</cross-reference> depicts a detail flowchart of operation <highlight><bold>612</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference> further performing server computer operations supporting the method using the form and validating the form entries with at least one validation rule. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> Arrow <highlight><bold>770</bold></highlight> directs the flow of execution from starting operation <highlight><bold>612</bold></highlight> to operation <highlight><bold>772</bold></highlight>. Operation <highlight><bold>772</bold></highlight> performs receiving the sent client form data entry for each form entry with at least one validation rule. Arrow <highlight><bold>774</bold></highlight> directs execution from operation <highlight><bold>772</bold></highlight> to operation <highlight><bold>776</bold></highlight>. Operation <highlight><bold>776</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> Arrow <highlight><bold>780</bold></highlight> directs the flow of execution from starting operation <highlight><bold>612</bold></highlight> to operation <highlight><bold>782</bold></highlight>. Operation <highlight><bold>782</bold></highlight> performs validating the sent client form data entries based upon all of the associated validation rules, for all form entries with at least one associated validation rule contained in the form. Arrow <highlight><bold>784</bold></highlight> directs execution from operation <highlight><bold>782</bold></highlight> to operation <highlight><bold>776</bold></highlight>. Operation <highlight><bold>776</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15A</cross-reference> depicts a detail flowchart of operation <highlight><bold>632</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 14</cross-reference> further performing the client computer receiving the client form. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> Arrow <highlight><bold>710</bold></highlight> directs the flow of execution from starting operation <highlight><bold>632</bold></highlight> to operation <highlight><bold>712</bold></highlight>. Operation <highlight><bold>712</bold></highlight> performs the client computer operating a browser downloading a web page based upon the form to create the client form containing a client form entry with all the associated local client rules, for each form entry with at least one associated validation rule contained in the form. Arrow <highlight><bold>714</bold></highlight> directs execution from operation <highlight><bold>712</bold></highlight> to operation <highlight><bold>716</bold></highlight>. Operation <highlight><bold>716</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15B</cross-reference> depicts a detail flowchart of operation <highlight><bold>632</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 14</cross-reference> further performing the client computer receiving the client form. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> Arrow <highlight><bold>730</bold></highlight> directs the flow of execution from starting operation <highlight><bold>632</bold></highlight> to operation <highlight><bold>732</bold></highlight>. Operation <highlight><bold>732</bold></highlight> performs the client computer receiving the step <highlight><bold>642</bold></highlight> of the client computer processing client data entry based upon the client form. Arrow <highlight><bold>734</bold></highlight> directs execution from operation <highlight><bold>732</bold></highlight> to operation <highlight><bold>736</bold></highlight>. Operation <highlight><bold>736</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> Arrow <highlight><bold>740</bold></highlight> directs the flow of execution from starting operation <highlight><bold>632</bold></highlight> to operation <highlight><bold>742</bold></highlight>. Operation <highlight><bold>742</bold></highlight> performs the client computer receiving the step <highlight><bold>652</bold></highlight> of the client computer receiving the submission request from the client. Arrow <highlight><bold>744</bold></highlight> directs execution from operation <highlight><bold>742</bold></highlight> to operation <highlight><bold>736</bold></highlight>. Operation <highlight><bold>736</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> Arrow <highlight><bold>750</bold></highlight> directs the flow of execution from starting operation <highlight><bold>632</bold></highlight> to operation <highlight><bold>752</bold></highlight>. Operation <highlight><bold>752</bold></highlight> performs the client computer receiving the step <highlight><bold>662</bold></highlight> of the client computer validating the client form entry. Arrow <highlight><bold>754</bold></highlight> directs execution from operation <highlight><bold>752</bold></highlight> to operation <highlight><bold>736</bold></highlight>. Operation <highlight><bold>736</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> Arrow <highlight><bold>760</bold></highlight> directs the flow of execution from starting operation <highlight><bold>632</bold></highlight> to operation <highlight><bold>762</bold></highlight>. Operation <highlight><bold>762</bold></highlight> performs the client computer receiving the step <highlight><bold>672</bold></highlight> of the client computer sending all of the validated client form data entries. Arrow <highlight><bold>764</bold></highlight> directs execution from operation <highlight><bold>762</bold></highlight> to operation <highlight><bold>736</bold></highlight>. Operation <highlight><bold>736</bold></highlight> terminates the operations of this flowchart. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> The preceding embodiments have been provided by way of example and are not meant to constrain the scope of the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of using a form containing at least one form entry with at least one associated validation rule performing data validation by both a server computer and a client computer comprising the steps of: 
<claim-text>the client computer performing the steps of: 
<claim-text>receiving a client form containing at least one client form entry with all associated local client rules based upon the form containing the at least one form entry with the at least one associated validation rule; </claim-text>
<claim-text>processing client data entry based upon the client form to create a client form data entry for the client form entry; </claim-text>
<claim-text>receiving a submission request from the client to create a form submission request; </claim-text>
<claim-text>validating the client form entry based upon all the associated local client rules to create a validated client form data entry whenever the client computer receives the form submission request, for each form entry with at least one associated validation rule contained in the form; </claim-text>
<claim-text>sending all of the validated client form data entries to the server computer to create the sent client form data entry for each form entry with at least one associated validation rule, whenever the client requests form submission and whenever all client form data entries satisfy all of the associated local client rules; </claim-text>
</claim-text>
<claim-text>the server computer performing the steps of: 
<claim-text>receiving the sent client form data entry for each form entry with at least one validation rule; </claim-text>
<claim-text>validating the sent client form data entries based upon all of the associated validation rules, for all form entries with at least one associated validation rule contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, 
<claim-text>wherein the step of the client computer receiving the client form is further comprised of the step of: 
<claim-text>the client computer operating a browser downloading a web page based upon the form to create the client form containing a client form entry with all the associated local client rules, for each form entry with at least one associated validation rule contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, 
<claim-text>wherein the step of the client computer receiving the client form further comprised of the steps of: 
<claim-text>the client computer receiving the step of the client computer processing client data entry based upon the client form; </claim-text>
<claim-text>the client computer receiving the step of the client computer receiving the submission request from the client; </claim-text>
<claim-text>the client computer receiving the step of the client computer validating the client form entry; and </claim-text>
<claim-text>the client computer receiving the step of the client computer sending all of the validated client form data entries. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A program system controlling a server computer communicating with a client computer to validate client data entry by both the client computer and by the server computer by performing the steps of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> as program steps residing in memory accessibly coupled to at least one member of the collection comprising the server computer and the client computer. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A system for using a form containing at least one form entry with an associated validation rule to perform data validation by both a server computer and by a client computer, comprising: 
<claim-text>the server computer communicatively coupled to a client computer; and </claim-text>
<claim-text>a program system comprising the program steps residing in memory accessibly coupled to at least one member of the collection comprising the server computer and the client computer; </claim-text>
<claim-text>wherein the program system is comprised of program steps residing in memory accessibly coupled to the client computer of: 
<claim-text>receiving a client form containing at least one client form entry with all associated local client rules based upon the form containing the at least one form entry with the at least one associated validation rule; </claim-text>
<claim-text>processing client data entry based upon the client form to create a client form data entry for the client form entry; </claim-text>
<claim-text>receiving a submission request from the client to create a form submission request; </claim-text>
<claim-text>validating the client form entry based upon all the associated local client rules to create a validated client form data entry whenever the client computer receives the form submission request, for each form entry with at least one associated validation rule contained in the form; and </claim-text>
<claim-text>sending all of the validated client form data entries to the server computer to create the sent client form data entry for each form entry with at least one associated validation rule, whenever the client requests form submission and whenever all client form data entries satisfy all of the associated local client rules; and </claim-text>
<claim-text>wherein the program system is comprised of program steps residing in memory accessibly coupled to the server computer of: 
<claim-text>receiving the sent client form data entry for each form entry with at least one validation rule; and </claim-text>
<claim-text>validating the sent client form data entries based upon all of the associated validation rules, for all form entries with at least one associated validation rule contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, 
<claim-text>wherein the program step of the client computer receiving the client form is further comprised of the program step of: 
<claim-text>the client computer operating a browser downloading a web page based upon the form to create the client form containing a client form entry with all the associated local client rules, for each form entry with at least one associated validation rule contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, 
<claim-text>wherein the program step of the client computer receiving the client form further comprised of the program steps of: 
<claim-text>the client computer receiving the program step of the client computer processing client data entry based upon the client form; </claim-text>
<claim-text>the client computer receiving the program step of the client computer receiving the submission request from the client; </claim-text>
<claim-text>the client computer receiving the program step of the client computer validating the client form entry; and </claim-text>
<claim-text>the client computer receiving the program step of the client computer sending all of the validated client form data entries. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method of validating client data entry by a client computer and by a server computer based upon a form containing at least one form entry with at least one associated validation rule, comprising the steps of: 
<claim-text>the client computer receiving the form entry and all of the associated validation rules contained in the form to create the client form entry with at least one associated local client rule; </claim-text>
<claim-text>the client computer processing the client form entry using the client data entry and satisfying all of the associated local client rules to create a client form data entry received by the server computer; and </claim-text>
<claim-text>the server computer validating the client form data entry received from the client computer based upon all of the associated validation rules of the form entry contained in the form. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, 
<claim-text>wherein the step of the server computer validating the client form data entry received from the client computer is further comprised of the steps of: 
<claim-text>the server computer receiving the client form data entry from the client computer; and </claim-text>
<claim-text>the server computer validating the client form data entry based upon all of the associated validation rules of the form entry contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, 
<claim-text>wherein the step of the client computer processing the client form entry is further comprised of the steps of: 
<claim-text>the client computer processing the client form entry based upon input from the client to create an initial client form data entry; and </claim-text>
<claim-text>the client computer sending the initial client form data entry to the server computer to create the client form data entry whenever the initial client form data entry satisfies all of the associated local client rules. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, 
<claim-text>wherein the step of the client computer sending the initial client form data entry to the server computer is further comprised of the steps of: 
<claim-text>the client encrypting the initial client form data entry to create an encrypted data entry; and </claim-text>
<claim-text>the client sending the encrypted data entry to the server computer; and </claim-text>
<claim-text>wherein the step of the server computer receiving the client form data entry from the client computer is further comprised of the steps of: 
<claim-text>the server receiving the encrypted data entry; and </claim-text>
<claim-text>the server computer decrypting the encrypted data entry to create the client form data entry. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, further comprising of the step of 
<claim-text>a second server computer providing the client computer a version of the form entry and all of the associated validation rules; and </claim-text>
<claim-text>wherein the step of the client computer receiving the one form entry and all of the associated validation rules is further comprised of the step of: 
<claim-text>the client computer receiving the version of the one form entry and all of the associated validation rules from the second server computer to create the client form entry with at least one associated local client rule. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, 
<claim-text>wherein the step of the second server computer providing the client computer the version is further comprised of the steps of: 
<claim-text>the second server computer generating a version of all of the associated validation rules based upon the one form entry and all of the associated validation rules; and </claim-text>
<claim-text>the second server computer sending the version to the client computer to create all of the associated local client rules. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, 
<claim-text>wherein the step of the second server computer providing the client computer the client form entry is further comprised of the steps of: 
<claim-text>the second server computer providing the client computer the form entry and all the associated validation rules to create the client form entry with all the associated local client rules, for each of the form entries with at least one associated validation rules contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, 
<claim-text>wherein the step of the client computer processing the client form entry is further comprised of the steps of: 
<claim-text>the client computer receiving a submission request from the client to create a form submission request; </claim-text>
<claim-text>the client computer validating the client form entry based upon all of the associated local client rules to create a validated client form data entry, whenever the client computer receives the form submission request, for each form entry with at least one associated validation rule contained in the form; and </claim-text>
<claim-text>the client computer sending all of the validated client form data entries to the server computer to create all of the client form data entries for the form whenever the initial client form data entries satisfy all of the associated local client rules, for all of the at least one form entry with at least one associated validation rule contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, 
<claim-text>wherein a server system further contains the server computer and the second server computer. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, further comprising the step of: 
<claim-text>maintaining a form collection including at least one form comprised of at least one form entry with at least one associated validation rule. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, 
<claim-text>wherein the step of maintaining the form collection is further comprised of the steps of: 
<claim-text>receiving a first form and specifying an associated validation rule set for the first form from a development computer; and </claim-text>
<claim-text>adding the first form and the associated validation rule set into the form collection; </claim-text>
<claim-text>wherein the method further comprises the steps of: 
<claim-text>developing the first form and specifying an associated validation rule set for the first form; and </claim-text>
<claim-text>sending the first form and the associated validation rule set for addition into the form collection; </claim-text>
<claim-text>wherein the associated validation rule set is comprised of at least one associated validation rule; and </claim-text>
<claim-text>wherein each of the associated validation rules is associated with at least one form entry of the form collection. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, 
<claim-text>wherein the step of developing the first form and specifying the associated validation rule set for the first form is further comprised of the steps of: 
<claim-text>maintaining a form entry collection containing at least one form entry; and </claim-text>
<claim-text>specifying the associated validation rule set based upon the form entry collection. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, 
<claim-text>wherein the step of the client computer receiving the client form entry with all the associated local client rules further comprised of the steps of: 
<claim-text>the client computer receiving the one form entry to create the client form entry; and </claim-text>
<claim-text>the client computer receiving all of the associated validation rules to create all of the at least one local client rules associated with the client form entry. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, 
<claim-text>wherein the step of the client computer receiving the client form entry further comprised of the step of: 
<claim-text>the client computer receiving the step of the client computer processing the client form entry. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, 
<claim-text>wherein the step of the server computer validating the client form data entry is further comprised of the step of: 
<claim-text>the server computer receiving all of the associated server validation rules based upon the form entry with the at least one associated validation rule; and </claim-text>
<claim-text>the server computer validating the client form data entry based upon all of the associated server validation rules. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A program system controlling a server computer communicating with a client computer for validating client data entry by the client computer and by the server computer performing the steps of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> as program steps residing in memory accessibly to at least one member of the collection comprising the server computer and the client computer. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A system validating of client data entry a client computer and by a server computer based upon a form containing at least one form entry with at least one associated validation rule, comprising: 
<claim-text>the server computer communicating with the client computer; and </claim-text>
<claim-text>a program system controlling the system is comprised of program steps in accessibly coupled memory of at least the members of the collection comprising the server computer and the client computer; </claim-text>
<claim-text>wherein the program system further comprises the program steps residing in accessibly coupled memory to the client computer of: 
<claim-text>the client computer receiving the form entry and all of the associated validation rules contained in the form to create the client form entry with at least one associated local client rule; </claim-text>
<claim-text>the client computer processing the client form entry using the client data entry and satisfying all of the associated local client rules to create a client form data entry received by the server computer; and </claim-text>
<claim-text>wherein the program system further comprises the program step residing in accessibly coupled memory to the server computer of: 
<claim-text>the server computer validating the client form data entry received from the client computer based upon all of the associated validation rules of the form entry contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, 
<claim-text>wherein the program step of the server computer validating the client form data entry received from the client computer is further comprised of the program steps of: 
<claim-text>the server computer receiving the client form data entry from the client computer; and </claim-text>
<claim-text>the server computer validating the client form data entry based upon all of the associated validation rules of the form entry contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, 
<claim-text>wherein the program step of the client computer processing the client form entry is further comprised of the program steps of: 
<claim-text>the client computer processing the client form entry based upon input from the client to create an initial client form data entry; and </claim-text>
<claim-text>the client computer sending the initial client form data entry to the server computer to create the client form data entry whenever the initial client form data entry satisfies all of the associated local client rules. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, 
<claim-text>wherein the program step of the client computer sending the initial client form data entry to the server computer is further comprised of the program steps of: 
<claim-text>the client encrypting the initial client form data entry to create an encrypted data entry; and </claim-text>
<claim-text>the client sending the encrypted data entry to the server computer; and </claim-text>
<claim-text>wherein the program step of the server computer receiving the client form data entry from the client computer is further comprised of the program steps of: 
<claim-text>the server receiving the encrypted data entry; and </claim-text>
<claim-text>the server computer decrypting the encrypted data entry to create the client form data entry. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, further comprising: 
<claim-text>a second server computer providing the client computer with a version of the form entry and all of the associated validation rules; </claim-text>
<claim-text>wherein the program system further comprises a program step residing in a memory accessibly coupled to the second server computer of: 
<claim-text>a second server computer providing the client computer with a version of the form entry and all of the associated validation rules; </claim-text>
<claim-text>wherein the program step of the client computer receiving the one form entry and all of the associated validation rules is further comprised of the program step of: 
<claim-text>the client computer receiving the version of the one form entry and all of the associated validation rules from the second server computer to create the client form entry with at least one associated local client rule. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, 
<claim-text>wherein the program step of the second server computer providing the associated validation rule to the client is further comprised of the program steps of: 
<claim-text>the second server computer generating a version of all of the associated validation rules based upon the one form entry and all of the associated validation rules; and </claim-text>
<claim-text>the second server computer sending the version to the client computer to create all of the associated local client rules. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, 
<claim-text>wherein the program step of the second server computer providing the client computer the client form entry is further comprised of the program steps of: 
<claim-text>the second server computer providing the client computer the form entry and all the associated validation rules to create the client form entry with all the associated local client rules, for each of the form entries with at least one associated validation rules contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, 
<claim-text>wherein the program step of the client computer processing the client form entry is further comprised of the program steps of: 
<claim-text>the client computer receiving a submission request from the client to create a form submission request; </claim-text>
<claim-text>the client computer validating the client form entry based upon all of the associated local client rules to create a validated client form data entry, whenever the client computer receives the form submission request, for each form entry with at least one associated validation rule contained in the form; and </claim-text>
<claim-text>the client computer sending all of the validated client form data entries to the server computer to create all of the client form data entries for the form whenever the initial client form data entries satisfy all of the associated local client rules, for all of the at least one form entry with at least one associated validation rule contained in the form. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, further comprising: 
<claim-text>a server system comprising the server computer and the second server computer. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, 
<claim-text>wherein the program system further comprises the program step, residing in memory accessibly coupled to at least one server computer contained in the server system, of: 
<claim-text>maintaining a form collection including at least one form comprised of at least one form entry with at least one associated validation rule. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, further comprising: 
<claim-text>a third server computer communicatively coupled with at least one server computer contained in the server system; </claim-text>
<claim-text>wherein the program step of maintaining the form collection is further comprised of the program step residing in memory accessibly coupled to the third server computer. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, 
<claim-text>wherein the third server computer is contained in the server system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, 
<claim-text>wherein the program step of the client computer processing the client form entry is further comprised of the program steps of: 
<claim-text>the client computer processing the client form entry based upon input from the client to create an initial client form data entry; and </claim-text>
<claim-text>the client computer sending the initial client form data entry to the server system to create the client form data entry whenever the initial client form data entry satisfies all of the associated local client rules. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, 
<claim-text>wherein the program system further comprises the program step of: 
<claim-text>maintaining a form collection including at least one form comprised of at least one form entry with at least one associated validation rule. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, 
<claim-text>wherein the program step of maintaining the form collection resides in a memory accessibly coupled to a third server computer. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, 
<claim-text>wherein the program step of maintaining the form collection resides in a memory accessibly coupled to the server computer. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, 
<claim-text>wherein the program step of maintaining the form collection is further comprised of the program steps of: 
<claim-text>receiving a first form and specifying an associated validation rule set for the first form from a development computer; and </claim-text>
<claim-text>adding the first form and the associated validation rule set into the form collection; and </claim-text>
<claim-text>wherein the program system is further comprised of the program steps residing in memory accessibly coupled to the development computer of: 
<claim-text>developing the first form and specifying an associated validation rule set for the first form; and </claim-text>
<claim-text>sending the first form and the associated validation rule set for addition into the form collection; </claim-text>
<claim-text>wherein the associated validation rule set is comprised of at least one associated validation rule; and </claim-text>
<claim-text>wherein each of the associated validation rules is associated with at least one form entry of the form collection. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, 
<claim-text>wherein the program step of developing the first form and specifying the associated validation rule set is further comprised of the program steps of: 
<claim-text>maintaining a form entry collection containing at least one form entry; and </claim-text>
<claim-text>specifying the associated validation rule set based upon the form entry collection. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, 
<claim-text>wherein the program step of the client computer creating the client form entry with the at least one associated local client rule further comprised of the program steps of: 
<claim-text>the client computer receiving the one form entry to create the client form entry; and </claim-text>
<claim-text>the client computer receiving all of the associated validation rules to create all of the at least one local client rules associated with the client form entry. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, 
<claim-text>wherein the program step of the client computer receiving the client form entry is further comprised of the program step of: 
<claim-text>the client computer receiving the program step of the client computer processing the client form entry. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, 
<claim-text>wherein the program step of the server computer validating the client form data entry is further comprised of the program step of: 
<claim-text>the server computer receiving all of the associated server validation rules based upon the form entry with the at least one associated validation rule; and </claim-text>
<claim-text>the server computer validating the client form data entry based upon all of the associated server validation rules. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00044">claim 44</dependent-claim-reference>, 
<claim-text>wherein the program step of the second server computer providing the server associated validation rule is further comprised of the program step of: 
<claim-text>the second server computer generating all of the server associated validation rules based upon all of the associated validation rules.</claim-text>
</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004951A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004951A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004951A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004951A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004951A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004951A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004951A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004951A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004951A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004951A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004951A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004951A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004951A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004951A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004951A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030004951A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030004951A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
