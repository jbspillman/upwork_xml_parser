<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002575A1-20030102-M00001.NB SYSTEM "US20030002575A1-20030102-M00001.NB" NDATA NB>
<!ENTITY US20030002575A1-20030102-M00001.TIF SYSTEM "US20030002575A1-20030102-M00001.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-M00002.NB SYSTEM "US20030002575A1-20030102-M00002.NB" NDATA NB>
<!ENTITY US20030002575A1-20030102-M00002.TIF SYSTEM "US20030002575A1-20030102-M00002.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-M00003.NB SYSTEM "US20030002575A1-20030102-M00003.NB" NDATA NB>
<!ENTITY US20030002575A1-20030102-M00003.TIF SYSTEM "US20030002575A1-20030102-M00003.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00001.TIF SYSTEM "US20030002575A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00002.TIF SYSTEM "US20030002575A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00003.TIF SYSTEM "US20030002575A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00004.TIF SYSTEM "US20030002575A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00005.TIF SYSTEM "US20030002575A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00006.TIF SYSTEM "US20030002575A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00007.TIF SYSTEM "US20030002575A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00008.TIF SYSTEM "US20030002575A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00009.TIF SYSTEM "US20030002575A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00010.TIF SYSTEM "US20030002575A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00011.TIF SYSTEM "US20030002575A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00012.TIF SYSTEM "US20030002575A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00013.TIF SYSTEM "US20030002575A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00014.TIF SYSTEM "US20030002575A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00015.TIF SYSTEM "US20030002575A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00016.TIF SYSTEM "US20030002575A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00017.TIF SYSTEM "US20030002575A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00018.TIF SYSTEM "US20030002575A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00019.TIF SYSTEM "US20030002575A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00020.TIF SYSTEM "US20030002575A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00021.TIF SYSTEM "US20030002575A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00022.TIF SYSTEM "US20030002575A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00023.TIF SYSTEM "US20030002575A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00024.TIF SYSTEM "US20030002575A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00025.TIF SYSTEM "US20030002575A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00026.TIF SYSTEM "US20030002575A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00027.TIF SYSTEM "US20030002575A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00028.TIF SYSTEM "US20030002575A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00029.TIF SYSTEM "US20030002575A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00030.TIF SYSTEM "US20030002575A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00031.TIF SYSTEM "US20030002575A1-20030102-D00031.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00032.TIF SYSTEM "US20030002575A1-20030102-D00032.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00033.TIF SYSTEM "US20030002575A1-20030102-D00033.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00034.TIF SYSTEM "US20030002575A1-20030102-D00034.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00035.TIF SYSTEM "US20030002575A1-20030102-D00035.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00036.TIF SYSTEM "US20030002575A1-20030102-D00036.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00037.TIF SYSTEM "US20030002575A1-20030102-D00037.TIF" NDATA TIF>
<!ENTITY US20030002575A1-20030102-D00038.TIF SYSTEM "US20030002575A1-20030102-D00038.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002575</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10205735</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020726</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H03H007/30</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>375</class>
<subclass>233000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>375</class>
<subclass>219000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Multi-pair gigabit ethernet transceiver</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10205735</doc-number>
<kind-code>A1</kind-code>
<document-date>20020726</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09437719</doc-number>
<document-date>19991109</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6477200</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<non-provisional-of-provisional>
<document-id>
<doc-number>60130616</doc-number>
<document-date>19990422</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
<non-provisional-of-provisional>
<document-id>
<doc-number>60116946</doc-number>
<document-date>19990120</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
<non-provisional-of-provisional>
<document-id>
<doc-number>60108648</doc-number>
<document-date>19981116</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
<non-provisional-of-provisional>
<document-id>
<doc-number>60108319</doc-number>
<document-date>19981113</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
<non-provisional-of-provisional>
<document-id>
<doc-number>60107874</doc-number>
<document-date>19981109</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
<non-provisional-of-provisional>
<document-id>
<doc-number>60107880</doc-number>
<document-date>19981109</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Oscar</given-name>
<middle-name>E.</middle-name>
<family-name>Agazzi</family-name>
</name>
<residence>
<residence-us>
<city>Irvine</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>John</given-name>
<middle-name>L.</middle-name>
<family-name>Creigh</family-name>
</name>
<residence>
<residence-us>
<city>Margarita</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Mehdi</given-name>
<family-name>Hatamian</family-name>
</name>
<residence>
<residence-us>
<city>Mission Viejo</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Henry</given-name>
<family-name>Samuel</family-name>
</name>
<residence>
<residence-us>
<city>San Juan Capistrano</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>David</given-name>
<middle-name>E.</middle-name>
<family-name>Kruse</family-name>
</name>
<residence>
<residence-non-us>
<city>Utrecht</city>
<country-code>NL</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Arthur</given-name>
<family-name>Abnous</family-name>
</name>
<residence>
<residence-us>
<city>Irvine</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>MCANDREWS HELD &amp; MALLOY, LTD</name-1>
<name-2></name-2>
<address>
<address-1>500 WEST MADISON STREET</address-1>
<address-2>SUITE 3400</address-2>
<city>CHICAGO</city>
<state>IL</state>
<postalcode>60661</postalcode>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Various systems and methods providing high speed decoding, enhanced power reduction and clock domain partitioning for a multi-pair gigabit Ethernet transceiver are disclosed. ISI compensation is partitioned into two stages; a first stage compensates ISI components induced by characteristics of a transmitter&apos;s partial response pulse shaping filter in a demodulator, a second stage compensates ISI components induced by characteristics of a multi-pair transmission channel in a Viterbi decoder. High speed decoding is accomplished by reducing the DFE depth by providing an input signal from a multiple decision feedback equalizer to the Viterbi based on a tail value and a subset of coefficient values received from a unit depth decision-feedback equalizer. Power reduction is accomplished by adaptively truncating active taps in the NEXT, FEXT and echo cancellation filters, or by disabling decoder circuitry portions, as channel response characteristics allow. A receive clock signal is generated such that it is synchronous in frequency with analog sampling clock signals and has a particular phase offset with respect to one of the sampling clock signals. This phase offset is adjusted such that system performance degradation due to coupling of switching noise from the digital sections to the analog sections is substantially minimized. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present application claims priority on the basis of the following provisional applications: Ser. No. 60/130,616 entitled &ldquo;Multi-Pair Gigabit Ethernet Transceiver&rdquo; filed on Apr. 22, 1999, Ser. No. 60/116,946 entitled &ldquo;Multiple Decision Feedback Equalizer&rdquo; filed on Jan. 20, 1999, Serial No. 60/108,648 entitled &ldquo;Clock Generation and Distribution in an Ethernet Transceiver&rdquo; filed on Nov. 16, 1998, Serial No. 60/108,319 entitled &ldquo;Gigabit Ethernet Transceiver&rdquo; filed on Nov. 13, 1998, Ser. No. 60/107,874 entitled &ldquo;Apparatus for and Method of Distributing Clock Signals in a Communication System&rdquo; filed Nov. 9, 1998, and Serial No. 60/107,880 entitled &ldquo;Apparatus for and Method of Reducing Power Dissipation in a Communication System&rdquo; filed Nov. 9, 1998. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present application is related to the following co-pending applications, commonly owned by the assignee of the present application, the entire contents of each of which are expressly incorporated herein by reference: Ser. No. 09/370,370 entitled &ldquo;System and Method for Trellis Decoding in a Multi-Pair Transceiver System&rdquo;, Ser. No. 09/370,353 entitled &ldquo;Multi-Pair Transceiver Decoder System with Low Computation Slicer&rdquo;, Ser. No. 09/370,354 entitled &ldquo;System and Method for High Speed Decoding and ISI Compensation in a Multi-Pair Transceiver System&rdquo; Ser. No. 09/370,491 entitled &ldquo;High-Speed Decoder for Multi-Pair Gigabit Transceiver&rdquo;, all filed Oct. 10, 1999, and Ser. No. 09/390,856 entitled Dynamic regulation of Power Consumption in a High-Speed Communication System&rdquo; filed Sep. 3, 1999. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The present application is also related to the following co-pending applications, filed on instant date herewith and commonly owned by the assignee of the present application, the entire contents of each of which are expressly incorporated herein by reference: Ser. No. 09/437,721 entitled &ldquo;Timing Recovery System for a Multi-Pair Gigabit Transceiver&rdquo; and Ser. No. 09/437,724 entitled &ldquo;Switching Noise Reduction in a Multi-Clock Domain Transceiver&rdquo;. </paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The present invention relates generally to high speed networking transceivers and, more particularly to gigabit Ethernet transceivers having reduced power consumption, efficient clock domain partitioning and able to decode input symbols within a symbol period with a minimum of computational intensity. </paragraph>
</section>
<section>
<heading lvl="1">DESCRIPTION OF THE RELATED ART </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In recent years, local area network (LAN) applications have become more and more prevalent as a means for providing local interconnect between personal computer systems, work stations and servers. Because of the breadth of its installed base, the 10BASE-T implementation of Ethernet remains the most pervasive if not the dominant, network technology for LANs. However, as the need to exchange information becomes more and more imperative, and as the scope and size of the information being exchanged increases, higher and higher speeds (greater bandwidth) are required from network interconnect technologies. Among the highspeed LAN technologies currently available, fast Ethernet, commonly termed 100BASE-T, has emerged as the clear technological choice. Fast Ethernet technology provides a smooth, non-disruptive evolution from the 10 megabit per second (Mbps) performance of 10BASE-T applications to the 100 Mbps performance of 100BASE-T. The growing use of 100BASE-T interconnections between servers and desktops is creating a definite need for an even higher speed network technology at the backbone and server level. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> One of the more suitable solutions to this need has been proposed in the IEEE 802.3ab standard for gigabit Ethernet, also termed 1000BASE-T. Gigabit Ethernet is defined as able to provide 1 gigabit per second (Gbps) bandwidth in combination with the simplicity of an Ethernet architecture, at a lower cost than other technologies of comparable speed. Moreover, gigabit Ethernet offers a smooth, seamless upgrade path for present 10BASE-T or 100BASE-T Ethernet installations. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In order to obtain the requisite gigabit performance levels, gigabit Ethernet transceivers are interconnected with a multi-pair transmission channel architecture. In particular, transceivers are interconnected using four separate pairs of twisted Category-5 copper wires. Gigabit communication, in practice, involves the simultaneous, parallel transmission of information signals, with each signal conveying information at a rate of 250 megabits per second (Mb/s). Simultaneous, parallel transmission of four information signals over four twisted wire pairs poses substantial challenges to bidirectional communication transceivers, even though the data rate on any one wire pair is &ldquo;only&rdquo; 250 Mbps. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> In particular, the gigabit Ethernet standard requires that digital information being processed for transmission be symbolically represented in accordance with a five-level pulse amplitude modulation scheme (PAM-5) and encoded in accordance with an 8-state Trellis coding methodology. Coded information is then communicated over a multi-dimensional parallel transmission channel to a designated receiver, where the original information must be extracted (demodulated) from a multi-level signal. In gigabit Ethernet, it is important to note that it is the concatenation of signal samples received simultaneously on all four twisted pair lines of the channel that defines a symbol. Thus, demodulator/decoder architectures must be implemented with a degree of computational complexity that allows them to accommodate not only the &ldquo;state width&rdquo; of Trellis coded signals, but also the &ldquo;dimensional depth&rdquo; represented by the transmission channel. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Computational complexity is not the only challenge presented to modern gigabit capable communication devices. A perhaps greater challenge is that the complex computations required to process &ldquo;deep&rdquo; and &ldquo;wide&rdquo; signal representations must be performed in an almost vanishingly small period of time. For example, in gigabit applications, each of the four-dimensional signal samples, formed by the four signals received simultaneously over the four twisted wire pairs, must be efficiently decoded within a particular allocated symbol time window of about 8 nanoseconds. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Successfully accomplishing the multitude of sequential processing operations required to decode gigabit signal samples within an 8 nanosecond window requires that the switching capabilities of the integrated circuit technology from which the transceiver is constructed be pushed to almost its fundamental limits. If performed in conventional fashion, sequential signal processing operations necessary for signal decoding and demodulation would result in a propagation delay through the logic circuits that would exceed the clock period, rendering the transceiver circuit non-functional. Fundamentally, then, the challenge imposed by timing constraints must be addressed if gigabit Ethernet is to retain its viability and achieve the same reputation for accurate and robust operation enjoyed by its 10BASE-T and 100BASE-T siblings. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In addition to the challenges imposed by decoding and demodulating multilevel signal samples, transceiver systems must also be able to deal with intersymbol interference (ISI) introduced by transmission channel artifacts as well as by modulation and pulse shaping components in the transmission path of a remote transceiver system. During the demodulation and decoding process of Trellis coded information, ISI components are introduced by either means must also be considered and compensated, further expanding the computational complexity and thus, system latency of the transceiver system. Without a transceiver system capable of efficient, high-speed signal decoding as well as simultaneous ISI compensation, gigabit Ethernet would likely not remain a viable concept. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In a Gigabit Ethernet communication system that conforms to the 1000BASE-T standard, gigabit transceivers are connected via Category 5 twisted pairs of copper cables. Cable responses vary drastically among different cables. Thus, the computations, and hence power comsumption, required to compensate for noise (such as echo, near-end crosstalk, far-end crosstalk) will vary widely depending on the particular cable that is used. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In integrated circuit technology, power consumption is generally recognized as being a function of the switching (clock) speed of transistor elements making up the circuitry, as well as the number of component elements operating within a given time period. The more transistor elements operating at one time, and the higher the operational speed of the component circuitry, the higher the relative degree of power consumption for that circuit. This is particularly relevant in the case of Gigabit Ethernet, since all computational circuits are clocked at 125 Mhz (corresponding to 250 Mbps per twisted pair of cable), and the processing requirements of such circuits require rather large blocks of computational circuitry, particularly in the filter elements. Power consumption figures in the range of from about 4.5 Watts to about 6.0 Watts are not unreasonable when the speed and complexity of modern gigabit communication circuitry is considered. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Pertinent to an analysis of power consumption is the realization that power is dissipated, in integrated circuits, as heat. As power consumption increases, not only must the system be provided with a more robust power supply, but also with enhanced heat dissipation schemes, such as heat sinks (dissipation fins coupled to the IC package), cooling fans, increased interior volume for enhanced air flow, and the like. All of these dissipation schemes involve considerable additional manufacturing costs and an extended design cycle due to the need to plan for thermal considerations. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Prior high speed communication circuits have not adequately addressed these thermal considerations,,because of the primary necessity of accommodating high data rates with a sufficient level of signal quality. Prior devices have, in effect, &ldquo;hard wired&rdquo; their processing capability, such that processing circuitry is always operative to maximize signal quality, whether that degree of processing is required or not. Where channel quality is high, full-filter-tap signal processing more often obeys the law of diminishing returns, with very small incremental noise margin gains recovered from the use of additional large blocks of active filter circuitry. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> This trade-off between power consumption and signal quality has heretofore limited the options available to an integrated circuit communication system designer. If low power consumption is made a system requirement, the system typically exhibits poor noise margin or bit-error-rate performance. Conversely, if system performance is made the primary requirement, power consumption must fall where it may with the corresponding consequences to system cost and reliability. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Accordingly, there is a need for a high speed integrated circuit communication system design which is able to accomodate a wide variety of worst-case channel (cable) responses, while adaptively evaluating signal quality metrics in order that processing circuitry might be disabled, and power consumption might thereby be reduced, at any such time that the circuitry is not necessary to assure a given minimum level of signal quality. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Such a system should be able to adaptively determine and achieve the highest level of signal quality consistent with a given maximum power consumption specification. In addition, such a system should be able to adaptively determine and achieve the lowest level of power consumption consistent with a given minimum signal quality specification. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The present invention is a method and a system for providing an input signal from a multiple decision feedback equalizer to a decoder based on a tail value and a subset of coefficient values received from a decision-feedback equalizer. A set of pre-computed values based on the subset of coefficient values is generated. Each of the pre-computed values is combined with the tail value to generate a tentative sample. One of the tentative samples is selected as the input signal to the decoder. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> In one aspect of the system, tentative samples are saturated and then stored in a set of registers before being outputted to a multiplexer which selects one of the tentative samples as the input signal to the decoder. This operation of storing the tentative samples in the registers before providing the tentative samples to the multiplexer facilitates high-speed operation by breaking up a critical path of computations into substantially balanced first and second portions, the first portion including computations in the decision-feedback equalizer and the multiple decision feedback equalizer, the second portion including computations in the decoder. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The present invention can be directed to a system and method for decoding and ISI compensating received signal samples, modulated for transmission in accordance with a multi-level alphabet, and encoded in accordance with a multi-state encoding scheme. Modulated and encoded signal samples are received and decoded in an integrated circuit receiver which includes a multi-state signal decoder. The multi-state signal decoder includes a symbol decoder adapted to receive a set of signal samples representing multi-state signals and evaluate the multi-state signals in accordance with the multi-level modulation alphabet and the multi-state encoding scheme. The symbol decoder outputs tentative decisions. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> An ISI compensation circuit is configured to provide ISI compensated signal samples to the symbol decoder. The ISI compensation circuit is constructed of a single decision feedback equalizer, with the single decision feedback equalizer providing ISI compensated signal samples to the symbol decoder based on tentative decisions outputted by the symbol decoder. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In one aspect of the invention, a path memory module is coupled to the symbol decoder and receives decisions and error terms from the symbol decoder. The path memory module includes a plurality of sequential registers, with each corresponding to a respective one of consecutive time intervals. The registers store decisions corresponding to the respective ones of the states of the multi-state encoded signals. Decision circuitry selects a best decision from corresponding ones of the registers, with the best decision of a distal register defining a final decision. The best decision of an intermediate register defines a tentative decision which is output to the ISI compensation circuit. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The single decision feedback equalizer is configured as an FIR filter, and is characterized by a multiplicity of coefficients, subdivided into a set of high-order coefficients and a set of low-order coefficients. Tentative decisions from the path memory module are forced to the single decision feedback equalizer at various locations along the filter delay line and are combined with the high-order coefficients in order to define a partial ISI component. The partial ISI component is arithmetically combined with an input signal sample in order to generate a partially ISI compensated intermediate signal called tail signal. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Low-order coefficients from the single decision feedback equalizer are directed to a convolution engine wherein they are combined with values representing the levels of a multi-level modulation alphabet. The convolution engine outputs a multiplicity of signals, representing the convolution results, each of which are arithmetically combined with the tail signal to define a set of ISI compensated tentative signal samples. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In a particular aspect of the invention, the ISI compensated tentative signal samples are saturated and then stored in a set of registers before being outputted to a multiplexer circuit which selects one of the tentative signal samples as the input signal to the symbol decoder. Storing tentative signal samples in the set of registers before providing the tentative signal samples to the multiplexer, facilitates high-speed operation by breaking up a critical path of computations into substantially balanced first and second portions, the first portion including computation in the ISI compensation circuitry, including the single-decision feedback equalizer and the multiple-decision feedback equalizer, the second portion including computations in the symbol decoder. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> In a further aspect of the present invention, symbol decoder circuitry is implemented as a Viterbi decoder, the Viterbi decoder computing path metrics for each of the N states of a Trellis code, and outputting decisions based on the path metrics. A path memory module is coupled to the Viterbi decoder for receiving decisions. The path memory module is implemented with a number of depth levels corresponding to consecutive time intervals. Each of the depth levels includes N registers for storing decisions corresponding to the N states of the trellis code. Each of the depth levels further includes a multiplexer for selecting a best decision from the corresponding N registers, the best decision at the last depth level defining the final decision, the best decisions at other selected depth levels defining tentative decisions. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In a particular aspect of the invention, tentative decisions are generated from the first three depth levels of the path memory module. These tentative decisions are forced to a single decision feedback equalizer to generate a partial ISI component based on the first three tentative decisions and a set of high-order coefficients. The partial ISI component is arithmetically combined with an input signal sample in order to define a partially ISI compensated tentative signal sample. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The first two coefficients of the single decision feedback equalizer are linearly combined with values representing the five levels of a PAM-5 symbol alphabet, thereby generating a set of 25 pre-computed values, each of which are arithmetically combined with the partial ISI compensated signal sample to develop a set of 25 samples, one of which is a fully ISI compensated signal sample and is chosen as the input to the symbol decoder. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The present invention is further directed to a system and method for decoding information signals modulated in accordance with a multi-level modulation scheme and encoded in accordance with a multi-state encoding scheme by computing a distance between a received word from a codeword included in a plurality of code-subsets. Codewords are formed from a concatenation of symbols from a multi-level alphabet, with the symbols selected from two disjoint symbol-subsets X and Y. A received word is represented by L inputs, with L representing the number of dimensions of a multi-dimensional communication channel. Each of the L inputs uniquely corresponds to one of the L dimensions. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> A set of 1-dimensional (1D) errors is produced from the L inputs, with each of the 1D errors representing a distance metric between a respective one of the L inputs and a symbol in one of the two disjoint symbol-subsets. 1D errors are combined in order to produce a set of L-dimensional errors such that each of the L-dimensional errors represents a distance between the received word and a nearest codeword in one of the code-subsets. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> In one embodiment of the invention, each of the L inputs is sliced with respect to each of the two disjoint symbol-subsets X and Y in order to produce a set of X-based errors, a set of Y-based errors and corresponding sets of X-based and Y-based decisions. The sets of X-based and Y-based errors form the set of 1D errors, while the sets of X-based and Y-based decisions form a set of 1D decisions. Each of the X-based and Y-based decisions corresponds to a symbol, in a corresponding symbol subset, closest in distance (value) to one of the L inputs. Each of the 1D errors represents a distance metric between a corresponding 1D decision and the respective one of the L inputs. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> In another embodiment of the invention, each of the L inputs are sliced with respect to each of the two disjoint symbol subsets X and Y in order to produce a set of 1D decisions. Each of the L inputs is further sliced with respect to a symbol-set including all of the symbols of the two disjoint symbol-subsets in order to produce a set of hard decisions. The X-based and Y-based 1D decisions are combined with a set of hard decisions in order to produce a set of 1D errors, with each of the 1D errors representing a distance metric between a corresponding 1D decision and a respective one of the L inputs. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In one embodiment of the present invention, 1-dimensional errors are combined in a first set of adders in order to produce a set of 2-dimensional errors. A second set of adders combines the 2-dimensional errors in order to produce intermediate L-dimensional errors, with the intermediate L-dimensional errors being arranged into pairs of errors such that the pairs of errors correspond one-to-one to the code-subsets. A minimum-select module determines a minimum for each of the pairs of errors. Once determined, the minima are defined as the L-dimensional errors. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The present invention is further directed to a method for dynamically regulating the power consumption of a high-speed integrated circuit which includes a multiplicity of processing blocks. A first metric and a second metric, which are respectively related to a first performance parameter and a second performance parameter of the integrated circuit, are defined. The first metric is set at a pre-defined value. Selected blocks of the multiplicity of processing blocks are disabled in accordance with a set of pre-determined patterns. The second metric is evaluated, while the disabling operation is being performed, to generate a range of values of the second metric. Each of the values corresponds to the pre-defined value of the first metric. A most desirable value of the second metric is determined from the range of values and is matched to a corresponding pre-determined pattern. The integrated circuit is subsequently operated with selected processing blocks disabled in accordance with the matching pre-determined pattern. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> In particular, the first and second performance parameters are distinct and are chosen from the parametric group consisting of power consumption and a signal quality figure of merit. The signal quality figure of merit is evaluated while selected blocks of the multiplicity of processing blocks are disabled. The set of selected blocks which give the lowest power consumption, when disabled, while at the same time maintaining an acceptable signal quality figure of merit at a pre-defined threshold level is maintained in a disabled condition while the integrated circuit is subsequently operated. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In one aspect of the present invention, reduced power dissipation is chosen as the most desirable metric to evaluate, while a signal quality figure of merit is accorded secondary consideration. Alternatively, a signal quality figure of merit is chosen as the most desirable metric to evaluate, while power dissipation is accorded a secondary consideration. In a further aspect of the present invention, both signal quality and power dissipation are accorded equal consideration with selective blocks of the multiplicity of processing blocks being disabled and the resultant signal quality and power dissipation figures of merit being evaluated so as to define a co-existing local maxima of signal quality with a local minima of power dissipation. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> In one particular embodiment, the present invention may be characterized as a method for dynamically regulating the power consumption of a communication system which includes at least a first module. The first module can be any circuit block, not necessarily a signal processing block. Power regulation proceeds by specifying a power dissipation value and an error value. An information error metric and a power metric is computed. Activation and deactivation of at least a portion of the first module of the communication system is controlled according to a particular criterion. The criterion is based on at least one of the information error metric, the power metric, the specified error and the specified power, to regulate at least one of the information metric and the power metric. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> In particular, at least a portion of the first module is activated if the information error metric is greater than the specified error and the first module portion is deactivated if the information error metric is less than the specified error. In an additional aspect of the invention, the first module portion is activated if the information error metric is greater than the specified error and the power metric is smaller than the specified power. The first module portion is deactivated if the information error metric is smaller than the specified error or the power metric is greater than the specified power. In yet a further aspect of the invention, the first module portion is activated if the information error metric is greater than the specified error and is deactivated if the information error metric is smaller than a target value, the target value being smaller than the specified error. In yet another aspect of the invention, the first module portion is activated if the information error metric is greater than the specified error and the power metric is smaller than the specified power. The first module portion is deactivated if the information error metric is smaller than a target value, the target value being smaller than the specified error, or the power metric is greater than the specified power. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> Advantageously, the information error metric is related to a bit error rate of the communication system and the information error metric is a measure of performance degradation in the communication system caused by deactivation of the portion of the first module. Where the module is a filter which includes a set of taps, with each of the taps including a filter coefficient, the information error metric is a measure of performance degradation of a transceiver caused by operation of the filter. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Power dissipation reduction is implemented by deactivating subsets of taps which make up the filter, until such time as performance degradation caused by the truncated filter reaches a pre-determined threshold level. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The present invention further provides a method for reducing system performance degradation caused by switching noise in a system which includes a set of subsystems. Each of the subsystems includes an analog section and a digital section. Each of the analog sections operates in accordance with a corresponding one of a set of sampling clock signals which are synchronous in frequency. The digital sections operate in accordance with a receive clock signal. The receive clock signal is generated such that it is synchronous in frequency with the sampling clock signals and has a phase offset with respect to one of the sampling clock signals. This phase offset is adjusted such that system performance degradation due to coupling of switching noise from the digital sections to the analog sections is substantially minimized. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> These and other features, aspects and advantages of the present invention will be more fully understood when considered with respect to the following detailed description, appended claims and accompanying drawings, wherein: </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a simplified, semi-schematic block diagram of a high-speed bidirectional communication system exemplified by two transceivers configured to communicate over multiple twisted-pair wiring channels. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a simplified, semi-schematic block diagram of a bidirectional communication transceiver system, constructed in accordance with the present invention. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a simplified, semi-schematic block diagram of an exemplary trellis decoder, including a Viterbi decoder, in accordance with the invention, suitable for decoding signals coded by the exemplary trellis encoder of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> illustrates an exemplary PAM-5 constellation and the one-dimensional symbol-subset partitioning. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> illustrates the eight 4D code-subsets constructed from the one-dimensional symbol-subset partitioning of the constellation of <cross-reference target="DRAWINGS">FIG. 4A</cross-reference>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates the trellis diagram for the code. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a simplified, semi-schematic block diagram of an exemplary trellis encoder. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a simplified block diagram of a first exemplary embodiment of a structural analog of a 1D slicing function as might be implemented in the Viterbi decoder of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a simplified block diagram of a second exemplary embodiment of a structural analog of a 1D slicing function as might be implemented in the Viterbi decoder of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a simplified block diagram of a 2D error term generation machine, illustrating the generation of 2D square error terms from the 1D square error terms developed by the exemplary slicers of FIGS. <highlight><bold>7</bold></highlight> or <highlight><bold>8</bold></highlight>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a simplified block diagram of a 4D error term generation machine, illustrating the generation of 4D square error terms and the generation of extended path metrics for the 4 extended paths outgoing from state 0. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a simplified block diagram of a 4D symbol generation machine. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> illustrates the selection of the best path incoming to state 0. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a semi-schematic block diagram illustrating the internal arrangement of a portion of the path memory module of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a block diagram illustrating the computation of the final decision and the tentative decisions in the path memory module based on the 4D symbols stored in the path memory for each state. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a detailed diagram illustrating the processing of the outputs V<highlight><subscript>0</subscript></highlight><highlight><superscript>(i)</superscript></highlight>, V<highlight><subscript>1</subscript></highlight><highlight><superscript>(i)</superscript></highlight>, with i&equals;0, . . . , 7, and V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F</subscript></highlight>, V<highlight><subscript>2F </subscript></highlight>of the path memory module of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows the word lengths used in one embodiment of this invention. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows an exemplary lookup table suitable for use in computing squared one-dimensional error terms. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 18A and 18B</cross-reference> are an exemplary look-up table which describes the computation of the decisions and squared errors for both the X and Y subsets directly from one component of the 4D Viterbi input of the 1D slicers of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> illustrates the general clocking relationship between the transmitter and the receiver inside each of the four constituent transceivers <highlight><bold>108</bold></highlight> of the gigabit Ethernet transceiver (<highlight><bold>101</bold></highlight> or <highlight><bold>102</bold></highlight>) of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a simplified block diagram of an embodiment of the timing recovery system constructed according to the present invention; </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a block diagram of an exemplary implementation of the system of <cross-reference target="DRAWINGS">FIG. 20</cross-reference>; </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a block diagram of an exemplary embodiment of the phase reset logic block used for resetting the register of the NCO of <cross-reference target="DRAWINGS">FIG. 21</cross-reference> to a specified value; </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a block diagram of an exemplary phase shifter logic block used for the phase control of the receive clock signal RCLK; </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is a flowchart of an embodiment of the process for adjusting the phase of the receive clock signal RCLK; </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25A</cross-reference> is a first example of clock distribution where the transitions of the four sampling clock signals ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight> are evenly distributed within the symbol period. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25B</cross-reference> is a second example of clock distribution where the transitions of the four sampling clock signals ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight> are distributed within the symbol period of 8 nanoseconds (ns) such that each ACLK clock transition is 1 ns apart from an adjacent ACLK clock transition. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25C</cross-reference> is a third example of clock distribution where the transitions of the four sampling clock signals ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight> occur at the same instant within the symbol period. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a flowchart of an embodiment of the process for adjusting the phase of a sampling clock signal ACLKx associated with one of the constituent transceivers; </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> is a block diagram of an embodiment of the MSE computation block used for computing the mean squared error of a constituent transceiver. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> is a simplified matrix diagram illustrating the relationship between power consumption and a performance metric; </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29A</cross-reference> is a simplified structure diagram of an adaptive FIR filter as might be implemented as an echo/NEXT canceller circuit in one embodiment of a transceiver in accordance with the present invention; </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29B</cross-reference> is an equivalent structure of the adaptive FIR filter shown in <cross-reference target="DRAWINGS">FIG. 29A</cross-reference>; </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29C</cross-reference> is a simplified structure diagram of an alternative adaptive FIR filter including a modification to the structure of <cross-reference target="DRAWINGS">FIG. 29B</cross-reference> to bypass a deactivated tap; </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29D</cross-reference> is a simplified block diagram of a deactivate-able coefficient multiplier circuit such as might be implemented in the filters of <cross-reference target="DRAWINGS">FIGS. 29A, 29B</cross-reference> and <highlight><bold>29</bold></highlight>C; </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is a flowchart depicting a first exemplary embodiment of an adaptive power reduction method according to the present invention; </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> is a flowchart depicting one exemplary embodiment of an activation block according to the method of <cross-reference target="DRAWINGS">FIG. 30</cross-reference>; </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> is a flowchart depicting one exemplary embodiment of a deactivation block according to the method of <cross-reference target="DRAWINGS">FIG. 30</cross-reference>; </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> is a flowchart of one embodiment of the computing block <highlight><bold>514</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 30</cross-reference>; </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 34</cross-reference> is a flowchart depicting one exemplary embodiment of a power-down block according to the method of <cross-reference target="DRAWINGS">FIG. 30</cross-reference>; </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 35</cross-reference> is a graph of an exemplary impulse response of the echo characteristics of a typical channel; </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 36</cross-reference> is a graph of an exemplary impulse response of the near-end crosstalk (NEXT) characteristics of a typical channel; </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 37A and 37B</cross-reference> are graphs of the mean squared error to signal ratio (MSE/signal) expressed in dB as a function of time, with time expressed in bauds, of exemplary Master and Slave transceivers, respectively; </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 38A and 38B</cross-reference> are graphs of the values of the tap coefficients of an exemplary echo canceller as a function of the tap number, after application of the tap power regulating process with the specified error set at &minus;24 dB and &minus;26 dB, respectively; </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 39</cross-reference> is a block diagram of an exemplary trellis decoder as applied to a case in which there is substantially no intersymbol interference; </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 40</cross-reference> is a simplified block diagram of an alternative embodiment of the invention in which power consumption is reduced by substitution of a symbol-by-symbol decoder in place of a Viterbi decoder;</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> In the context of an exemplary integrated circuit-type bidirectional communication system, the present invention might be characterized as a system and method for accommodating efficient, high speed decoding of signal samples encoded according to the trellis code specified in the IEEE 802.3ab standard (also termed 1000BASE-T standard). </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> As will be understood by one having skill in the art, high speed data transmission is often limited by the ability of decoder systems to quickly, accurately and effectively process a transmitted symbol within a given time period. In a 1000BASE-T application (aptly termed gigabit) for example, the symbol decode period is typically taken to be approximately 8 nanoseconds. Pertinent to any discussion of symbol decoding is the realization that 1000BASE-T systems are layered to receive 4-dimensional (4D) signals (each signal corresponding to a respective one of four twisted pair cables) with each of the 4-dimensional signals represented by five analog levels. Accordingly, the decoder circuitry portions of transceiver demodulation blocks require a multiplicity of operational steps to be taken in order to effectively decode each symbol. Such a multiplicity of operations is computationally complex and often pushes the switching speeds of integrated circuit transistors which make up the computational blocks to their fundamental limits. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> In accordance with the present invention, a transceiver decoder is able to substantially reduce the computational complexity of symbol decoding, and thus avoid substantial amounts of propagation delay (i.e., increase operational speed), by making use of truncated (or partial) representations of various quantities that make up the decoding/ISI compensation process. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> Sample slicing is performed in a manner such that one-dimensional (1D) square error terms are developed in a representation having, at most, three bits if the terms signify a Euclidian distance, and one bit if the terms signify a Hamming distance. Truncated 1D error term representation significantly reduces subsequent error processing complexity because of the fewer number of bits. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> Likewise, ISI compensation of sample signals, prior to Viterbi decoding, is performed in a DFE, operatively responsive to tentative decisions made by the Viterbi. Use of tentative decisions, instead of a Viterbi&apos;s final decision, reduces system latency by a factor directly related to the path memory sequence distance between the tentative decision used, and the final decision, i.e., if there are N steps in the path memory from input to final decision output, and latency is a function of N, forcing the DFE with a tentative decision at step N-<highlight><bold>6</bold></highlight> causes latency to become a function of N-<highlight><bold>6</bold></highlight>. A trade-off between latency reduction and accuracy may be made by choosing a tentative decision step either closer to the final decision point or closer to the initial point. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> Computations associated with removing impairments due to intersymbol interference (ISI) are substantially simplified, in accordance with the present invention, by a combination of techniques that involves the recognition that intersymbol interference results from two primary causes, a partial response pulse shaping filter in a transmitter and from the characteristics of a unshielded twisted pair transmission channel. During the initial start-up, ISI impairments are processed in independent portions of electronic circuitry, with ISI caused by a partial response pulse shaping filter being compensated in an inverse partial response filter in a feedforward equalizer (FFE) at system startup, and ISI caused by transmission channel characteristics compensated by a decision feedback equalizer (DFE) operating in conjunction with a multiple decision feedback equalizer (MDFE) stage to provide ISI pre-compensated signals (representing a symbol) to a decoder stage for symbolic decode. Performing the computations necessary for ISI cancellation in a bifurcated manner allows for fast DFE convergence as well as assists a transceiver in achieving fast acquisition in a robust and reliable manner. After the start-up, all ISI is compensated by the combination of the DEE and MDFE. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> In order to appreciate the advantages of the present invention, it will be beneficial to describe the invention in the context of an exemplary bidirectional communication device, such as a gigabit Ethernet transceiver. The particular exemplary implementation chosen is depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, which is a simplified block diagram of a multi-pair communication system operating in conformance with the IEEE 802.3ab standard for one gigabit (Gb/s) Ethernet full-duplex communication over four twisted pairs of Category-5 copper wires. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> The communication system illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is represented as a point-to-point system, in order to simplify the explanation, and includes two main transceiver blocks <highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight>, coupled together with four twisted-pair cables. Each of the wire pairs <highlight><bold>112</bold></highlight><highlight><italic>a, b, c, d </italic></highlight>is coupled between the transceiver blocks through a respective one of four line interface circuits <highlight><bold>106</bold></highlight> and communicate information developed by respective ones of four transmitter/receiver circuits (constituent transceivers) <highlight><bold>108</bold></highlight> coupled between respective interface circuits and a physical coding sublayer (PCS) block <highlight><bold>110</bold></highlight>. Four constituent transceivers <highlight><bold>108</bold></highlight> are capable of operating simultaneously at 250 megabits per second (Mb/s), and are coupled through respective interface circuits to facilitate full-duplex bidirectional operation. Thus, one Gb/s communication throughput of each of the transceiver blocks <highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight> is achieved by using four 250 Mb/s (125 Megabaud at 2 bits per symbol) constituent transceivers <highlight><bold>108</bold></highlight> for each of the transceiver blocks and four twisted pairs of copper cables to connect the two transceivers together. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a simplified block diagram of the functional architecture and internal construction of an exemplary transceiver block, indicated generally at <highlight><bold>200</bold></highlight>, such as transceiver <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Since the illustrated transceiver application relates to gigabit Ethernet transmission, the transceiver will be referred to as the &ldquo;gigabit transceiver&rdquo;. For ease of illustration and description, <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows only one of the four 250 Mb/s constituent transceivers which are operating simultaneously (termed herein 4-D operation). However, since the operation of the four constituent transceivers are necessarily interrelated, certain blocks in the signal lines in the exemplary embodiment of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> perform and carry 4-dimensional (4-D) functions and 4-D signals, respectively. By 4-D, it is meant that the data from the four constituent transceivers are used simultaneously. In order to clarify signal relationships in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, thin lines correspond to 1-dimensional functions or signals (i.e., relating to only a single transceiver), and thick lines correspond to 4-D functions or signals (relating to all four transceivers). </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the gigabit transceiver <highlight><bold>200</bold></highlight> includes a Gigabit Medium Independent Interface (GMII) block <highlight><bold>202</bold></highlight>, a Physical Coding Sublayer (PCS) block <highlight><bold>204</bold></highlight>, a pulse shaping filter <highlight><bold>206</bold></highlight>, a digital-to-analog (D/A) converter <highlight><bold>208</bold></highlight>, a line interface block <highlight><bold>210</bold></highlight>, a highpass filter <highlight><bold>212</bold></highlight>, a programmable gain amplifier (PGA) <highlight><bold>214</bold></highlight>, an analog-to-digital (A/D) converter <highlight><bold>216</bold></highlight>, an automatic gain control block <highlight><bold>220</bold></highlight>, a timing recovery block <highlight><bold>222</bold></highlight>, a pair-swap multiplexer block <highlight><bold>224</bold></highlight>, a demodulator <highlight><bold>226</bold></highlight>, an offset canceler <highlight><bold>228</bold></highlight>, a near-end crosstalk (NEXT) canceler block <highlight><bold>230</bold></highlight> having three NEXT cancelers, and an echo canceler <highlight><bold>232</bold></highlight>. The gigabit transceiver <highlight><bold>200</bold></highlight> also includes an A/D first-in-first-out buffer (FIFO) <highlight><bold>218</bold></highlight> to facilitate proper transfer of data from the analog clock region to the receive clock region, and a FIFO block <highlight><bold>234</bold></highlight> to facilitate proper transfer of data from the transmit clock region to the receive clock region. The gigabit transceiver <highlight><bold>200</bold></highlight> can optionally include a filter to cancel far-end crosstalk noise (FEXT canceler). </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> On the transmit path, the transmit section of the GMII block <highlight><bold>200</bold></highlight> receives data from a Media Access Control (MAC) module (not shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) and passes the digital data to the transmit section <highlight><bold>204</bold></highlight>T of the PCS block <highlight><bold>204</bold></highlight> via a FIFO <highlight><bold>201</bold></highlight> in byte-wide format at the rate of 125 MHz. The FIFO <highlight><bold>201</bold></highlight> is essentially a synchronization buffer device and is provided to ensure proper data transfer from the MAC layer to the Physical Coding (PHY) layer, since the transmit clock of the PHY layer is not necessarily synchronized with the clock of the MAC layer. This small FIFO <highlight><bold>201</bold></highlight> can be constructed with from three to five memory cells to accommodate the elasticity requirement which is a function of frame size and frequency offset. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The transmit section <highlight><bold>204</bold></highlight>T of the PCS block <highlight><bold>204</bold></highlight> performs scrambling and coding of the data and other control functions. Transmit section <highlight><bold>204</bold></highlight>T of the PCS block <highlight><bold>204</bold></highlight> generates four 1D symbols, one for each of the four constituent transceivers. The 1D symbol generated for the constituent transceiver depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is filtered by a partial response pulse shaping filter <highlight><bold>206</bold></highlight> so that the radiated emission of the output of the transceiver may fall within the EMI requirements of the Federal Communications Commission. The pulse shaping filter <highlight><bold>206</bold></highlight> is constructed with a transfer function 0.75&plus;0.25 z<highlight><superscript>&minus;1</superscript></highlight>, such that the power spectrum of the output of the transceiver falls below the power spectrum of a 100Base-Tx signal. The 100Base-Tx is a widely used and accepted Fast Ethernet standard for 100 Mb/s operation on two pairs of category-5 twisted pair cables. The output of the pulse shaping filter <highlight><bold>206</bold></highlight> is converted to an analog signal by the D/A converter <highlight><bold>208</bold></highlight> operating at 125 MHz. The analog signal passes through the line interface block <highlight><bold>210</bold></highlight>, and is placed on the corresponding twisted pair cable for communication to a remote receiver. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> On the receive path, the line interface block <highlight><bold>210</bold></highlight> receives an analog signal from the twisted pair cable. The received analog signal is preconditioned by a highpass filter <highlight><bold>212</bold></highlight> and a programmable gain amplifier (PGA) <highlight><bold>214</bold></highlight> before being converted to a digital signal by the A/D converter <highlight><bold>216</bold></highlight> operating at a sampling rate of 125 MHz. Sample timing of the A/D converter <highlight><bold>216</bold></highlight> is controlled by the output of a timing recovery block <highlight><bold>222</bold></highlight> controlled, in turn, by decision and error signals from a demodulator <highlight><bold>226</bold></highlight>. The resulting digital signal is properly transferred from the analog clock region to the receive clock region by an A/D FIFO <highlight><bold>218</bold></highlight>, an output of which is also used by an automatic gain control circuit <highlight><bold>220</bold></highlight> to control the operation of the PGA <highlight><bold>214</bold></highlight>. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> The output of the A/D FIFO <highlight><bold>218</bold></highlight>, along with the outputs from the A/D FIFOs of the other three constituent transceivers are inputted to a pair-swap multiplexer block <highlight><bold>224</bold></highlight>. The pair-swap multiplexer block <highlight><bold>224</bold></highlight> is operatively responsive to a 4D pair-swap control signal, asserted by the receive section <highlight><bold>204</bold></highlight>R of PCS block <highlight><bold>204</bold></highlight>, to sort out the 4 input signals and send the correct signals to the respective demodulators of the 4 constituent transceivers. Since the coding scheme used for the gigabit transceivers <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> (referring to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) is based on the fact that each twisted pair of wire corresponds to a 1D constellation, and that the four twisted pairs, collectively, form a 4D constellation, for symbol decoding to function properly, each of the four twisted pairs must be uniquely identified with one of the four dimensions. Any undetected swapping of the four pairs would necessarily result in erroneous decoding. Although described as performed by the receive section <highlight><bold>204</bold></highlight>R of PCS block <highlight><bold>204</bold></highlight> and the pair-swap multiplexer block <highlight><bold>224</bold></highlight>, in the exemplary embodiment of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the pair-swapping control might alternatively be performed by the demodulator <highlight><bold>226</bold></highlight>. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> Demodulator <highlight><bold>226</bold></highlight> receives the particular received signal <highlight><bold>2</bold></highlight> intended for it from the pair-swap multiplexer block <highlight><bold>224</bold></highlight>, and functions to demodulate and decode the signal prior to directing the decoded symbols to the PCS layer <highlight><bold>204</bold></highlight> for transfer to the MAC. The demodulator <highlight><bold>226</bold></highlight> includes a multi-component feedforward equalizer (FFE) <highlight><bold>26</bold></highlight>, having its output coupled to a de-skew memory circuit <highlight><bold>36</bold></highlight> and a trellis decoder <highlight><bold>38</bold></highlight>. The FFE <highlight><bold>26</bold></highlight> is multi-component in the sense that it includes a pulse shaping filter <highlight><bold>28</bold></highlight>, a programmable inverse partial response (IPR) filter <highlight><bold>30</bold></highlight>, a summing device <highlight><bold>32</bold></highlight>, and an adaptive gain stage <highlight><bold>34</bold></highlight>. Functionally, the FFE <highlight><bold>26</bold></highlight> might be characterized as a least-mean-squares (LMS) type adaptive filter which performs channel equalization as described in the following. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> Pulse shaping filter <highlight><bold>28</bold></highlight> is coupled to receive an input signal <highlight><bold>2</bold></highlight> from the pair swap MUX <highlight><bold>224</bold></highlight> and functions to generate a precursor to the input signal <highlight><bold>2</bold></highlight>. Used for timing recovery, the precursor might be aptly described as a zero-crossing inserted at a precursor position of the signal. Such a zero-crossing assists a timing recovery circuit in determining phase relationships between signals, by giving the timing recovery circuit an accurately determinable signal transition point for use as a reference. The pulse shaping filter <highlight><bold>28</bold></highlight> can be placed anywhere before the decoder block <highlight><bold>38</bold></highlight>. In the exemplary embodiment of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the pulse shaping filter <highlight><bold>28</bold></highlight> is positioned at the input of the FFE <highlight><bold>26</bold></highlight>. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> The pulse shaping filter <highlight><bold>28</bold></highlight> transfer function may be represented by a function of the form &minus;&ggr;&plus;z<highlight><superscript>&minus;1</superscript></highlight>, with &ggr; equal to {fraction (1/16)} for short cables (less than 80 meters) and &frac18; for long cables (more than 80 m). The determination of the length of a cable is based on the gain of the coarse PGA section <highlight><bold>14</bold></highlight> of the PGA <highlight><bold>214</bold></highlight>. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> A programmable inverse partial response (IPR) filter <highlight><bold>30</bold></highlight> is coupled to receive the output of the pulse shaping filter <highlight><bold>28</bold></highlight>, and functions to compensate the ISI introduced by the partial response pulse shaping in the transmitter section of the remote transceiver which transmitted the analog equivalent of the digital signal <highlight><bold>2</bold></highlight>. The IPR filter <highlight><bold>30</bold></highlight> transfer function may be represented by a function of the form 1/(1&plus;Kz<highlight><superscript>&minus;1</superscript></highlight>) and may also be described as dynamic. In particular, the filter&apos;s K value is dynamically varied from an initial non-zero setting, valid at system start-up, to a final setting. K may take any positive value strictly less than 1. In the illustrated embodiment, K might take on a value of about 0.484375 during startup, and be dynamically ramped down to zero after convergence of the decision feedback equalizer included inside the trellis decoder <highlight><bold>38</bold></highlight>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> The foregoing is particularly advantageous in high-speed data recovery systems, since by compensating the transmitter induced ISI at start-up, prior to decoding, it reduces the amount of processing required by the decoder to that required only for compensating transmission channel induced ISI. This &ldquo;bifurcated&rdquo; or divided ISI compensation process allows for fast acquisition in a robust and reliable manner. After DFE convergence, noise enhancement in the feedforward equalizer <highlight><bold>26</bold></highlight> is avoided by dynamically ramping the feedback gain factor K of the IPR filter <highlight><bold>30</bold></highlight> to zero, effectively removing the filter from the active computational path. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> A summing device <highlight><bold>32</bold></highlight> subtracts from the output of the IPR filter <highlight><bold>30</bold></highlight> the signals received from the offset canceler <highlight><bold>228</bold></highlight>, the NEXT cancelers <highlight><bold>230</bold></highlight>, and the echo canceler <highlight><bold>232</bold></highlight>. The offset canceler <highlight><bold>228</bold></highlight> is an adaptive filter which generates an estimate of the offset introduced at the analog front end which includes the PGA <highlight><bold>214</bold></highlight> and the A/D converter <highlight><bold>216</bold></highlight>. Likewise, the three NEXT cancelers <highlight><bold>230</bold></highlight> are adaptive filters used for modeling the NEXT impairments in the received signal caused by the symbols sent by the three local transmitters of the other three constituent transceivers. The impairments are due to a near-end crosstalk mechanism between the pairs of cables. Since each receiver has access to the data transmitted by the other three local transmitters, it is possible to nearly replicate the NEXT impairments through filtering. Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the three NEXT cancelers <highlight><bold>230</bold></highlight> filter the signals sent by the PCS block <highlight><bold>204</bold></highlight> to the other three local transmitters and produce three signals replicating the respective NEXT impairments. By subtracting these three signals from the output of the IPR filter <highlight><bold>30</bold></highlight>, the NEXT impairments are approximately canceled. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Due to the bi-directional nature of the channel, each local transmitter causes an echo impairment on the received signal of the local receiver with which it is paired to form a constituent transceiver. The echo canceler <highlight><bold>232</bold></highlight> is an adaptive filter used for modeling the echo impairment. The echo canceler <highlight><bold>232</bold></highlight> filters the signal sent by the PCS block <highlight><bold>204</bold></highlight> to the local transmitter associated with the receiver, and produces a replica of the echo impairment. By subtracting this replica signal from the output of the IPR filter <highlight><bold>30</bold></highlight>, the echo impairment is approximately canceled. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> Following NEXT, echo and offset cancellation, the signal is coupled to an adaptive gain stage <highlight><bold>34</bold></highlight> which functions to fine tune the gain of the signal path using a zero-forcing LMS algorithm. Since this adaptive gain stage <highlight><bold>34</bold></highlight> trains on the basis of errors of the adaptive offset, NEXT and echo cancellation filters <highlight><bold>228</bold></highlight>, <highlight><bold>230</bold></highlight> and <highlight><bold>232</bold></highlight> respectively, it provides a more accurate signal gain than the PGA <highlight><bold>214</bold></highlight>. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> The output of the adaptive gain stage <highlight><bold>34</bold></highlight>, which is also the output of the FFE <highlight><bold>26</bold></highlight>, is inputted to a de-skew memory <highlight><bold>36</bold></highlight>. The de-skew memory <highlight><bold>36</bold></highlight> is a four-dimensional function block, i.e., it also receives the outputs of the three FFEs of the other three constituent transceivers as well as the output of FFE <highlight><bold>26</bold></highlight> illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. There may be a relative skew in the outputs of the 4 FFEs, which are the 4 signal samples representing the 4 symbols to be decoded. This relative skew can be up to 50 nanoseconds, and is due to the variations in the way the copper wire pairs are twisted. In order to correctly decode the four symbols, the four signal samples must be properly aligned. The de-skew memory is responsive to a 4D de-skew control signal asserted by the PCS block <highlight><bold>204</bold></highlight> to de-skew and align the four signal samples received from the four FFEs. The four de-skewed signal samples are then directed to the trellis decoder <highlight><bold>38</bold></highlight> for decoding. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> Data received at the local transceiver was encoded, prior to transmission by a remote transceiver, using an 8-state four-dimensional trellis code. In the absence of inter-symbol interference (ISI), a proper 8-state Viterbi decoder would provide optimal decoding of this code. However, in the case of Gigabit Ethernet, the Category-5 twisted pair cable introduces a significant amount of ISI. In addition, as was described above in connection with the FFE stage <highlight><bold>26</bold></highlight>, the partial response filter of the remote transmitter on the other end of the communication channel also contributes a certain component of ISI. Therefore, during nominal operation, the trellis decoder <highlight><bold>38</bold></highlight> must decode both the trellis code and compensate for at least transmission channel induced ISI, at a substantially high computational rate, corresponding to a symbol rate of about 125 Mhz. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> In the illustrated embodiment of the gigabit transceiver of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the trellis decoder <highlight><bold>38</bold></highlight> suitably includes an 8-state Viterbi decoder for symbol decoding, and incorporates circuitry which implements a decision-feedback sequence estimation approach in order to compensate the ISI components perturbing the signal which represents transmitted symbols. The 4D output <highlight><bold>40</bold></highlight> of the trellis decoder <highlight><bold>38</bold></highlight> is provided to the receive section <highlight><bold>204</bold></highlight>R of the PCS block. The receive section <highlight><bold>204</bold></highlight>R of PCS block de-scrambles and further decodes the symbol stream and then passes the decoded packets and idle stream to the receive section of the GMII block <highlight><bold>202</bold></highlight> for transfer to the MAC module. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> The 4D outputs <highlight><bold>42</bold></highlight> and <highlight><bold>44</bold></highlight>, which represent the error and tentative decision signals defined by the decoder, respectively, are provided to the timing recovery block <highlight><bold>222</bold></highlight>, whose output controls the sampling time of the A/D converter <highlight><bold>216</bold></highlight>. One of the four components of the error <highlight><bold>42</bold></highlight> and one of the four components of the tentative decision <highlight><bold>44</bold></highlight> correspond to the signal stream pertinent to the particular receiver section, illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, and are provided to the adaptive gain stage <highlight><bold>34</bold></highlight> to adjust the gain of the signal path. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The component <highlight><bold>42</bold></highlight>A of the 4D error <highlight><bold>42</bold></highlight>, which corresponds to the receiver shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, is further provided to the adaptation circuitry of each of the adaptive offset, NEXT and echo cancellation filters <highlight><bold>228</bold></highlight>, <highlight><bold>230</bold></highlight>, <highlight><bold>232</bold></highlight>. Adaptation circuitry evaluates the content of the error component and, initially, adapts the filter&apos;s training process to develop suitable filter coefficient values. During nominal operation, adaptation circuitry monitors the error component and provides periodic updates to the filter coefficients in response thereto. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> As implemented in the exemplary Ethernet gigabit transceiver, the trellis decoder <highlight><bold>38</bold></highlight> functions to decode symbols that have been encoded in accordance with the trellis code specified in the IEEE 802.3ab standard (1000BASE-T, or gigabit) As mentioned above, information signals are communicated between transceivers at a symbol rate of about 125 Mhz, on each of the pairs of twisted copper cables that make up the transmission channel. In accordance with established Ethernet communication protocols, information signals are modulated for transmission in accordance with a 5-level Pulse Amplitude Modulation (PAM-5) modulation scheme. Thus, since information signals are represented by five amplitude levels, it will be understood that symbols can be expressed in a three bit representation on each twisted wire pair. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference>, an exemplary PAM-5 constellation is depicted in <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> which also depicts the one-dimensional symbol subset partitioning within the constellation. As illustrated in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>A, the constellation is a representation of five amplitude levels, &plus;2, &plus;1, 0, &minus;1, &minus;2, in decreasing order. Symbol subset partitioning occurs by dividing the five levels into two 1D subsets, X and Y, and assigning X and Y subset designations to the five levels on an alternating basis. Thus &plus;2, 0 and &minus;2 are assigned to the Y subset; &plus;1 and &minus;1 are assigned to the X subset. The partitioning could, of course, be reversed, with &plus;1 and &minus;1 being assigned a Y designation. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> It should be recognized that although the X and Y subsets represent different absolute amplitude levels, the vector distance between neighboring amplitudes within the subsets are the same, i.e., two (2). The X subset therefore includes amplitude level designations which differ by a value of two, (&minus;1, &plus;1), as does the Y subset (&minus;2, 0, &plus;2). This partitioning offers certain advantages to slicer circuitry in a decoder, as will be developed further below. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>B, the 1D subsets have been combined into 4D subsets representing the four twisted pairs of the transmission channel. Since 1D subset definition is binary (X:Y) and there are four wire pairs, there are sixteen possible combinations of 4D subsets. These sixteen possible combinations are assigned into eight 4D subsets, s<highlight><bold>0</bold></highlight> to s<highlight><bold>7</bold></highlight> inclusive, in accordance with a trellis coding scheme. Each of the 4D subsets (also termed code subsets) are constructed of a union of two complementary 4D sub-subsets, e.g., code-subset three (identified as s<highlight><bold>3</bold></highlight>) is the union of sub-subset X:X:Y:X and its complementary image Y:Y:X:Y. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> Data being processed for transmission is encoded using the above described 4-dimensional (4D) 8-state trellis code, in an encoder circuit, such as illustrated in the exemplary block diagram of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, according to an encoding algorithm specified in the 1000BASE-T standard. Referring to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, an exemplary encoder <highlight><bold>300</bold></highlight>, which is commonly provided in the transmit PCS portion of a gigabit transceiver, might be represented in simplified form as a convolutional encoder <highlight><bold>302</bold></highlight> in combination with a signal mapper <highlight><bold>304</bold></highlight>. Data received by the transmit PCS from the MAC module via the transmit gigabit medium independent interface are encoded with control data and scrambled, resulting in an eight bit data word represented by input bits D<highlight><subscript>0 </subscript></highlight>through D<highlight><subscript>7 </subscript></highlight>which are introduced to the signal mapper <highlight><bold>304</bold></highlight> of the encoder <highlight><bold>300</bold></highlight> at a data rate of about 125 MHz. The two least significant bits, D<highlight><subscript>0 </subscript></highlight>and D<highlight><subscript>1</subscript></highlight>, are also inputted, in parallel fashion, into a convolutional encoder <highlight><bold>302</bold></highlight>, implemented as a linear feedback shift register, in order to generate a redundancy bit C which is a necessary condition for the provision of the coding gain of the code. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> As described above, the convolutional encoder <highlight><bold>302</bold></highlight> is a linear feedback shift register, constructed of three delay elements <highlight><bold>303</bold></highlight>, <highlight><bold>304</bold></highlight> and <highlight><bold>305</bold></highlight> (conventionally denoted by z<highlight><superscript>&minus;1</superscript></highlight>) interspersed with and separated by two summing circuits <highlight><bold>307</bold></highlight> and <highlight><bold>308</bold></highlight> which function to combine the two least significant bits (LSBs), D<highlight><subscript>0 </subscript></highlight>and D<highlight><subscript>1</subscript></highlight>, of the input word with the output of the first and second delay elements, <highlight><bold>303</bold></highlight> and <highlight><bold>304</bold></highlight> respectively. The two time sequences formed by the streams of the two LSBs are convolved with the coefficients of the linear feedback shift register to produce the time sequence of the redundancy bit C. Thus, the convolutional encoder might be viewed as a state machine. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> The signal mapper <highlight><bold>304</bold></highlight> maps the 9 bits (D<highlight><subscript>0</subscript></highlight>-D<highlight><subscript>7 </subscript></highlight>and C) into a particular 4-dimensional constellation point. Each of the four dimensions uniquely corresponds to one of the four twisted wire pairs. In each dimension, the possible symbols are from the symbol set &lcub;&minus;2, &minus;1, 0, &plus;1, &plus;2&rcub;. The symbol set is partitioned into two disjoint symbol subsets X and Y, with X&equals;&lcub;&minus;1, &plus;1&rcub; and Y&equals;&lcub;&minus;2, 0, &plus;2&rcub;, as described above and shown in <cross-reference target="DRAWINGS">FIG. 4A</cross-reference>. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>B, the eight code subsets s<highlight><bold>0</bold></highlight> through s<highlight><bold>7</bold></highlight> define the constellation of the code in the signal space. Each of the code subsets is formed by the union of two code sub-subsets, each of the code sub-subsets being formed by 4D patterns obtained from concatenation of symbols taken from the symbol subsets X and Y. For example, the code subset s<highlight><bold>0</bold></highlight> is formed by the union of the 4D patterns from the 4D code sub-subsets XXXX and YYYY. It should be noted that the distance between any two arbitrary even (respectively, odd) code-subsets is {square root}{square root over (2)}. It should be further noted that each of the code subsets is able to define at least 72 constellation points. However, only 64 constellation points in each code subset are recognized as codewords of the trellis code specified in the 1000BASE-T standard. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> This reduced constellation is termed the pruned constellation. Hereinafter, the term &ldquo;codeword&rdquo; is used to indicate a 4D symbol that belongs to the pruned constellation. A valid codeword is part of a valid path in the trellis diagram. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 6</cross-reference> and with reference to <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference>, in operation, the signal mapper <highlight><bold>304</bold></highlight> uses the 3 bits D<highlight><subscript>1</subscript></highlight>, D<highlight><subscript>0 </subscript></highlight>and C to select one of the code subsets s<highlight><bold>0</bold></highlight>-s<highlight><bold>7</bold></highlight>, and uses the 6 MSB bits of the input signal, D<highlight><subscript>2</subscript></highlight>-D<highlight><subscript>7 </subscript></highlight>to select one of 64 particular points in the selected code subset. These 64 particular points of the selected coded subset correspond to codewords of the trellis code. The signal mapper <highlight><bold>304</bold></highlight> outputs the selected 4D constellation point <highlight><bold>306</bold></highlight> which will be placed on the four twisted wire pairs after pulse shape filtering and digital-to-analog conversion. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the trellis diagram for the trellis code specified in the 1000BASE-T standard. In the trellis diagram, each vertical column of nodes represents the possible states that the encoder <highlight><bold>300</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 6</cross-reference>) can assume at a point in time. It is noted that the states of the encoder <highlight><bold>300</bold></highlight> are dictated by the states of the convolutional encoder <highlight><bold>302</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 6</cross-reference>). Since the convolutional encoder <highlight><bold>302</bold></highlight> has three delay elements, there are eight distinct states. Successive columns of nodes represent the possible states that might be defined by the convolutional encoder state machine at successive points in time. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the eight distinct states of the encoder <highlight><bold>300</bold></highlight> are identified by numerals 0 through 7, inclusive. From any given current state, each subsequent transmitted 4D symbol must correspond to a transition of the encoder <highlight><bold>300</bold></highlight> from the given state to a permissible successor state. For example, from the current state 0 (respectively, from current states 2, 4, 6), a transmitted 4D symbol taken from the code subset s<highlight><bold>0</bold></highlight> corresponds to a transition to the successor state 0 (respectively, to successor states 1, 2 or 3). Similarly, from current state 0, a transmitted 4D symbol taken from code subset s<highlight><bold>2</bold></highlight> (respectively, code subsets s<highlight><bold>4</bold></highlight>, s<highlight><bold>6</bold></highlight>) corresponds to a transition to successor state 1 (respectively, successor states 2, 3). </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> Familiarity with the trellis diagram of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, illustrates that from any even state (i.e., states 0, 2, 4 or 6), valid transitions can only be made to certain ones of the successor states, i.e., states 0, 1, 2 or 3. From any odd state (states 1, 3, 5 or 7), valid transitions can only be made to the remaining successor states, i.e., states 4, 5, 6 or 7. Each transition in the trellis diagram, also called a branch, may be thought of as being characterized by the predecessor state (the state it leaves), the successor state (the state it enters) and the corresponding transmitted 4D symbol. A valid sequence of states is represented by a path through the trellis which follows the above noted rules. A valid sequence of states corresponds to a valid sequence of transmitted 4D symbols. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> At the receiving end of the communication channel, the trellis decoder <highlight><bold>38</bold></highlight> uses the methodology represented by the trellis diagram of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> to decode a sequence of received signal samples into their symbolic representation, in accordance with the well known Viterbi algorithm. A traditional Viterbi decoder processes information signals iteratively, on an information frame by information frame basis (in the Gigabit Ethernet case, each information frame is a 4D received signal sample corresponding to a 4D symbol), tracing through a trellis diagram corresponding to the one used by the encoder, in an attempt to emulate the encoder&apos;s behavior. At any particular frame time, the decoder is not instantaneously aware of which node (or state) the encoder has reached, thus, it does not try to decode the node at that particular frame time. Instead, given the received sequence of signal samples, the decoder calculates the most likely path to every node and determines the distance between each of such paths and the received sequence in order to determine a quantity called the path metric. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> In the next frame time, the decoder determines the most likely path to each of the new nodes of that frame time. To get to any one of the new nodes, a path must pass through one of the old nodes. Possible paths to each new node are obtained by extending to this new node each of the old paths that are allowed to be thus extended, as specified by the trellis diagram. In the trellis diagram of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, there are four possible paths to each new node. For each new node, the extended path with the smallest path metric is selected as the most likely path to this new node. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> By continuing the above path-extending process, the decoder determines a set of surviving paths to the set of nodes at the nth frame time. If all of the paths pass through the same node at the first frame time, then the traditional decoder knows which most likely node the encoder entered at the first frame time, regardless of which node the encoder entered at the nth frame time. In other words, the decoder knows how to decode the received information associated with the first frame time, even though it has not yet made a decision for the received information associated with the nth frame time. At the nth frame time, the traditional decoder examines all surviving paths to see if they pass through the same first branch in the first frame time. If they do, then the valid symbol associated with this first branch is outputted by the decoder as the decoded information frame for the first frame time. Then, the decoder drops the first frame and takes in a new frame for the next iteration. Again, if all surviving paths pass through the same node of the oldest surviving frame, then this information frame is decoded. The decoder continues this frame-by-frame decoding process indefinitely so long as information is received. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> The number of symbols that the decoder can store is called the decoding-window width. The decoder must have a decoding window width large enough to ensure that a well-defined decision will almost always be made at a frame time. As discussed later in connection with <cross-reference target="DRAWINGS">FIGS. 13 and 14</cross-reference>, the decoding window width of the trellis decoder <highlight><bold>38</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is 10 symbols. This length of the decoding window is selected based on results of computer simulation of the trellis decoder <highlight><bold>38</bold></highlight>. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> A decoding failure occurs when not all of the surviving paths to the set of nodes at frame time n pass through a common first branch at frame time <highlight><bold>0</bold></highlight>. In such a case, the traditional decoder would defer making a decision and would continue tracing deeper in the trellis. This would cause unacceptable latency for a high-speed system such as the gigabit Ethernet transceiver. Unlike the traditional decoder, the trellis decoder <highlight><bold>38</bold></highlight> of the present invention does not check whether the surviving paths pass through a common first branch. Rather, the trellis decoder, in accordance with the invention, makes an assumption that the surviving paths at frame time n pass through such a branch, and outputs a decision for frame time <highlight><bold>0</bold></highlight> on the basis of that assumption. If this decision is incorrect, the trellis decoder <highlight><bold>38</bold></highlight> will necessarily output a few additional incorrect decisions based on the initial perturbation, but will soon recover due to the nature of the particular relationship between the code and the characteristics of the transmission channel. It should, further, be noted that this potential error introduction source is relatively trivial in actual practice, since the assumption made by the trellis decoder <highlight><bold>38</bold></highlight> that all the surviving paths at frame time n pass through a common first branch at frame time <highlight><bold>0</bold></highlight> is a correct one to a very high statistical probability. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a simplified block diagram of the construction details of an exemplary trellis decoder such as described in connection with <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The exemplary trellis decoder (again indicated generally at <highlight><bold>38</bold></highlight>) is constructed to include a multiple decision feedback equalizer (MDFE) <highlight><bold>602</bold></highlight>, Viterbi decoder circuitry <highlight><bold>604</bold></highlight>, a path metrics module <highlight><bold>606</bold></highlight>, a path memory module <highlight><bold>608</bold></highlight>, a select logic <highlight><bold>610</bold></highlight>, and a decision feedback equalizer <highlight><bold>612</bold></highlight>. In general, a Viterbi decoder is often thought of as including the path metrics module and the path memory module. However, because of the unique arrangement and functional operation of the elements of the exemplary trellis decoder <highlight><bold>38</bold></highlight>, the functional element which performs the slicing operation will be referred to herein as Viterbi decoder circuitry, a Viterbi decoder, or colloquially a Viterbi. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> The Viterbi decoder circuitry <highlight><bold>604</bold></highlight> performs 4D slicing of signals received at the Viterbi inputs <highlight><bold>614</bold></highlight>, and computes the branch metrics. A branch metric, as the term is used herein, is well known and refers to an elemental path between neighboring Trellis nodes. A plurality of branch metrics will thus be understood to make up a path metric. An extended path metric will be understood to refer to a path metric, which is extended by a next branch metric to thereby form an extension to the path. Based on the branch metrics and the previous path metrics information <highlight><bold>618</bold></highlight> received from the path metrics module <highlight><bold>606</bold></highlight>, the Viterbi decoder <highlight><bold>604</bold></highlight> extends the paths and computes the extended path metrics <highlight><bold>620</bold></highlight> which are returned to the path metrics module <highlight><bold>606</bold></highlight>. The Viterbi decoder <highlight><bold>604</bold></highlight> selects the best path incoming to each of the eight states, updates the path memory stored in the path memory module <highlight><bold>608</bold></highlight> and the path metrics stored in the path metrics module <highlight><bold>606</bold></highlight>. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> In the traditional Viterbi decoding algorithm, the inputs to a decoder are the same for all the states of the code. Thus, a traditional Viterbi decoder would have only one 4D input for a 4D 8-state code. In contrast, and in accordance with the present invention, the inputs <highlight><bold>614</bold></highlight> to the Viterbi decoder <highlight><bold>604</bold></highlight> are different for each of the eight states. This is the result of the fact the Viterbi inputs <highlight><bold>614</bold></highlight> are defined by feedback signals generated by the MDFE <highlight><bold>602</bold></highlight> and are different for each of the eight paths (one path per state) of the Viterbi decoder <highlight><bold>604</bold></highlight>, as will be discussed later. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> There are eight Viterbi inputs <highlight><bold>614</bold></highlight> and eight Viterbi decisions <highlight><bold>616</bold></highlight>, each corresponding to a respective one of the eight states of the code. Each of the eight Viterbi inputs <highlight><bold>614</bold></highlight>, and each of the decision outputs <highlight><bold>618</bold></highlight>, is a 4-dimensional vector whose four components are the Viterbi inputs and decision outputs for the four constituent transceivers, respectively. In other words, the four components of each of the eight Viterbi inputs <highlight><bold>614</bold></highlight> are associated with the four pairs of the Category-5 cable. The four components are a received word that corresponds to a valid codeword. From the foregoing, it should be understood that detection (decoding, demodulation, and the like) of information signals in a gigabit system is inherently computationally intensive. When it is further realized that received information must be detected at a very high speed and in the presence of ISI channel impairments, the difficulty in achieving robust and reliable signal detection will become apparent. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> In accordance with the present invention, the Viterbi decoder <highlight><bold>604</bold></highlight> detects a non-binary word by first producing a set of one-dimensional (1D) decisions and a corresponding set of 1D errors from the 4D inputs. By combining the 1D decisions with the 1D errors, the decoder produces a set of 4D decisions and a corresponding set of 4D errors. Hereinafter, this generation of 4D decisions and errors from the 4D inputs is referred to as 4D slicing. Each of the 1D errors represents the distance metric between one 1D component of the eight 4D-inputs and a symbol in one of the two disjoint symbol-subsets X, Y. Each of the 4D errors is the distance between the received word and the corresponding 4D decision which is a codeword nearest to the received word with respect to one of the code-subsets si, where i&equals;0, . . . 7. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> 4D errors may also be characterized as the branch metrics in the Viterbi algorithm. The branch metrics are added to the previous values of path metrics <highlight><bold>618</bold></highlight> received from the path metrics module <highlight><bold>606</bold></highlight> to form the extended path metrics <highlight><bold>620</bold></highlight> which are then stored in the path metrics module <highlight><bold>606</bold></highlight>, replacing the previous path metrics. For any one given state of the eight states of the code, there are four incoming paths. For a given state, the Viterbi decoder <highlight><bold>604</bold></highlight> selects the best path, i.e., the path having the lowest metric of the four paths incoming to that state, and discards the other three paths. The best path is saved in the path memory module <highlight><bold>608</bold></highlight>. The metric associated with the best path is stored in the path metrics module <highlight><bold>606</bold></highlight>, replacing the previous value of the path metric stored in that module. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> In the following, the 4D slicing function of the Viterbi decoder <highlight><bold>604</bold></highlight> will be described in detail. 4D slicing may be described as being performed in three sequential steps. In a first step, a set of 1D decisions and corresponding 1D errors are generated from the 4D Viterbi inputs. Next, the 1D decisions and 1D errors are combined to form a set of 2D decisions and corresponding 2D errors. Finally, the 2D decisions and 2D errors are combined to form 4D decisions and corresponding 4D errors. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a simplified, conceptual block diagram of a first exemplary embodiment of a 1D slicing function such as might be implemented by the Viterbi decoder <highlight><bold>604</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Referring to <cross-reference target="DRAWINGS">FIG. 7, a</cross-reference> 1D component <highlight><bold>702</bold></highlight> of the eight 4D Viterbi inputs (<highlight><bold>614</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>) is sliced, i.e., detected, in parallel fashion, by a pair of 1D slicers <highlight><bold>704</bold></highlight> and <highlight><bold>706</bold></highlight> with respect to the X and Y symbol-subsets. Each slicer <highlight><bold>704</bold></highlight> and <highlight><bold>706</bold></highlight> outputs a respective 1D decision <highlight><bold>708</bold></highlight> and <highlight><bold>710</bold></highlight> with respect to the appropriate respective symbol-subset X, Y and an associated squared error value <highlight><bold>712</bold></highlight> and <highlight><bold>714</bold></highlight>. Each 1D decision <highlight><bold>708</bold></highlight> or <highlight><bold>710</bold></highlight> is the symbol which is closest to the 1D input <highlight><bold>702</bold></highlight> in the appropriate symbol-subset X and Y, respectively. The squared error values <highlight><bold>712</bold></highlight> and <highlight><bold>714</bold></highlight> each represent the square of the difference between the 1D input <highlight><bold>702</bold></highlight> and their respective 1D decisions <highlight><bold>708</bold></highlight> and <highlight><bold>710</bold></highlight>. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> The 1D slicing function shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is performed for all four constituent transceivers and for all eight states of the trellis code in order to produce one pair of 1D decisions per transceiver and per state. Thus, the Viterbi decoder <highlight><bold>604</bold></highlight> has a total of 32 pairs of 1D slicers disposed in a manner identical to the pair of slicers <highlight><bold>704</bold></highlight>, <highlight><bold>706</bold></highlight> illustrated in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a simplified block diagram of a second exemplary embodiment of circuitry capable of implementing a 1D slicing function suitable for incorporation in the Viterbi decoder <highlight><bold>604</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. Referring to <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the 1D component <highlight><bold>702</bold></highlight> of the eight 4D Viterbi inputs is sliced, i.e., detected, by a first pair of 1D slicers <highlight><bold>704</bold></highlight> and <highlight><bold>706</bold></highlight>, with respect to the X and Y symbol-subsets, and also by a 5-level slicer <highlight><bold>805</bold></highlight> with respect to the symbol set which represents the five levels (&plus;2, &plus;1, 0, &minus;1, &minus;2) of the constellation, i.e., a union of the X and Y symbol-subsets. As in the previous case described in connection with <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the slicers <highlight><bold>704</bold></highlight> and <highlight><bold>706</bold></highlight> output 1D decisions <highlight><bold>708</bold></highlight> and <highlight><bold>710</bold></highlight>. The 1D decision <highlight><bold>708</bold></highlight> is the symbol which is nearest the 1D input <highlight><bold>702</bold></highlight> in the symbol-subset X, while 1D decision <highlight><bold>710</bold></highlight> corresponds to the symbol which is nearest the 1D input <highlight><bold>702</bold></highlight> in the symbol-subset Y. The output <highlight><bold>807</bold></highlight> of the 5-level slicer <highlight><bold>805</bold></highlight> corresponds to the particular one of the five constellation symbols which is determined to be closest to the 1D input <highlight><bold>702</bold></highlight>. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> The difference between each decision <highlight><bold>708</bold></highlight> and <highlight><bold>710</bold></highlight> and the 5-level slicer output <highlight><bold>807</bold></highlight> is processed, in a manner to be described in greater detail below, to generate respective quasi-squared error terms <highlight><bold>812</bold></highlight> and <highlight><bold>814</bold></highlight>. In contrast to the 1D error terms <highlight><bold>712</bold></highlight>, <highlight><bold>714</bold></highlight> obtained with the first exemplary embodiment of a 1D slicer depicted in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the 1D error terms <highlight><bold>812</bold></highlight>, <highlight><bold>814</bold></highlight> generated by the exemplary embodiment of <cross-reference target="DRAWINGS">FIG. 8</cross-reference> are more easily adapted to discerning relative differences between a 1D decision and a 1D Viterbi input. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> In particular, the slicer embodiment of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> may be viewed as performing a &ldquo;soft decode&rdquo;, with 1D error terms <highlight><bold>712</bold></highlight> and <highlight><bold>714</bold></highlight> represented by Euclidian metrics. The slicer embodiment depicted in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> may be viewed as performing a &ldquo;hard decode&rdquo;, with its respective 1D error terms <highlight><bold>812</bold></highlight> and <highlight><bold>814</bold></highlight> expressed in Hamming metrics (i.e., 1 or 0). Thus, there is less ambiguity as to whether the 1D Viterbi input is closer to the X symbol subset or to the Y symbol subset. Furthermore, Hamming metrics can be expressed in a fewer number of bits, than Euclidian metrics, resulting in a system that is substantially less computationally complex and substantially faster. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> In the exemplary embodiment of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, error terms are generated by combining the output of the five level slicer <highlight><bold>805</bold></highlight> with the outputs of the 1D slicers <highlight><bold>704</bold></highlight> and <highlight><bold>706</bold></highlight> in respective adder circuits <highlight><bold>809</bold></highlight>A and <highlight><bold>809</bold></highlight>B. The outputs of the adders are directed to respective squared magnitude blocks <highlight><bold>811</bold></highlight>A and <highlight><bold>811</bold></highlight>B which generate the binary squared error terms <highlight><bold>812</bold></highlight> and <highlight><bold>814</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> Implementation of squared error terms by use of circuit elements such as adders <highlight><bold>809</bold></highlight>A, <highlight><bold>809</bold></highlight>B and the magnitude squared blocks <highlight><bold>811</bold></highlight>A, <highlight><bold>811</bold></highlight>B is done for descriptive convenience and conceptual illustration purposes only. In practice, squared error term definition is implemented with a look-up table that contains possible values for error-X and error-Y for a given set of decision-X, decision-Y and Viterbi input values. The look-up table can be implemented with a read-only-memory device or alternatively, a random logic device or PLA. Examples of look-up tables, suitable for use in practice of the present invention, are illustrated in <cross-reference target="DRAWINGS">FIGS. 17, 18A</cross-reference> and <highlight><bold>18</bold></highlight>B. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> The 1D slicing function exemplified in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is performed for all four constituent transceivers and for all eight states of the trellis code in order to produce one pair of 1D decisions per transceiver and per state. Thus, the Viterbi decoder <highlight><bold>604</bold></highlight> has a total of thirty two pairs of 1D slicers that correspond to the pair of slicers <highlight><bold>704</bold></highlight>, <highlight><bold>706</bold></highlight>, and thirty two 5-level slicers that correspond to the 5-level slicer <highlight><bold>805</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> Each of the 1D errors is represented by substantially fewer bits than each 1D component of the 4D inputs. For example, in the embodiment of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the 1D component of the 4D Viterbi input is represented by 5 bits, while the 1D error is represented by 2 or 3 bits. Traditionally, proper soft decision decoding of such a trellis code would require that the distance metric (Euclidean distance) be represented by 6 to 8 bits. One advantageous feature of the present invention is that only 2 or 3 bits are required for the distance metric in soft decision decoding of this trellis code. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> In the embodiment of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the 1D error can be represented by just 1 bit. It is noted that, since the 1D error is represented by 1 bit, the distance metric used in this trellis decoding is no longer the Euclidean distance, which is usually associated with trellis decoding, but is instead the Hamming distance, which is usually associated with hard decision decoding of binary codewords. This is another particularly advantageous feature of the present invention. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a block diagram illustrating the generation of the 2D errors from the 1D errors for twisted pairs A and B (corresponding to constituent transceivers A and B). Since the generation of errors is similar for twisted pairs C and D, this discussion will only concern itself with the A:B 2D case. It will be understood that the discussion is equally applicable to the C:D 2D case with the appropriate change in notation. Referring to <cross-reference target="DRAWINGS">FIG. 9, </cross-reference>1D error signals <highlight><bold>712</bold></highlight>A, <highlight><bold>712</bold></highlight>B, <highlight><bold>714</bold></highlight>A, <highlight><bold>714</bold></highlight>B might be produced by the exemplary 1D slicing functional blocks shown in FIGS. <highlight><bold>7</bold></highlight> or <highlight><bold>8</bold></highlight>. The 1D error term signal <highlight><bold>712</bold></highlight>A (or respectively, <highlight><bold>712</bold></highlight>B) is obtained by slicing, with respect to symbol-subset X, the 1D component of the 4D Viterbi input, which corresponds to pair A (or respectively, pair B). The 1D error term <highlight><bold>714</bold></highlight>A (respectively, <highlight><bold>714</bold></highlight>B) is obtained by slicing, with respect to symbol-subset Y, the 1D component of the 4D Viterbi input, which corresponds to pair A (respectively, B). The 1D errors <highlight><bold>712</bold></highlight>A, <highlight><bold>712</bold></highlight>B, <highlight><bold>714</bold></highlight>A, <highlight><bold>714</bold></highlight>B are added according to all possible combinations (XX, XY, YX and YY) to produce 2D error terms <highlight><bold>902</bold></highlight>AB, <highlight><bold>904</bold></highlight>AB, <highlight><bold>906</bold></highlight>AB, <highlight><bold>908</bold></highlight>AB for pairs A and B. Similarly, the 1D errors <highlight><bold>712</bold></highlight>C, <highlight><bold>712</bold></highlight>D, <highlight><bold>714</bold></highlight>C, <highlight><bold>714</bold></highlight>D (not shown) are added according to the four different symbol-subset combinations XX, XY, YX and YY) to produce corresponding 2D error terms for wire pairs C and D. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a block diagram illustrating the generation of the 4D errors and extended path metrics for the four extended paths outgoing from state 0. Referring to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the 2D errors <highlight><bold>902</bold></highlight>AB, <highlight><bold>902</bold></highlight>CD, <highlight><bold>904</bold></highlight>AB, <highlight><bold>904</bold></highlight>CD, <highlight><bold>906</bold></highlight>AB, <highlight><bold>906</bold></highlight>CD, <highlight><bold>908</bold></highlight>AB, <highlight><bold>908</bold></highlight>CD are added in pairs according to eight different combinations to produce eight intermediate 4D errors <highlight><bold>1002</bold></highlight>, <highlight><bold>1004</bold></highlight>, <highlight><bold>1006</bold></highlight>, <highlight><bold>1008</bold></highlight>, <highlight><bold>1010</bold></highlight>, <highlight><bold>1012</bold></highlight>, <highlight><bold>1014</bold></highlight>, <highlight><bold>1016</bold></highlight>. For example, the 2D error <highlight><bold>902</bold></highlight>AB, which is the squared error with respect to XX from pairs A and B, are added to the 2D error <highlight><bold>902</bold></highlight>CD, which is the squared error with respect to XX from pairs C and D, to form the intermediate 4D error <highlight><bold>1002</bold></highlight> which is the squared error with respect to sub-subset XXXX for pairs A, B, C and D. Similarly, the intermediate 4D error <highlight><bold>1004</bold></highlight> which corresponds to the squared error with respect to sub-subset YYYY is formed from the 2D errors <highlight><bold>908</bold></highlight>AB and <highlight><bold>908</bold></highlight>CD. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> The eight intermediate 4D errors are grouped in pairs to correspond to the code subsets s<highlight><bold>0</bold></highlight>, s<highlight><bold>2</bold></highlight>, s<highlight><bold>4</bold></highlight> and s<highlight><bold>6</bold></highlight> represented in <cross-reference target="DRAWINGS">FIG. 4B</cross-reference>. For example, the intermediate 4D errors <highlight><bold>1002</bold></highlight> and <highlight><bold>1004</bold></highlight> are grouped together to correspond to the code subset s<highlight><bold>0</bold></highlight> which is formed by the union of the XXXX and YYYY sub-subsets. From each pair of intermediate 4D errors, the one with the lowest value is selected (the other one being discarded) in order to provide the branch metric of a transition in the trellis diagram from state 0 to a subsequent state. It is noted that, according to the trellis diagram, transitions from an even state (i.e., 0, 2, 4 and 6) are only allowed to be to the states 0, 1, 2 and 3, and transitions from an odd state (i.e., 1, 3, 5 and 7) are only allowed to be to the states 4, 5, 6 and 7. Each of the index signals <highlight><bold>1026</bold></highlight>, <highlight><bold>1028</bold></highlight>, <highlight><bold>1030</bold></highlight>, <highlight><bold>1032</bold></highlight> indicates which of the 2 sub-subsets the selected intermediate 4D error corresponds to. The branch metrics <highlight><bold>1018</bold></highlight>, <highlight><bold>1020</bold></highlight>, <highlight><bold>1022</bold></highlight>, <highlight><bold>1024</bold></highlight> are the branch metrics for the transitions in the trellis diagram of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> associated with code-subsets s<highlight><bold>0</bold></highlight>, s<highlight><bold>2</bold></highlight>, s<highlight><bold>4</bold></highlight> and s<highlight><bold>6</bold></highlight> respectively, from state 0 to states 0, 1, 2 and 3, respectively. The branch metrics are added to the previous path metric <highlight><bold>1000</bold></highlight> for state 0 in order to produce the extended path metrics <highlight><bold>1034</bold></highlight>, <highlight><bold>1036</bold></highlight>, <highlight><bold>1038</bold></highlight>, <highlight><bold>1040</bold></highlight> of the four extended paths outgoing from state 0 to states 0, 1, 2 and 3, respectively. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> Associated with the eight intermediate 4D errors <highlight><bold>1002</bold></highlight>, <highlight><bold>1004</bold></highlight>, <highlight><bold>1006</bold></highlight>, <highlight><bold>1008</bold></highlight>, <highlight><bold>1010</bold></highlight>, <highlight><bold>1012</bold></highlight>, <highlight><bold>1014</bold></highlight>, <highlight><bold>1016</bold></highlight> are the 4D decisions which are formed from the 1D decisions made by one of the exemplary slicer embodiments of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> or <highlight><bold>8</bold></highlight>. Associated with the branch metrics <highlight><bold>1018</bold></highlight>, <highlight><bold>1020</bold></highlight>, <highlight><bold>1022</bold></highlight>, <highlight><bold>1024</bold></highlight> are the 4D symbols derived by selecting the 4D decisions using the index outputs <highlight><bold>1026</bold></highlight>, <highlight><bold>1028</bold></highlight>, <highlight><bold>1030</bold></highlight>, <highlight><bold>1032</bold></highlight>. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows the generation of the 4D symbols associated with the branch metrics <highlight><bold>1018</bold></highlight>, <highlight><bold>1020</bold></highlight>, <highlight><bold>1022</bold></highlight>, <highlight><bold>1024</bold></highlight>. Referring to <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the 1D decisions <highlight><bold>708</bold></highlight>A, <highlight><bold>708</bold></highlight>B, <highlight><bold>708</bold></highlight>C, <highlight><bold>708</bold></highlight>D are the 1D decisions with respect to symbol-subset X (as shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>) for constituent transceivers A, B, C, D, respectively, and the 1D decisions <highlight><bold>710</bold></highlight>A, <highlight><bold>710</bold></highlight>, <highlight><bold>710</bold></highlight>C, <highlight><bold>710</bold></highlight>D are the 1D decisions with respect to symbol-subset Y for constituent transceivers A, B, C and D, respectively. The 1D decisions are concatenated according to the combinations which correspond to a left or right hand portion of the code subsets s<highlight><bold>0</bold></highlight>, s<highlight><bold>2</bold></highlight>, s<highlight><bold>4</bold></highlight> and s<highlight><bold>6</bold></highlight>, as depicted in <cross-reference target="DRAWINGS">FIG. 4B</cross-reference>. For example, the 1D decisions <highlight><bold>708</bold></highlight>A, <highlight><bold>708</bold></highlight>B, <highlight><bold>708</bold></highlight>C, <highlight><bold>708</bold></highlight>D are concatenated to correspond to the left hand portion, XXXX, of the code subset s<highlight><bold>0</bold></highlight>. The 4D decisions are grouped in pairs to correspond to the union of symbol-subset portions making up the code subsets s<highlight><bold>0</bold></highlight>, s<highlight><bold>2</bold></highlight>, s<highlight><bold>4</bold></highlight> and s<highlight><bold>6</bold></highlight>. In particular, the 4D decisions are grouped together to correspond to the code subset s<highlight><bold>0</bold></highlight> which is formed by the union of the XXXX and YYYY subset portions. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the pairs of 4D decisions are inputted to the multiplexers <highlight><bold>1120</bold></highlight>, <highlight><bold>1122</bold></highlight>, <highlight><bold>1124</bold></highlight>, <highlight><bold>1126</bold></highlight> which receive the index signals <highlight><bold>1026</bold></highlight>, <highlight><bold>1028</bold></highlight>, <highlight><bold>1030</bold></highlight>, <highlight><bold>1032</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10</cross-reference>) as select signals. Each of the multiplexers selects from a pair of the 4D decisions, the 4D decision which corresponds to the sub-subset indicated by the corresponding index signal and outputs the selected 4D decision as the 4D symbol for the branch whose branch metric is associated with the index signal. The 4D symbols <highlight><bold>1130</bold></highlight>, <highlight><bold>1132</bold></highlight>, <highlight><bold>1134</bold></highlight>, <highlight><bold>1136</bold></highlight> correspond to the transitions in the trellis diagram of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> associated with code-subsets s<highlight><bold>0</bold></highlight>, s<highlight><bold>2</bold></highlight>, s<highlight><bold>4</bold></highlight> and s<highlight><bold>6</bold></highlight> respectively, from state 0 to states 0, 1, 2 and 3, respectively. Each of the 4D symbols <highlight><bold>1130</bold></highlight>, <highlight><bold>1132</bold></highlight>, <highlight><bold>1134</bold></highlight>, <highlight><bold>1136</bold></highlight> is the codeword in the corresponding code-subset (s<highlight><bold>0</bold></highlight>, s<highlight><bold>2</bold></highlight>, s<highlight><bold>4</bold></highlight> and s<highlight><bold>6</bold></highlight>) which is closest to the 4D Viterbi input for state 0 (there is a 4D Viterbi input for each state). The associated branch metric (<cross-reference target="DRAWINGS">FIG. 10</cross-reference>) is the 4D squared distance between the codeword and the 4D Viterbi input for state 0. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> illustrates the selection of the best path incoming to state 0. The extended path metrics of the four paths incoming to state 0 from states 0, 2, 4 and 6 are inputted to the comparator module <highlight><bold>1202</bold></highlight> which selects the best path, i.e., the path with the lowest path metric, and outputs the Path <highlight><bold>0</bold></highlight> Select signal <highlight><bold>1206</bold></highlight> as an indicator of this path selection, and the associated path metric <highlight><bold>1204</bold></highlight>. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> The procedure described above for processing a 4D Viterbi input for state 0 of the code to obtain four branch metrics, four extended path metrics, and four corresponding 4D symbols is similar for the other states. For each of the other states, the selection of the best path from the four incoming paths to that state is also similar to the procedure described in connection with <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> The above discussion of the computation of the branch metrics, illustrated by <cross-reference target="DRAWINGS">FIGS. 7 through 11</cross-reference>, is an exemplary application of the method for slicing (detecting) a received L-dimensional word and for computing the distance of the received L-dimensional word from a codeword, for the particular case where L is equal to 4. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> In general terms, i.e., for any value of L greater than 2, the method can be described as follows. The codewords of the trellis code are constellation points chosen from 2<highlight><superscript>L&minus;1 </superscript></highlight>code-subsets. A codeword is a concatenation of L symbols selected from two disjoint symbol-subsets and is a constellation point belonging to one of the 2<highlight><superscript>L&minus;1 </superscript></highlight>code-subsets. At the receiver, L inputs are received, each of the L inputs uniquely corresponding to one of the L dimensions. The received word is formed by the L inputs. To detect the received word, 2<highlight><superscript>L&minus;1 </superscript></highlight>identical input sets are formed by assigning the same L inputs to each of the 2<highlight><superscript>L&minus;1 </superscript></highlight>input sets. Each of the L inputs of each of the 2<highlight><superscript>L&minus;1 </superscript></highlight>input sets is sliced with respect to each of the two disjoint symbol-subsets to produce an error set of 2L one-dimensional errors for each of the 2<highlight><superscript>L&minus;1 </superscript></highlight>code-subsets. For the particular case of the trellis code of the type described by the trellis diagram of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the one-dimensional errors are combined within each of the 2<highlight><superscript>L&minus;1 </superscript></highlight>error sets to produce 2<highlight><superscript>L&minus;2 </superscript></highlight>L-dimensional errors for the corresponding code-subset such that each of the 2<highlight><superscript>L&minus;2 </superscript></highlight>L-dimensional errors is a distance between the received word and one of the codewords in the corresponding code-subset. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> One embodiment of this combining operation can be described as follows. First, the 2L one-dimensional errors are combined to produce 2L two-dimensional errors (<cross-reference target="DRAWINGS">FIG. 9</cross-reference>). Then, the 2L two-dimensional errors are combined to produce 2<highlight><superscript>L </superscript></highlight>intermediate L-dimensional errors which are arranged into 2<highlight><superscript>L&minus;1 </superscript></highlight>pairs of errors such that these pairs of errors correspond one-to-one to the 2<highlight><superscript>L&minus;1 </superscript></highlight>code-subsets (<cross-reference target="DRAWINGS">FIG. 10</cross-reference>, signals <highlight><bold>1002</bold></highlight> through <highlight><bold>1016</bold></highlight>). A minimum is selected for each of the 2<highlight><superscript>L&minus;1 </superscript></highlight>pairs of errors (<cross-reference target="DRAWINGS">FIG. 10</cross-reference>, signals <highlight><bold>1026</bold></highlight>, <highlight><bold>1028</bold></highlight>, <highlight><bold>1030</bold></highlight>, <highlight><bold>1032</bold></highlight>). These minima are the 2<highlight><superscript>L&minus;1 </superscript></highlight>L-dimensional errors. Due to the constraints on transitions from one state to a successor state, as shown in the trellis diagram of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, only half of the 2<highlight><superscript>L&minus;1 </superscript></highlight>L-dimensional errors correspond to allowed transitions in the trellis diagram. These 2<highlight><superscript>L&minus;2 </superscript></highlight>L-dimensional errors are associated with 2<highlight><superscript>L&minus;2 </superscript></highlight>L-dimensional decisions. Each of the 2<highlight><superscript>L&minus;2 </superscript></highlight>L-dimensional decisions is a codeword closest in distance to the received word (the distance being represented by one of the 2<highlight><superscript>L&minus;2 </superscript></highlight>L-dimensional errors), the codeword being in one of half of the 2<highlight><superscript>L&minus;1 </superscript></highlight>code-subsets, i.e., in one of 2<highlight><superscript>L&minus;2 </superscript></highlight>code-subsets of the 2<highlight><superscript>L&minus;1 </superscript></highlight>code-subsets (due to the particular constraint of the trellis code described by the trellis diagram of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>). </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> It is important to note that the details of the combining operation on the 2L one-dimensional errors to produce the final L-dimensional errors and the number of the final L-dimensional errors are functions of a particular trellis code. In other words, they vary depending on the particular trellis code. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> illustrates the construction of the path memory module <highlight><bold>608</bold></highlight> as implemented in the embodiment of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. The path memory module <highlight><bold>608</bold></highlight> includes a path memory for each of the eight paths. In the illustrated embodiment of the invention, the path memory for each path is implemented as a register stack, ten levels in depth. At each level, a 4D symbol is stored in a register. The number of path memory levels is chosen as a tradeoff between receiver latency and detection accuracy. <cross-reference target="DRAWINGS">FIG. 13</cross-reference> only shows the path memory for path <highlight><bold>0</bold></highlight> and continues with the example discussed in FIGS. <highlight><bold>7</bold></highlight>-<highlight><bold>12</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 13</cross-reference> illustrates how the 4D decision for the path <highlight><bold>0</bold></highlight> is stored in the path memory module <highlight><bold>608</bold></highlight>, and how the Path <highlight><bold>0</bold></highlight> Select signal, i.e., the information about which one of the four incoming extended paths to state 0 was selected, is used in the corresponding path memory to force merging of the paths at all depth levels (levels 0 through 9) in the path memory. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, each of the ten levels of the path memory includes a 4-to-1 multiplexer (4:1 MUX) and a register to store a 4D decision. The registers are numbered according to their depth levels. For example, register <highlight><bold>0</bold></highlight> is at depth level 0. The Path <highlight><bold>0</bold></highlight> Select signal <highlight><bold>1206</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 12</cross-reference>) is used as the select input for the 4:1 MUXes <highlight><bold>1302</bold></highlight>, <highlight><bold>1304</bold></highlight>, <highlight><bold>1306</bold></highlight>, . . . , <highlight><bold>1320</bold></highlight>. The 4D decisions <highlight><bold>1130</bold></highlight>, <highlight><bold>1132</bold></highlight>, <highlight><bold>1134</bold></highlight>, <highlight><bold>1136</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 11</cross-reference>) are inputted to the 4:1 MUX <highlight><bold>1302</bold></highlight> which selects one of the four 4D decisions based on the Path <highlight><bold>0</bold></highlight> select signal <highlight><bold>1206</bold></highlight> and stores it in the register <highlight><bold>0</bold></highlight> of path <highlight><bold>0</bold></highlight>. One symbol period later, the register <highlight><bold>0</bold></highlight> of path <highlight><bold>0</bold></highlight> outputs the selected 4D decision to the 4:1 MUX <highlight><bold>1304</bold></highlight>. The other three 4D decisions inputted to the 4:1 MUX <highlight><bold>1304</bold></highlight> are from the registers <highlight><bold>0</bold></highlight> of paths <highlight><bold>2</bold></highlight>, <highlight><bold>4</bold></highlight>, and <highlight><bold>6</bold></highlight>. Based on the Path <highlight><bold>0</bold></highlight> Select signal <highlight><bold>1206</bold></highlight>, the 4:1 MUX <highlight><bold>1304</bold></highlight> selects one of the four 4D decisions and stores it in the register <highlight><bold>1</bold></highlight> of path <highlight><bold>0</bold></highlight>. One symbol period later, the register <highlight><bold>1</bold></highlight> of path <highlight><bold>0</bold></highlight> outputs the selected 4D decision to the 4:1 MUX <highlight><bold>1306</bold></highlight>. The other three 4D decisions inputted to the 4:1 MUX <highlight><bold>1306</bold></highlight> are from the registers <highlight><bold>1</bold></highlight> of paths <highlight><bold>2</bold></highlight>, <highlight><bold>4</bold></highlight>, and <highlight><bold>6</bold></highlight>. Based on the Path <highlight><bold>0</bold></highlight> Select signal <highlight><bold>1206</bold></highlight>, the 4:1 MUX <highlight><bold>1306</bold></highlight> selects one of the four 4D decisions and stores it in the register <highlight><bold>2</bold></highlight> of path <highlight><bold>0</bold></highlight>. This procedure continues for levels 3 through 9 of the path memory for path <highlight><bold>0</bold></highlight>. During continuous operation, ten 4D symbols representing path <highlight><bold>0</bold></highlight> are stored in registers <highlight><bold>0</bold></highlight> through <highlight><bold>9</bold></highlight> of the path memory for path <highlight><bold>0</bold></highlight>. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> Similarly to path <highlight><bold>0</bold></highlight>, each of the paths <highlight><bold>1</bold></highlight> though <highlight><bold>7</bold></highlight> is stored as ten 4D symbols in the registers of the corresponding path memory. The connections between the MUX of one path and registers of different paths follows the trellis diagram of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. For example, the MUX at level k for path <highlight><bold>1</bold></highlight> receives as inputs the outputs of the registers at level k&minus;1 for paths <highlight><bold>1</bold></highlight>, <highlight><bold>3</bold></highlight>, <highlight><bold>5</bold></highlight>, <highlight><bold>7</bold></highlight>, and the MUX at level k for path <highlight><bold>2</bold></highlight> receives as inputs the outputs of the registers at level k&minus;1 for paths <highlight><bold>0</bold></highlight>, <highlight><bold>2</bold></highlight>, <highlight><bold>4</bold></highlight>, <highlight><bold>6</bold></highlight>. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a block diagram illustrating the computation of the final decision and the tentative decisions in the path memory module <highlight><bold>608</bold></highlight> based on the 4D symbols stored in the path memory for each state. At each iteration of the Viterbi algorithm, the best of the eight states, i.e., the one associated with the path having the lowest path metric, is selected, and the 4D symbol from the associated path stored at the last level of the path memory is selected as the final decision <highlight><bold>40</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 3</cross-reference>). Symbols at lower depth levels are selected as tentative decisions, which are used to feed the delay line of the DFE <highlight><bold>612</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 3</cross-reference>). </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, the path metrics <highlight><bold>1402</bold></highlight> of the eight states, obtained from the procedure of <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, are inputted to the comparator module <highlight><bold>1406</bold></highlight> which selects the one with the lowest value and provides an indicator <highlight><bold>1401</bold></highlight> of this selection to the select inputs of the 8-to-1 multiplexers (8:1 MUXes) <highlight><bold>1402</bold></highlight>, <highlight><bold>1404</bold></highlight>, <highlight><bold>1406</bold></highlight>, . . . , <highlight><bold>1420</bold></highlight>, which are located at path memory depth levels 0 through 9, respectively. Each of the 8:1 MUXes receives eight 4D symbols outputted from corresponding registers for the eight paths, the corresponding registers being located at the same depth level as the MUX, and selects one of the eight 4D symbols to output, based on the select signal <highlight><bold>1401</bold></highlight>. The outputs of the 8:1 MUXes located at depth levels 0 through 9 are V<highlight><subscript>0</subscript></highlight>, V<highlight><subscript>1</subscript></highlight>, V<highlight><subscript>2</subscript></highlight>, . . . , V<highlight><subscript>9</subscript></highlight>, respectively. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> In the illustrated embodiment, one set of eight signals, output by the first register set (the register <highlight><bold>0</bold></highlight> set) to the first MUX <highlight><bold>1402</bold></highlight>, is also taken off as a set of eight outputs, denoted V<highlight><subscript>0</subscript></highlight><highlight><superscript>i </superscript></highlight>and provided to the MDFE (<highlight><bold>602</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>) as a select signal which is used in a manner to be described below. Although only the first register set is illustrated as providing outputs to the DFE, the invention contemplates the second, or even higher order, register sets also providing similar outputs. In cases where multiple register sets provide outputs, these are identified by the register set depth order as a subscript, as in V<highlight><subscript>1</subscript></highlight><highlight><superscript>i</superscript></highlight>, and the like. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> In the illustrated embodiment, the MUX outputs V<highlight><subscript>0</subscript></highlight>, V<highlight><subscript>1</subscript></highlight>, V<highlight><subscript>2 </subscript></highlight>are delayed by one unit of time, and are then provided as the tentative decisions V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F</subscript></highlight>, V<highlight><subscript>2F </subscript></highlight>to the DFE <highlight><bold>612</bold></highlight>. The number of the outputs V<highlight><subscript>i </subscript></highlight>to be used as tentative decisions depends on the required accuracy and speed of decoding operation. After further delay, the output V<highlight><subscript>0 </subscript></highlight>of the first MUX <highlight><bold>1402</bold></highlight> is also provided as the 4D tentative decision <highlight><bold>44</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) to the Feedforward Equalizers <highlight><bold>26</bold></highlight> of the four constituent transceivers and the timing recovery block <highlight><bold>222</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). The 4D symbol V<highlight><subscript>9F</subscript></highlight>, which is the output V<highlight><subscript>9 </subscript></highlight>of the 8:1 MUX <highlight><bold>1420</bold></highlight> delayed by one time unit, is provided as the final decision <highlight><bold>40</bold></highlight> to the receive section of the PCS <highlight><bold>204</bold></highlight>R (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> The following is the discussion on how outputs V<highlight><subscript>0</subscript></highlight><highlight><superscript>i</superscript></highlight>, V<highlight><subscript>1</subscript></highlight><highlight><superscript>i</superscript></highlight>, V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F</subscript></highlight>, V<highlight><subscript>2F </subscript></highlight>of the path memory module <highlight><bold>608</bold></highlight> might be used in the select logic <highlight><bold>610</bold></highlight>, the MDFE <highlight><bold>602</bold></highlight>, and the DFE <highlight><bold>612</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 3</cross-reference>). </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a block level diagram of the ISI compensation portion of the decoder, including construction and operational details of the DFE and MDFE circuitry (<highlight><bold>612</bold></highlight> and <highlight><bold>602</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, respectively). The ISI compensation embodiment depicted in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is adapted to receive signal samples from the deskew memory (<highlight><bold>36</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) and provide ISI compensated signal samples to the Viterbi (slicer) for decoding. The embodiment illustrated in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> includes the Viterbi block <highlight><bold>1502</bold></highlight> (which includes the Viterbi decoder <highlight><bold>604</bold></highlight>, the path metrics module <highlight><bold>606</bold></highlight> and the path memory module <highlight><bold>608</bold></highlight>), the select logic <highlight><bold>610</bold></highlight>, the MDFE <highlight><bold>602</bold></highlight> and the DFE <highlight><bold>612</bold></highlight>. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> The MDFE <highlight><bold>602</bold></highlight> computes an independent feedback signal for each of the paths stored in the path memory module <highlight><bold>608</bold></highlight>. These feedback signals represent different hypotheses for the intersymbol interference component present in the input <highlight><bold>37</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 2 and 6</cross-reference>) to the trellis decoder <highlight><bold>38</bold></highlight>. The different hypotheses for the intersymbol interference component correspond to the different hypotheses about the previous symbols which are represented by the different paths of the Viterbi decoder. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> The Viterbi algorithm tests these hypotheses and identifies the most likely one. It is an essential aspect of the Viterbi algorithm to postpone this identifying decision until there is enough information to minimize the probability of error in the decision. In the meantime, all the possibilities are kept open. Ideally, the MDFE block would use the entire path memory to compute the different feedback signals using the entire length of the path memory. In practice, this is not possible because this would lead to unacceptable complexity. By &ldquo;unacceptable&rdquo;, it is meant requiring a very large number of components and an extremely complex interconnection pattern. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> Therefore, in the exemplary embodiment, the part of the feedback signal computation that is performed on a per-path basis is limited to the two most recent symbols stored in register set <highlight><bold>0</bold></highlight> and register set <highlight><bold>1</bold></highlight> of all paths in the path memory module <highlight><bold>608</bold></highlight>, namely V<highlight><subscript>0</subscript></highlight><highlight><superscript>i </superscript></highlight>and V<highlight><subscript>1</subscript></highlight><highlight><superscript>i </superscript></highlight>with i&equals;0, . . . , 7, indicating the path. For symbols older than two periods, a hard decision is forced, and only one replica of a &ldquo;tail&rdquo; component of the intersymbol interference is computed. This results in some marginal loss of performance, but is more than adequately compensated for by a simpler system implementation. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> The DFE <highlight><bold>612</bold></highlight> computes this &ldquo;tail&rdquo; component of the intersymbol interference, based on the tentative decisions V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F</subscript></highlight>, and V<highlight><subscript>2F</subscript></highlight>. The reason for using three different tentative decisions is that the reliability of the decisions increases with the increasing depth into the path memory. For example, V<highlight><subscript>1F </subscript></highlight>is a more reliable version of V<highlight><subscript>0F </subscript></highlight>delayed by one symbol period. In the absence of errors, V<highlight><subscript>1F </subscript></highlight>would be always equal to a delayed version of V<highlight><subscript>0F</subscript></highlight>. In the presence of errors, V<highlight><subscript>1F </subscript></highlight>is different from V<highlight><subscript>0F</subscript></highlight>, and the probability of V<highlight><subscript>1F </subscript></highlight>being in error is lower than the probability of V<highlight><subscript>0F </subscript></highlight>being in error. Similarly, V<highlight><subscript>2F </subscript></highlight>is a more reliable delayed version of V<highlight><subscript>1F</subscript></highlight>. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 15</cross-reference>, the DFE <highlight><bold>612</bold></highlight> is a filter having 33 coefficients c<highlight><subscript>0 </subscript></highlight>through c<highlight><subscript>32 </subscript></highlight>corresponding to 33 taps and a delay line <highlight><bold>1504</bold></highlight>. The delay line is constructed of sequentially disposed summing junctions and delay elements, such as registers, as is well understood in the art of filter design. In the illustrated embodiment, the coefficients of the DFE <highlight><bold>612</bold></highlight> are updated once every four symbol periods, i.e., 32 nanoseconds, in well known fashion, using the well known Least Mean Squares algorithm, based on a decision input <highlight><bold>1505</bold></highlight> from the Viterbi block and an error input <highlight><bold>42</bold></highlight><highlight><italic>dfe. </italic></highlight></paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> The symbols V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F</subscript></highlight>, and V<highlight><subscript>2F </subscript></highlight>are &ldquo;jammed&rdquo;, meaning inputted at various locations, into the delay line <highlight><bold>1504</bold></highlight> of the DFE <highlight><bold>612</bold></highlight>. Based on these symbols, the DFE <highlight><bold>612</bold></highlight> produces an intersymbol interference (ISI) replica portion associated with all previous symbols except the two most recent (since it was derived without using the first two taps of the DFE <highlight><bold>612</bold></highlight>). The ISI replica portion is subtracted from the output <highlight><bold>37</bold></highlight> of the deskew memory block <highlight><bold>36</bold></highlight> to produce the signal <highlight><bold>1508</bold></highlight> which is then fed to the MDFE block. The signal <highlight><bold>1508</bold></highlight> is denoted as the &ldquo;tail&rdquo; component in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. In the illustrated embodiment, the DFE <highlight><bold>612</bold></highlight> has 33 taps, numbered from 0 through 32, and the tail component <highlight><bold>1508</bold></highlight> is associated with taps <highlight><bold>2</bold></highlight> through <highlight><bold>32</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>, due to a circuit layout reason, the tail component <highlight><bold>1508</bold></highlight> is obtained in two steps. First, the ISI replica associated with taps <highlight><bold>3</bold></highlight> through <highlight><bold>32</bold></highlight> is subtracted from the deskew memory output <highlight><bold>37</bold></highlight> to produce an intermediate signal <highlight><bold>1507</bold></highlight>. Then, the ISI replica associated with the tap <highlight><bold>2</bold></highlight> is subtracted from the intermediate signal <highlight><bold>1507</bold></highlight> to produce the tail component <highlight><bold>1508</bold></highlight>. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> The DFE <highlight><bold>612</bold></highlight> also computes the ISI replica <highlight><bold>1510</bold></highlight> associated with the two most recent symbols, based on tentative decisions V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F</subscript></highlight>, and V<highlight><subscript>2</subscript></highlight>. This ISI replica <highlight><bold>1510</bold></highlight> is subtracted from a delayed version of the output <highlight><bold>37</bold></highlight> of the deskew memory block <highlight><bold>36</bold></highlight> to provide a soft decision <highlight><bold>43</bold></highlight>. The tentative decision V<highlight><subscript>0F </subscript></highlight>is subtracted from the soft decision <highlight><bold>43</bold></highlight> in order to provide an error signal <highlight><bold>42</bold></highlight>. Error signal <highlight><bold>42</bold></highlight> is further processed into several additional representations, identified as <highlight><bold>42</bold></highlight><highlight><italic>enc</italic></highlight>, <highlight><bold>42</bold></highlight><highlight><italic>ph </italic></highlight>and <highlight><bold>42</bold></highlight><highlight><italic>dfe</italic></highlight>. The error <highlight><bold>42</bold></highlight><highlight><italic>enc </italic></highlight>is provided to the echo cancelers and NEXT cancelers of the constituent transceivers. The error <highlight><bold>42</bold></highlight><highlight><italic>ph </italic></highlight>is provided to the FFEs <highlight><bold>26</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) of the four constituent transceivers and the timing recovery block <highlight><bold>222</bold></highlight>. The error <highlight><bold>42</bold></highlight><highlight><italic>dfe </italic></highlight>is directed to the DFE <highlight><bold>612</bold></highlight>, where it is used for the adaptive updating of the coefficients of the DFE together with the last tentative decision V<highlight><subscript>2F </subscript></highlight>from the Viterbi block <highlight><bold>1502</bold></highlight>. The tentative decision <highlight><bold>44</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a delayed version of V<highlight><subscript>0F</subscript></highlight>. The soft decision <highlight><bold>43</bold></highlight> is outputted to a test interface for display purposes. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> The DFE <highlight><bold>612</bold></highlight> provides the tail component <highlight><bold>1508</bold></highlight> and the values of the two &ldquo;initial&rdquo; coefficients C<highlight><subscript>0 </subscript></highlight>and C<highlight><subscript>1 </subscript></highlight>to the MDFE <highlight><bold>602</bold></highlight>. The MDFE <highlight><bold>602</bold></highlight> computes eight different replicas of the ISI associated with the first two coefficients of the DFE <highlight><bold>612</bold></highlight>. Each of these ISI replicas corresponds to a different path in the path memory module <highlight><bold>608</bold></highlight>. This computation is part of the so-called &ldquo;critical path&rdquo; of the trellis decoder <highlight><bold>38</bold></highlight>, in other words, the sequence of computations that must be completed in a single symbol period. At the speed of operation of the Gigabit Ethernet transceivers, the symbol period is 8 nanoseconds. All the challenging computations for 4D slicing, branch metrics, path extensions, selection of best path, and update of path memory must be completed within one symbol period. In addition, before these computations can even begin, the MDFE <highlight><bold>602</bold></highlight> must have completed the computation of the eight 4D Viterbi inputs <highlight><bold>614</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 3</cross-reference>) which involves computing the ISI replicas and subtracting them from the output <highlight><bold>37</bold></highlight> of the de-skew memory block <highlight><bold>36</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). This bottleneck in the computations is very difficult to resolve. The system of the present invention allows the computations to be carried out smoothly in the allocated time. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 15</cross-reference>, the MDFE <highlight><bold>602</bold></highlight> provides ISI compensation to received signal samples, provided by the deskew memory (<highlight><bold>37</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) before providing them, in turn, to the input of the Viterbi block <highlight><bold>1502</bold></highlight>. ISI compensation is performed by subtracting a multiplicity of derived ISI replica components from a received signal sample so as to develop a multiplicity of signals that, together, represents various expressions of ISI compensation that might be associated with any arbitrary symbol. One of the ISI compensated arbitrary symbolic representations is then chosen, based on two tentative decisions made by the Viterbi block, as the input signal sample to the Viterbi. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> Since the symbols under consideration belong to a PAM-5 alphabet, they can be expressed in one of only 5 possible values (&minus;2, &minus;1, 0, &plus;1, &plus;2). Representations of these five values are stored in a convolution engine <highlight><bold>1511</bold></highlight>, where they are convolved with the values of the first two filter coefficients C<highlight><subscript>0 </subscript></highlight>and C<highlight><subscript>1 </subscript></highlight>of the DFE <highlight><bold>612</bold></highlight>. Because there are two coefficient values and five level representations, the convolution engine <highlight><bold>1511</bold></highlight> necessarily gives a twenty five value result that might be expressed as (a<highlight><subscript>i</subscript></highlight>C<highlight><subscript>0</subscript></highlight>&plus;b<highlight><subscript>j</subscript></highlight>C<highlight><subscript>1</subscript></highlight>), with C<highlight><subscript>0 </subscript></highlight>and C<highlight><subscript>1 </subscript></highlight>representing the coefficients, and with a<highlight><subscript>i </subscript></highlight>and b<highlight><subscript>j </subscript></highlight>representing the level expressions (with i&equals;1, 2, 3, 4, 5 and j&equals;1, 2, 3, 4, 5 ranging independently). </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> These twenty five values are negatively combined with the tail component <highlight><bold>1508</bold></highlight> received from the DFE <highlight><bold>612</bold></highlight>. The tail component <highlight><bold>1508</bold></highlight> is a signal sample from which a partial ISI component associated with taps <highlight><bold>2</bold></highlight> through <highlight><bold>32</bold></highlight> of the DFE <highlight><bold>612</bold></highlight> has been subtracted. In effect, the MDFE <highlight><bold>602</bold></highlight> is operating on a partially ISI compensated (pre-compensated) signal sample. Each of the twenty five pre-computed values is subtracted from the partially compensated signal sample in a respective one of a stack of twenty five summing junctions. The MDFE then saturates the twenty five results to make them fit in a predetermined range. This saturation process is done to reduce the number of bits of each of the 1D components of the Viterbi input <highlight><bold>614</bold></highlight> in order to facilitate lookup table computations of branch metrics. The MDFE <highlight><bold>602</bold></highlight> then stores the resultant ISI compensated signal samples in a stack of twenty five registers, which makes the samples available to a 25:1 MUX for input sample selection. One of the contents of the twenty five registers will correspond to a component of a 4D Viterbi input with the ISI correctly cancelled, provided that there was no decision error (meaning the hard decision regarding the best path forced upon taps <highlight><bold>2</bold></highlight> through <highlight><bold>32</bold></highlight> of the DFE <highlight><bold>612</bold></highlight>) in the computation of the tail component. In the absence of noise, this particular value will coincide with one of the ideal 5-level symbol values (i.e., &minus;2, &minus;1, 0, 1, 2). In practice, there will always be noise, so this value will be in general different than any of the ideal symbol values. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> This ISI compensation scheme can be expanded to accommodate any number of symbolic levels. If signal processing were performed on PAM-7 signals, for example, the convolution engine <highlight><bold>1511</bold></highlight> would output forty nine values, i.e., a<highlight><subscript>i </subscript></highlight>and b<highlight><subscript>j </subscript></highlight>would range from 1 to 7. Error rate could be reduced, i.e., performance could be improved, at the expense of greater system complexity, by increasing the number of DFE coefficients inputted to the convolution engine <highlight><bold>1511</bold></highlight>. The reason for this improvement is that the forced hard decision (regarding the best path forced upon taps <highlight><bold>2</bold></highlight> through <highlight><bold>32</bold></highlight> of the DFE <highlight><bold>612</bold></highlight>) that goes into the &ldquo;tail&rdquo; computation is delayed. If C<highlight><subscript>2 </subscript></highlight>were added to the process, and the symbols are again expressed in a PAM-5 alphabet, the convolution engine <highlight><bold>1511</bold></highlight> would output one hundred twenty five (125) values. Error rate is reduced by decreasing the tail component computation, but at the expense of now requiring 125 summing junctions and registers, and a 125:1 MUX. </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> It is important to note that, as inputs to the DFE <highlight><bold>612</bold></highlight>, the tentative decisions V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F</subscript></highlight>, V<highlight><subscript>2F </subscript></highlight>are time sequences, and not just instantaneous isolated symbols. If there is no error in the tentative decision sequence V<highlight><subscript>0F</subscript></highlight>, then the time sequence V<highlight><subscript>2F </subscript></highlight>will be the same as the time sequence V<highlight><subscript>1F </subscript></highlight>delayed by one time unit, and the same as the time sequence V<highlight><subscript>0F </subscript></highlight>delayed by two time units. However, due to occasional decision error in the time sequence V<highlight><subscript>0F</subscript></highlight>, which may have been corrected by the more reliable time sequence V<highlight><subscript>1F </subscript></highlight>or V<highlight><subscript>2F</subscript></highlight>, time sequences V<highlight><subscript>1F </subscript></highlight>and V<highlight><subscript>2F </subscript></highlight>may not exactly correspond to time-shifted versions of time sequence V<highlight><subscript>0F</subscript></highlight>. For this reason, instead of using just one sequence V<highlight><subscript>0F</subscript></highlight>, all three sequences V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F </subscript></highlight>and V<highlight><subscript>2F </subscript></highlight>are used as inputs to the DFE <highlight><bold>612</bold></highlight>. Although this implementation is essentially equivalent to convolving V<highlight><subscript>0F </subscript></highlight>with all the DFE&apos;s coefficients when there is no decision error in V<highlight><subscript>0F</subscript></highlight>, it has the added advantage of reducing the probability of introducing a decision error into the DFE <highlight><bold>612</bold></highlight>. It is noted that other tentative decision sequences along the depth of the path memory <highlight><bold>608</bold></highlight> may be used instead of the sequences V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F </subscript></highlight>and V<highlight><subscript>2F</subscript></highlight>. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> Tentative decisions, developed by the Viterbi, are taken from selected locations in the path memory <highlight><bold>608</bold></highlight> and &ldquo;jammed&rdquo; into the DFE <highlight><bold>612</bold></highlight> at various locations along its computational path. In the illustrated embodiment (<cross-reference target="DRAWINGS">FIG. 15</cross-reference>), the tentative decision sequence V<highlight><subscript>0F </subscript></highlight>is convolved with the DFE&apos;s coefficients C<highlight><subscript>0 </subscript></highlight>through C<highlight><subscript>3</subscript></highlight>, the sequence V<highlight><subscript>1F </subscript></highlight>is convolved with the DFE&apos;s coefficients C<highlight><subscript>4 </subscript></highlight>and C<highlight><subscript>5</subscript></highlight>, and the sequence V<highlight><subscript>2F </subscript></highlight>is convolved with the DFE&apos;s coefficients C<highlight><subscript>6 </subscript></highlight>through C<highlight><subscript>32</subscript></highlight>. It is noted that, since the partial ISI component that is subtracted from the deskew memory output <highlight><bold>37</bold></highlight> to form the signal <highlight><bold>1508</bold></highlight> is essentially taken (in two steps as described above) from tap <highlight><bold>2</bold></highlight> of the DFE <highlight><bold>612</bold></highlight>, this partial ISI component is associated with the DFE&apos;s coefficients C<highlight><subscript>2 </subscript></highlight>through C<highlight><subscript>32</subscript></highlight>. It is also noted that, in another embodiment, instead of using the two-step computation, this partial ISI component can be directly taken from the DFE <highlight><bold>612</bold></highlight> at point <highlight><bold>1515</bold></highlight> and subtracted from signal <highlight><bold>37</bold></highlight> to form signal <highlight><bold>1508</bold></highlight>. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> It is noted that the sequences V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F</subscript></highlight>, V<highlight><subscript>2F </subscript></highlight>correspond to a hard decision regarding the choice of the best path among the eight paths (path i is the path ending at state i). Thus, the partial ISI component associated with the DFE&apos;s coefficients C<highlight><subscript>2 </subscript></highlight>through C<highlight><subscript>32 </subscript></highlight>is the result of forcing a hard decision on the group of higher ordered coefficients of the DFE <highlight><bold>612</bold></highlight>. The underlying reason for computing only one partial ISI signal instead of eight complete ISI signals for the eight states (as done conventionally) is to save in computational complexity and to avoid timing problems. In effect, the combination of the DFE and the MDFE of the present invention can be thought of as performing the functions of a group of eight different conventional DFEs having the same tap coefficients except for the first two tap coefficients. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> For each state, there remains to determine which path to use for the remaining two coefficients in a very short interval of time (about 16 nanoseconds). This is done by the use of the convolution engine <highlight><bold>1511</bold></highlight> and the MDFE <highlight><bold>602</bold></highlight>. It is noted that the convolution engine <highlight><bold>1511</bold></highlight> can be implemented as an integral part of the MDFE <highlight><bold>602</bold></highlight>. It is also noted that, for each constituent transceiver, i.e., for each 1D component of the Viterbi input <highlight><bold>614</bold></highlight> (the Viterbi input <highlight><bold>614</bold></highlight> is practically eight 4D Viterbi inputs), there is only one convolution engine <highlight><bold>1511</bold></highlight> for all the eight states but there are eight replicas of the select logic <highlight><bold>610</bold></highlight> and eight replicas of the MUX <highlight><bold>1512</bold></highlight>. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> The convolution engine <highlight><bold>1511</bold></highlight> computes all the possible values for the ISI associated with the coefficients C<highlight><subscript>0 </subscript></highlight>and C<highlight><subscript>1</subscript></highlight>. There are only twenty five possible values, since this ISI is a convolution of these two coefficients with a decision sequence of length 2, and each decision in the sequence can only have five values (&minus;2, &minus;1, 0, &plus;1, &plus;2). Only one of these twenty five values is a correct value for this ISI. These twenty five hypotheses of ISI are then provided to the MDFE <highlight><bold>602</bold></highlight>. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> In the MDFE <highlight><bold>602</bold></highlight>, the twenty five possible values of ISI are subtracted from the partial ISI compensated signal <highlight><bold>1508</bold></highlight> using a set of adders connected in parallel. The resulting signals are then saturated to fit in a predetermined range, using a set of saturators. The saturated results are then stored in a set of twenty five registers. Provided that there was no decision error regarding the best path (among the eight paths) forced upon taps <highlight><bold>2</bold></highlight> through <highlight><bold>32</bold></highlight> of the DFE <highlight><bold>612</bold></highlight>, one of the twenty five registers would contain one 1D component of the Viterbi input <highlight><bold>614</bold></highlight> with the ISI correctly cancelled for one of the eight states. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> For each of the eight states, the generation of the Viterbi input is limited to selecting the correct value out of these 25 possible values. This is done, for each of the eight states, using a 25-to-1 multiplexer <highlight><bold>1512</bold></highlight> whose select input is the output of the select logic <highlight><bold>610</bold></highlight>. The select logic <highlight><bold>610</bold></highlight> receives V<highlight><subscript>0</subscript></highlight><highlight><superscript>(i) </superscript></highlight>and V<highlight><subscript>1</subscript></highlight><highlight><superscript>(i) </superscript></highlight>(i&equals;0, . . . , 7) for a particular state i from the path memory module <highlight><bold>608</bold></highlight> of the Viterbi block <highlight><bold>1502</bold></highlight>. The select logic <highlight><bold>610</bold></highlight> uses a pre-computed lookup table to determine the value of the select signal <highlight><bold>622</bold></highlight>A based on the values of V<highlight><subscript>0</subscript></highlight><highlight><superscript>(i) </superscript></highlight>and V<highlight><subscript>1</subscript></highlight><highlight><superscript>(i) </superscript></highlight>for the particular state i. The select signal <highlight><bold>622</bold></highlight>A is one component of the 8-component select signal <highlight><bold>622</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Based on the select signal <highlight><bold>622</bold></highlight>A, the 25-to-1 multiplexer <highlight><bold>1512</bold></highlight> selects one of the contents of the twenty five registers as a 1D component of the Viterbi input <highlight><bold>614</bold></highlight> for the corresponding state i. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> only shows the select logic and the 25-to-1 multiplexer for one state and for one constituent transceiver. There are identical select logics and 25-to-1 multiplexers for the eight states and for each constituent transceiver. In other words, the computation of the 25 values is done only once for all the eight states, but the 25:1 MUX and the select logic are replicated eight times, one for each state. The input <highlight><bold>614</bold></highlight> to the Viterbi decoder <highlight><bold>604</bold></highlight> is, as a practical matter, eight 4D Viterbi inputs. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> In the case of the DFE, however, only a single DFE is contemplated for practice of the invention. In contrast to alternative systems where eight DFEs are required, one for each of the eight states imposed by the trellis encoding scheme, a single DFE is sufficient since the decision as to which path among the eight is the probable best was made in the Viterbi block and forced to the DFE as a tentative decision. State status is maintained at the Viterbi decoder input by controlling the MDFE output with the state specific signals developed by the 8 select logics (<highlight><bold>610</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>) in response to the eight state specific signals V<highlight><subscript>0</subscript></highlight><highlight><superscript>i </superscript></highlight>and V<highlight><subscript>1</subscript></highlight><highlight><superscript>i</superscript></highlight>, i&equals;0, . . . , 7, from the path memory module (<highlight><bold>608</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>). Although identified as a singular DFE, it will be understood that the 4D architectural requirements of the system means that the DFE is also 4D. Each of the four dimensions (twisted pairs) will exhibit their own independent contributions to ISI and these should be dealt with accordingly. Thus, the DFE is singular, with respect to state architecture, when its 4D nature is taken into account. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> In the architecture of the system of the present invention, the Viterbi input computation becomes a very small part of the critical path since the multiplexers have extremely low delay due largely to the placement of the 25 registers between the 25:1 multiplexer and the saturators. If a register is placed at the input to the MDFE <highlight><bold>602</bold></highlight>, then the 25 registers would not be needed. However, this would cause the Viterbi input computation to be a larger part of the critical path due to the delays caused by the adders and saturators. Thus, by using 25 registers at a location proximate to the MDFE output instead of using one register located at the input of the MDFE, the critical path of the MDFE and the Viterbi decoder is broken up into 2 approximately balanced components. This architecture makes it possible to meet the very demanding timing requirements of the Gigabit Ethernet transceiver. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> Another advantageous factor in achieving high-speed operation for the trellis decoder <highlight><bold>38</bold></highlight> is the use of heavily truncated representations for the metrics of the Viterbi decoder. Although this may result in a mathematically non-zero decrease in theoretical performance, the resulting vestigial precision is nevertheless quite sufficient to support healthy error margins. Moreover, the use of heavily truncated representations for the metrics of the Viterbi decoder greatly assists in achieving the requisite high operational speeds in a gigabit environment. In addition, the reduced precision facilitates the use of random logic or simple lookup tables to compute the squared errors, i.e., the distance metrics, consequently reducing the use of valuable silicon real estate for merely ancillary circuitry. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows the word lengths used in one embodiment of the Viterbi decoder of this invention. In <cross-reference target="DRAWINGS">FIG. 16</cross-reference>, the word lengths are denoted by S or U followed by two numbers separated by a period. The first number indicates the total number of bits in the word length. The second number indicates the number of bits after the decimal point. The letter S denotes a signed number, while the letter U denotes an unsigned number. For example, each 1D component of the 4D Viterbi input is a signed 5-bit number having 3 bits after the decimal point. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows an exemplary lookup table that can be used to compute the squared 1-dimensional errors. The logic function described by this table can be implemented using read-only-memory devices, random logic circuitry or PLA circuitry. Logic design techniques well known to a person of ordinary skill in the art can be used to implement the logic function described by the table of <cross-reference target="DRAWINGS">FIG. 17</cross-reference> in random logic. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 18A and 18B</cross-reference> provide a more complete table describing the computation of the decisions and squared errors for both the X and Y subsets directly from one component of the 4D Viterbi input to the 1D slicers (<cross-reference target="DRAWINGS">FIG. 7</cross-reference>). This table completely specifies the operation of the slicers of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> An exemplary demodulator including a high speed decoder has been described and includes various components that facilitate robust and accurate acquisition and decoding of PAM-5 constellation signals at speeds consistent with gigabit operation. Symbol decoding, including ISI compensation, is accurately performed in a symbol period of about 8 ns, by a transceiver demodulator circuit constructed in a manner so as to first, bifurcate the ISI compensation function between an FFE, operating to compensate partial response pulse shaping filter (remote transmitter) induced ISI, and a decoder operating to compensate ISI perturbations induced by transmission channel characteristics, and second, by bifurcating critical path computations into substantially balanced first and second portions, the first portion including computations performed in a DFE and MDFE element and a second portion including computations performed in a Viterbi decoder. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> The DFE element is further advantageous in that it is implemented as only a single conceptual DFE (taking into account its 4D nature) rather than an eight element stack, each of which defines a multi-dimensional input to an eight-state Viterbi. The DFE is &ldquo;stuffed&rdquo;, at particular chosen locations, by the first several stages of a sequential, multi-stage tentative decision path memory module, so as to develop a set of &ldquo;tail&rdquo; coefficient values in the DFE which, taken together, represent the algebraic sum of a truncated set of DFE coefficients C<highlight><subscript>2 </subscript></highlight>to C<highlight><subscript>32</subscript></highlight>. A received symbol, represented by a five level constellation, is convolved with the remaining two DFE coefficients, C<highlight><subscript>0 </subscript></highlight>and C<highlight><subscript>1</subscript></highlight>, which are taken to represent the transmission channel induced ISI. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> As deskewed signals enter the decoder, the previous symbol, convolved with the DFE coefficients C<highlight><subscript>3 </subscript></highlight>to C<highlight><subscript>32</subscript></highlight>, is first subtracted therefrom. Then the previous symbol convolved with C<highlight><subscript>2 </subscript></highlight>is subtracted and the resultant (intermediate) symbol is directed to the MDFE. This resultant signal might be described as the receive symbol with partial ISI introduced by previous symbols subtracted. In the MDFE, all possible convolutions of the primary coefficients, C<highlight><subscript>0 </subscript></highlight>and C<highlight><subscript>1</subscript></highlight>, with the possible symbol values, is subtracted from the intermediate symbol to provide a receive symbol without perturbations induced by ISI. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> It will be evident to one having skill in the art that although the transceiver has been described in the context of a trellis encoded, PAM-5 signal representation, communicated over a multi-pair transmission channel, the invention is not limited to any particular communication technique. Specifically, the decoder architecture and signal processing methodology in accord with the invention is suitable for use with any form of communication in which the symbolic content of the communication is represented by multi-level signals. The invention, indeed, becomes particularly appropriate as the number of signal levels increases. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> Neither is the invention limited to signals encoded in accordance with a 4D, eight-state, trellis methodology. Trellis encoding forces the system to be constructed so as to accommodate the eight states inherent in the trellis methodology. Other coding methodologies and architectures are expressly contemplated by the invention and can be implemented by making the proper modifications to an alternative coding architecture&apos;s &ldquo;state width&rdquo;, as will be apparent to a skilled integrated circuit transceiver designer. Likewise, the &ldquo;dimensional depth&rdquo;, 1D, 2D, 4D . . . for example, may be suitably increased, or decreased to accommodate different forms of transmission channel implementations. As in the case of increasing signal level representations, the systems and methods of the invention are particularly suitable for channels with increased &ldquo;depth&rdquo;, such as six, eight, or even higher numbers, of twisted pair cabling, single conductor cabling, parallel wireless channels, and the like. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> In the context of an exemplary integrated circuit-type bidirectional communication system, a further aspect of the invention might be characterized as a system and method for adaptively and dynamically regulating the power consumption of an integrated circuit communication system as a function of particular, user defined signal quality metrics. Signal quality metrics might include a signal&apos;s bit error rate (BER), a signal-to-noise ratio (SNR) specification, noise margin figure, dynamic range, or the like. Indeed, signal quality is a generalized term used to describe a signal&apos;s functional fidelity. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> As will be understood by one having skill in the art, signal quality is a measurable operational characteristic of various component portions of modern communication systems. Various forms of signal quality metrics are used to define the features and functionality of signal processing portions of integrated circuit communication devices, particularly coder/decoder circuitry, equalizers and filters, each of which require large amounts of silicon real estate for effective implementation, and a consequently large degree of power consumption during operation. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIG. 28</cross-reference>, the invention might be described briefly as a methodology for balancing the conflicting circuit performance requirements represented by signal quality and power consumption and might be illustrated as the implementation of a decision matrix having power consumption as one of the dimensions and a chosen signal quality metric as another. From <cross-reference target="DRAWINGS">FIG. 28</cross-reference>, it will be understood that integrated circuit power consumption is directly related to processed signal quality. This is particularly true in the case of integrated circuits incorporating high order digital filter elements, having a large number of taps, all of which consume power when in operation. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> However, it has been generally accepted integrated circuit design practice to construct an integrated circuit communication device to accommodate the most stringent digital processing that might be required by a device in an actual application. In the case of an Ethernet transceiver, for example, provision must be made for processing signals transmitted over a wide variety of transmission channels exhibiting widely disparate transmission channel characteristics, ranging from extremely lossy, highly populated, long wiring run channels, to very short (&lt;2 meters) point-to-point installations. In either case, all of the signal processing elements of conventional transceiver circuitry are operative to process a signal, whether needed or not, such that power consumption is relatively constant and large. </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 28</cross-reference>, the evaluation matrix judges an output signal quality metric against a threshold standard, and where a measured quality metric is greater than the threshold, allows the power consumption of the device to be reduced by turning off various functional processing blocks until the output signal quality is reduced to the threshold value. This aproach has particular utility in the case of digital filter elements, coder/decoder circuitry and equalizers, all of which include multiple elements that are required for processing signals propagated through harsh channel environments, but to various degrees unnecessary when signals are propagated through a more benign channel. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> The evaluation matrix, as exemplified in <cross-reference target="DRAWINGS">FIG. 28</cross-reference>, might be initialized by a user input requirement, such as the degree to which power consumption is an issue. A particular power consumption value might be set as an operational parameter (indicated as &ldquo;P&rdquo; in <cross-reference target="DRAWINGS">FIG. 28</cross-reference>), and portions of the device adaptively turned off until the desired power value is reached. This will necessarily affect the signal quality of a signal processed by such truncated circuitry, but, in accordance with the invention, signal quality is able to be locally maximized to a pre-determined power consumption metric, such that device performance is not unduly sacrificed. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> Various portions of the device might be powered-down in predetermined sequential combinations with each combination resulting in a particular performance metric. Signal performance is evaluated at each sequential step. Thus, any one power consumption specification ,i.e. &ldquo;P&rdquo;, will give a range of performance values (represented as &ldquo;A&rdquo; in <cross-reference target="DRAWINGS">FIG. 28</cross-reference>). The best signal performance result is necessarily the chosen metric for deciding which of the multiplicity of power-down configurations is implemented. Consequently, where power is the primary concern, signal quality defaults to the best signal performance achievable at the specified power level. </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> Where signal quality (performance) is the primary concern, the system is allowed to function normally, with all processing blocks operative. In this circumstance, power consumption will be expected to be nominal. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> Where signal quality is desirable, but some accommodation must be made to power consumption, a user may set a signal quality metric as a threshold standard (indicated as &ldquo;Q&rdquo; in <cross-reference target="DRAWINGS">FIG. 28</cross-reference>), and allow the system to adaptively and dynamically run through a multiplicity of power-down configurations, resulting in a range of power consumption values (indicated as &ldquo;B&rdquo; in <cross-reference target="DRAWINGS">FIG. 28</cross-reference>) in order to determine which of the configurations gives the lowest power consumption while retaining the desired signal quality metric. This methodology is particularly effective in high order filters with multiple taps, and in decoder blocks that might implement a trellis decoder in a fully functional form, but which might be adequate when truncated to a simple slicer in certain situations. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> No matter how implemented, however, all that is required for practice of the invention is that power consumption be established as one basis of an evaluation matrix, and that some signal quality or device performance characteristic, having a relationship to device power consumption, be established as another. As one of the bases are defined, as by a user input, for example, the other basis is locally maximized (in the case of performance) or minimized (in the case of power) by an adaptive and dynamic procedure that chooses the most pertinent portions of an integrated circuit to disable. The procedure is adaptive in the sense that it is not fixed in time. As channel and signal characteristics can be expected to vary with time, a changing signal quality metric will force a re-evaluation of the matrix. A further reduction of power consumption, or a further enhancement of signal quality may be obtained. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> In order to appreciate the advantages of the present invention, it will be beneficial to describe the invention in the context of an exemplary bidirectional communication device, such as an Ethernet transceiver. The particular exemplary implementation chosen is depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, which is a simplified block diagram of a multi-pair communication system operating in conformance with the IEEE 802.3ab standard (also termed 1000BASE-T) for 1 gigabit (Gb/s) Ethernet full-duplex communication over four twisted pairs of Category-5 copper wires. </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> The communication system illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is represented as a point-to-point system, in order to simplify the explanation, and includes two main transceiver blocks <highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight>, coupled together via four twisted-pair cables <highlight><bold>112</bold></highlight><highlight><italic>a, b, c </italic></highlight>and <highlight><italic>d</italic></highlight>. Each of the wire pairs <highlight><bold>112</bold></highlight><highlight><italic>a, b, c, d </italic></highlight>is coupled to each of the transceiver blocks <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> through a respective one of four line interface circuits <highlight><bold>106</bold></highlight>. Each of the wire pairs <highlight><bold>112</bold></highlight><highlight><italic>a, b, c, d </italic></highlight>facilitates communication of information between corresponding pairs of four pairs of transmitter/receiver circuits (constituent transceivers) <highlight><bold>108</bold></highlight>. Each of the constituent transceivers <highlight><bold>108</bold></highlight> is coupled between a respective line interface circuit <highlight><bold>106</bold></highlight> and a Physical Coding Sublayer (PCS) block <highlight><bold>110</bold></highlight>. At each of the transceiver blocks <highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight>, the four constituent transceivers <highlight><bold>108</bold></highlight> are capable of operating simultaneously at 250 megabits of information data per second (Mb/s) each, and are coupled to the corresponding remote constituent transceivers through respective line interface circuits to facilitate full-duplex bidirectional operation. Thus, 1 Gb/s communication throughput of each of the transceiver blocks <highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight> is achieved by using four 250 Mb/s (125 Mbaud at 2 information data bits per symbol) constituent transceivers <highlight><bold>108</bold></highlight> for each of the transceiver blocks <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> and four pairs of twisted copper cables to connect the two transceiver blocks <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> together. </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> The exemplary communication system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> has a superficial resemblance to a 100BASE-T4 system, but is configured to operate at ten times the bit rate. As such, it should be understood that certain system performance characteristics, such as sampling rates and the like, will be consequently higher and cause a greater degree of power consumption. Also, at gigabit data rates over potentially noisy channels, a proportionately greater degree of signal processing is required in many instances to insure an adequate degree of signal fidelity and quality. </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a simplified block diagram of the functional architecture and internal construction of an exemplary transceiver block, indicated generally at <highlight><bold>200</bold></highlight>, such as transceiver <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Since the illustrative transceiver application relates to gigabit Ethernet transmission, the transceiver will be refered to as the &ldquo;gigabit transceiver&rdquo;. For ease of illustration and description, <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows only one of the four 250 Mb/s constituent transceivers which are operating simultaneously (termed herein 4-D operation). However, since the operation of the four constituent transceivers are necessarily interrelated, certain blocks and signal lines in the exemplary embodiment of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> perform four-dimensional operations and carry four-dimensional (4-D) signals, respectively. By 4-D, it is meant that the data from the four constituent transceivers are used simultaneously. In order to clarify signal relationships in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, thin lines correspond to 1-dimensional functions or signals (i.e., relating to only a single constituent transceiver), and thick lines correspond to 4-D functions or signals (relating to all four constituent transceivers). </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the gigabit transceiver <highlight><bold>200</bold></highlight> includes a Gigabit Medium Independent Interface (GMII) block <highlight><bold>202</bold></highlight> subdivided into a receive GMII circuit <highlight><bold>202</bold></highlight>R and a transmit GMII circuit <highlight><bold>202</bold></highlight>T. The transceiver also includes a Physical Coding Sublayer (PCS) block <highlight><bold>204</bold></highlight>, subdivided into a receive PCS circuit <highlight><bold>204</bold></highlight>R and a transmit PCS circuit <highlight><bold>204</bold></highlight>T, a pulse shaping filter <highlight><bold>206</bold></highlight>, a digital-to analog (D/A) converter block <highlight><bold>208</bold></highlight>, and a line interface block <highlight><bold>210</bold></highlight>, all generally encompassing the transmitter portion of the transceiver. </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> The receiver portion generally includes a highpass filter <highlight><bold>212</bold></highlight>, a programmable gain amplifier (PGA) <highlight><bold>214</bold></highlight>, an analog-to-digital (A/D) converter <highlight><bold>216</bold></highlight>, an automatic gain control (AGC) block <highlight><bold>220</bold></highlight>, a timing recovery block <highlight><bold>222</bold></highlight>, a pair-swap multiplexer block <highlight><bold>224</bold></highlight>, a demodulator <highlight><bold>226</bold></highlight>, an offset canceller <highlight><bold>228</bold></highlight>, a near-end crosstalk (NEXT) canceller block <highlight><bold>230</bold></highlight> having three constituent NEXT cancellers and an echo canceller <highlight><bold>232</bold></highlight>. </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> The gigabit transceiver <highlight><bold>200</bold></highlight> also includes an A/D first-in-first-out buffer (FIFO) <highlight><bold>218</bold></highlight> to facilitate proper transfer of data from the analog clock region to the receive clock region, and a loopback FIFO block (LPBK) <highlight><bold>234</bold></highlight> to facilitate proper transfer of data from the transmit clock region to the receive clock region. The gigabit transceiver <highlight><bold>200</bold></highlight> can optionally include an additional adaptive filter to cancel far-end crosstalk noise (FEXT canceller). </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> In operational terms, on the transmit path, the transmit section <highlight><bold>202</bold></highlight>T of the GMII block receives data from the Media Access Control (MAC) module in byte-wide format at the rate of 125 MHz and passes them to the transmit section <highlight><bold>204</bold></highlight>T of the PCS block via the FIFO <highlight><bold>201</bold></highlight>. The FIFO <highlight><bold>201</bold></highlight> ensures proper data transfer from the MAC layer to the Physical Coding (PHY) layer, since the transmit clock of the PHY layer is not necessarily synchronized with the clock of the MAC layer. In one embodiment, this small FIFO <highlight><bold>201</bold></highlight> has from about three to about five memory cells to accommodate the file elasticity requirement which is a function of frame size and frequency offset. </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> The PCS transmit section <highlight><bold>204</bold></highlight>T performs certain scambling operations and, in particular, is responsible for encoding digital data into the requisite codeword representations appropriate for transmission. In, the illustrated embodiment of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the transmit PCS section <highlight><bold>204</bold></highlight>T incorporates a coding engine and signal mapper that implements a trellis coding architecture, such as required by the IEEE 802.3ab specification for gigabit transmission. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> In accordance with this encoding architecture, the PCS transmit section <highlight><bold>204</bold></highlight>T generates four 1-D symbols, one for each of the four constituent transceivers. The 1-D symbol generated for the constituent transceiver depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is filtered by the pulse shaping filter <highlight><bold>206</bold></highlight>. This filtering assists in reducing the radiated emission of the output of the transceiver such that it falls within the parameters required by the Federal Communications Commission. The pulse shaping filter <highlight><bold>206</bold></highlight> is implemented so as to define a transfer function of 0.75&plus;0.25 z<highlight><superscript>&minus;1</superscript></highlight>. This particular implementation is chosen so that the power spectrum of the output of the transceiver falls below the power spectrum of a 100Base-Tx signal. The 100Base-Tx is a widely used and accepted Fast Ethernet standard for 100 Mb/s operation on two pairs of Category-5 twisted pair cables. The output of the pulse shaping filter <highlight><bold>206</bold></highlight> is converted to an analog signal by the D/A converter <highlight><bold>208</bold></highlight> operating at 125 MHz. The analog signal passes through the line interface block <highlight><bold>210</bold></highlight>, and is placed on the corresponding twisted pair cable. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> On the receive path, the line interface block <highlight><bold>210</bold></highlight> receives an analog signal from the twisted pair cable. The received analog signal is preconditioned by the highpass filter <highlight><bold>212</bold></highlight> and the PGA <highlight><bold>214</bold></highlight> before being converted to a digital signal by the A/D converter <highlight><bold>216</bold></highlight> operating at a sampling rate of 125 MHz. The timing of the A/D converter <highlight><bold>216</bold></highlight> is controlled by the output of the timing recovery block <highlight><bold>222</bold></highlight>. The resulting digital signal is properly transferred from the analog clock region to the receive clock region by the A/D FIFO <highlight><bold>218</bold></highlight>. The output of the A/D FIFO <highlight><bold>218</bold></highlight> is also used by the AGC <highlight><bold>220</bold></highlight> to control the operation of the PGA <highlight><bold>214</bold></highlight>. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> The output of the-A/D FIFO <highlight><bold>218</bold></highlight>, along with the outputs from the A/D FIFOs of the other three constituent transceivers are inputted to the pair-swap multiplexer block <highlight><bold>224</bold></highlight>. The pair-swap multiplexer block <highlight><bold>224</bold></highlight> uses the 4-D pair-swap control signal from the receive section <highlight><bold>204</bold></highlight>R of PCS block to sort out the four input signals and send the correct signals to the respective feedforward equalizers <highlight><bold>26</bold></highlight> of the demodulator <highlight><bold>226</bold></highlight>. This pair-swapping control is needed for the following reason. The trellis coding methodology used for the gigabit transceivers (<highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) is based on the fact that a signal on each twisted pair of wire corresponds to a respective 1-D constellation, and that the signals transmitted over four twisted pairs collectively form a 4-D constellation. Thus, for the decoding to work, each of the four twisted pairs must be uniquely identified with one of the four dimensions. Any undetected swapping of the four pairs would result in erroneous decoding. In an alternate embodiment of the gigabit transceiver, the pair-swapping control is performed by the demodulator <highlight><bold>226</bold></highlight>, instead of the combination of the PCS receive section <highlight><bold>204</bold></highlight>R and the pair-swap multiplexer block <highlight><bold>224</bold></highlight>. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> The demodulator <highlight><bold>226</bold></highlight> includes a feed-forward equalizer (FFE) <highlight><bold>26</bold></highlight> for each constituent transceiver, coupled to a deskew memory circuit <highlight><bold>36</bold></highlight> and a decoder circuit <highlight><bold>38</bold></highlight>, implemented in the illustrated embodiment as a trellis decoder. The deskew memory circuit <highlight><bold>36</bold></highlight> and the trellis decoder <highlight><bold>38</bold></highlight> are common to all four constituent transceivers. The FFE <highlight><bold>26</bold></highlight> receives the received signal intended for it from the pair-swap multiplexer block <highlight><bold>224</bold></highlight>. The FFE <highlight><bold>26</bold></highlight> is suitably implemented to include a precursor filter <highlight><bold>28</bold></highlight>, a programmable inverse partial response (IPR) filter <highlight><bold>30</bold></highlight>, a summing device <highlight><bold>32</bold></highlight>, and an adaptive gain stage <highlight><bold>34</bold></highlight>. The FFE <highlight><bold>26</bold></highlight> is a least-mean-squares (LMS) type adaptive filter which is configured to perform channel equalization as will be described in greater detail below. </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> The precursor filter <highlight><bold>28</bold></highlight> generates a precursor to the input signal <highlight><bold>2</bold></highlight>. This precursor is used for timing recovery. The transfer function of the precursor filter <highlight><bold>28</bold></highlight> might be represented as &minus;&ggr;&plus;z<highlight><superscript>&minus;1</superscript></highlight>, with &ggr; equal to {fraction (1/16)} for short cables (less than 80 meters) and &frac18; for long cables (more than 80 m). The determination of the length of a cable is based on the gain of the coarse PGA <highlight><bold>14</bold></highlight> of the programmable gain block <highlight><bold>214</bold></highlight>. </paragraph>
<paragraph id="P-0228" lvl="0"><number>&lsqb;0228&rsqb;</number> The programmable IPR filter <highlight><bold>30</bold></highlight> compensates the ISI (intersymbol interference) introduced by the partial response pulse shaping in the transmitter section of a remote transceiver which transmitted the analog equivalent of the digital signal <highlight><bold>2</bold></highlight>. The transfer function of the IPR filter <highlight><bold>30</bold></highlight> may be expressed as 1/(1&plus;Kz<highlight><superscript>&minus;1</superscript></highlight>). In the present example, K has an exemplary value of 0.484375 during startup, and is slowly ramped down to zero after convergence of the decision feedback equalizer included inside the trellis decoder <highlight><bold>38</bold></highlight>. The value of K may also be any positive value strictly less than 1. </paragraph>
<paragraph id="P-0229" lvl="0"><number>&lsqb;0229&rsqb;</number> The summing device <highlight><bold>32</bold></highlight> receives the output of the IPR filter <highlight><bold>30</bold></highlight> and subtracts therefrom adaptively derived cancellation signals received from the adaptive filter block, namely signals developed by the offset canceller <highlight><bold>228</bold></highlight>, the NEXT cancellers <highlight><bold>230</bold></highlight>, and the echo canceller <highlight><bold>232</bold></highlight>. The offset canceller <highlight><bold>228</bold></highlight> is an adaptive filter which generates an estimate of signal offset introduced by component circuitry of the transceiver&apos;s analog front end, particularly offsets introduced by the PGA <highlight><bold>214</bold></highlight> and the A/D converter <highlight><bold>216</bold></highlight>. </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> The three NEXT cancellers <highlight><bold>230</bold></highlight> may also be described as adaptive filters and are used, in the illustrated embodiment, for modeling the NEXT impairments in the received signal caused by interference generated by symbols sent by the three local transmitters of the other three constituent transceivers. These impairments are recognized as being caused by a crosstalk mechanism between neighboring pairs of cables, thus the term near-end crosstalk, or NEXT. Since each receiver has access to the data transmitted by the other three local transmitters, it is possible to approximately replicate the NEXT impairments through filtering. Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the three NEXT cancellers <highlight><bold>230</bold></highlight> filter the signals sent by the PCS block to the other three local transmitters and produce three signals replicating the respective NEXT impairments. By subtracting these three signals from the output of the IPR filter <highlight><bold>30</bold></highlight>, the NEXT impairments are approximately cancelled. </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> Due to the bi-directional nature of the channel, each local transmitter causes an echo impairment on the received signal of the local receiver with which it is paired to form a constituent transceiver. In order to remove this impairment, an echo canceller <highlight><bold>232</bold></highlight> is provided, which may also be characterized as an adaptive filter, and is used, in the illustrated embodiment, for modeling the signal impairment due to echo. The echo canceller <highlight><bold>232</bold></highlight> filters the signal sent by the PCS block to the local transmitter associated with the receiver, and produces an approximate replica of the echo impairment. By subtracting this replica signal from the output of the IPR filter <highlight><bold>30</bold></highlight>, the echo impairment is approximately cancelled. </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> The adaptive gain stage <highlight><bold>34</bold></highlight> receives the processed signal from the summing circuit <highlight><bold>32</bold></highlight> and fine tunes the signal path gain using a zero-forcing LMS algorithm. Since this adaptive gain stage <highlight><bold>34</bold></highlight> trains on the basis of error signals generated by the adaptive filters <highlight><bold>228</bold></highlight>, <highlight><bold>230</bold></highlight> and <highlight><bold>232</bold></highlight>, it provides a more accurate signal gain than the one provided by the PGA <highlight><bold>214</bold></highlight> in the analog section. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> The output of the adaptive gain stage <highlight><bold>34</bold></highlight>, which is also the output of the FFE <highlight><bold>26</bold></highlight>, is inputted to the deskew memory circuit <highlight><bold>36</bold></highlight>. The deskew memory <highlight><bold>36</bold></highlight> is a four-dimensional function block, i.e., it also receives the outputs of the three FFEs of the other three constituent transceivers. There may be a relative skew in the outputs of the four FFEs, which are the four signal samples representing the four symbols to be decoded. This relative skew can be up to 50 nanoseconds, and is due to the variations in the way the copper wire pairs are twisted. In order to correctly decode the four symbols, the four signal samples must be properly aligned. The deskew memory aligns the four signal samples received from the four FFEs, then passes the deskewed four signal samples to a decoder circuit <highlight><bold>38</bold></highlight> for decoding. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> In the context of the exemplary embodiment, the data received at the local transceiver was encoded before transmission, at the remote transceiver. In the present case, data might be encoded using an 8-state four-dimensional trellis code, and the decoder <highlight><bold>38</bold></highlight> might therefore be implemented as a trellis decoder. In the absence of intersymbol interference (ISI), a proper 8-state Viterbi decoder would provide optimal decoding of this code. However, in the case of Gigabit Ethernet, the Category-5 twisted pair cable introduces a significant amount of ISI. In addition, the partial response filter of the remote transmitter on the other end of the communication channel also contributes some ISI. Therefore, the trellis decoder <highlight><bold>38</bold></highlight> must decode both the trellis code and the ISI, at the high rate of 125 MHz. In the illustrated embodiment of the gigabit transceiver, the trellis decoder <highlight><bold>38</bold></highlight> includes an 8-state Viterbi decoder, and uses a decision-feedback sequence estimation approach to deal with the ISI components. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> The 4-D output of the trellis decoder <highlight><bold>38</bold></highlight> is provided to the PCS receive section <highlight><bold>204</bold></highlight>R. The receive section <highlight><bold>204</bold></highlight>R of the PCS block de-scrambles and decodes the symbol stream, then passes the decoded packets and idle stream to the receive section <highlight><bold>202</bold></highlight>T of the GMII block which passes them to the MAC module. The 4-D outputs, which are the error and tentative decision, respectively, are provided to the timing recovery block <highlight><bold>222</bold></highlight>, whose output controls the sampling time of the A/D converter <highlight><bold>216</bold></highlight>. One of the four components of the error and one of the four components of the tentative decision correspond to the receiver shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, and are provided to the adaptive gain stage <highlight><bold>34</bold></highlight> of the FFE <highlight><bold>26</bold></highlight> to adjust the gain of the equalizer signal path. The error component portion of the decoder output signal is also provided, as a control signal, to adaptation circuitry incorporated in each of the adaptive filters <highlight><bold>228</bold></highlight>, <highlight><bold>229</bold></highlight>, <highlight><bold>230</bold></highlight>, <highlight><bold>231</bold></highlight> and <highlight><bold>232</bold></highlight>. Adaptation circuitry is used for the updating and training process of filter coefficients. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of the trellis decoder <highlight><bold>38</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> The trellis decoder <highlight><bold>38</bold></highlight> includes a multiple decision feedback equalizer (MDFE) <highlight><bold>602</bold></highlight>, a Viterbi decoder <highlight><bold>604</bold></highlight>, a path metrics module <highlight><bold>606</bold></highlight>, a path memory module <highlight><bold>608</bold></highlight>, a select logic <highlight><bold>610</bold></highlight>, and a decision feedback equalizer <highlight><bold>612</bold></highlight>. There are eight Viterbi inputs and eight Viterbi decisions corresponding to the eight states. Each of the eight Viterbi inputs (respectively, decisions) is a 4-dimensional vector whose four components are the Viterbi inputs (respectively, decisions) for the four constituent transceivers, respectively. </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> The adaptive filters used to implement the echo canceller <highlight><bold>232</bold></highlight> and the NEXT cancellers <highlight><bold>229</bold></highlight>, <highlight><bold>230</bold></highlight> and <highlight><bold>231</bold></highlight> are typically finite impulse response (FIR) filters. <cross-reference target="DRAWINGS">FIG. 29A</cross-reference> shows a structure of an adaptive FIR filter used as an echo/NEXT canceller in one embodiment of the gigabit transceiver. </paragraph>
<paragraph id="P-0238" lvl="0"><number>&lsqb;0238&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 29</cross-reference>A, the adaptive FIR filter includes an input signal path P<highlight><subscript>in</subscript></highlight>, an output signal path P<highlight><subscript>out</subscript></highlight>, and N taps (N is nine in <cross-reference target="DRAWINGS">FIG. 29A</cross-reference>). Each tap connects a point on the input signal path P<highlight><subscript>in </subscript></highlight>to a point on the output signal path P<highlight><subscript>out</subscript></highlight>. Each tap, except for the last tap, includes a coefficient C<highlight><subscript>i</subscript></highlight>, a multiplier M<highlight><subscript>i </subscript></highlight>and an adder A<highlight><subscript>i</subscript></highlight>, i&equals;0, . . . , N&minus;2. The last tap includes the coefficient C<highlight><subscript>N&minus;1</subscript></highlight>, the multiplier M<highlight><subscript>N&minus;1, </subscript></highlight>and no adder. The coefficients C<highlight><subscript>i</subscript></highlight>, where i&equals;0, . . . , N&minus;1, are stored in coefficient registers. During each adaptation process, the values of the coefficients C<highlight><subscript>i </subscript></highlight>are trained using a well-known least-mean-squares algorithm by an adaptation circuitry (not shown in <cross-reference target="DRAWINGS">FIG. 29A</cross-reference>) After training, the coefficients C<highlight><subscript>i </subscript></highlight>converge to stable values. The FIR filter includes a set of delay elements D<highlight><subscript>1</subscript></highlight>, conventionally denoted by z<highlight><superscript>&minus;1 </superscript></highlight>in <cross-reference target="DRAWINGS">FIG. 29A</cross-reference>. The number of delay elements D<highlight><subscript>i </subscript></highlight>determines the order of the FIR filter. The output y(n), i.e., the filter output at time instant n, is a function of the input at time instant n and of the past inputs at time instants n&minus;1 through n-(N&minus;1), and is expressed as:  
<math-cwu id="MATH-US-00001">
<number>1</number>
<math>
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>y</mi>
          <mo>&af;</mo>
          <mrow>
            <mo>(</mo>
            <mi>n</mi>
            <mo>)</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mrow>
          <munderover>
            <mo>&Sum;</mo>
            <mrow>
              <mi>i</mi>
              <mo>=</mo>
              <mn>0</mn>
            </mrow>
            <mrow>
              <mi>N</mi>
              <mo>-</mo>
              <mn>1</mn>
            </mrow>
          </munderover>
          <mo>&it;</mo>
          <mrow>
            <msub>
              <mi>C</mi>
              <mi>i</mi>
            </msub>
            <mo>&it;</mo>
            <mrow>
              <mi>x</mi>
              <mo>&af;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mi>n</mi>
                  <mo>-</mo>
                  <mi>i</mi>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>1</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
<mathematica-file id="MATHEMATICA-00001" file="US20030002575A1-20030102-M00001.NB"/>
<image id="EMI-M00001" wi="216.027" he="24.97635" file="US20030002575A1-20030102-M00001.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0239" lvl="7"><number>&lsqb;0239&rsqb;</number> where x(n&minus;i) denotes the input at time instant n&minus;i, and N denotes the number of taps. The output y(n), as shown in Equation (1), is a weighted sum of the input data x(n&minus;i), with i&equals;0, . . . , N&minus;1. The coefficients C<highlight><subscript>i </subscript></highlight>act as the weighting factors on the input data. If a coefficient C<highlight><subscript>i </subscript></highlight>has a very small absolute value, relative to the values of other coefficients, then the contribution of the corresponding input data x(n&minus;i) to the value of y(n) is relatively insignificant. </paragraph>
<paragraph id="P-0240" lvl="0"><number>&lsqb;0240&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29B</cross-reference> is an equivalent structure of the filter shown in <cross-reference target="DRAWINGS">FIG. 29A</cross-reference>. The two structures in <cross-reference target="DRAWINGS">FIGS. 29A and 29B</cross-reference> provide the same filter transfer function, but differ in certain performance characteristics. The difference is due to the placement of the delay elements D<highlight><subscript>i</subscript></highlight>, i&equals;1, . . . , N&minus;1 (N&equals;9 in <cross-reference target="DRAWINGS">FIGS. 29A, 29B</cross-reference>). If all the delay elements are placed in the input path P<highlight><subscript>in</subscript></highlight>, as in the well-known direct form of the FIR filter, then the registers that are used to implement the delay elements are small, need only to be of the same size as the input data x(n). If all the delay elements are placed on the output path P<highlight><subscript>out</subscript></highlight>, as in the well-known transposed form of the FIR filter, then the registers used as the delay elements must have more bits in order to hold the largest possible sum of products C<highlight><subscript>i</subscript></highlight>*x(n&minus;i). Large registers cost more and consume more power than small registers. Thus, the advantage of placing the delay elements on the input path instead of the output path is that fewer register bits are required. However, the larger the number of the delay elements on the input path, the lower the operating speed of the filter is. </paragraph>
<paragraph id="P-0241" lvl="0"><number>&lsqb;0241&rsqb;</number> If the propagation delay from the input of the filter to the last tap exceeds the required clock period, then the filter is not usable. To break the long propagation delay, that would occur if all the delay elements were placed on the input path P<highlight><subscript>in</subscript></highlight>, into small delay intervals, some of the delay elements are placed on the output path P<highlight><subscript>out</subscript></highlight>, at regular intervals, as shown in the filter structures in <cross-reference target="DRAWINGS">FIGS. 29A and 29B</cross-reference>. The structure in <cross-reference target="DRAWINGS">FIG. 29</cross-reference>B, which has a &ldquo;two-to-one&rdquo; split of delay elements between the input path and the output path, can operate at a higher clock speed than the structure in <cross-reference target="DRAWINGS">FIG. 29</cross-reference>A, which has a &ldquo;three-to-one&rdquo; split. Computational results show that both of these structures are acceptable for use in a high-speed system such as the gigabit transceiver. </paragraph>
<paragraph id="P-0242" lvl="0"><number>&lsqb;0242&rsqb;</number> The taps of the adaptive FIR filters used in the gigabit transceiver can be switched from an active state to an inactive state. <cross-reference target="DRAWINGS">FIG. 29C</cross-reference> shows a modification to the structure of <cross-reference target="DRAWINGS">FIG. 29B</cross-reference> to bypass a deactivated tap. </paragraph>
<paragraph id="P-0243" lvl="0"><number>&lsqb;0243&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 29</cross-reference>C, the filter structure includes a bypass circuit for each adder A<highlight><subscript>i</subscript></highlight>, i&equals;0, . . . , N&minus;1. Each bypass circuit includes a gate G<highlight><subscript>i </subscript></highlight>indicated as an AND gate, and a multiplexer U<highlight><subscript>i</subscript></highlight>. Also associated with each bypass circuit is a control signal S<highlight><subscript>i </subscript></highlight>which indicates the active or inactive state of the tap having the coefficient C<highlight><subscript>i </subscript></highlight>and the adder A<highlight><subscript>i</subscript></highlight>. S<highlight><subscript>i </subscript></highlight>is set equal to one if the tap is intended to be active, and set equal to zero if the tap is intended to be inactive. When S<highlight><subscript>i</subscript></highlight>&equals;1, the output of any arbitrarily chosen gate G<highlight><subscript>i </subscript></highlight>is equal to the data signal at the input of that gate G<highlight><subscript>i</subscript></highlight>. At the corresponding multiplexer U<highlight><subscript>i</subscript></highlight>, in the case where S<highlight><subscript>i</subscript></highlight>&equals;1, only the output signal from the adder A<highlight><subscript>i </subscript></highlight>is outputted by the multiplexer. In the case where S<highlight><subscript>i</subscript></highlight>&equals;0, the output of gate G<highlight><subscript>i </subscript></highlight>is zero, and the data signal at the input of gate G<highlight><subscript>i </subscript></highlight>flows to the multiplexer U<highlight><subscript>i </subscript></highlight>via the corresponding bypass connection B<highlight><subscript>i</subscript></highlight>, bypassing the adder A<highlight><subscript>i</subscript></highlight>. At the multiplexer U<highlight><subscript>i</subscript></highlight>, due to S<highlight><subscript>i</subscript></highlight>&equals;0, only the data signal from the bypass connection B<highlight><subscript>i </subscript></highlight>is outputted. </paragraph>
<paragraph id="P-0244" lvl="0"><number>&lsqb;0244&rsqb;</number> The foregoing is only one exemplary implementation of a filter configuration wherein taps can be switched between active and inactive states. An alternative implementation is one where the multipliers M<highlight><subscript>i </subscript></highlight>coupled to receive filter coefficients from associated coefficient registers are able to be switched between active and inactive states. </paragraph>
<paragraph id="P-0245" lvl="0"><number>&lsqb;0245&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29D</cross-reference> is a semi-schematic block diagram of a multiplier <highlight><bold>2900</bold></highlight>, such as might be associated with each tap coefficient. The multiplier <highlight><bold>2900</bold></highlight> is configured to receive a coefficient word, from a corresponding coefficient register. The coefficient word is received in a multiplexer circuit <highlight><bold>2902</bold></highlight>, which receives the coefficient in two configurations: a first &ldquo;raw&rdquo; configuration taken directly from the coefficient register, and a second &ldquo;times 2&rdquo; configuration taken from the register but shifted one position to the left. The second coefficient configuration, then, represents the &ldquo;raw&rdquo; value multiplied by two. Since the second coefficient configuration is a shifted one and, necessarily contains one fewer bit than the &ldquo;raw&rdquo; coefficient, the &ldquo;times two&rdquo; coefficient set is padded by the bit value 0 (this is done by tying the least significant bit to V<highlight><subscript>SS</subscript></highlight>, which is ground). This is a particularly efficient implementation of a multiplier which takes advantage of the fact that the symbols can only have the values &lcub;&minus;2, &minus;1, 0, &plus;1, &plus;2&rcub;. The symbols are represented by three bits in sign-magnitude representation, with bit <highlight><bold>2</bold></highlight> indicating the sign (&plus; or &minus;). </paragraph>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> A select OR gate <highlight><bold>2904</bold></highlight> &ldquo;ORs&rdquo; an OFF signal with the value of symbol bit <highlight><bold>0</bold></highlight> to select which coefficient representation is selected to pass through the multiplexer <highlight><bold>2902</bold></highlight>. When the value of symbol bit <highlight><bold>0</bold></highlight> is 1, the &ldquo;raw&rdquo; coefficient, representing either &minus;1, 0, &plus;1 is selected. When OFF is equal to logical 1, the same condition applies. The coefficient selected by multiplexer <highlight><bold>2902</bold></highlight> is directed to one input of an XOR gate where it is exclusively &ldquo;ORed&rdquo; with an output signal from a select AND gate <highlight><bold>2908</bold></highlight>. The AND gate <highlight><bold>2908</bold></highlight> &ldquo;ANDs&rdquo; an inverted OFF signal with the symbol bit <highlight><bold>2</bold></highlight> value. When OFF is logical 0, i.e., inverted OFF is logical 1, and when symbol bit <highlight><bold>2</bold></highlight> is 1, the XOR functions to designate that the sign of the coefficient is negative. It should be understood that the XOR is configured as a stack (of 10 individual XOR gates), and that manipulation of the carry bit determines the sign of the coefficients. </paragraph>
<paragraph id="P-0247" lvl="0"><number>&lsqb;0247&rsqb;</number> The signed coefficient is directed to an additional AND gate <highlight><bold>2910</bold></highlight>, where it is &ldquo;ANDed&rdquo; with the output of a second select AND gate <highlight><bold>2912</bold></highlight>. The output of second select AND gate <highlight><bold>2912</bold></highlight> is developed by &ldquo;ANDing&rdquo; the inverted OFF signal with the &ldquo;ORed&rdquo; result between symbol bits <highlight><bold>0</bold></highlight>, <highlight><bold>1</bold></highlight> and <highlight><bold>2</bold></highlight>. The effective function of OR gate <highlight><bold>2914</bold></highlight> is to differentiate between the symbol zero value and the other symbol values. In effect, OR gate <highlight><bold>2914</bold></highlight> is a symbol &lcub;<highlight><bold>0</bold></highlight>&rcub; detect circuit. </paragraph>
<paragraph id="P-0248" lvl="0"><number>&lsqb;0248&rsqb;</number> Tap disablement is a function of the OFF signal value. When OFF is logical 1, the multiplexer is set to select &ldquo;one&rdquo;, i.e., the &ldquo;raw&rdquo; coefficient. When OFF equal to logical 1, inverted OFF is logical 0, causing the first and second select AND gates <highlight><bold>2908</bold></highlight> and <highlight><bold>2912</bold></highlight> to output a zero regardless of the value of the symbol bit input. Since the output of AND gate <highlight><bold>2912</bold></highlight> is zero, the AND gate stack <highlight><bold>2910</bold></highlight> also outputs a zero, which is directed to a corresponding tap adder A<highlight><subscript>i </subscript></highlight>in the output path of the adaptive filter (<cross-reference target="DRAWINGS">FIGS. 29A, 29B</cross-reference> or <highlight><bold>29</bold></highlight>C). Adding a zero requires no computation and the tap is thus effectively deactivated. </paragraph>
<paragraph id="P-0249" lvl="0"><number>&lsqb;0249&rsqb;</number> The underlying reason for ORing the OFF signal in the OR gate <highlight><bold>2904</bold></highlight> and for ANDing the inverse OFF signal in the AND gate <highlight><bold>2908</bold></highlight> is to ensure that no transitions take place inside the multiplier when the tap is deactivated. Without the OFF signal as input to the OR gate <highlight><bold>2904</bold></highlight>, the select input to the multiplexer <highlight><bold>2902</bold></highlight> will toggle depending on the value of the symbol bit <highlight><bold>0</bold></highlight>. Without the inverse OFF signal as input to the AND gate <highlight><bold>2908</bold></highlight>, one of the two inputs to the XOR <highlight><bold>2906</bold></highlight> will toggle depending on the value of the symbol bit <highlight><bold>2</bold></highlight>. This toggling, or transition, would dissipate power. The reason for ANDing the inverse OFF signal in the AND gate <highlight><bold>2912</bold></highlight> is to ensure that the multiplier output (which is the output of AND gate <highlight><bold>2910</bold></highlight>) is zero when the tap is deactivated. </paragraph>
<paragraph id="P-0250" lvl="0"><number>&lsqb;0250&rsqb;</number> Referring back to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the adaptive FIR filters used as the echo canceller <highlight><bold>232</bold></highlight> and the three NEXT cancellers <highlight><bold>229</bold></highlight>, <highlight><bold>230</bold></highlight> and <highlight><bold>231</bold></highlight>, require large numbers of taps to be effective as cancellers for a wide range of twisted pairs of cables. Echo/NEXT responses differ for different cables, and require different taps in the cancellers to model them. Therefore, cancellers are built with enough taps to provide adequate cancellation with the worst-case expected cable responses. For example, in the illustrated embodiment of the gigabit transceiver of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, each echo canceller has one hundred ninety two (192) taps, and each NEXT canceller has thirty six (36) taps (it is noted that there is also a total of 132 taps in the DFE which are always active). Since there are four echo cancellers (one per constituent transceiver) and twelve NEXT cancellers (three per constituent transceiver) in the gigabit transceiver, the total number of taps that can be activated or deactivated in the gigabit transceiver is twelve hundred (1200). When active, each of these taps consumes a small amount of power. Due to their large number, if all of the taps are active at the same time, their individual power consumption values will sum to significantly large total power consumption figure. This power consumption, if not regulated, generally causes a high degree of localized heating in an integrated circuit; often resulting in reliability issues, skewed circuit performance and, in some cases, catastrophic device failure. </paragraph>
<paragraph id="P-0251" lvl="0"><number>&lsqb;0251&rsqb;</number> Regulation of this power consumption is possible since not all of the taps are required to be active on any given channel at any given time. The taps that are not required to be active are the ones that do not significantly contribute to the performance of the system. However, which taps are not required to be active at a given time is not known a priori. Such unnecessary taps can become needed at a different time due to dynamic changes in the cable response. The present invention dynamically determines which, if any, taps are unnecessary for adequate performance in a particular application, and deactivates them. The present invention also re-activates any previously deactivated taps that subsequently become necessary, due to changes in the cable response, for system performance improvement. As applied to the adaptive filters, the method of the present invention might be characterized as a tap power regulation method. </paragraph>
<paragraph id="P-0252" lvl="0"><number>&lsqb;0252&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is a flowchart of a first exemplary embodiment of a method for implementing principles of the present invention. A specified error and a specified power are provided. They may be specified by a user. The specified power represents the maximum power consumption that is allowed. If no power is specified, it is assumed to be infinite. The specified error represents the maximum degradation of the system performance that is allowed and is preferably expressed as a mean squared error (MSE). Since the signal power is constant, the MSE corresponds to a ratio of mean squared error to signal(MSE/signal)usually expressed in decibels (dB). </paragraph>
<paragraph id="P-0253" lvl="0"><number>&lsqb;0253&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 30</cross-reference>, before the start of process <highlight><bold>3000</bold></highlight>, no coefficient is active. Upon start (block <highlight><bold>3002</bold></highlight>), process <highlight><bold>3000</bold></highlight> initializes a threshold to a value (block <highlight><bold>3004</bold></highlight>). This initial value of the threshold can result from a simulation test, or can be equal to the minimum absolute value of a tap coefficient (as known from past experiments). This value is not critical as long as it is sufficiently low to avoid a large degradation of the system performance. The taps in a first block are activated (block <highlight><bold>3006</bold></highlight>). The size of this first block, i.e., the number of taps in the first block, depends on the application. In one application, this number is <highlight><bold>120</bold></highlight>. The coefficients of the active taps are trained with the LMS algorithm until convergence (block <highlight><bold>3008</bold></highlight>). </paragraph>
<paragraph id="P-0254" lvl="0"><number>&lsqb;0254&rsqb;</number> The absolute values of the active tap coefficients are compared with the threshold (block <highlight><bold>3010</bold></highlight>). The taps whose absolute values are less than the threshold are deactivated (block <highlight><bold>3012</bold></highlight>). An error metric, typically a mean squared error (MSE) corresponding to a ratio of mean squared error to signal, and a power metric are computed (block <highlight><bold>3014</bold></highlight>). Process <highlight><bold>3000</bold></highlight> then checks whether a first test is satisfied (block <highlight><bold>3016</bold></highlight>). In the first embodiment of the invention, this first test is satisfied when the error metric is greater than the specified error and the power metric is smaller than the specified maximum power. If the error metric is greater than the specified error, this implies that the threshold has been set too high, causing too many taps to be deactivated, and this has degraded the system performance by more than the specified amount. If the first test is satisfied, then the threshold is decreased (block <highlight><bold>3018</bold></highlight>), and all the taps in the block being considered are activated again (block <highlight><bold>3006</bold></highlight>) and process <highlight><bold>3000</bold></highlight> proceeds with a lower threshold. Otherwise, process <highlight><bold>3000</bold></highlight> determines whether all the taps of the filter have been considered (block <highlight><bold>3020</bold></highlight>). If not, then the next block of taps is considered, and this new block of taps is activated (block <highlight><bold>3006</bold></highlight>). A typical size of this next block of taps is <highlight><bold>20</bold></highlight>. All of the active tap coefficients, including the new activated tap coefficients, are converged with an LMS algorithm (block <highlight><bold>3008</bold></highlight>) and process <highlight><bold>3000</bold></highlight> proceeds as described above. </paragraph>
<paragraph id="P-0255" lvl="0"><number>&lsqb;0255&rsqb;</number> If all of the taps have been considered, then process <highlight><bold>3000</bold></highlight> checks whether a second test is satisfied (block <highlight><bold>3024</bold></highlight>). In the first embodiment of the invention, the second test is satisfied when the error metric is smaller than the specified error or the power metric is larger than the specified power. If the error metric is smaller than the specified error, this implies that it is possible to increase the threshold to deactivate more taps and still meet the system performance requirement. If the power metric is greater than the specified power, then the threshold must be increased to lower the power consumption, regardless of the system performance requirement. If the second test is satisfied, then the threshold is increased (block <highlight><bold>3026</bold></highlight>) and the active taps are compared with the updated threshold (block <highlight><bold>3010</bold></highlight>). Otherwise, process <highlight><bold>3000</bold></highlight> turns off the power on the taps that are subsequent to the tap which has the last highest ordered active coefficient (block <highlight><bold>3028</bold></highlight>). In other words, if C<highlight><subscript>k </subscript></highlight>is the last highest ordered active coefficient, then all the taps that have the deactivated coefficients C<highlight><subscript>k&plus;1 </subscript></highlight>through C<highlight><subscript>N&minus;1 </subscript></highlight>are powered down. More details on the power down function in block <highlight><bold>3028</bold></highlight> are provided below. Process <highlight><bold>3000</bold></highlight> then terminates (block <highlight><bold>3030</bold></highlight>). </paragraph>
<paragraph id="P-0256" lvl="0"><number>&lsqb;0256&rsqb;</number> When process <highlight><bold>3000</bold></highlight> is restarted (block <highlight><bold>3032</bold></highlight>), a block of taps is activated (block <highlight><bold>3006</bold></highlight>). Upon restart of process <highlight><bold>3000</bold></highlight>, the threshold is at its last value from the last application of process <highlight><bold>3000</bold></highlight>. The coefficients that were previously deactivated are activated with their values remaining at their last values before deactivation. Then process <highlight><bold>3000</bold></highlight> proceeds as described above. </paragraph>
<paragraph id="P-0257" lvl="0"><number>&lsqb;0257&rsqb;</number> Periodic restart of process <highlight><bold>3000</bold></highlight> is desirable for the following reason. In some cases, the echo/NEXT path impulse response may change during normal operation. For example, this change may be a result of temperature changes. To correct for this change, process <highlight><bold>3000</bold></highlight> periodically restarts to turn on the deactivated coefficients in a sequential manner (block <highlight><bold>3006</bold></highlight>), re-converges the coefficients (block <highlight><bold>3008</bold></highlight>), and determines whether the previously deactivated coefficients are still below the threshold (block <highlight><bold>3010</bold></highlight>). If the previously deactivated coefficients are now converged to values above the threshold, they remain active, otherwise they are deactivated (block <highlight><bold>3012</bold></highlight>). Any of the initially active coefficients that now fall below the threshold are also deactivated (block <highlight><bold>3012</bold></highlight>). </paragraph>
<paragraph id="P-0258" lvl="0"><number>&lsqb;0258&rsqb;</number> The underlying reason for activating the taps a few at a time (block <highlight><bold>3006</bold></highlight> through <highlight><bold>3020</bold></highlight>) is the following. When the total number of taps is very large, the power consumption can be very large during the initial convergence transient. This peak power consumption is very undesirable, and is unaffected by the tap power regulation process (which can only reduce the average power consumption of the filters). One solution to this peak power consumption problem is to activate and converge the taps in an initial small block of taps (blocks <highlight><bold>3006</bold></highlight>, <highlight><bold>3008</bold></highlight>), deactivate some of the converged taps according to a criterion (block <highlight><bold>3010</bold></highlight> through block <highlight><bold>3020</bold></highlight>), activate a next block of taps (block <highlight><bold>3006</bold></highlight>), converge all the active taps including the newly activated taps (block <highlight><bold>3008</bold></highlight>), and repeat the process of deactivation, activation and convergence until all the taps of the filter are processed. </paragraph>
<paragraph id="P-0259" lvl="0"><number>&lsqb;0259&rsqb;</number> Power-down block <highlight><bold>3028</bold></highlight>, which is optional, of process <highlight><bold>3000</bold></highlight> helps further reduce the power consumption of the adaptive filters. Without block <highlight><bold>3028</bold></highlight>, although the tap power regulating process <highlight><bold>3000</bold></highlight> already achieves a large reduction of the power consumption by reducing the number of active taps, there is still a significant amount of power dissipated by the long delay line of the adaptive filter. By delay line, it is meant the line connecting the delay elements together. Turning a tap off does not necessarily affect the configuration of the delay line. However, in many practical cases, many of the deactivated taps are located contiguously at the highest-ordered end of the filter. An example of such a case is when the cable is short and well behaved. In such cases, the portion of the delay line associated with these contiguously deactivated taps can be completely powered down without affecting the transfer function of the filter. This powering down contributes an additional reduction of power dissipation of the filter. In one exemplary application, this additional reduction of power dissipation is approximately 300 milliwatts (mW) per echo canceller and 70 mW per NEXT canceller, resulting in a power saving of 2.04 Watts for the gigabit transceiver. </paragraph>
<paragraph id="P-0260" lvl="0"><number>&lsqb;0260&rsqb;</number> An exemplary implementation of block <highlight><bold>3028</bold></highlight> is as follows. An additional bit, called the delay line enable bit, is associated with each tap of a filter. This bit is initially ON. When process <highlight><bold>3000</bold></highlight> reaches block <highlight><bold>3028</bold></highlight>, all of the taps are scanned for active status starting from the highest-ordered end of the filter, i.e., the tap including the coefficient C<highlight><subscript>N&minus;1</subscript></highlight>, towards the lowest-ordered end, i.e., the tap including the coefficient C<highlight><subscript>0</subscript></highlight>. During scanning, the delay line enable bits of the scanned inactive taps are switched OFF until the first highest-ordered active tap is found. At this point, the scanning for tap active status terminates. Then all the delay line sections corresponding to the taps whose delay line enable bits are OFF are powered down. </paragraph>
<paragraph id="P-0261" lvl="0"><number>&lsqb;0261&rsqb;</number> Activation block <highlight><bold>3006</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is applied sequentially to the echo canceller <highlight><bold>232</bold></highlight> and the three NEXT cancellers <highlight><bold>229</bold></highlight>, <highlight><bold>230</bold></highlight> and <highlight><bold>231</bold></highlight> (of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). <cross-reference target="DRAWINGS">FIG. 31</cross-reference> illustrates the flowchart of one exemplary embodiment of the activation block <highlight><bold>3006</bold></highlight>. </paragraph>
<paragraph id="P-0262" lvl="0"><number>&lsqb;0262&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 31</cross-reference>, upon start (block <highlight><bold>3102</bold></highlight>), the process <highlight><bold>3006</bold></highlight> sets the filter number to zero (block <highlight><bold>3104</bold></highlight>) to operate on the echo canceller. The filter number zero represents the echo canceller, while filter numbers <highlight><bold>1</bold></highlight> through <highlight><bold>3</bold></highlight> represent the three NEXT cancellers, respectively. Process <highlight><bold>3006</bold></highlight> then sets the address and the end equal to the start address and the end address of the block of taps, respectively (block <highlight><bold>3106</bold></highlight>). The modules TapOn and Tap PowerUp are invoked with the address as argument (block <highlight><bold>3108</bold></highlight>). The module TapOn turns on the circuitry of the tap having the specified address. This circuitry includes a 1-bit storage to indicate the active status of the tap. When the tap is turned on, the tap is included in the computation of the output y(n) of the filter (referring to Equation (1)), and in the adaptation process, i.e., the training and convergence of the filter coefficients. The module TapPowerUp turns the power on for the delay line section associated with the tap having the specified address. Process <highlight><bold>3006</bold></highlight> then determines whether the address is equal to the end. If it is not, then the address is increased by one (block <highlight><bold>3112</bold></highlight>), to consider the next tap of the filter. If the address has reached the end address of the block of taps, then process <highlight><bold>3006</bold></highlight> determines whether filter number is equal to 3, i.e., whether all the filters in the transceiver have been considered (block <highlight><bold>3114</bold></highlight>). If not, then filter number is increased by one, so that the next filter is considered. If process <highlight><bold>3006</bold></highlight> has operated on all the filters, then process <highlight><bold>3006</bold></highlight> sets the start address equal to the old end address, and sets the new end address equal to the sum of the old end address and the block size, the block size being the size of the next block of taps to be activated (block <highlight><bold>3118</bold></highlight>). Process <highlight><bold>3006</bold></highlight> then terminates (block <highlight><bold>3120</bold></highlight>). </paragraph>
<paragraph id="P-0263" lvl="0"><number>&lsqb;0263&rsqb;</number> Deactivation block <highlight><bold>3012</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is applied sequentially to the echo canceller <highlight><bold>232</bold></highlight> and the three NEXT cancellers <highlight><bold>230</bold></highlight> (of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). <cross-reference target="DRAWINGS">FIG. 32</cross-reference> illustrates the flowchart of one embodiment of the deactivation block <highlight><bold>3012</bold></highlight>. </paragraph>
<paragraph id="P-0264" lvl="0"><number>&lsqb;0264&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 32</cross-reference>, upon start (block <highlight><bold>3202</bold></highlight>), the process <highlight><bold>3012</bold></highlight> sets the filter number to zero (block <highlight><bold>3204</bold></highlight>) to operate on the echo canceller. The filter number zero represents the echo canceller, while filter numbers <highlight><bold>1</bold></highlight> through <highlight><bold>3</bold></highlight> represent the three NEXT cancellers, respectively. Process <highlight><bold>3012</bold></highlight> then sets the address equal to zero and the end equal to the length of the filter minus 1 (block <highlight><bold>3206</bold></highlight>). If the absolute value of the tap coefficient at the specified address is less than T, the threshold, then the module TapOn is invoked to turn off the circuitry associated with the tap having the specified address (block <highlight><bold>3208</bold></highlight>). When the tap is turned off, the tap is removed from the computation of the output y(n) of the filter (referring to Equation (1)), and from the adaptation process, i.e., the training and convergence of the filter coefficients. Process <highlight><bold>3012</bold></highlight> then determines whether the address is equal to the end. If it is not, then the tap address is increased by one (block <highlight><bold>3212</bold></highlight>), to consider the next tap of the filter. If the address has reached the end of the filter taps, then process <highlight><bold>3012</bold></highlight> determines whether filter number is equal to 3, i.e., whether all the filters in the transceiver have been considered (block <highlight><bold>3214</bold></highlight>). If not, then filter number is increased by one, so that the next filter is considered (block <highlight><bold>3216</bold></highlight>). If process <highlight><bold>3012</bold></highlight> has operated on all the filters, then process <highlight><bold>3012</bold></highlight> terminates (block <highlight><bold>3218</bold></highlight>). </paragraph>
<paragraph id="P-0265" lvl="0"><number>&lsqb;0265&rsqb;</number> Error-computing block <highlight><bold>3014</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is applied sequentially to the echo canceller <highlight><bold>232</bold></highlight> and the three NEXT cancellers <highlight><bold>230</bold></highlight> (of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). <cross-reference target="DRAWINGS">FIG. 33</cross-reference> illustrates the flowchart of one embodiment of the error-computing block <highlight><bold>3014</bold></highlight>. </paragraph>
<paragraph id="P-0266" lvl="0"><number>&lsqb;0266&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 33</cross-reference>, upon start (block <highlight><bold>3302</bold></highlight>), the process <highlight><bold>3014</bold></highlight> sets the filter number to zero (block <highlight><bold>3304</bold></highlight>) to operate on the echo canceller, and initializes the error metric MSE, the power metric and the flag. The filter number zero represents the echo canceller, while filter numbers <highlight><bold>1</bold></highlight> through <highlight><bold>3</bold></highlight> represent the three NEXT cancellers, respectively. Process <highlight><bold>3014</bold></highlight> then sets the address equal to the length of the filter minus 1 (block <highlight><bold>3306</bold></highlight>) to scan the filter taps from the highest ordered end. The reason for using this scanning order and the flag is to ensure that the taps that will be powered down in block <highlight><bold>3028</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 30</cross-reference> will be excluded from the computation of the power metric. A deactivated tap still consumes a small amount of power if it is not actually powered down because of the associated delay line section. To compute the new power metric such that it can be used to accurately regulate the power consumption of the system, the process <highlight><bold>3014</bold></highlight> must exclude from the computation the power consumption of a deactivated tap that will be powered down. </paragraph>
<paragraph id="P-0267" lvl="0"><number>&lsqb;0267&rsqb;</number> If TapOn&lsqb;addr&rsqb; is zero, i.e., if the tap at the specified address is turned off, then process <highlight><bold>3014</bold></highlight> computes the new error metric MSE by adding to the previous value of MSE the squared value of the tap coefficient at the specified address. Otherwise, if the tap at the specified address is on, then the flag is set to 1. If the flag is 1, then process <highlight><bold>3014</bold></highlight> computes the new power metric by adding to the previous value of the power metric the estimated power consumption TapPower of the tap having the specified address (block <highlight><bold>3308</bold></highlight>). TapPower is chosen from precomputed values stored in a look-up table. These precomputed values are functions of the size of the coefficients and of the active or inactive status of the coefficient. </paragraph>
<paragraph id="P-0268" lvl="0"><number>&lsqb;0268&rsqb;</number> Process <highlight><bold>3014</bold></highlight> determines whether the address is 0 (block <highlight><bold>3310</bold></highlight>). If it is not, then the tap address is decreased by one (block <highlight><bold>3312</bold></highlight>), to consider the next tap of the filter. If the address has reached 0, then process <highlight><bold>3014</bold></highlight> determines whether filter number is equal to 3, i.e., whether all the filters in the transceiver have been considered (block <highlight><bold>3314</bold></highlight>). If not, then filter number is increased by one, so that the next filter is considered and the flag is reset to 0 (block <highlight><bold>3316</bold></highlight>). If process <highlight><bold>3014</bold></highlight> has operated on all the filters, then process <highlight><bold>3014</bold></highlight> terminates (block <highlight><bold>3318</bold></highlight>). </paragraph>
<paragraph id="P-0269" lvl="0"><number>&lsqb;0269&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 33</cross-reference>, the error metric MSE is computed by summing the squared values of the deactivated tap coefficients. It is noted that the error metric can be computed differently, such as deriving it from the error component <highlight><bold>42</bold></highlight>A of the 4-D error signal <highlight><bold>42</bold></highlight> outputted from the trellis decoder <highlight><bold>38</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). </paragraph>
<paragraph id="P-0270" lvl="0"><number>&lsqb;0270&rsqb;</number> The MSE as measured from the error output <highlight><bold>42</bold></highlight> of the trellis decoder <highlight><bold>38</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) will be, hereinafter, referred to as the true MSE. The MSE as measured by summing the squared values of the coefficients of the deactivated taps will be, hereinafter, referred as the proxy MSE. </paragraph>
<paragraph id="P-0271" lvl="0"><number>&lsqb;0271&rsqb;</number> There is an advantage in using the proxy MSE, instead of the true MSE, as the error metric. Since the proxy MSE is based solely on the coefficient values of the deactivated taps, it represents only one component of the noise signal of the gigabit transceiver (other components may be due to quantization noise, external noise, etc.). Therefore, the proxy MSE is unaffected when large external noise, other than echo or NEXT noise, severely affects the noise signal, hence the noise to signal ratio, of the gigabit transceiver. For this reason, the proxy MSE is preferred as the error metric. </paragraph>
<paragraph id="P-0272" lvl="0"><number>&lsqb;0272&rsqb;</number> If the true MSE is used as the error metric, then the specified error is preferably set at a value corresponding to a noise to signal ratio of about &minus;22 dB, because, although theoretically, a true MSE corresponding to a noise to signal ratio of &minus;19 dB is acceptable for the gigabit transceiver, in practice, it is difficult to obtain adequate system performance at that level. If the proxy MSE is used as the error metric, then the specified error is preferably set at a value corresponding to a noise to signal ratio of about &minus;24 dB. </paragraph>
<paragraph id="P-0273" lvl="0"><number>&lsqb;0273&rsqb;</number> Power-down block <highlight><bold>3028</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is applied sequentially to the echo canceller <highlight><bold>232</bold></highlight> and the three NEXT cancellers <highlight><bold>230</bold></highlight> (of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). <cross-reference target="DRAWINGS">FIG. 34</cross-reference> illustrates the flowchart of one embodiment of the power-down block <highlight><bold>3028</bold></highlight>. </paragraph>
<paragraph id="P-0274" lvl="0"><number>&lsqb;0274&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 34</cross-reference>, upon start (block <highlight><bold>3402</bold></highlight>), the process <highlight><bold>3028</bold></highlight> sets the filter number to zero (block <highlight><bold>3404</bold></highlight>) to operate on the echo canceller first. The filter number zero represents the echo canceller, while filter numbers <highlight><bold>1</bold></highlight> through <highlight><bold>3</bold></highlight> represent the three NEXT cancellers, respectively. Process <highlight><bold>3028</bold></highlight> then sets the address equal to the length of the filter minus 1 and the end equal to zero (block <highlight><bold>3406</bold></highlight>). This means that the process <highlight><bold>3028</bold></highlight> starts from the highest ordered end of the filter towards the lowest ordered end. </paragraph>
<paragraph id="P-0275" lvl="0"><number>&lsqb;0275&rsqb;</number> Process <highlight><bold>3028</bold></highlight> determines whether TapOn&lsqb;addr&rsqb; is 1, i.e., whether the tap at the specified address is active (block <highlight><bold>3408</bold></highlight>). If the tap is not active, then process <highlight><bold>3028</bold></highlight> turns off the power to the tap (block <highlight><bold>3410</bold></highlight>), then checks whether the address is equal to the end (block <highlight><bold>3412</bold></highlight>). If the address is not equal to the end, the address is decreased by 1 to consider the next lower ordered tap (block <highlight><bold>3414</bold></highlight>). If the address has reached the end, then process <highlight><bold>3028</bold></highlight> determines whether the filter number is 3, i.e., whether all the 4 filters have been considered (block <highlight><bold>3416</bold></highlight>). If the filter is not the last one, then filter number is increased by 1 so that the next filter is considered (block <highlight><bold>3418</bold></highlight>). Otherwise, process <highlight><bold>3028</bold></highlight> terminates (block <highlight><bold>3420</bold></highlight>). </paragraph>
<paragraph id="P-0276" lvl="0"><number>&lsqb;0276&rsqb;</number> If TapOn&lsqb;addr&rsqb; is 1 (block <highlight><bold>3408</bold></highlight>), i.e., if the tap at the specified address is active, then process <highlight><bold>3028</bold></highlight> stops scanning the taps in the filter being considered, and checks the next filter, if any (block <highlight><bold>3416</bold></highlight>). Process <highlight><bold>3028</bold></highlight> then proceeds as described above. </paragraph>
<paragraph id="P-0277" lvl="0"><number>&lsqb;0277&rsqb;</number> The process <highlight><bold>3000</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is applied to the echo and NEXT cancellers of each of the 4 constituent transceivers of the gigabit transceiver <highlight><bold>102</bold></highlight> depicted in <cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>. It is important to note that, if process <highlight><bold>3000</bold></highlight> is applied simultaneously to the 4 constituent transceivers, there will be a power demand surge in the gigabit transceiver <highlight><bold>102</bold></highlight>. In order to avoid such a power demand surge, process <highlight><bold>3000</bold></highlight> is applied to the 4 transceivers in a time-staggered manner. </paragraph>
<paragraph id="P-0278" lvl="0"><number>&lsqb;0278&rsqb;</number> In a second embodiment of the present invention, two different specified errors are used in order to avoid possible limit cycle oscillations between activation and deactivation. The flowchart of the second embodiment is substantially similar to the one shown in <cross-reference target="DRAWINGS">FIG. 30</cross-reference>. The second embodiment differs from the first embodiment by using a first specified error for the first test in block <highlight><bold>3016</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 30</cross-reference>) and a second specified error for the second test in block <highlight><bold>3024</bold></highlight>. The first specified error is substantially larger than the second specified error. The use of the two different specified errors, sufficiently distant from each other, allow the process <highlight><bold>3000</bold></highlight> to terminate when the computed error metric has a value located between the two specified errors. When just one specified error is used, as in the first embodiment, the computed error metric may jump back and forth around the specified error, causing the process <highlight><bold>3000</bold></highlight> to oscillate between activation and deactivation. </paragraph>
<paragraph id="P-0279" lvl="0"><number>&lsqb;0279&rsqb;</number> In a third embodiment of the present invention, the first few taps of each filter, e.g., the first 10 taps, are exempt from deactivation in order to avoid possible degradations of the system performance in the presence of jitter. The effect of jitter on these few taps is as follows. There is usually a large slew rate in these first few taps. Due to this slew rate, their numerical values could change significantly if the sampling phase of the received signal changes. In the presence of jitter, the sampling phase of the received signal can change dynamically. Thus, if some of the first few taps were insignificant for the system performance, they could become significant as the sampling phase changes. For this third embodiment, the flowchart of the deactivation process of block <highlight><bold>3012</bold></highlight> is slightly different from the one shown in <cross-reference target="DRAWINGS">FIG. 30</cross-reference>. The only modification to the flowchart of <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is to equate, in block <highlight><bold>3006</bold></highlight>, the address to K instead of 0, where K&plus;1 is the number of the first few taps exempt from deactivation. </paragraph>
<paragraph id="P-0280" lvl="0"><number>&lsqb;0280&rsqb;</number> A fourth embodiment of the present invention uses, as the error metric, the change in the true MSE instead of the true MSE. In other words, the value of &lcub;new (true MSE) &minus;old (true MSE)&rcub; is computed and used as the error metric. In the fourth embodiment, the first test in block <highlight><bold>3016</bold></highlight> is satisfied if the change in the true MSE is greater than a specified change value (e.g., a value that corresponds to a noise to signal ratio (NSR) change of 1 dB) and the power metric is smaller than the specified maximum power. The second test in block <highlight><bold>3024</bold></highlight> is satisfied if the change in the true MSE is smaller than the specified change value or the power metric is greater than the specified maximum power. For example, if the true MSE is at a value corresponding to a NSR of &minus;25 dB before the tap power regulating process is applied, and if the specified change value corresponds to a NSR change of 1 dB, then the final true MSE will be at a value corresponding a NSR of about &minus;24 dB. This fourth embodiment can be used when there is large external noise that is other than echo or NEXT noise. In such a case, the true MSE is large even before the tap power regulation process is applied. Thus, if the true MSE is used as the error metric, practically no taps will be deactivated, resulting in large power dissipation. In this situation, since the large noise is not caused by the uncancelled echo and NEXT impairments, a large number of taps could be deactivated without causing significant additional degradation to the system performance. The fourth embodiment allow these taps to be deactivated in this situation. </paragraph>
<paragraph id="P-0281" lvl="0"><number>&lsqb;0281&rsqb;</number> In a fifth embodiment, all of the taps in a filter are initially activated and converged, instead of being activated in blocks and converged in stages as in the first embodiment. The flowchart of the fifth embodiment is similar to the one of the first embodiment shown in <cross-reference target="DRAWINGS">FIG. 30</cross-reference>, except for the following two differences. The first difference is that, in the activation block <highlight><bold>3006</bold></highlight>, the block of taps is set to include all of the taps in the filter. The second difference is that the block <highlight><bold>3020</bold></highlight> is not needed. </paragraph>
<paragraph id="P-0282" lvl="0"><number>&lsqb;0282&rsqb;</number> In each of the embodiments, there are several ways of computing the error metric. The error metric can be computed as a measurement of system performance degradation caused by the filter being considered, or by the four filters in the constituent transceiver being considered, or by all the 16 filters in the four constituent transceivers of the gigabit transceiver. </paragraph>
<paragraph id="P-0283" lvl="0"><number>&lsqb;0283&rsqb;</number> When computed as a measurement of degradation caused by all 4 filters of the constituent transceiver being examined, the error metric provides a good indication of the bit error rate of that constituent transceiver. </paragraph>
<paragraph id="P-0284" lvl="0"><number>&lsqb;0284&rsqb;</number> In the case where the error metric is computed as a measurement of degradation caused by all the 16 filters in the 4 constituent transceivers of the gigabit transceiver, the power regulation process can allow the filters in one of the 4 transceivers to have larger error and compensate for this error in the filters of the other 3 transceivers. For example, if the echo/NEXT impairments in one particular transceiver are very severe and too many active taps would be needed to cancel them, then the power regulation process can allow the impairments to stay severe in this transceiver, and allocate the power resource to the other 3 transceivers instead. It is noted that, in this case, the trellis decoder <highlight><bold>38</bold></highlight> still decodes correctly since it uses signal samples from all the four transceivers in its decoding scheme. </paragraph>
<paragraph id="P-0285" lvl="0"><number>&lsqb;0285&rsqb;</number> When applied to the echo and NEXT cancellers of the gigabit transceiver, for typical channels, the power regulation process of the present invention results in a large number of taps being deactivated and the power consumption being reduced by a large factor. Simulation tests confirm this result. </paragraph>
<paragraph id="P-0286" lvl="0"><number>&lsqb;0286&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 35</cross-reference> illustrates an exemplary impulse response of the echo characteristic developed by a typical multi-pair transmission channel in response to a known impulse. <cross-reference target="DRAWINGS">FIG. 36</cross-reference> illustrates an exemplary impulse response of the near end crosstalk (NEXT) characteristics developed by a typical transmission channel in response to a similar known impulse. <cross-reference target="DRAWINGS">FIGS. 37A and 37B</cross-reference> illustrate the results of simulation programming performed to evaluate the application of tap power regulation methodologies to a local constituent transceiver and a remote constituent transceiver connected together through a transmission channel having the echo impulse response of <cross-reference target="DRAWINGS">FIG. 35</cross-reference>. </paragraph>
<paragraph id="P-0287" lvl="0"><number>&lsqb;0287&rsqb;</number> During the initial period of communication, through a process known as Auto-Negotiation, the two transceivers negotiate then agree on their respective status as Master and Slave. <cross-reference target="DRAWINGS">FIGS. 37A and 37B</cross-reference> show the MSE to signal ratio expressed in dB as a function of time, with time expressed in bauds, for the Master and Slave transceivers, respectively. Each point on the graphs in <cross-reference target="DRAWINGS">FIGS. 37A and 37B</cross-reference> is obtained by averaging the instantaneous measurements taken over 10,000 symbol periods. The error metric MSE is computed based on the error signal <highlight><bold>42</bold></highlight>A (in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>), i.e., the error as seen by the trellis decoder <highlight><bold>38</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). </paragraph>
<paragraph id="P-0288" lvl="0"><number>&lsqb;0288&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIGS. 37A and 37B</cross-reference>, during the time interval from 0 baud to about 1.2&times;10<highlight><superscript>5 </superscript></highlight>bauds, the Master trains its own echo canceller while transmitting with an independent, fixed clock. During this time interval, the Slave synchronizes to the signal transmitted by the Master, and trains its feed-forward equalizer and its timing recovery block. During the time interval from about 1.2&times;10<highlight><superscript>5 </superscript></highlight>bauds to about 2.2&times;10<highlight><superscript>5 </superscript></highlight>bauds, the Slave trains its echo canceller while transmitting. During this time interval, the Master is not transmitting, only receiving from the Slave, and trains its feed-forward equalizer and its timing recovery block to account for the delay in the channel. By the end of this time interval, the Master and Slave are synchronized with each other. </paragraph>
<paragraph id="P-0289" lvl="0"><number>&lsqb;0289&rsqb;</number> During the time interval from about 2.2&times;10<highlight><superscript>5 </superscript></highlight>bauds to about 3.2&times;10<highlight><superscript>5 </superscript></highlight>bauds, both the Master and Slave transmit and receive. During this time interval, the Master retrains its echo canceller and readjust timing. From about 3.2&times;10<highlight><superscript>5 </superscript></highlight>bauds, there is convergence of both Master and Slave echo cancellers. At about 3.6&times;10<highlight><superscript>5 </superscript></highlight>bauds, the tap power regulating process of the present invention is applied to both echo cancellers, with the specified error, i.e., the maximum acceptable system performance degradation, set at a value corresponding to a NSR of &minus;24 dB. As shown in <cross-reference target="DRAWINGS">FIGS. 37A and 37B</cross-reference>, for both local and remote transceivers, the MSE increases to and stays at this specified error corresponding to a NSR of &minus;24 dB. In this example, in each constituent transceiver, the echo canceller has initially 140 taps, and each of the three NEXT cancellers has initially 100 taps. The total number of initial taps in each constituent transceiver is 440. </paragraph>
<paragraph id="P-0290" lvl="0"><number>&lsqb;0290&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 38A and 38B</cross-reference> are graphs of the values of the tap coefficients of the echo canceller as a function of the tap number, after application of the tap power regulation process with the specified error set at values corresponding to noise to signal ratio of &minus;24 dB and &minus;26 dB, respectively. The deactivated coefficients are shown as having value zero. </paragraph>
<paragraph id="P-0291" lvl="0"><number>&lsqb;0291&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 38</cross-reference>A, the number of taps remaining active, after application of the tap power regulation process with the specified error corresponding to a NSR of &minus;24 dB, is 22. For this specified error, the remaining active taps for the three NEXT cancellers is 6, 2, and 0, respectively (not illustrated). Thus, out of a total of 440 initially active taps in the constituent transceiver, only 30 remain active after application of the process of the present invention, while a 5 dB margin is maintained for the required bit error rate. </paragraph>
<paragraph id="P-0292" lvl="0"><number>&lsqb;0292&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 38</cross-reference>B, after application of the tap power regulation process with the specified error corresponding to a NSR of &minus;26 dB, the number of taps remaining active is 47. For this specified error, the remaining active taps for the three NEXT cancellers (not illustrated) is 6, 2, and 0, respectively. Thus, out of a total of 440 initially active taps in the constituent transceiver, only 55 remain active after application of the process of the present invention, while a 7 dB margin is maintained for the required bit error rate. </paragraph>
<paragraph id="P-0293" lvl="0"><number>&lsqb;0293&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 38A and 38B</cross-reference> show that the surviving taps occur at sparse locations. This is due to the strong dependence of the echo/NEXT cancellers on the specific cable response. Since the response characteristics of any given cable making up the transmission channel are not a priori determinable, it would be impossible, in practice, to predict and statically allocate the surviving taps during the design of the echo and NEXT cancellers. Therefore, some sort of dynamic active tap identification and allocation process according to the invention offers significant power reduction benefits over conventional methodologies. </paragraph>
<paragraph id="P-0294" lvl="0"><number>&lsqb;0294&rsqb;</number> While the systems and methods of the invention have been described mainly in terms of their applicability to adaptively configuring active tap sets for high order digital filters, the dynamic power regulation methodology of the present invention can also be applied to complete computation modules of a transceiver, in cases where the computational power of such modules is not needed for a particular application. In these cases, a similar methodology applies, i.e., evaluate a signal performance metric of a signal output from a computational module against a performance threshold and, where the performance metric is greater than the threshold, power down the computational module. </paragraph>
<paragraph id="P-0295" lvl="0"><number>&lsqb;0295&rsqb;</number> This additional embodiment of the invention is particularly advantageous in cases where the transmission channel might be implemented with short (&lt;3 meters) cable lengths, resulting in the relative absence of transmission channel induced intersymbol interference (ISI). Returning momentarily to the description of the trellis decoder circuit accompanying <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, in the absence of intersymbol interference, symbols received from the deskew memory <highlight><bold>37</bold></highlight> need only be decoded by the Viterbi decoder <highlight><bold>604</bold></highlight>, and its associated modules, i.e., the path metrics module <highlight><bold>606</bold></highlight>, and the path memory module <highlight><bold>608</bold></highlight>, without resorting to a decision-feedback sequence estimation approach, as discussed previously. In this case, the dynamic power regulation process reduces the power consumption of the gigabit transceiver by deactivating and bypassing the computational modules represented by the MDFE <highlight><bold>602</bold></highlight>, the DFE <highlight><bold>612</bold></highlight> and the select logic <highlight><bold>610</bold></highlight>. Since received symbols are relatively uneffected by channel induced ISI, there is no need to develop ISI compensation for incomming signal samples prior to symbol decode, and therefore no need for ISI compensation circuitry. </paragraph>
<paragraph id="P-0296" lvl="0"><number>&lsqb;0296&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 39</cross-reference> is a simplified, semi-schematic block diagram of an exemplary trellis decoder <highlight><bold>38</bold></highlight> as it might be implemented in the case where it has been determined that there is substantially no channel induced intersymbol interference. Referring to <cross-reference target="DRAWINGS">FIG. 39</cross-reference>, the 4-D output signal <highlight><bold>37</bold></highlight> from the deskew memory <highlight><bold>36</bold></highlight> is provided directly to the Viterbi decoder <highlight><bold>604</bold></highlight>, as the Viterbi input. In accordance with the invention, it should be noted that, in the absence of intersymbol interference, only a single 4-D Viterbi input is needed in contrast to the eight state inputs required in the full ISI compensation case. </paragraph>
<paragraph id="P-0297" lvl="0"><number>&lsqb;0297&rsqb;</number> As illustrated in <cross-reference target="DRAWINGS">FIG. 39</cross-reference>, the DFE, MDFE and decoder circuitry has been replaced by a series of simple delay stages and an adder circuit, with the deskew output signal (a signal sample) directly input to the Viterbi decoder <highlight><bold>604</bold></highlight>. The deskew output signal sample is also directed through a set of three series coupled sequential delay stages <highlight><bold>3920</bold></highlight>, <highlight><bold>3922</bold></highlight> and <highlight><bold>3924</bold></highlight> and then to an adder circuit <highlight><bold>3926</bold></highlight>. Signal samples are added to the negative of the first tentative decision V<highlight><subscript>0F </subscript></highlight>output by the path memory module <highlight><bold>608</bold></highlight> in the adder circuit <highlight><bold>3926</bold></highlight> in order to develop an error term. The error term is directed through an additional delay stage <highlight><bold>3928</bold></highlight> after which the error term <highlight><bold>42</bold></highlight> might be directed to an adaptive gain stage (<highlight><bold>34</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) and timing recovery circuit (<highlight><bold>222</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). In the exemplary embodiment shown in <cross-reference target="DRAWINGS">FIG. 39</cross-reference>, the 4-D error <highlight><bold>42</bold></highlight> is computed as the delayed difference between the delayed 4-D input <highlight><bold>37</bold></highlight> and the 4-D output V<highlight><subscript>0F </subscript></highlight>of the path memory module <highlight><bold>608</bold></highlight>. The corresponding 4-D tentative decision <highlight><bold>44</bold></highlight> may be represented as nothing more than a delayed version of the 4-D output V<highlight><subscript>0F </subscript></highlight>of the path memory module <highlight><bold>608</bold></highlight>; the delay occuring in an additional delay stage <highlight><bold>3930</bold></highlight>. In the embodiment shown in <cross-reference target="DRAWINGS">FIG. 39</cross-reference>, the error and tentative decision delay elements <highlight><bold>3928</bold></highlight> and <highlight><bold>3930</bold></highlight>, respectively, are used to ensure that the error <highlight><bold>42</bold></highlight> and the tentative decision <highlight><bold>44</bold></highlight> arrive at the timing recovery block (<highlight><bold>222</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) at the same time. Depending on the design and implementation of the timing recovery block, these delay elements may not necessarily be needed in alternative embodiments. </paragraph>
<paragraph id="P-0298" lvl="0"><number>&lsqb;0298&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 40</cross-reference> illustrates yet a further embodiment of the invention which is particularly advantageous in situations where the signal-to-noise ratio is very high (as may happen with a short cable, e.g., of less than 50 meters). In such situations, the coding gain provided by the trellis code may not be needed, and adequate system performance, as indicated by the bit error rate, may be achieved without making use of this coding gain. In these situations, substantial power dissipation reductions can be achieved by disabling the trellis decode enabling features of the complex Viterbi decoder, including the Viterbi decoder block <highlight><bold>604</bold></highlight>, its associated path metric and path memory modules <highlight><bold>606</bold></highlight> and <highlight><bold>608</bold></highlight>, and a large portion of the ISI compensation circuitry including the MDFE <highlight><bold>302</bold></highlight> and the select logic <highlight><bold>610</bold></highlight>. These portions are replaced, or substituted, with a simple symbol-by-symbol decoder and a simple decision feedback equalizer to detect the received signal, instead of using the computationally complex Viterbi decoder. </paragraph>
<paragraph id="P-0299" lvl="0"><number>&lsqb;0299&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 40</cross-reference>, signal samples output by the deskew memory are directed through an adder circuit <highlight><bold>4032</bold></highlight>, which determines the difference between the input signal samples and the 4-D output of a DFE <highlight><bold>4034</bold></highlight>. A symbol-by-symbol decoder <highlight><bold>4036</bold></highlight> receives the difference between the 4-D signal samples and the 4-D output from the DFE <highlight><bold>4034</bold></highlight> and decodes it. A 4-D tentative decision <highlight><bold>44</bold></highlight> is taken directly from the output of the symbol-by-symbol decoder <highlight><bold>4036</bold></highlight>, and an error term <highlight><bold>42</bold></highlight> is developed by an additional adder circuit <highlight><bold>4038</bold></highlight>, coupled to define the difference between the input and the output of the symbol-by-symbol decoder <highlight><bold>4036</bold></highlight>. A soft decision <highlight><bold>43</bold></highlight>, which is used for display purposes only, is taken directly from the input of the symbol-by-symbol decoder <highlight><bold>4036</bold></highlight>. </paragraph>
<paragraph id="P-0300" lvl="0"><number>&lsqb;0300&rsqb;</number> Final decisions are developed by delaying the output of the symbol-by-symbol decoder through three series coupled sequential delay stages <highlight><bold>4040</bold></highlight>, <highlight><bold>4042</bold></highlight> and <highlight><bold>4044</bold></highlight>. The output of each respective delay stage is directed to the DFE as a corresponding tentative decision V<highlight><subscript>0F</subscript></highlight>, V<highlight><subscript>1F </subscript></highlight>and V<highlight><subscript>2F</subscript></highlight>. </paragraph>
<paragraph id="P-0301" lvl="0"><number>&lsqb;0301&rsqb;</number> In each of the cases described in connection with <cross-reference target="DRAWINGS">FIGS. 39 and 40</cross-reference>, it will be understood that the surviving elements of the decoder section are all present in a fully functional Viterbi decoder system with ISI compensation. Such a system is described in co-pending U.S. patent application entitled System and Method for High-Speed Decoding and ISI Compensation in a Multi-Pair Transceiver System, filed on instant date herewith and commonly owned by the assignee of the present invention, the entire contents of which are expressly incorporated by reference. As decisions are made with regard to the desirability of maintaining the circuitry in a fully operational condition or truncating certain computational sections in an effort to reduce power dissipation, the system need only remove power from certain identified portions of the circuitry, with other identified portions allowed to remain powered-up in the active signal path. No additional component circuit elements need be provided. </paragraph>
<paragraph id="P-0302" lvl="0"><number>&lsqb;0302&rsqb;</number> The dynamic power regulation methodology of the present invention can also be applied to any other component module of a communication system, so long as that module is able to provide a given minimal level of performance with a truncated functional representation or with truncated circuitry. Of course, such minimal performance levels will obtain in only certain situations and are dependent on external factors, particularly the transmission channel characteristics. However, these situations frequently appear in a substantial number of applications or installations. An integrated circuit transceiver capable of adaptively configuring itself to provide a &ldquo;just sufficient&rdquo; level of performance while operating at the lowest obtainable power dissipation levels would lend itself to almost universal application. </paragraph>
<paragraph id="P-0303" lvl="0"><number>&lsqb;0303&rsqb;</number> The present invention further provides a method and a timing recovery system for generating a set of clock signals in a processing system. The set of clock signals includes a set of sampling clock signals. The processing system includes a set of processing subsystems, each of which includes an analog section. Each of the analog sections operates in accordance with a corresponding sampling clock signals. An example of the processing system is a gigabit transceiver. In this case, the processing subsystems are the constituent transceivers. </paragraph>
<paragraph id="P-0304" lvl="0"><number>&lsqb;0304&rsqb;</number> The present invention can be used to generate and distribute clock signals in a gigabit transceiver of a Gigabit Ethernet communication system such that effect of switching noise coupled from one clock domain to another clock domain is minimized. By &ldquo;clock domain&rdquo;, it is meant the circuit blocks that are operating according to transitions of a particular clock signal. For ease of explanation, the present invention will be described in detail as applied to this exemplary application. However, this is not to be construed as a limitation of the present invention. </paragraph>
<paragraph id="P-0305" lvl="0"><number>&lsqb;0305&rsqb;</number> In order to appreciate the advantages of the present invention, it will be beneficial to describe the invention in the context of an exemplary bi-directional communication device, such as an Ethernet transceiver. The particular exemplary implementation chosen is depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, which is a simplified block diagram of a multi-pair communication system operating in conformance with the IEEE 802.3ab standard (also termed 1000BASE-T) for 1 gigabit (Gb/s) Ethernet full-duplex communication over four twisted pairs of Category-5 copper wires. </paragraph>
<paragraph id="P-0306" lvl="0"><number>&lsqb;0306&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the communication system is represented as a point-to-point system in order to simplify the explanation, and includes two main transceiver blocks <highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight>, coupled together via four twisted-pair cables <highlight><bold>112</bold></highlight><highlight><italic>a, b, c </italic></highlight>and <highlight><italic>d</italic></highlight>. Each of the wire pairs <highlight><bold>112</bold></highlight><highlight><italic>a, b, c, d </italic></highlight>is coupled to each of the transceiver blocks <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> through a respective one of four line interface circuits <highlight><bold>106</bold></highlight>. Each of the wire pairs <highlight><bold>112</bold></highlight><highlight><italic>a, b, c, d </italic></highlight>facilitates communication of information between corresponding pairs of four pairs of transmitter/receiver circuits (constituent transceivers) <highlight><bold>108</bold></highlight>. Each of the constituent transceivers <highlight><bold>108</bold></highlight> is coupled between a respective line interface circuit <highlight><bold>106</bold></highlight> and a Physical Coding Sublayer (PCS) block <highlight><bold>110</bold></highlight>. At each of the transceiver blocks <highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight>, the four constituent transceivers <highlight><bold>108</bold></highlight> are capable of operating simultaneously at 250 megabits of information data per second (Mb/s) each, and are coupled to the corresponding remote constituent transceivers through respective line interface circuits to facilitate full-duplex bi-directional operation. Thus, 1 Gb/s communication throughput of each of the transceiver blocks <highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight> is achieved by using four 250 Mb/s (125 Mbaud at 2 information data bits per symbol) constituent transceivers <highlight><bold>108</bold></highlight> for each of the transceiver blocks <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> and four pairs of twisted copper cables to connect the two transceiver blocks <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> together. </paragraph>
<paragraph id="P-0307" lvl="0"><number>&lsqb;0307&rsqb;</number> The exemplary communication system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> has a superficial resemblance to a 100BASE-T4 system, but is configured to operate at ten times the bit rate. As such, it should be understood that certain system performance characteristics, such as sampling rates and the like, will be consequently higher and cause a greater degree of power consumption. Also, at gigabit data rates over potentially noisy channels, a proportionately greater degree of signal processing is required in many instances to insure an adequate degree of signal fidelity and quality. </paragraph>
<paragraph id="P-0308" lvl="0"><number>&lsqb;0308&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a simplified block diagram of the functional architecture and internal construction of an exemplary transceiver block, indicated generally at 200, such as transceiver <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Since the illustrative transceiver application relates to gigabit Ethernet transmission, the transceiver will be referred to as the &ldquo;gigabit transceiver&rdquo;. For ease of illustration and description, <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows only one of the four 250 Mb/s constituent transceivers which are operating simultaneously (termed herein 4-D operation). However, since the operation of the four constituent transceivers are necessarily interrelated, certain blocks and signal lines in the exemplary embodiment of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> perform four-dimensional operations and carry four-dimensional (4-D) signals, respectively. By 4-D, it is meant that the data from the four constituent transceivers are used simultaneously. In order to clarify signal relationships in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, thin lines correspond to 1-dimensional functions or signals (i.e., relating to only a single constituent transceiver), and thick lines correspond to 4-D functions or signals (relating to all four constituent transceivers). </paragraph>
<paragraph id="P-0309" lvl="0"><number>&lsqb;0309&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the gigabit transceiver <highlight><bold>200</bold></highlight> includes a Gigabit Medium Independent Interface (GMII) block <highlight><bold>202</bold></highlight> subdivided into a receive GMII circuit <highlight><bold>202</bold></highlight>R and a transmit GMII circuit <highlight><bold>202</bold></highlight>T. The transceiver also includes a Physical Coding Sublayer (PCS) block <highlight><bold>204</bold></highlight>, subdivided into a receive PCS circuit <highlight><bold>204</bold></highlight>R and a transmit PCS circuit <highlight><bold>204</bold></highlight>T, a pulse shaping filter <highlight><bold>206</bold></highlight>, a digital-to analog (D/A) converter block <highlight><bold>208</bold></highlight>, and a line interface block <highlight><bold>210</bold></highlight>, all generally encompassing the transmitter portion of the transceiver. </paragraph>
<paragraph id="P-0310" lvl="0"><number>&lsqb;0310&rsqb;</number> The receiver portion generally includes a highpass filter <highlight><bold>212</bold></highlight>, a programmable gain amplifier (PGA) <highlight><bold>214</bold></highlight>, an analog-to-digital (A/D) converter <highlight><bold>216</bold></highlight>, an automatic gain control (AGC) block <highlight><bold>220</bold></highlight>, a timing recovery block <highlight><bold>222</bold></highlight>, a pair-swap multiplexer block <highlight><bold>224</bold></highlight>, a demodulator <highlight><bold>226</bold></highlight>, an offset canceller <highlight><bold>228</bold></highlight>, a near-end crosstalk (NEXT) canceller block <highlight><bold>230</bold></highlight> having three constituent NEXT cancellers and an echo canceller <highlight><bold>232</bold></highlight>. </paragraph>
<paragraph id="P-0311" lvl="0"><number>&lsqb;0311&rsqb;</number> The gigabit transceiver <highlight><bold>200</bold></highlight> also includes an A/D first-in-first-out buffer (FIFO) <highlight><bold>218</bold></highlight> to facilitate proper transfer of data from the analog clock region to the receive clock region, and a loopback FIFO block (LPBK) <highlight><bold>234</bold></highlight> to facilitate proper transfer of data from the transmit clock region to the receive clock region. The gigabit transceiver <highlight><bold>200</bold></highlight> can optionally include an additional adaptive filter to cancel far-end crosstalk noise (FEXT canceller). </paragraph>
<paragraph id="P-0312" lvl="0"><number>&lsqb;0312&rsqb;</number> In operational terms, on the transmit path, the transmit section <highlight><bold>202</bold></highlight>T of the GMII block receives data from the Media Access Control (MAC) module in byte-wide format at the rate of 125 MHz and passes them to the transmit section <highlight><bold>204</bold></highlight>T of the PCS block via the FIFO <highlight><bold>201</bold></highlight>. The FIFO <highlight><bold>201</bold></highlight> ensures proper data transfer from the MAC layer to the Physical Coding (PHY) layer, since the transmit clock of the PHY layer is not necessarily synchronized with the clock of the MAC layer. In one embodiment, this small FIFO <highlight><bold>201</bold></highlight> has from about three to about five memory cells to accommodate the elasticity requirement which is a function of frame size and frequency offset. </paragraph>
<paragraph id="P-0313" lvl="0"><number>&lsqb;0313&rsqb;</number> The PCS transmit section <highlight><bold>204</bold></highlight>T performs certain scrambling operations and, in particular, is responsible for encoding digital data into the requisite codeword representations appropriate for transmission. In the illustrated embodiment of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the transmit PCS section <highlight><bold>204</bold></highlight>T incorporates a coding engine and signal mapper that implements a trellis coding architecture, such as required by the IEEE 802.3ab specification for gigabit transmission. </paragraph>
<paragraph id="P-0314" lvl="0"><number>&lsqb;0314&rsqb;</number> In accordance with this encoding architecture, the PCS transmit section <highlight><bold>204</bold></highlight>T generates four 1-D symbols, one for each of the four constituent transceivers. The 1-D symbol generated for the constituent transceiver depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is filtered by the pulse shaping filter <highlight><bold>206</bold></highlight>. This filtering assists in reducing the radiated emission of the output of the transceiver such that it falls within the parameters required by the Federal Communications Commission. The pulse shaping filter <highlight><bold>206</bold></highlight> is implemented so as to define a transfer function of 0.75&plus;0.25 z<highlight><superscript>&minus;1</superscript></highlight>. This particular implementation is chosen so that the power spectrum of the output of the transceiver falls below the power spectrum of a 100Base-Tx signal. The 100Base-Tx is a widely used and accepted Fast Ethernet standard for 100 Mb/s operation on two pairs of Category-5 twisted pair cables. The output of the pulse shaping filter <highlight><bold>206</bold></highlight> is converted to an analog signal by the D/A converter <highlight><bold>208</bold></highlight> operating at 125 MHz. The analog signal passes through the line interface block <highlight><bold>210</bold></highlight>, and is placed on the corresponding twisted pair cable. </paragraph>
<paragraph id="P-0315" lvl="0"><number>&lsqb;0315&rsqb;</number> On the receive path, the line interface block <highlight><bold>210</bold></highlight> receives an analog signal from the twisted pair cable. The received analog signal is preconditioned by the highpass filter <highlight><bold>212</bold></highlight> and the PGA <highlight><bold>214</bold></highlight> before being converted to a digital signal by the A/D converter <highlight><bold>216</bold></highlight> operating at a sampling rate of 125 MHz. The timing of the A/D converter <highlight><bold>216</bold></highlight> is controlled by the output of the timing recovery block <highlight><bold>222</bold></highlight>. The resulting digital signal is properly transferred from the analog clock region to the receive is clock region by the A/D FIFO <highlight><bold>218</bold></highlight>. The output of the A/D FIFO <highlight><bold>218</bold></highlight> is also used by the AGC <highlight><bold>220</bold></highlight> to control the operation of the PGA <highlight><bold>214</bold></highlight>. </paragraph>
<paragraph id="P-0316" lvl="0"><number>&lsqb;0316&rsqb;</number> The output of the A/D FIFO <highlight><bold>218</bold></highlight>, along with the outputs from the A/D FIFOs of the other three constituent transceivers are inputted to the pair-swap multiplexer block <highlight><bold>224</bold></highlight>. The pair-swap multiplexer block <highlight><bold>224</bold></highlight> uses the 4-D pair-swap control signal from the receive section <highlight><bold>204</bold></highlight>R of PCS block to sort out the four input signals and send the correct signals to the respective feedforward equalizers <highlight><bold>26</bold></highlight> of the demodulator <highlight><bold>226</bold></highlight>. This pair-swapping control is needed for the following reason. The trellis coding methodology used for the gigabit transceivers (<highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) is based on the fact that a signal on each twisted pair of wire corresponds to a respective 1-D constellation, and that the signals transmitted over four twisted pairs collectively form a 4-D constellation. Thus, for the decoding to work, each of the four twisted pairs must be uniquely identified with one of the four dimensions. Any undetected swapping of the four pairs would result in erroneous decoding. In an alternate embodiment of the gigabit transceiver, the pair-swapping control is performed by the demodulator <highlight><bold>226</bold></highlight>, instead of the combination of the PCS receive section <highlight><bold>204</bold></highlight>R and the pair-swap multiplexer block <highlight><bold>224</bold></highlight>. </paragraph>
<paragraph id="P-0317" lvl="0"><number>&lsqb;0317&rsqb;</number> The demodulator <highlight><bold>226</bold></highlight> includes a feed-forward equalizer (FFE) <highlight><bold>26</bold></highlight> for each constituent transceiver, coupled to a deskew memory circuit <highlight><bold>36</bold></highlight> and a decoder circuit <highlight><bold>38</bold></highlight>, implemented in the illustrated embodiment as a trellis decoder. The deskew memory circuit <highlight><bold>36</bold></highlight> and the trellis decoder <highlight><bold>38</bold></highlight> are common to all four constituent transceivers. The FFE <highlight><bold>26</bold></highlight> receives the received signal intended for it from the pair-swap multiplexer block <highlight><bold>224</bold></highlight>. The FFE <highlight><bold>26</bold></highlight> is suitably implemented to include a precursor filter <highlight><bold>28</bold></highlight>, a programmable inverse partial response (IPR) filter <highlight><bold>30</bold></highlight>, a summing device <highlight><bold>32</bold></highlight>, and an adaptive gain stage <highlight><bold>34</bold></highlight>. The FFE <highlight><bold>26</bold></highlight> is a least-mean-squares (LMS) type adaptive filter which is configured to perform channel equalization as will be described in greater detail below. </paragraph>
<paragraph id="P-0318" lvl="0"><number>&lsqb;0318&rsqb;</number> The precursor filter <highlight><bold>28</bold></highlight> generates a precursor to the input signal <highlight><bold>2</bold></highlight>. This precursor is used for timing recovery. The transfer function of the precursor filter <highlight><bold>28</bold></highlight> might be represented as &minus;g&plus;z<highlight><superscript>&minus;1</superscript></highlight>, with g equal to {fraction (1/16)} for short cables (less than 80 meters) and &frac18; for long cables (more than 80 m). The determination of the length of a cable is based on the gain of the coarse PGA <highlight><bold>14</bold></highlight> of the programmable gain block <highlight><bold>214</bold></highlight>. </paragraph>
<paragraph id="P-0319" lvl="0"><number>&lsqb;0319&rsqb;</number> The programmable IPR filter <highlight><bold>30</bold></highlight> compensates the ISI (intersymbol interference) introduced by the partial response pulse shaping in the transmitter section of a remote transceiver which transmitted the analog equivalent of the digital signal <highlight><bold>2</bold></highlight>. The transfer function of the IPR filter <highlight><bold>30</bold></highlight> may be expressed as 1/(1&plus;Kz<highlight><superscript>&minus;1</superscript></highlight>). In the present example, K has an exemplary value of 0.484375 during startup, and is slowly ramped down to zero after convergence of the decision feedback equalizer included inside the trellis decoder <highlight><bold>38</bold></highlight>. The value of K may also be any positive value strictly less than 1. </paragraph>
<paragraph id="P-0320" lvl="0"><number>&lsqb;0320&rsqb;</number> The summing device <highlight><bold>32</bold></highlight> receives the output of the IPR filter <highlight><bold>30</bold></highlight> and subtracts therefrom adaptively derived cancellation signals received from the adaptive filter block, namely signals developed by the offset canceller <highlight><bold>228</bold></highlight>, the NEXT cancellers <highlight><bold>230</bold></highlight>, and the echo canceller <highlight><bold>232</bold></highlight>. The offset canceller <highlight><bold>228</bold></highlight> is an adaptive filter which generates an estimate of signal offset introduced by component circuitry of the transceiver&apos;s analog front end, particularly offsets introduced by the PGA <highlight><bold>214</bold></highlight> and the A/D converter <highlight><bold>216</bold></highlight>. </paragraph>
<paragraph id="P-0321" lvl="0"><number>&lsqb;0321&rsqb;</number> The three NEXT cancellers <highlight><bold>230</bold></highlight> may also be described as adaptive filters and are used, in the illustrated embodiment, for modeling the NEXT impairments in the received signal caused by interference generated by symbols sent by the three local transmitters of the other three constituent transceivers. These impairments are recognized as being caused by a crosstalk mechanism between neighboring pairs of cables, thus the term near-end crosstalk, or NEXT. Since each receiver has access to the data transmitted by the other three local transmitters, it is possible to approximately replicate the NEXT impairments through filtering. Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the three NEXT cancellers <highlight><bold>230</bold></highlight> filter the signals sent by the PCS block to the other three local transmitters and produce three signals replicating the respective NEXT impairments. By subtracting these three signals from the output of the IPR filter <highlight><bold>30</bold></highlight>, the NEXT impairments are approximately cancelled. </paragraph>
<paragraph id="P-0322" lvl="0"><number>&lsqb;0322&rsqb;</number> Due to the bi-directional nature of the channel, each local transmitter causes an echo impairment on the received signal of the local receiver with which it is paired to form a constituent transceiver. In order to remove this impairment, an echo canceller <highlight><bold>232</bold></highlight> is provided, which may also be characterized as an adaptive filter, and is used, in the illustrated embodiment, for modeling the signal impairment due to echo. The echo canceller <highlight><bold>232</bold></highlight> filters the signal sent by the PCS block to the local transmitter associated with the receiver, and produces an approximate replica of the echo impairment. By subtracting this replica signal from the output of the IPR filter <highlight><bold>30</bold></highlight>, the echo impairment is approximately cancelled. </paragraph>
<paragraph id="P-0323" lvl="0"><number>&lsqb;0323&rsqb;</number> The adaptive gain stage <highlight><bold>34</bold></highlight> receives the processed signal from the summing circuit <highlight><bold>32</bold></highlight> and fine tunes the signal path gain using a zero-forcing LMS algorithm. Since this adaptive gain stage <highlight><bold>34</bold></highlight> trains on the basis of error signals generated by the adaptive filters <highlight><bold>228</bold></highlight>, <highlight><bold>230</bold></highlight> and <highlight><bold>232</bold></highlight>, it provides a more accurate signal gain than the one provided by the PGA <highlight><bold>214</bold></highlight> in the analog section. </paragraph>
<paragraph id="P-0324" lvl="0"><number>&lsqb;0324&rsqb;</number> The output of the adaptive gain stage <highlight><bold>34</bold></highlight>, which is also the output of the FFE <highlight><bold>26</bold></highlight>, is inputted to the deskew memory circuit <highlight><bold>36</bold></highlight>. The deskew memory <highlight><bold>36</bold></highlight> is a four-dimensional function block, i.e., it also receives the outputs of the three FFEs of the other three constituent transceivers. There may be a relative skew in the outputs of the four FFEs, which are the four signal samples representing the four symbols to be decoded. This relative skew can be up to 50 nanoseconds, and is due to the variations in the way the copper wire pairs are twisted. In order to correctly decode the four symbols, the four signal samples must be properly aligned. The deskew memory aligns the four signal samples received from the four FFEs, then passes the deskewed four signal samples to a decoder circuit <highlight><bold>38</bold></highlight> for decoding. </paragraph>
<paragraph id="P-0325" lvl="0"><number>&lsqb;0325&rsqb;</number> In the context of the exemplary embodiment, the data received at the local transceiver was encoded before transmission, at the remote transceiver. In the present case, data might be encoded using an 8-state four-dimensional trellis code, and the decoder <highlight><bold>38</bold></highlight> might therefore be implemented as a trellis decoder. In the absence of intersymbol interference (ISI), a proper 8-state Viterbi decoder would provide optimal decoding of this code. However, in the case of Gigabit Ethernet, the Category-5 twisted pair cable introduces a significant amount of ISI. In addition, the partial response filter of the remote transmitter on the other end of the communication channel also contributes some ISI. Therefore, the trellis decoder <highlight><bold>38</bold></highlight> must decode both the trellis code and the ISI, at the high rate of 125 MHz. In the illustrated embodiment of the gigabit transceiver, the trellis decoder <highlight><bold>38</bold></highlight> includes an 8-state Viterbi decoder, and uses a decision-feedback sequence estimation approach to deal with the ISI components. </paragraph>
<paragraph id="P-0326" lvl="0"><number>&lsqb;0326&rsqb;</number> The 4-D output of the trellis decoder <highlight><bold>38</bold></highlight> is provided to the PCS receive section <highlight><bold>204</bold></highlight>R. The receive section <highlight><bold>204</bold></highlight>R of the PCS block de-scrambles and decodes the symbol stream, then passes the decoded packets and idle stream to the receive section <highlight><bold>202</bold></highlight>T of the GMII block which passes them to the MAC module. The 4-D outputs, which are the error and tentative decision, respectively, are provided to the timing recovery block <highlight><bold>222</bold></highlight>, whose output controls the sampling time of the A/D converter <highlight><bold>216</bold></highlight>. One of the four components of the error and one of the four components of the tentative decision correspond to the receiver shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, and are provided to the adaptive gain stage <highlight><bold>34</bold></highlight> of the FFE <highlight><bold>26</bold></highlight> to adjust the gain of the equalizer signal path. The error component portion of the decoder output signal is also provided, as a control signal, to adaptation circuitry incorporated in each of the adaptive filters <highlight><bold>230</bold></highlight> and <highlight><bold>232</bold></highlight>. Adaptation circuitry is used for the updating and training process of filter coefficients. </paragraph>
<paragraph id="P-0327" lvl="0"><number>&lsqb;0327&rsqb;</number> For the exemplary gigabit transceiver system <highlight><bold>200</bold></highlight> described above and shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, there is a PHY Control system (not shown) which provides control signals to the blocks shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, including the timing recovery block <highlight><bold>222</bold></highlight>, to control their functions. </paragraph>
<paragraph id="P-0328" lvl="0"><number>&lsqb;0328&rsqb;</number> For the exemplary gigabit transceiver system <highlight><bold>200</bold></highlight> described above and shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, there are design considerations regarding the allocation of boundaries of the clock domains. These design considerations are dependent on the clocking relationship between transmitters and receivers in a gigabit transceiver. Therefore, this clocking relationship will be discussed first. </paragraph>
<paragraph id="P-0329" lvl="0"><number>&lsqb;0329&rsqb;</number> During a bidirectional communication between two gigabit transceivers <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 1</cross-reference>), through a process called &ldquo;auto-negotiation&rdquo;, one of the gigabit transceivers assumes the role of the master while the other assumes the role of the slave. When a gigabit transceiver assumes one of the two roles with respect to the remote gigabit transceiver, each of its constituent transceivers assumes the same role with respect to the corresponding one of the remote constituent transceivers. Each constituent transceiver <highlight><bold>108</bold></highlight> is constructed such that it can be dynamically configured to act as either the master or the slave with respect to a remote constituent transceiver <highlight><bold>108</bold></highlight> during a bidirectional communication. The clocking relationship between the transmitter and receiver inside the constituent transceiver <highlight><bold>108</bold></highlight> depends on the role of the constituent transceiver (i.e., master or slave) and is different for each of the two cases. </paragraph>
<paragraph id="P-0330" lvl="0"><number>&lsqb;0330&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> illustrates the general clocking relationship on the conceptual level between the transmitter and the receiver of the gigabit Ethernet transceiver (<highlight><bold>102</bold></highlight> or <highlight><bold>104</bold></highlight>) of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. For this conceptual <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, the transmitter TX represents the four constituent transmitters and the receiver RX represents the four constituent receivers. </paragraph>
<paragraph id="P-0331" lvl="0"><number>&lsqb;0331&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, the gigabit transceiver <highlight><bold>1901</bold></highlight> acts as the master while the gigabit transceiver <highlight><bold>1902</bold></highlight> acts as the slave. The master <highlight><bold>1901</bold></highlight> includes a transmitter <highlight><bold>1910</bold></highlight> and a receiver <highlight><bold>1912</bold></highlight>. The slave <highlight><bold>1902</bold></highlight> includes a transmitter <highlight><bold>1920</bold></highlight> and a receiver <highlight><bold>1922</bold></highlight>. The transceiver <highlight><bold>1901</bold></highlight> (respectively, <highlight><bold>1902</bold></highlight>) receives from the GMII <highlight><bold>202</bold></highlight>T (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) the data to be transmitted TXD via its input <highlight><bold>1913</bold></highlight> (respectively, <highlight><bold>1923</bold></highlight>), and the GMII transmit clock GTX_CLK (this clock is also called &ldquo;gigabit transmit clock&rdquo; in the IEEE 802.3ab standard) via its input <highlight><bold>1915</bold></highlight> (respectively, <highlight><bold>1925</bold></highlight>). The transceiver <highlight><bold>1901</bold></highlight> (respectively, <highlight><bold>1902</bold></highlight>) sends to the GMII <highlight><bold>202</bold></highlight>R (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) the received data RXD via its output <highlight><bold>1917</bold></highlight> (respectively, <highlight><bold>1927</bold></highlight>), and the GMII receive clock RX_CLK (this clock is also called &ldquo;gigabit receive clock&rdquo; in the IEEE 802.3ab standard) via its output <highlight><bold>1919</bold></highlight> (respectively, <highlight><bold>1929</bold></highlight>). It is noted that the clocks GTX_CLK and RX_CLK may be different from the transmit clock TCLK and receive clock RCLK, respectively, of a gigabit transceiver. </paragraph>
<paragraph id="P-0332" lvl="0"><number>&lsqb;0332&rsqb;</number> The receiver <highlight><bold>1922</bold></highlight> of the slave <highlight><bold>1902</bold></highlight> synchronizes its receive clock to the transmit clock of the transmitter <highlight><bold>1910</bold></highlight> of the master <highlight><bold>1901</bold></highlight> in order to properly receive the data transmitted by the transmitter <highlight><bold>1910</bold></highlight>. The transmit clock of the transmitter <highlight><bold>1920</bold></highlight> of the slave <highlight><bold>1902</bold></highlight> is essentially the same as the receive clock of the receiver <highlight><bold>1922</bold></highlight>, thus it is also synchronized to the transmit clock of the transmitter <highlight><bold>1910</bold></highlight> of the master <highlight><bold>1901</bold></highlight>. </paragraph>
<paragraph id="P-0333" lvl="0"><number>&lsqb;0333&rsqb;</number> The receiver <highlight><bold>1912</bold></highlight> of the master <highlight><bold>1901</bold></highlight> is synchronized to the transmit clock of the transmitter <highlight><bold>1920</bold></highlight> of the slave <highlight><bold>1902</bold></highlight> in order to properly receive data sent by the transmitter <highlight><bold>1920</bold></highlight>. Because of the synchronization of the receive and transmit clocks of the slave <highlight><bold>1902</bold></highlight> to the transmit clock of transmitter <highlight><bold>1910</bold></highlight> of the master <highlight><bold>1901</bold></highlight>, the receive clock of the receiver <highlight><bold>1912</bold></highlight> is synchronized to the transmit clock of the transmitter <highlight><bold>1910</bold></highlight> with a phase delay (due to the twisted pairs of cables). Thus, in the absence of jitter, after synchronization, the receive clock of receiver <highlight><bold>1912</bold></highlight> tracks the transmit clock of transmitter <highlight><bold>1910</bold></highlight> with a phase delay. In other words, in principle, the receive clock of receiver <highlight><bold>1912</bold></highlight> has the same frequency as the transmit clock of transmitter <highlight><bold>1910</bold></highlight>, but with a fixed phase delay. </paragraph>
<paragraph id="P-0334" lvl="0"><number>&lsqb;0334&rsqb;</number> However, in the presence of jitter or a change in the cable response, these two clocks may have different instantaneous frequencies (frequency is derivative of phase with respect to time). This is due to the fact that, at the master <highlight><bold>1901</bold></highlight>, the receiver <highlight><bold>1912</bold></highlight> needs to dynamically change the relative phase of its receive clock with respect to the transmit clock of transmitter <highlight><bold>1910</bold></highlight> in order to track jitter in the incoming signal from the transmitter <highlight><bold>1920</bold></highlight> or to compensate for the change in cable response. Thus, in practice, the transmit and receive clocks of the master <highlight><bold>1901</bold></highlight> may be actually independent. At the master, this independence creates an asynchronous boundary between the transmit clock domain and the receive clock domain. By &ldquo;transmit clock domain&rdquo;, it is meant the region where circuit blocks are operated in accordance with transitions in the transmit clock signal TCLK. By &ldquo;receive clock domain&rdquo;, it is meant the region where circuit blocks are operated in accordance with transitions in the receive clock signal RCLK. In order to avoid any loss of data when data cross the asynchronous boundary between the transmit clock domain and the receive clock domain inside the master <highlight><bold>1901</bold></highlight>, FIFOs are used at this asynchronous boundary. For the exemplary structure of the gigabit transceiver shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, FIFOs <highlight><bold>234</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) are placed at this asynchronous boundary. Since a constituent transceiver <highlight><bold>108</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 1</cross-reference>) is constructed such that it can be configured as a master or a slave, the FIFOs <highlight><bold>234</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) are also included in the slave <highlight><bold>1902</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 19</cross-reference>). </paragraph>
<paragraph id="P-0335" lvl="0"><number>&lsqb;0335&rsqb;</number> At the slave <highlight><bold>1902</bold></highlight>, the transmit clock TCLK of transmitter <highlight><bold>1920</bold></highlight> is phase locked to the receive clock RCLK of receiver <highlight><bold>1922</bold></highlight>. Thus, TCLK may be different from GTX_CLK, a FIFO <highlight><bold>1930</bold></highlight> is needed for proper transfer of data TXD from the MAC (not shown) to the transmitter <highlight><bold>1920</bold></highlight>. The depth of the FIFO <highlight><bold>1930</bold></highlight> must be sufficient to absorb any loss during the length of a data packet. The multiplexer <highlight><bold>1932</bold></highlight> allows to use either the GTX_CLK or the receive clock RCLK of receiver <highlight><bold>1922</bold></highlight> as the signal RX_CLK <highlight><bold>1929</bold></highlight>. When the GTX_CLK is used as the RX_CLK <highlight><bold>1929</bold></highlight>, the FIFO <highlight><bold>1934</bold></highlight> is needed to ensure proper transfer of data RXD <highlight><bold>1927</bold></highlight> from the receiver <highlight><bold>1922</bold></highlight> to the MAC. </paragraph>
<paragraph id="P-0336" lvl="0"><number>&lsqb;0336&rsqb;</number> For the conceptual block diagram of <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, there are one transmit clock TCLK and one receive clock RCLK for a gigabit transceiver. The transmit clock TCLK is common to all four constituent transceivers since data transmitted simultaneously on all four twisted pairs of cable correspond to 4D symbols. Since data received from the four twisted pairs of cable are to be decoded simultaneously into 4D symbols, it is an efficient design to have all the digital processing blocks clocked by one clock signal RCLK. However, due the different cable responses of the four twisted pairs of cable, the A/D converter <highlight><bold>216</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) of each of the four constituent transceivers requires a distinct sampling clock signal. Thus, in addition to the signals TCLK and RCLK, the gigabit transceiver system <highlight><bold>200</bold></highlight> requires four sampling clock signals. </paragraph>
<paragraph id="P-0337" lvl="0"><number>&lsqb;0337&rsqb;</number> There is an alternative structure for the gigabit transceiver where the partition of clock domains is different than the one shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. This alternative structure (not shown explicitly) is similar to the one shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> and only differs in that its transmit clock domain includes both the transmit clock domain and the receive clock domain of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, and that the FIFO block <highlight><bold>234</bold></highlight> is not needed. In other words, in this alternative structure, the receive clock RCLK is the same as the transmit clock TCLK, and the transmit clock TCLK is used to clock both the transmitter and most of the receiver. The advantage of this alternative structure is that there is no asynchronous boundary between the transmit region and most of the receive region, thus allowing the echo canceller <highlight><bold>232</bold></highlight> and NEXT cancellers <highlight><bold>230</bold></highlight> to work with only one clock signal. The disadvantage of this alternative structure is that there is a potential for a performance penalty at the master when the constituent transceivers are tracking jitter. As a result of tracking jitter, the relative phase of a sampling clock signal with respect to the transmit clock TCLK may vary dynamically. This could cause the A/D converter to sample at noisy instants where transistors in circuit blocks operating according to the clock signal TCLK are switching. Thus, the alternative structure is not as good as the structure shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, with respect to the switching noise problem. </paragraph>
<paragraph id="P-0338" lvl="0"><number>&lsqb;0338&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a simplified block diagram of an embodiment of the timing recovery system constructed according to the present invention and applied to the gigabit transceiver architecture of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The timing recovery system <highlight><bold>222</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>) generates the different clock signals for the exemplary gigabit transceiver shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, namely, the sampling clock signals ACLK<highlight><bold>0</bold></highlight>, ACLK<highlight><bold>1</bold></highlight>, ACLK<highlight><bold>2</bold></highlight>, ACLK<highlight><bold>3</bold></highlight>, the receive clock signal RCLK, and the transmit clock signal TCLK. </paragraph>
<paragraph id="P-0339" lvl="0"><number>&lsqb;0339&rsqb;</number> The timing recovery system <highlight><bold>222</bold></highlight> includes a set of phase detectors <highlight><bold>2002</bold></highlight>, <highlight><bold>2012</bold></highlight>, <highlight><bold>2022</bold></highlight>, <highlight><bold>2032</bold></highlight>, a set of loop filters <highlight><bold>2006</bold></highlight>, <highlight><bold>2016</bold></highlight>, <highlight><bold>2026</bold></highlight>, <highlight><bold>2036</bold></highlight>, a set of numerically controlled oscillators (NCO) <highlight><bold>2008</bold></highlight>, <highlight><bold>2018</bold></highlight>, <highlight><bold>2028</bold></highlight>, <highlight><bold>2038</bold></highlight> and a set of phase selectors <highlight><bold>2010</bold></highlight>, <highlight><bold>2020</bold></highlight>, <highlight><bold>2030</bold></highlight>, <highlight><bold>2040</bold></highlight>, <highlight><bold>2050</bold></highlight>, <highlight><bold>2060</bold></highlight>. The adders <highlight><bold>2004</bold></highlight>, <highlight><bold>2014</bold></highlight>, <highlight><bold>2024</bold></highlight>, <highlight><bold>2034</bold></highlight> are shown for conceptual illustration purpose only. In practice, these adders are implemented within the respective phase detectors <highlight><bold>2002</bold></highlight>, <highlight><bold>2012</bold></highlight>, <highlight><bold>2022</bold></highlight>, <highlight><bold>2032</bold></highlight>. The RCLK Offset is used to adjust the phase of the receive clock signal RCLK in order to reduce the effects of switching noise on the sampling operations of the corresponding A/D converters <highlight><bold>216</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). Three of the four signals ACLK<highlight><bold>0</bold></highlight> Offset, ACLK<highlight><bold>1</bold></highlight> Offset, ACLK<highlight><bold>2</bold></highlight> Offset, ACLK<highlight><bold>3</bold></highlight> Offset are used to slightly adjust the phases of the respective sampling clocks ACLK<highlight><bold>0</bold></highlight> through ACLK<highlight><bold>4</bold></highlight> in order to further reduce these effects of switching noise. The phase adjustments of the receive clock RCLK and the sampling clocks ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight> are not a necessary function of the timing recovery system <highlight><bold>222</bold></highlight>. However, the method and system for generating these phase adjustment signals constitute another novel aspect of the present invention and will be described in detail later. </paragraph>
<paragraph id="P-0340" lvl="0"><number>&lsqb;0340&rsqb;</number> Each of the phase detectors <highlight><bold>2002</bold></highlight>, <highlight><bold>2012</bold></highlight>, <highlight><bold>2022</bold></highlight>, <highlight><bold>2032</bold></highlight> receives the corresponding 1D component of the 4D slicer error <highlight><bold>42</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>) and the corresponding 1D component of the 4D tentative decision <highlight><bold>44</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>) from the decoder <highlight><bold>38</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) to generate a corresponding phase error. The phase errors <highlight><bold>0</bold></highlight> through <highlight><bold>3</bold></highlight> are inputted to the loop filters <highlight><bold>2006</bold></highlight>, <highlight><bold>2016</bold></highlight>, <highlight><bold>2026</bold></highlight>, <highlight><bold>2036</bold></highlight>, respectively. The loop filters <highlight><bold>2006</bold></highlight>, <highlight><bold>2016</bold></highlight>, <highlight><bold>2026</bold></highlight>, <highlight><bold>2036</bold></highlight> generate and output filtered phase errors to the NCOs <highlight><bold>2008</bold></highlight>, <highlight><bold>2018</bold></highlight>, <highlight><bold>2028</bold></highlight>, <highlight><bold>2038</bold></highlight>. The loop filters <highlight><bold>2006</bold></highlight>, <highlight><bold>2016</bold></highlight>, <highlight><bold>2026</bold></highlight>, <highlight><bold>2036</bold></highlight> can be of any order. In one embodiment, the loop filters are of second order. The NCOs <highlight><bold>2008</bold></highlight>, <highlight><bold>2018</bold></highlight>, <highlight><bold>2028</bold></highlight>, <highlight><bold>2038</bold></highlight> generate phase control signals from the filtered phase errors. The phase selectors <highlight><bold>2010</bold></highlight>, <highlight><bold>2020</bold></highlight>, <highlight><bold>2030</bold></highlight>, <highlight><bold>2040</bold></highlight> receive corresponding phase control signals from the NCOs <highlight><bold>2008</bold></highlight>, <highlight><bold>2018</bold></highlight>, <highlight><bold>2028</bold></highlight>, <highlight><bold>2038</bold></highlight>, respectively. Each of the phase selectors <highlight><bold>2010</bold></highlight>, <highlight><bold>2020</bold></highlight>, <highlight><bold>2030</bold></highlight>, <highlight><bold>2040</bold></highlight> selects one out of several phases of the multi-phase signal <highlight><bold>2070</bold></highlight> based on the value of the corresponding phase control signal, and outputs the corresponding sampling clock signal. In one embodiment of the invention, the multi-phase signal has 64 phases. </paragraph>
<paragraph id="P-0341" lvl="0"><number>&lsqb;0341&rsqb;</number> The multi-phase signal <highlight><bold>2070</bold></highlight> is generated by a clock generator <highlight><bold>2080</bold></highlight>. In the exemplary embodiment illustrated in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, the clock generator <highlight><bold>2080</bold></highlight> includes a crystal oscillator <highlight><bold>2082</bold></highlight>, a frequency multiplier <highlight><bold>2084</bold></highlight> and an 8-phase ring oscillator <highlight><bold>2086</bold></highlight>. The crystal oscillator <highlight><bold>2082</bold></highlight> produces a 25 MHz clock signal. The frequency multiplier <highlight><bold>2084</bold></highlight> multiplies the frequency of the 25 MHz clock signal by 40 and produces a 1 GHz clock signal. From the 1 GHz clock signal, the 8-phase ring oscillator <highlight><bold>586</bold></highlight> produces the 8 GHz 64-phase signal <highlight><bold>2070</bold></highlight>. </paragraph>
<paragraph id="P-0342" lvl="0"><number>&lsqb;0342&rsqb;</number> The receive clock signal RCLK, which is used to clock all the circuit blocks in the receive clock domain (which include all the digital signal processing circuit blocks in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>), can be generated independently of the sampling clock signals ACLK<highlight><bold>0</bold></highlight> through ACLK<highlight><bold>3</bold></highlight>. However, for design efficiency, RCLK is chosen to be related to one of the sampling clock signals ACLK<highlight><bold>0</bold></highlight> through ACLK<highlight><bold>3</bold></highlight>. For the exemplary embodiment illustrated in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, the receive clock signal RCLK is related to the sampling clock signal ACLK<highlight><bold>0</bold></highlight>. The receive clock signal RCLK is generated by inputting the sum of the phase control signal outputted from the NCO <highlight><bold>2008</bold></highlight> and the RCLK Offset via an adder <highlight><bold>2042</bold></highlight> to the phase selector <highlight><bold>2050</bold></highlight>. Based on this sum, the phase selector <highlight><bold>2050</bold></highlight> selects one of the <highlight><bold>64</bold></highlight> phases of the multi-phase signal <highlight><bold>2070</bold></highlight> and outputs the receive clock signal RCLK. Thus, when the RCLK Offset is zero, the receive clock signal RCLK is the same as the sampling clock ACLK<highlight><bold>0</bold></highlight>. </paragraph>
<paragraph id="P-0343" lvl="0"><number>&lsqb;0343&rsqb;</number> As discussed previously in relation to <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, when the constituent transceiver is configured as the master, its transmit clock TCLK is practically independent of its receive clock RCLK. In <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, when the constituent transceiver is the master, the transmit clock signal TCLK is generated by inputting the signal TCLK Offset, generated by the PHY Control system of the gigabit transceiver, to the phase selector <highlight><bold>2060</bold></highlight>. Based on the TCLK Offset, the phase selector <highlight><bold>2060</bold></highlight> selects one of the 64 phases of the multi-phase signal <highlight><bold>2070</bold></highlight> and produces the transmit clock signal TCLK. When the constituent transceiver is the slave, the transmit clock signal TCLK is generated by inputting the sum of the output of the NCO <highlight><bold>2008</bold></highlight> and the signal TCLK Offset, via the adder <highlight><bold>2042</bold></highlight>, to the phase selector <highlight><bold>2060</bold></highlight>. Based on this sum, the phase selector <highlight><bold>2060</bold></highlight> selects one of the 64 phases of the multi-phase signal <highlight><bold>2070</bold></highlight> and produces the transmit clock signal TCLK. Thus, at the slave, the transmit clock signal TCLK and the receive clock signal RCLK are phase-locked (as discussed previously in relation to <cross-reference target="DRAWINGS">FIG. 19</cross-reference>). </paragraph>
<paragraph id="P-0344" lvl="0"><number>&lsqb;0344&rsqb;</number> It is important to note that, referring to <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, the function performed by the combination of an NCO (<highlight><bold>2008</bold></highlight>, <highlight><bold>2018</bold></highlight>, <highlight><bold>2028</bold></highlight>, <highlight><bold>2038</bold></highlight>) followed by a phase selector (<highlight><bold>2110</bold></highlight>, <highlight><bold>2120</bold></highlight>, <highlight><bold>2130</bold></highlight>, <highlight><bold>2140</bold></highlight>, <highlight><bold>2150</bold></highlight>, <highlight><bold>2160</bold></highlight>) can be implemented by analog circuitry. The analog circuitry can be described as follows. Each of the filtered phase errors outputted from the loop filters (<highlight><bold>2006</bold></highlight>, <highlight><bold>2016</bold></highlight>, <highlight><bold>2026</bold></highlight>, <highlight><bold>2036</bold></highlight>) would be inputted to a D/A converter to be converted to analog form. Each of the analog filtered phase errors would then be inputted to a voltage-controlled oscillator (VCO). The VCOs would produce the clock signals. The VCOs can be implemented with well-known analog techniques such as those using varactor diodes. </paragraph>
<paragraph id="P-0345" lvl="0"><number>&lsqb;0345&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a block diagram illustrating a detailed implementation of the phase detectors <highlight><bold>2002</bold></highlight>, <highlight><bold>2012</bold></highlight>, <highlight><bold>2022</bold></highlight>, <highlight><bold>2032</bold></highlight>, the loop filters <highlight><bold>2006</bold></highlight>, <highlight><bold>2016</bold></highlight>, <highlight><bold>2026</bold></highlight>, <highlight><bold>2036</bold></highlight>, and the NCOs <highlight><bold>2008</bold></highlight>, <highlight><bold>2018</bold></highlight>, <highlight><bold>2028</bold></highlight>, <highlight><bold>2038</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 20</cross-reference>. </paragraph>
<paragraph id="P-0346" lvl="0"><number>&lsqb;0346&rsqb;</number> It is important to note that the 4D path connecting the phase detectors <highlight><bold>2002</bold></highlight>, <highlight><bold>2012</bold></highlight>, <highlight><bold>2022</bold></highlight>, <highlight><bold>2032</bold></highlight>, the loop filters <highlight><bold>2006</bold></highlight>, <highlight><bold>2016</bold></highlight>, <highlight><bold>2026</bold></highlight>, <highlight><bold>2036</bold></highlight>, the NCOs <highlight><bold>2008</bold></highlight>, <highlight><bold>2018</bold></highlight>, <highlight><bold>2028</bold></highlight>, <highlight><bold>2038</bold></highlight> and the phase selectors <highlight><bold>2010</bold></highlight>, <highlight><bold>2020</bold></highlight>, <highlight><bold>2030</bold></highlight>, <highlight><bold>2040</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) can be thought of as the 4D forward path of a phase locked loop whose 4D feedback path goes from, referring now to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the A/D converters <highlight><bold>216</bold></highlight> to the demodulator <highlight><bold>226</bold></highlight> then back to the timing recovery <highlight><bold>222</bold></highlight>. The input to this phase locked loop is actually phase information embedded in the slicer error <highlight><bold>42</bold></highlight> and tentative decision <highlight><bold>44</bold></highlight>, and the phase locked loop output is the phases of the sampling clock signals. This phase locked loop is digital but can be approximated by a continuous-time phase locked loop for practical design analysis purpose, as long as the sampling rate is much larger than the bandwidth of the loop. The theoretical transfer function of a continuous-time second-order phase locked loop is:  
<math-cwu id="MATH-US-00002">
<number>2</number>
<math>
<mrow>
  <mfrac>
    <mrow>
      <mi>&Phi;</mi>
      <mo>&af;</mo>
      <mrow>
        <mo>(</mo>
        <mi>s</mi>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mrow>
      <mi>&Theta;</mi>
      <mo>&af;</mo>
      <mrow>
        <mo>(</mo>
        <mi>s</mi>
        <mo>)</mo>
      </mrow>
    </mrow>
  </mfrac>
  <mo>=</mo>
  <mfrac>
    <mrow>
      <mrow>
        <msub>
          <mi>K</mi>
          <mi>L</mi>
        </msub>
        <mo>&CenterDot;</mo>
        <mi>s</mi>
      </mrow>
      <mo>+</mo>
      <mrow>
        <msub>
          <mi>K</mi>
          <mi>L</mi>
        </msub>
        <mo>&CenterDot;</mo>
        <msub>
          <mi>K</mi>
          <mn>1</mn>
        </msub>
      </mrow>
    </mrow>
    <mrow>
      <msup>
        <mi>s</mi>
        <mn>2</mn>
      </msup>
      <mo>+</mo>
      <mrow>
        <msub>
          <mi>K</mi>
          <mi>L</mi>
        </msub>
        <mo>&CenterDot;</mo>
        <mi>s</mi>
      </mrow>
      <mo>+</mo>
      <mrow>
        <msub>
          <mi>K</mi>
          <mi>L</mi>
        </msub>
        <mo>&CenterDot;</mo>
        <msub>
          <mi>K</mi>
          <mn>1</mn>
        </msub>
      </mrow>
    </mrow>
  </mfrac>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00002" file="US20030002575A1-20030102-M00002.NB"/>
<image id="EMI-M00002" wi="216.027" he="18.00225" file="US20030002575A1-20030102-M00002.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0347" lvl="7"><number>&lsqb;0347&rsqb;</number> where the transfer function of the loop filter is:  
<math-cwu id="MATH-US-00003">
<number>3</number>
<math>
<mrow>
  <mrow>
    <mi>L</mi>
    <mo>&af;</mo>
    <mrow>
      <mo>(</mo>
      <mi>s</mi>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <msub>
        <mi>K</mi>
        <mi>L</mi>
      </msub>
      <mo>&CenterDot;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mn>1</mn>
          <mo>+</mo>
          <mfrac>
            <msub>
              <mi>K</mi>
              <mn>1</mn>
            </msub>
            <mi>s</mi>
          </mfrac>
        </mrow>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>=</mo>
    <mrow>
      <msub>
        <mi>K</mi>
        <mi>v</mi>
      </msub>
      <mo>&CenterDot;</mo>
      <msub>
        <mi>K</mi>
        <mi>d</mi>
      </msub>
      <mo>&CenterDot;</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mn>1</mn>
          <mo>+</mo>
          <mfrac>
            <msub>
              <mi>K</mi>
              <mn>1</mn>
            </msub>
            <mi>s</mi>
          </mfrac>
        </mrow>
        <mo>)</mo>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00003" file="US20030002575A1-20030102-M00003.NB"/>
<image id="EMI-M00003" wi="216.027" he="17.03835" file="US20030002575A1-20030102-M00003.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0348" lvl="7"><number>&lsqb;0348&rsqb;</number> where K<highlight><subscript>v </subscript></highlight>is the gain of the voltage-controlled oscillator, K<highlight><subscript>d </subscript></highlight>is the gain of the phase detector, K<highlight><subscript>L</subscript></highlight>&equals;K<highlight><subscript>v</subscript></highlight>&middot;K<highlight><subscript>d </subscript></highlight>and K<highlight><subscript>1 </subscript></highlight>is the gain of the integrator inside the loop filter. For the digital phase locked loop of the present invention, the gain parameters K<highlight><subscript>v </subscript></highlight>and K<highlight><subscript>1 </subscript></highlight>can be computed from the word lengths and scale factors used in implementing the NCO and the integrator of the loop filter. However, the gain of the phase detector K<highlight><subscript>d </subscript></highlight>is more conveniently computed by simulation. The gain parameters are used for the design and analysis of the digital phase locked loop. </paragraph>
<paragraph id="P-0349" lvl="0"><number>&lsqb;0349&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows a phase detector <highlight><bold>2110</bold></highlight>, a first filter <highlight><bold>2130</bold></highlight>, a second filter <highlight><bold>2150</bold></highlight>, an adder <highlight><bold>2160</bold></highlight> and an NCO <highlight><bold>2170</bold></highlight>. The phase detector <highlight><bold>2110</bold></highlight> is an exemplary embodiment of the phase detectors <highlight><bold>2002</bold></highlight>, <highlight><bold>2012</bold></highlight>, <highlight><bold>2022</bold></highlight>, <highlight><bold>2032</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 20</cross-reference>. The combination of the first filter <highlight><bold>2130</bold></highlight>, the second filter <highlight><bold>2150</bold></highlight> and the adder <highlight><bold>2160</bold></highlight> is an exemplary embodiment of the loop filters <highlight><bold>2006</bold></highlight>, <highlight><bold>2016</bold></highlight>, <highlight><bold>2026</bold></highlight>, <highlight><bold>2036</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 20</cross-reference>. The NCO <highlight><bold>2170</bold></highlight> is an exemplary embodiment of the NCOs <highlight><bold>2008</bold></highlight>, <highlight><bold>2018</bold></highlight>, <highlight><bold>2028</bold></highlight>, <highlight><bold>2038</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 20</cross-reference>. </paragraph>
<paragraph id="P-0350" lvl="0"><number>&lsqb;0350&rsqb;</number> In <cross-reference target="DRAWINGS">FIGS. 21 through 23</cross-reference>, the numbers in the form &ldquo;Sn.k&rdquo; indicate the format of the data, where S denotes a signed number, &ldquo;n&rdquo; denotes the total number of bits and &ldquo;k&rdquo; denotes the number of bits after the decimal point. </paragraph>
<paragraph id="P-0351" lvl="0"><number>&lsqb;0351&rsqb;</number> The phase detector <highlight><bold>2110</bold></highlight> includes a lattice structure having two delay elements <highlight><bold>2112</bold></highlight>, <highlight><bold>2118</bold></highlight>, two multipliers <highlight><bold>2114</bold></highlight>, <highlight><bold>2120</bold></highlight> and an adder <highlight><bold>2122</bold></highlight>. The phase detector <highlight><bold>2110</bold></highlight> receives as inputs the corresponding 1D component of the 4D slicer error <highlight><bold>42</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>) and the corresponding 1D component of the 4D tentative decision <highlight><bold>44</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>) from the trellis decoder <highlight><bold>38</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>). For simplicity, in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>, these two 1D components are labeled as <highlight><bold>42</bold></highlight>A and <highlight><bold>44</bold></highlight>A, respectively. It is understood that, for the phase detector of each of the four constituent transceivers of the gigabit transceiver, a distinct 1D component of the slicer error <highlight><bold>42</bold></highlight> and a distinct 1D component of the tentative decision <highlight><bold>44</bold></highlight> are used as inputs. On the upper branch of the lattice structure, the slicer error <highlight><bold>42</bold></highlight> is delayed by one unit of time (here, one symbol period) via the delay element <highlight><bold>2112</bold></highlight>, then multiplied by the tentative decision <highlight><bold>44</bold></highlight>A to produce a pre-cursor phase error <highlight><bold>2115</bold></highlight>. The pre-cursor phase error <highlight><bold>2115</bold></highlight>, when accumulated over time, represents the correlation between a past slicer error and a present tentative decision, thus indicates the sampling phase error with respect to the zero-crossing point at the start of the signal pulse (this zero-crossing point is part of the pre-cursor introduced by design to the signal pulse by the precursor filter <highlight><bold>28</bold></highlight> of the FFE <highlight><bold>26</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). On the lower branch of the lattice structure, the tentative decision <highlight><bold>44</bold></highlight>A is delayed by one unit of time via the delay element <highlight><bold>2118</bold></highlight>, then multiplied by the slicer error <highlight><bold>42</bold></highlight>A to produce a post-cursor phase error <highlight><bold>2121</bold></highlight>. </paragraph>
<paragraph id="P-0352" lvl="0"><number>&lsqb;0352&rsqb;</number> The post-cursor phase error <highlight><bold>2121</bold></highlight>, when accumulated over time, represents the correlation between a present slicer error and a past tentative decision, thus indicates the sampling phase error with respect to the level-crossing point in the tail end of the signal pulse. In one embodiment, this level-crossing point is determined by the first tap coefficient of the DFE <highlight><bold>312</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. At the zero-crossing point at the start of the signal pulse, the slope of the signal pulse is positive, while at the level-crossing point at the tail end of the signal pulse, the slope of the signal pulse is negative. Thus, the pre-cursor phase error <highlight><bold>2115</bold></highlight> and the post-cursor phase error <highlight><bold>2121</bold></highlight> must be combined with opposite signs in the adder <highlight><bold>2122</bold></highlight>. The combination of the pre-cursor <highlight><bold>2115</bold></highlight> and post-cursor phase errors <highlight><bold>2121</bold></highlight> produces the phase error associated with one of the sampling clock signals ACLK<highlight><bold>0</bold></highlight>-ACLK<highlight><bold>3</bold></highlight>. This is the phase error indicated as one of the phase errors <highlight><bold>0</bold></highlight> through <highlight><bold>3</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>. </paragraph>
<paragraph id="P-0353" lvl="0"><number>&lsqb;0353&rsqb;</number> The phase offset <highlight><bold>2102</bold></highlight> is one of the sampling clock offset signals ACLK<highlight><bold>0</bold></highlight> Offset through ACLK<highlight><bold>3</bold></highlight> Offset in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>. The phase offset <highlight><bold>2102</bold></highlight>, when needed, is generated by the PHY Control system of the gigabit transceiver. The phase offset <highlight><bold>2102</bold></highlight> is delayed by one unit of time then is added to the combination of the pre-cursor error <highlight><bold>2115</bold></highlight> and post-cursor <highlight><bold>2121</bold></highlight> via the adder <highlight><bold>2122</bold></highlight> to produce an adjusted phase error. The adjusted phase error <highlight><bold>2123</bold></highlight> is stored in the delay element <highlight><bold>2124</bold></highlight> and outputted to the first filter <highlight><bold>2130</bold></highlight> at the next clock transition. The delay element <highlight><bold>2124</bold></highlight> is used to prevent the propagation delay of the adder <highlight><bold>2122</bold></highlight> from concatenating with the propagation delay of the adder <highlight><bold>2132</bold></highlight> in the first filter <highlight><bold>2130</bold></highlight>. </paragraph>
<paragraph id="P-0354" lvl="0"><number>&lsqb;0354&rsqb;</number> The first filter <highlight><bold>2130</bold></highlight>, termed &ldquo;phase accumulator&rdquo;, accumulates the phase error <highlight><bold>2125</bold></highlight> outputted by the phase detector <highlight><bold>610</bold></highlight> over a period of time then outputs the accumulated result at the end of the period of time. In the exemplary embodiment shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>, this period of time is 16 symbol periods. The first filter <highlight><bold>2130</bold></highlight> is an &ldquo;accumulate-and-dump&rdquo; filter which includes the adder <highlight><bold>2132</bold></highlight>, a delay element (i.e., register) <highlight><bold>2134</bold></highlight>, and a 16-units-of-time register <highlight><bold>2136</bold></highlight>. The register <highlight><bold>2126</bold></highlight> outputs a lowpass filtered phase error <highlight><bold>2127</bold></highlight> at the rate of one per period of the TRSAMP<highlight><bold>0</bold></highlight> <highlight><bold>2104</bold></highlight> clock, that is, one every 16 symbol periods. When the register <highlight><bold>2126</bold></highlight> outputs the lowpass filtered phase error <highlight><bold>2127</bold></highlight>, the register <highlight><bold>2134</bold></highlight> is cleared and the accumulation of phase error <highlight><bold>2125</bold></highlight> restarts. It is noted that, downstream from the register <highlight><bold>2126</bold></highlight>, circuits are clocked at one sixteenth of the symbol rate. </paragraph>
<paragraph id="P-0355" lvl="0"><number>&lsqb;0355&rsqb;</number> The filtered phase error <highlight><bold>2137</bold></highlight> is inputted to a multiplier <highlight><bold>2140</bold></highlight> where it is multiplied by a factor different than 1 when it is desired that the bandwidth of the phase locked loop be different than its normal value (which is determined by the design of the filter). In the exemplary embodiment depicted in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>, filtered phase error <highlight><bold>2137</bold></highlight> is multiplied by the value <highlight><bold>2</bold></highlight> outputted from a multiplexer <highlight><bold>2142</bold></highlight> when the select signal <highlight><bold>2106</bold></highlight> indicates that the loop filter bandwidth must be larger than normal value. This occurs, for example, during startup of the gigabit transceiver. Similarly, although not shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>, when it is desired that the loop filter bandwidth be narrower than normal value, the filtered phase error <highlight><bold>2137</bold></highlight> can be multiplied by a value less than 1. </paragraph>
<paragraph id="P-0356" lvl="0"><number>&lsqb;0356&rsqb;</number> The output <highlight><bold>2144</bold></highlight> of the multiplier <highlight><bold>2140</bold></highlight> is inputted to the second filter <highlight><bold>2150</bold></highlight> which is an integrator and to the adder <highlight><bold>2160</bold></highlight>. The integrator <highlight><bold>2150</bold></highlight> is an IIR filter having an adder <highlight><bold>2152</bold></highlight> and a register <highlight><bold>2154</bold></highlight>, operating at one sixteenth of the symbol rate. The integrator <highlight><bold>2150</bold></highlight> integrates the signal <highlight><bold>2144</bold></highlight> (which is essentially the filtered phase error <highlight><bold>2137</bold></highlight>) to produce an integrated phase error <highlight><bold>2156</bold></highlight>. The purpose of the phase locked loop is to generate a resulting phase for a sampling clock signal such that the phase error is equal to zero. The purpose of the integrator <highlight><bold>2150</bold></highlight> in the phase locked loop is to keep the phase error of the resulting phase equal to zero even when there is static frequency error. Without the integrator <highlight><bold>2150</bold></highlight>, the static frequency error would result in a static phase error which would be attenuated but not made exactly zero by the phase locked loop. With the integrator <highlight><bold>2150</bold></highlight> in the phase locked loop, any static phase error would be integrated to produce a large growing input signal to the NCO <highlight><bold>670</bold></highlight>, which would cause the phase locked loop to correct the static phase error. The integrated phase error <highlight><bold>2156</bold></highlight> is scaled by a scale factor via a multiplier <highlight><bold>2158</bold></highlight>. This scale factor contributes to the determination of the gain of the integrator <highlight><bold>2150</bold></highlight>. The scaled result <highlight><bold>2159</bold></highlight> is added to the signal <highlight><bold>2144</bold></highlight> via an adder <highlight><bold>2160</bold></highlight>. </paragraph>
<paragraph id="P-0357" lvl="0"><number>&lsqb;0357&rsqb;</number> The output <highlight><bold>2162</bold></highlight> of the adder <highlight><bold>2160</bold></highlight> is inputted to the NCO <highlight><bold>2170</bold></highlight>. The output <highlight><bold>2162</bold></highlight> is scaled by a scale factor, e.g., 2<highlight><superscript>&minus;5</superscript></highlight>, via a multiplier <highlight><bold>2172</bold></highlight>. The resulting scaled signal is recursively filtered by an IIR filter formed by an adder <highlight><bold>2174</bold></highlight> and a register <highlight><bold>2176</bold></highlight>. The IIR filter operates at one sixteenth of the symbol rate. The signal <highlight><bold>2178</bold></highlight>, outputted every 16 symbol periods, is used as the phase control signal to one of the phase selectors <highlight><bold>2010</bold></highlight>, <highlight><bold>2020</bold></highlight>, <highlight><bold>2030</bold></highlight>, <highlight><bold>2040</bold></highlight>, <highlight><bold>2050</bold></highlight>, <highlight><bold>2060</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>). </paragraph>
<paragraph id="P-0358" lvl="0"><number>&lsqb;0358&rsqb;</number> For the embodiment shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>, the gain parameters discussed above are as follows. K<highlight><subscript>v</subscript></highlight>, the gain of the NCO, is 2<highlight><superscript>&minus;11 </superscript></highlight>for normal bandwidth mode, 2<highlight><superscript>&minus;10 </superscript></highlight>for high bandwidth mode. K<highlight><subscript>1</subscript></highlight>, the gain of the integrator <highlight><bold>2150</bold></highlight>, is equal to the product of the scaling of the integrator register <highlight><bold>2154</bold></highlight> (2<highlight><superscript>&minus;8 </superscript></highlight>in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>) and the ratio of the phase locked loop sampling rate to the symbol rate (2<highlight><superscript>&minus;4 </superscript></highlight>in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>). For the word lengths and scaling indicated in <cross-reference target="DRAWINGS">FIG. 21, K</cross-reference><highlight><subscript>1 </subscript></highlight>is equal to 2<highlight><superscript>&minus;12</superscript></highlight>. The gain K<highlight><subscript>d </subscript></highlight>of the phase detector <highlight><bold>2110</bold></highlight> is computed by simulations and is equal to 2.2. These parameters are used to compute the theoretical transfer function of the phase locked loop (PLL) which is then compared with the PLL transfer function obtained by simulation. The match is near perfect, confirming the validity of the design parameters. </paragraph>
<paragraph id="P-0359" lvl="0"><number>&lsqb;0359&rsqb;</number> One embodiment of the system <highlight><bold>2100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 21</cross-reference> further includes the external control signals PLLFRZ, PLLPVAL, PLLPRST, PLLFVAL, PLLFRST, PLLPRAMP, which are not shown explicitly in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>. </paragraph>
<paragraph id="P-0360" lvl="0"><number>&lsqb;0360&rsqb;</number> The control signal PLLFRZ, when applied, forces the phase error to zero to point <highlight><bold>1</bold></highlight> of the first filter <highlight><bold>2130</bold></highlight>, therefore causes freezing of updates of the frequency change and/or phase change, except for any phase change caused by a non-zero value in the frequency register <highlight><bold>2154</bold></highlight> of the integrator <highlight><bold>2150</bold></highlight>. </paragraph>
<paragraph id="P-0361" lvl="0"><number>&lsqb;0361&rsqb;</number> The control signal PLLPVAL is a 3-bit signal provided by the PHY Control system. It is used to specify the reset value of the NCO register <highlight><bold>2176</bold></highlight> of the NCO <highlight><bold>2170</bold></highlight>, and is used in conjunction with the control signal PLLPRST. </paragraph>
<paragraph id="P-0362" lvl="0"><number>&lsqb;0362&rsqb;</number> The control signal PLLPRST, when applied to the NCO register <highlight><bold>2176</bold></highlight> in conjunction with the signal PLLPVAL, resets the 6 most significant bits of the NCO register <highlight><bold>2176</bold></highlight> to a value specified by 8 times PLLPVAL. The reset is performed by stepping up or down the 6 MSB field of the NCO register <highlight><bold>2176</bold></highlight> such that the specified value is reached after a minimum number of steps. Details of the phase reset logic block used to reset the value of the register <highlight><bold>2176</bold></highlight> of the NCO <highlight><bold>2170</bold></highlight> are shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference> and will be discussed later. </paragraph>
<paragraph id="P-0363" lvl="0"><number>&lsqb;0363&rsqb;</number> PLLFVAL is a 3-bit signal provided by the PHY Control system. It is to be interpreted as a 3-bit two&apos;s complement signed integer in the range &lsqb;&minus;4,3&rsqb;. It is used to specify the reset value of the frequency register <highlight><bold>2154</bold></highlight> of the integrator <highlight><bold>2150</bold></highlight> and is used in conjunction with the control signal PLLFRST. </paragraph>
<paragraph id="P-0364" lvl="0"><number>&lsqb;0364&rsqb;</number> The control signal PLLFRST, when applied to the frequency register <highlight><bold>2154</bold></highlight> of the integrator <highlight><bold>2150</bold></highlight> in conjunction with the signal PLLFVAL, resets the frequency register <highlight><bold>2154</bold></highlight> to the value <highlight><bold>65536</bold></highlight> times PLLFVAL. </paragraph>
<paragraph id="P-0365" lvl="0"><number>&lsqb;0365&rsqb;</number> The control signal PLLPRAMP loads the fixed number &minus;2048 into the frequency register <highlight><bold>2154</bold></highlight> of the integrator <highlight><bold>2150</bold></highlight>. This causes the phase of a sampling clock signal (and receive clock RCLK) to ramp at the fixed rate of &minus;2 ppm. This is used during startup at the master constituent transceiver. PLLPRAMP overrides PLLFRST. In other words, if both PLLPRAMP and PLLFRST are both applied, the value loaded into the frequency register <highlight><bold>2154</bold></highlight> is &minus;2048, regardless of the value that PLLFRST tries to load. </paragraph>
<paragraph id="P-0366" lvl="0"><number>&lsqb;0366&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a block diagram illustrating the phase reset logic block <highlight><bold>2200</bold></highlight> to the NCO <highlight><bold>2170</bold></highlight>. The control signal PLLPRST is applied to the AND gate <highlight><bold>2202</bold></highlight>. The output of the AND gate <highlight><bold>2202</bold></highlight> is applied to the increment/decrement enable input of the register <highlight><bold>2176</bold></highlight>. The 3-bit value PLLPVAL from the PHY Control System of the gigabit transceiver is shifted left by 3 bits to form a 6-bit value <highlight><bold>2204</bold></highlight>. </paragraph>
<paragraph id="P-0367" lvl="0"><number>&lsqb;0367&rsqb;</number> The current output of the register <highlight><bold>2176</bold></highlight> of the NCO <highlight><bold>2170</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 21</cross-reference>), which is the phase control signal inputted to the corresponding phase selector (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>), is subtracted from this shifted value of PLLPVAL via an adder <highlight><bold>2206</bold></highlight>. Module <highlight><bold>2208</bold></highlight> determines whether the output of adder <highlight><bold>2206</bold></highlight> is non-zero. If it is non-zero, then module <highlight><bold>2208</bold></highlight> outputs a &ldquo;1&rdquo; to the AND gate <highlight><bold>2202</bold></highlight> to enable the enable input of register <highlight><bold>2176</bold></highlight>. If it is zero, module <highlight><bold>2206</bold></highlight> outputs a zero to the AND gate <highlight><bold>2208</bold></highlight> to disable the enable input of the register <highlight><bold>2176</bold></highlight>. Module <highlight><bold>2210</bold></highlight> determines whether the output of adder <highlight><bold>2206</bold></highlight> is positive or negative. If it is positive, module <highlight><bold>2210</bold></highlight> outputs a count up indicator to the register <highlight><bold>2176</bold></highlight>. If it is negative, module <highlight><bold>2210</bold></highlight> outputs a count down indicator to register <highlight><bold>2176</bold></highlight>. </paragraph>
<paragraph id="P-0368" lvl="0"><number>&lsqb;0368&rsqb;</number> The subtraction at adder <highlight><bold>2206</bold></highlight> finds the shortest path from the current value of the NCO register <highlight><bold>2176</bold></highlight> to the shifted PPLVAL <highlight><bold>2204</bold></highlight>. For example, suppose the current phase value of register <highlight><bold>2176</bold></highlight> is 20. If the shifted PPLVAL <highlight><bold>2204</bold></highlight> (which is the desired value) is 32, the difference is 12, which is positive, therefore, the register <highlight><bold>676</bold></highlight> is incremented. If the desired phase value is 56, the difference is 36 or &ldquo;100100&rdquo; which is interpreted as &minus;28, so the register <highlight><bold>2176</bold></highlight> will be decremented 28 consecutive times. The phase steps occur at the rate of one every 16 symbol periods. This single stepping is needed because of the way the phase selector operates. The phase selector can only increment or decrement from its current setting. </paragraph>
<paragraph id="P-0369" lvl="0"><number>&lsqb;0369&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a block diagram of an exemplary phase shifter logic block used for the phase control of the receive clock signal RCLK. The phase shifter logic block <highlight><bold>2300</bold></highlight> is needed when the signal RCLK Offset (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) is used to adjust the phase of the receive clock signal RCLK. The signal RCLK Offset is a 6-bit signal provided by the PHY Control system, and specifies the amount by which the phase of RCLK must shifted. Even if the signal RCLK Offset indicates a large amount of phase shift, this phase shift must be transferred to the input of the phase selector <highlight><bold>2050</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) one step at a time due to the way the phase selector operates. The change of phase of RCLK must occur in the direction indicated by a control signal STEPDIR generated by the PHY Control system. </paragraph>
<paragraph id="P-0370" lvl="0"><number>&lsqb;0370&rsqb;</number> The phase shifter logic block <highlight><bold>2300</bold></highlight> includes a comparator <highlight><bold>2302</bold></highlight>, an offset register <highlight><bold>2304</bold></highlight> and the adder <highlight><bold>2042</bold></highlight> (the same adder indicated in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>). The comparator <highlight><bold>2302</bold></highlight> compares the output <highlight><bold>2306</bold></highlight> of the offset register <highlight><bold>804</bold></highlight> with the signal RCLK Offset. If the two signals are equal, then the comparator <highlight><bold>2302</bold></highlight> outputs a &ldquo;0&rdquo; to the enable input of the offset register <highlight><bold>2304</bold></highlight> to disable the up/down counting of the offset register <highlight><bold>2304</bold></highlight>, thus keeping the output <highlight><bold>2306</bold></highlight> the same for the next time period. If the two signals are not equal, the comparator <highlight><bold>2302</bold></highlight> outputs a &ldquo;1&rdquo; to the enable input of the offset register <highlight><bold>2304</bold></highlight> to enable the up/down counting, causing the output <highlight><bold>2306</bold></highlight> to be incremented or decremented at the next time period. The signal STEPDIR from the PHY Control system is inputted to the up/down input of the offset register <highlight><bold>2304</bold></highlight> to control the counting direction. The output <highlight><bold>2306</bold></highlight> from the offset register <highlight><bold>2304</bold></highlight> is added to the phase control signal <highlight><bold>2009</bold></highlight> produced by the NCO <highlight><bold>2008</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) via the adder <highlight><bold>2042</bold></highlight> to generate the phase control signal <highlight><bold>2049</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 23 and 20</cross-reference>) for the RCLK phase selector <highlight><bold>2050</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>). </paragraph>
<paragraph id="P-0371" lvl="0"><number>&lsqb;0371&rsqb;</number> The coupling of switching noise from the digital signal processor that implements the transceiver functions to each of the A/D converters is an important problem that needs to be addressed. Switching noise occurs when transistors switch states in accordance with transitions in the clock signal (or signals) that controls their operation. Switching noise in the digital section of the transceiver can be coupled to the analog section of the transceiver. Switching noise can cause severe degradation to the performance of an A/D converter if it occurs right at or near the instant the A/D converter is sampling the received signal. The present invention, in addition to providing a timing recovery method and system, also provides a method and system for minimizing the degradation of the performance of the A/D converters caused by switching noise. </paragraph>
<paragraph id="P-0372" lvl="0"><number>&lsqb;0372&rsqb;</number> The effect of switching noise on an A/D converter can be reduced if the switching noise is synchronous (with a phase delay) with the sampling clock of the A/D converter. If, in addition, it is possible to adjust the phase of the sampling clock of the A/D converter with respect to the phase of the switching noise, then the phase of the sampling clock of the A/D converter can be optimized for minimum noise. It is noted that, for a local gigabit transceiver, the sampling clock signals ACLK<highlight><bold>0</bold></highlight>, ACLK<highlight><bold>1</bold></highlight>, ACLK<highlight><bold>2</bold></highlight>, ACLK<highlight><bold>3</bold></highlight> are synchronous to each other (i.e., having the same frequency) because they are synchronous to the 4 transmitters of the remote transceiver and these 4 remote transmitters are clocked by a same transmit clock signal TCLK. It is also important to note that the local receive clock signal RCLK is synchronous to the local sampling clock signals ACLK<highlight><bold>0</bold></highlight>, ACLK<highlight><bold>1</bold></highlight>, ACLK<highlight><bold>2</bold></highlight>, ACLK<highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0373" lvl="0"><number>&lsqb;0373&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIGS. 2 and 5</cross-reference>, the four A/D converters <highlight><bold>216</bold></highlight> of the four constituent transceivers are sampled with the sampling clock signals ACLK<highlight><bold>0</bold></highlight>, ACLK<highlight><bold>1</bold></highlight>, ACLK<highlight><bold>2</bold></highlight>, ACLK<highlight><bold>3</bold></highlight>. Each of the phases of these sampling clock signals is determined by the subsystem <highlight><bold>600</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 21</cross-reference>) of the timing recovery system <highlight><bold>222</bold></highlight> in response to the phase of the corresponding received signal, which depends on the remote transmitter and the line characteristics. Thus, the phases of the sampling clock signals change from line to line, and are not under the control of the system designer. </paragraph>
<paragraph id="P-0374" lvl="0"><number>&lsqb;0374&rsqb;</number> However, the relative phase of the receive clock signal RCLK with respect to the sampling clock signals ACLK<highlight><bold>0</bold></highlight>, ACLK<highlight><bold>1</bold></highlight>, ACLK<highlight><bold>2</bold></highlight>, ACLK<highlight><bold>3</bold></highlight> can be controlled by adjusting the signal RCLK Offset (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>). The signal RCLK Offset can be used to select the RCLK phase that would cause the least noise coupling to the A/D converters <highlight><bold>216</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The underlying principle is the following. Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference> and the boundaries of the clock domain, the entire digital signal processing, control and interface functions of the receiver operate in accordance with transitions in the receive clock signal RCLK. In other words, most of the digital logic circuits switch states on a transition of RCLK (more specifically, on a rising edge of RCLK). Only a small portion of the transceiver operates in accordance with transitions in the transmit clock signal TCLK. Therefore, most of the switching noise is synchronous with the receive clock signal RCLK. Since the receive clock signal RCLK is synchronous with the sampling clock signals ACLK<highlight><bold>0</bold></highlight>, ACLK<highlight><bold>1</bold></highlight>, ACLK<highlight><bold>2</bold></highlight>, ACLK<highlight><bold>3</bold></highlight>, it follows that most of the switching noise is synchronous with the sampling clock signals ACLK<highlight><bold>0</bold></highlight>, ACLK<highlight><bold>1</bold></highlight>, ACLK<highlight><bold>2</bold></highlight>, ACLK<highlight><bold>3</bold></highlight>. Therefore, if the phase of the receive clock signal RCLK is adjusted such that a transition in the signal RCLK occurs as far as possible in time from each of the sampling clock signals ACLK<highlight><bold>0</bold></highlight>, ACLK<highlight><bold>1</bold></highlight>, ACLK<highlight><bold>2</bold></highlight>, ACLK<highlight><bold>3</bold></highlight>, then the switching noise coupling to the A/D converters will be minimized. </paragraph>
<paragraph id="P-0375" lvl="0"><number>&lsqb;0375&rsqb;</number> The process for adjusting the phase of the receive clock signal RCLK can be summarized as follows. The process performs an exhaustive search over all the RCLK phases that, by design, can possibly exist in one symbol period. For each phase; the process computes the sum of the mean squared errors (MSEs) of the 4 pairs (i.e., the 4 constituent transceivers). At the end of the search, the process selects the RCLK phase that minimizes the sum of the MSEs of the four pairs. The following is a description of one embodiment of the RCLK phase adjustment process, where there are 64 possible RCLK phases. </paragraph>
<paragraph id="P-0376" lvl="0"><number>&lsqb;0376&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is a flowchart illustrating the process <highlight><bold>2400</bold></highlight> for adjusting the phase of the receive clock signal RCLK. Upon Start (block <highlight><bold>2402</bold></highlight>), process <highlight><bold>2400</bold></highlight> initializes all the state variables (which include counters, registers), sets Offset to &minus;32 (block <highlight><bold>2404</bold></highlight>), sets Min_MSE equal to the MSE of the gigabit transceiver before any RCLK phase change, and sets BestOffset equal to zero. The MSE of the gigabit transceiver is the sum of the mean squared errors (MSEs) of the 4 constituent transceivers. The MSE of a constituent transceiver is the mean squared error of the corresponding 1D component of the 4D slicer error <highlight><bold>42</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>), and is outputted by a MSE computation block <highlight><bold>2700</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 27</cross-reference>) for every frame. Each frame is equal to 1024 symbol periods. This initialization is done within a duration of 1 frame. Process <highlight><bold>2400</bold></highlight> then waits for the effect of the RCLK phase change on the system to settle (block <highlight><bold>2406</bold></highlight>). The duration of this waiting is 5 frames. Process <highlight><bold>2400</bold></highlight> then computes MSE (by summing the MSEs of all four constituent transceivers outputted by the corresponding MSE computation block <highlight><bold>2700</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 27</cross-reference>) which corresponds to the current setting of RCLK Offset (block <highlight><bold>908</bold></highlight>). The duration of block <highlight><bold>2408</bold></highlight> is one frame. In block <highlight><bold>2410</bold></highlight>, process <highlight><bold>2400</bold></highlight> compares the new MSE with Min_MSE. If the new MSE is strictly less than Min_MSE, then Min-MSE is set to the value of the new MSE and BestOffset is set to the value of Offset. In block <highlight><bold>2412</bold></highlight>, process checks whether Offset is equal to 31, i.e., whether all possible 64 phase offsets have been searched. If Offset is not equal to 31, then process <highlight><bold>2400</bold></highlight> increments Offset by 1 (block <highlight><bold>2414</bold></highlight>) then continues the search for the best RCLK Offset by going back to block <highlight><bold>2406</bold></highlight>. If Offset is equal to 31, that is, if process <highlight><bold>2400</bold></highlight> has searched all possible 64 phase offsets, then process <highlight><bold>2400</bold></highlight> sets Offset equal to the value of BestOffset (block <highlight><bold>2416</bold></highlight>) then terminates (block <highlight><bold>2418</bold></highlight>). The duration of each of blocks <highlight><bold>2414</bold></highlight> and <highlight><bold>2416</bold></highlight> is 1 frame. </paragraph>
<paragraph id="P-0377" lvl="0"><number>&lsqb;0377&rsqb;</number> After adjustment of the receive clock RCLK phase, small adjustments can be made to the phases of the sampling clocks ACLK<highlight><bold>1</bold></highlight>, ACLK<highlight><bold>2</bold></highlight>, ACLK<highlight><bold>3</bold></highlight> to further reduce the coupling of switching noise to the A/D converters. Since the timing recovery system <highlight><bold>222</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 20</cross-reference> without the ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight> Offsets, through the phase locked loop principle, already sets the sampling clocks at the optimal sampling positions with respect to the pulse shape of incoming signals from the remote transceivers, the small phase adjustments made to the sampling clocks could cause some loss of performance of the A/D converters. However, the net result is still better than performing no phase adjustment of the sampling clocks and allowing the A/D converters to sample the incoming signals at a noisy instant where the transistors in the digital section are switching states. In the embodiment depicted in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, phase adjustment is not made to the sampling clock ACLK<highlight><bold>0</bold></highlight> because, by design of the structure of the embodiment, the phase difference between ACLK<highlight><bold>0</bold></highlight> and RCLK is equal to RCLK Offset. Thus, in this embodiment, any adjustment to the phase of ACLK<highlight><bold>0</bold></highlight> will also move RCLK away from the optimal position determined by process <highlight><bold>2400</bold></highlight> above by the same amount of phase adjustment. </paragraph>
<paragraph id="P-0378" lvl="0"><number>&lsqb;0378&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 25A, 25B</cross-reference>, <highlight><bold>25</bold></highlight>C illustrate three examples of distribution of the transitions of clock signals within a symbol period to further clarify the concept of phase adjustment of the clock signals. It is noted that, in these examples, the four sampling clock signals ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight> are shown as occurring in their consecutive order within a symbol period for illustrative purpose only. It is understood that the sampling clock signals ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight> can occur in any order. </paragraph>
<paragraph id="P-0379" lvl="0"><number>&lsqb;0379&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25A</cross-reference> is a first example of clock distribution where the transitions of the four sampling clock signals ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight> are evenly distributed within the symbol period of 8 nanoseconds (ns). Thus, each ACLK clock transition is 2 ns apart from an adjacent transition of another ACLK clock. Therefore, for this clock distribution example, a transition of the receive clock RCLK can only be placed at most 1 ns away from an adjacent ACLK transition. This &ldquo;distance&rdquo; (phase delay) may not be enough to reduce the coupling of switching noise to the two A/D converters associated with the two adjacent sampling clock signals (ACLK<highlight><bold>3</bold></highlight> and ACLK<highlight><bold>0</bold></highlight>, in the example). In this case, it may be desirable to slightly adjust the phase of the two adjacent sampling clock signals to move their respective transitions further away from a RCLK transition, as illustrated by their new transition occurrences within a symbol period in <cross-reference target="DRAWINGS">FIG. 25A</cross-reference>. </paragraph>
<paragraph id="P-0380" lvl="0"><number>&lsqb;0380&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25B</cross-reference> is a second example of clock distribution where the transitions of the four sampling clock signals ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight> are distributed within the symbol period of 8 nanoseconds (ns) such that each ACLK clock transition is 1 ns apart from an adjacent transition of another ACLK clock. For this clock distribution example, a transition of the receive clock RCLK can be positioned midway between the last ACLK transition of one symbol period (ACLK<highlight><bold>3</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 25B</cross-reference>) and the first ACLK transition of the next symbol period (ACLK<highlight><bold>0</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 25B</cross-reference>) so that the RCLK transition is 2.5 ns from an adjacent ACLK transition. This &ldquo;distance&rdquo; (phase delay) may be enough to reduce the coupling of switching noise to the two A/D converters associated with the two adjacent sampling clock signals (ACLK<highlight><bold>3</bold></highlight> and ACLK<highlight><bold>0</bold></highlight>, in the example). In this case, phase adjustment of the two adjacent sampling clock signals to move their respective transitions further away from a RCLK transition may not be needed. </paragraph>
<paragraph id="P-0381" lvl="0"><number>&lsqb;0381&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25C</cross-reference> is a third example of clock distribution where the transitions of the four sampling clock signals ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight> occur at the same instant within the symbol period of 8 nanoseconds (ns). In this clock distribution example, a transition of the receive clock RCLK can be positioned at the maximum possible distance of 4 ns from an adjacent ACLK transition. This is the best clock distribution that allows maximum reduction of coupling of switching noise to the four A/D converters associated with the sampling clock signals. In this case, there is no need for phase adjustment of the sampling clock signals. </paragraph>
<paragraph id="P-0382" lvl="0"><number>&lsqb;0382&rsqb;</number> For the embodiment shown in <cross-reference target="DRAWINGS">FIG. 20</cross-reference> of the timing recovery system <highlight><bold>222</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>), the following phase adjustment process is applied to the three sampling clock signals ACLK<highlight><bold>1</bold></highlight>, ACLK<highlight><bold>2</bold></highlight>, ACLK<highlight><bold>3</bold></highlight>. It is understood that, in a different embodiment of the timing recovery system <highlight><bold>222</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) where the receive clock signal RCLK is not tied to one of the sampling clock signals ACLK<highlight><bold>0</bold></highlight>-<highlight><bold>3</bold></highlight>, the following phase adjustment process can be applied to all of the sampling clock signals. </paragraph>
<paragraph id="P-0383" lvl="0"><number>&lsqb;0383&rsqb;</number> The process for adjusting the phase of a sampling clock signal ACLKx (&ldquo;x&rdquo; in ACLKx denotes one of 0, 1, 2, 3) can be summarized as follows. The process performs a search over a small range of phases around the initial ACLKx phase. For each phase, the process logs the mean squared error MSE of the associated constituent transceivers. At the end of the search, the process selects the ACLKx phase that minimizes the MSE of the associated constituent transceiver. </paragraph>
<paragraph id="P-0384" lvl="0"><number>&lsqb;0384&rsqb;</number> Whenever the phase of a sampling clock signal ACLKx changes, the coefficients of the echo canceller <highlight><bold>232</bold></highlight> and of the NEXT cancellers <highlight><bold>230</bold></highlight> change. Thus, to avoid degradation of performance, the phase steps of the sampling clocks should be small so that the change they induce on the coefficients is also small. When the phase adjustment requires multiple consecutive phase steps, the convergence of the coefficients of the echo canceller <highlight><bold>232</bold></highlight> and of the NEXT cancellers <highlight><bold>230</bold></highlight> should be fast in order to avoid a buildup of coefficient mismatch. </paragraph>
<paragraph id="P-0385" lvl="0"><number>&lsqb;0385&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a flowchart illustrating an embodiment of the process for adjusting the phase of a sampling clock signal ACLKx associated with one of the constituent transceivers, where the search is over a range of <highlight><bold>16</bold></highlight> phases around the initial ACLKx phase. For each of the constituent transceivers, process <highlight><bold>2600</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is run independently of and concurrently with the other constituent transceivers. Upon Start (block <highlight><bold>2602</bold></highlight>), process <highlight><bold>2600</bold></highlight> initializes all the state variables (which include counters, registers), sets Offset to &minus;8 (block <highlight><bold>2604</bold></highlight>), sets Min_MSE equal to the MSE of the associated constituent transceiver before any RCLK phase change, and sets BestOffset equal to zero. The MSE of the associated constituent transceiver is the mean squared error of the corresponding 1D component of the 4D slicer error <highlight><bold>42</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). This initialization is done within a duration of 1 frame. Process <highlight><bold>2600</bold></highlight> then waits for the effect of the ACLK phase change on the system to settle (block <highlight><bold>2606</bold></highlight>). The duration of this waiting is 32 frames. (block <highlight><bold>2608</bold></highlight>). The duration of block <highlight><bold>2608</bold></highlight> is one frame. In block <highlight><bold>2610</bold></highlight>, process <highlight><bold>2600</bold></highlight> compares the new MSE (outputted by the corresponding MSE computation block <highlight><bold>2700</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 27</cross-reference>) which corresponds to the current setting of ACLKx Offset with Min_MSE. If the new MSE is strictly less than Min_MSE, then Min-MSE is set to the value of the new MSE and BestOffset is set to the value of Offset. In block <highlight><bold>2612</bold></highlight>, process <highlight><bold>2600</bold></highlight> checks whether Offset is equal to 7, i.e., whether all 16 phase offsets in the range have been searched. If Offset is not equal to 7, then process <highlight><bold>2700</bold></highlight> increments Offset by 1 (block <highlight><bold>2614</bold></highlight>) then continues the search for the best ACLKx Offset by looping back to block <highlight><bold>2606</bold></highlight>. If Offset is equal to 7, that is, if process <highlight><bold>2600</bold></highlight> has searched all the 16 phase offsets in the range, then process <highlight><bold>2600</bold></highlight> sets Offset equal to the value of BestOffset (block <highlight><bold>2616</bold></highlight>) then terminates (block <highlight><bold>2618</bold></highlight>). The duration of each of blocks <highlight><bold>2614</bold></highlight> and <highlight><bold>2616</bold></highlight> is 1 frame. </paragraph>
<paragraph id="P-0386" lvl="0"><number>&lsqb;0386&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> is a block diagram of an exemplary implementation of the MSE computation block used for computing the mean squared error of a constituent transceiver. In one embodiment of the gigabit transceiver, there are four MSE computation blocks, one for each of the four constituent transceivers. The four MSE computation blocks are run independently and concurrently for the four constituent transceivers. The MSE computation block <highlight><bold>2700</bold></highlight> includes a squaring module <highlight><bold>2702</bold></highlight> and an infinite impulse response (IIR) filter <highlight><bold>2704</bold></highlight>. The IIR filter <highlight><bold>2704</bold></highlight> includes an adder <highlight><bold>2706</bold></highlight>, a feedback delay element <highlight><bold>2708</bold></highlight> and a forward delay element <highlight><bold>2710</bold></highlight>. The squaring module <highlight><bold>2702</bold></highlight> receives the corresponding 1D component of the 4D slicer error <highlight><bold>42</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>), which is denoted as <highlight><bold>42</bold></highlight>A for simplicity, and out puts the squared error value to the filter <highlight><bold>2704</bold></highlight>. The filter <highlight><bold>2704</bold></highlight> accumulates the squared error values by adding via the adder <highlight><bold>2706</bold></highlight> the current squared error value to the previous squared error value stored in the feedback delay element <highlight><bold>2708</bold></highlight>. The accumulated value is stored in the forward register <highlight><bold>2710</bold></highlight>. In the exemplary embodiment shown in <cross-reference target="DRAWINGS">FIG. 27</cross-reference>, the squared error values are accumulated for 1024 symbol periods (which is one frame of the PHY Control system). Since the accumulation period is sufficiently long, the accumulated value practically corresponds to the mean squared error. At the end of the accumulation period, the clock signal <highlight><bold>2720</bold></highlight> from the PHY Control system clears the contents of the feedback delay element, and clocks the forward delay element <highlight><bold>2710</bold></highlight> so that the forward delay element <highlight><bold>2710</bold></highlight> outputs the accumulated value MSE and resets to zero. </paragraph>
<paragraph id="P-0387" lvl="0"><number>&lsqb;0387&rsqb;</number> While certain exemplary embodiments have been described in detail and shown in the accompanying drawings, it is to be understood that such embodiments are merely illustrative of and not restrictive on the broad invention. It will thus be recognized that various modifications may be made to the illustrated and other embodiments of the invention described above, without departing from the broad inventive scope thereof. It will be understood, therefore, that the invention is not limited to the particular embodiments or arrangements disclosed, but is rather intended to cover any changes, adaptations or modifications which are within the scope and spirit of the invention as defined by the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. An integrated circuit communication device configured for operation over a multi-pair transmission channel, the communication device comprising: 
<claim-text>measurement circuitry configured to measure a performance degradation characteristic resulting from disabling each member of a set of sub-pluralities of a plurality of circuit elements; 
<claim-text>disabling circuitry configured to adaptively disable one or more of the sub-pluralities of the circuit elements until the performance degradation characteristic reaches a threshold level; and </claim-text>
<claim-text>a decision feedback sequence estimation (DFSE) circuit, the DFSE decoding an input sample into a final decision corresponding to a codeword of a trellis code having N states, the DFSE including; 
<claim-text>a decoder circuit for decoding a set of signal samples to generate tentative decisions and the final decision; and </claim-text>
<claim-text>a single state decision feedback equalizer. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, the decision feedback equalizer coupled to the decoder circuit for receiving the tentative decisions, the single state decision feedback equalizer including: 
<claim-text>a set of low-ordered coefficients; and </claim-text>
<claim-text>a set of high-ordered coefficients generating a tail value based on the tentative decisions and the input sample. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, further comprising a state multiplication circuit, the state multiplication circuit expanding a single state representation of a signal received from the single state decision feedback equalizer into an N state representation suitable for decoding by the DFSE. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, the state multiplication circuit comprising a multiple decision feedback equalizer coupled to the decision-feedback equalizer and generating an N state representation of signal samples in response to the tail value and the set of low-ordered coefficients received from the decision feedback equalizer. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, the DFSE circuit further comprising: 
<claim-text>a Viterbi decoder for receiving the set of signal samples, the Viterbi decoder computing path metrics for each of the N states of the trellis code and outputing decisions based on the path metrics; and </claim-text>
<claim-text>a path memory module coupled to the Viterbi decoder for receiving the decisions, the path memory module having a number of depth levels corresponding to consecutive time instants, each of the depth levels including N registers for storing decisions corresponding to the N states, each of selected depth levels including a multiplexer for selecting a best decision from corresponding N registers, the best decision at the last depth level being the final decision, the best decisions at other selected depth levels being the tentative decisions. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, the multiple decision feedback equalizer comprising: 
<claim-text>a memory; </claim-text>
<claim-text>a set of symbolic levels contained within the memory; and </claim-text>
<claim-text>a convolution engine coupled to combine the set of low order coefficients with each member of the set of symbolic levels. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. An integrated circuit communication device configured for operation over a multi-pair transmission channel, the communication device comprising: 
<claim-text>measurement circuitry configured to measure a performance degradation characteristic resulting from disabling each member of a set of sub-pluralities of a plurality of circuit elements; </claim-text>
<claim-text>disabling circuitry configured to adaptively disable one or more of the sub-pluralities of the circuit elements until the performance degradation characteristic reaches a threshold level; and </claim-text>
<claim-text>a single state decision feedback equalizer; </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, the single state decision feedback equalizer having a set of ordered coefficients, the decision feedback equalizer defining a coefficient related tail value and a low order subset of coefficient values </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the single state decision feedback equalizer has a width dimension D, wherein the width dimension D corresponds to the number of pairs defining the multi-pair transmission channel. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, further comprising a state multiplication circuit, the state multiplication circuit expanding a single state representation output signal received from the single state decision feedback equalizer into an N state representation signal suitable for decoding by the DFSE. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, the state multiplication circuit comprising: 
<claim-text>a convolution engine coupled to combine the low order subset of coefficient values with each member of a set of symbolic levels to define a first sample signal set; and </claim-text>
<claim-text>a summing circuit coupled to combine the tail value with each member of the first sample signal set to define an N state representational set of signal samples. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, further comprising: 
<claim-text>a control module controlling activation and deactivation of at least a portion of the sub-pluralities of the circuit elements according to a criterion, the criterion being based on at least one of an information error metric, a power metric, a specified error and a specified power; and </claim-text>
<claim-text>a computing module coupled to the control module, the computing module computing at least one of the information error metric and the power metric. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the criterion is the following: 
<claim-text>activate if the information error metric is greater than the specified error; and </claim-text>
<claim-text>deactivate if the information error metric is smaller than the specified error. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the criterion is the following: 
<claim-text>activate if the information error metric is greater than the specified error and the power metric is smaller than the specified power; and </claim-text>
<claim-text>deactivate if the information error metric is smaller than the specified error or the power metric is greater than the specified power. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the information error metric is related to a bit error rate of the communication system. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. An integrated circuit communication device configured for operation over a multi-pair transmission channel, the communication device comprising: 
<claim-text>a single state decision feedback equalizer having a set of ordered coefficients, the decision feedback equalizer defining a coefficient related tail value and a low order subset of coefficient values; </claim-text>
<claim-text>a state multiplication circuit, the state multiplication circuit expanding a single state representation output signal received from the single state decision feedback equalizer into an N state representation signal suitable for decoding by the DFSE; </claim-text>
<claim-text>a first ISI compensation circuit receiving an input signal and outputting a second signal substantially compensated for a first ISI component; and </claim-text>
<claim-text>a second ISI compensation circuit, the second ISI compensation circuit receiving the second signal and generating a third signal, the third signal being substantially compensated for a second ISI component. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, the first ISI compensation device comprising an equalizer circuit, including: 
<claim-text>an ISI compensation filter having a substantially inverse impulse response to the impulse response of a pulse shaping filter of a remote transmitter; and </claim-text>
<claim-text>an adaptive gain stage. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, the second ISI compensation device comprising a decision feedback sequence estimation circuit </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, the decision feedback sequence estimation circuit comprising: 
<claim-text>a decoder circuit receiving and decoding at least one ISI compensated signal sample, and generating tentative decisions and a final decision; and </claim-text>
<claim-text>a decision feedback equalizer coupled in feedback fashion to the decoder block, the decision feedback equalizer including a set of low-ordered coefficients and a set of high-ordered coefficients, the decision feedback equalizer generating a first portion of ISI compensation for the second ISI component based on the tentative decisions and the high-ordered coefficients. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the decision feedback sequence estimation circuit further comprises a convolution engine coupled to the decision feedback equalizer to receive values of the low-ordered coefficients, the convolution engine computing a set of pre-computed values representing a set of potential second ISI compensation portions for the second ISI component. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein a second digital signal is combined with the first portion of ISI compensation to produce a third digital signal partially compensated for the second ISI component. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the decision feedback sequence estimation circit further comprises a multiple decision feedback equalizer coupled to the decision feedback equalizer and the convolution engine, the multiple decision feedback equalizer combining the set of pre-computed values with the third digital signal to produce a set of potential digital signals, one of the potential digital signals being substantially compensated for the second ISI component. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the first ISI component represents ISI introduced by a remote transmission device, and wherein the second ISI component represents ISI introduced by transmission channel characteristics. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. An integrated circuit communication device configured for operation over a multi-pair transmission channel, the communication device comprising: 
<claim-text>measurement circuitry configured to measure a performance degradation characteristic resulting from disabling each member of a set of sub-pluralities of a plurality of circuit elements; </claim-text>
<claim-text>disabling circuitry configured to adaptively disable one or more of the sub-pluralities of the circuit elements until the performance degradation characteristic reaches a threshold level; and </claim-text>
<claim-text>a first ISI compensation circuit configured to compensate for a transmitter induced ISI component; and </claim-text>
<claim-text>a second ISI compensation circuit configured to compensate for a transmission channel induced ISI component. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, the first ISI compensation device comprising an equalizer circuit, including: 
<claim-text>an ISI compensation filter having a substantially inverse impulse response to the impulse response of a pulse shaping filter of a remote transmitter; and </claim-text>
<claim-text>an adaptive gain stage. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, the second ISI compensation device comprising a decision feedback sequence estimation circuit </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, the decision feedback sequence estimation circuit comprising: 
<claim-text>a decoder circuit receiving and decoding at least one ISI compensated signal sample, and generating tentative decisions and a final decision; and </claim-text>
<claim-text>a decision feedback equalizer coupled in feedback fashion to the decoder block, the decision feedback equalizer including a set of low-ordered coefficients and a set of high-ordered coefficients, the decision feedback equalizer generating a first portion of ISI compensation for the second ISI component based on the tentative decisions and the high-ordered coefficients. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein the decision feedback sequence estimation circuit further comprises a convolution engine coupled to the decision feedback equalizer to receive values of the low-ordered coefficients, the convolution engine computing a set of pre-computed values representing a set of potential second ISI compensation portions for the second ISI component. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein a second digital signal is combined with the first portion of ISI compensation to produce a third digital signal partially compensated for the second ISI component. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein the decision feedback sequence estimation circit further comprises a multiple decision feedback equalizer coupled to the decision feedback equalizer and the convolution engine, the multiple decision feedback equalizer combining the set of pre-computed values with the third digital signal to produce a set of potential digital signals, one of the potential digital signals being substantially compensated for the second ISI component. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the first ISI component represents ISI introduced by a remote transmission device, and wherein the second ISI component represents ISI introduced by transmission channel characteristics. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, further comprising: 
<claim-text>a control module controlling activation and deactivation of at least a portion of the sub-pluralities of the circuit elements according to a criterion, the criterion being based on at least one of an information error metric, a power metric, a specified error and a specified power; and </claim-text>
<claim-text>a computing module coupled to the control module, the computing module computing at least one of the information error metric and the power metric. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference>, wherein the criterion is the following: 
<claim-text>activate if the information error metric is greater than the specified error; and </claim-text>
<claim-text>deactivate if the information error metric is smaller than the specified error. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein the criterion is the following: 
<claim-text>activate if the information error metric is greater than the specified error and the power metric is smaller than the specified power; and </claim-text>
<claim-text>deactivate if the information error metric is smaller than the specified error or the power metric is greater than the specified power. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein the information error metric is related to a bit error rate of the communication system. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. An integrated circuit communication device configured for operation over a multi-pair transmission channel, the communication device comprising: 
<claim-text>measurement circuitry configured to measure a performance degradation characteristic resulting from disabling each member of a set of sub-pluralities of a plurality of circuit elements; </claim-text>
<claim-text>disabling circuitry configured to adaptively disable one or more of the sub-pluralities of the circuit elements until the performance degradation characteristic reaches a threshold level; and </claim-text>
<claim-text>a decoder system for computing the distance of a received symbolic word from a codeword. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, further comprising: 
<claim-text>a control module controlling activation and deactivation of at least a portion of the sub-pluralities of the circuit elements according to a criterion, the criterion being based on at least one of an information error metric, a power metric, a specified error and a specified power; and </claim-text>
<claim-text>a computing module coupled to the control module, the computing module computing at least one of the information error metric and the power metric. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein the criterion is the following: 
<claim-text>activate if the information error metric is greater than the specified error; and </claim-text>
<claim-text>deactivate if the information error metric is smaller than the specified error. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein the criterion is the following: 
<claim-text>activate if the information error metric is greater than the specified error and the power metric is smaller than the specified power; and </claim-text>
<claim-text>deactivate if the information error metric is smaller than the specified error or the power metric is greater than the specified power. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein the information error metric is related to a bit error rate of the communication system. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, configured to receive information encoded in accordance with a multi-level symbolic scheme and over a multi-dimensional transmission channel, the decoder system comprising: 
<claim-text>an input, coupled to receive an input signal; </claim-text>
<claim-text>a first slicer, coupled to detect the input signal with respect to a first one of two disjoint one-dimensional symbol-subsets; and </claim-text>
<claim-text>a second slicer, coupled to detect the input signal with respect to a second one of the two disjoint one-dimensional symbol-subsets; </claim-text>
<claim-text>wherein the first slicer outputs a first decision term and a first error term with respect to the first one of the two disjoint one-dimensional symbol-subsets, the second slicer outputting a second decision term and a second error term with respect to the second one of the two disjoint one-dimensional symbol-subsets; and </claim-text>
<claim-text>wherein each of the first and second error terms is expressed by a digital representation having substantially fewer bits than the input signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The symbol decoder according to <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, wherein each of the first and second error terms represents a distance metric between the input signal and a symbol in the respective one of the two disjoint one-dimensional symbol-subsets. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, configured to receive information encoded in accordance with a multi-level symbolic scheme and over a multi-dimensional transmission channel, the decoder system comprising: 
<claim-text>an input to receive an input signal; </claim-text>
<claim-text>a first slicer coupled to the input, the first slicer detecting the input signal with respect to a first one of two disjoint one-dimensional symbol-subsets; </claim-text>
<claim-text>a second slicer coupled to the input, the second slicer detecting the input signal with respect to a second one of the two disjoint one-dimensional symbol-subsets; and </claim-text>
<claim-text>a third slicer coupled to detect the input signal with respect to a union set of the two disjoint one-dimensional symbol-subsets. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00044">claim 43</dependent-claim-reference>, wherein the first slicer outputs a first decision with respect to the first one of the two disjoint one-dimensional symbol-subsets, the second slicer ouputting a second decision with respect to the second one of the two disjoint one-dimensional symbol-subsets, and wherein the third slicer outputs a third decision with respect to the union set of the two disjoint one-dimensional symbol-subsets. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00044">claim 44</dependent-claim-reference>, further comprising: 
<claim-text>a first combination logic block configured to combine the first decision with the third decision, the first combination logic block defining a first error term; and </claim-text>
<claim-text>a second combination logic block configured to combine the second decision with the third decision, the second combination logic block defining a second error term. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference>, further comprising: 
<claim-text>a first square error generation block configured to operate on the first error term so as to define a square error representation thereof; and </claim-text>
<claim-text>a second square error generation block configured to operate on the second error term so as to define a square error representation thereof. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, wherein each of the error terms is expressed as a digital representation having one bit. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. An integrated circuit communication device configured for operation over a multi-pair transmission channel, the communication device comprising: 
<claim-text>a first ISI compensation circuit configured to compensate for a transmitter induced ISI component; </claim-text>
<claim-text>a second ISI compensation circuit configured to compensate for a transmission channel induced ISI component; and </claim-text>
<claim-text>a decoder system for computing the distance of a received symbolic word from a codeword. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, wherein the first ISI compensation circuit comprises: 
<claim-text>an inverse partial response filter having an impulse response substantially an inverse of an impulse response of a pulse shaping filter of a remote transmitter, so as to substantially compensate an input digital signal for a first ISI component. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the inverse partial response filter is implemented with a characteristic feedback gain factor K. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00055">claim 50</dependent-claim-reference>, wherein the inverse partial response filter operates in accordance with a non-zero value of the characteristic feedback gain factor K during communication initialization and wherein the value of the feedback gain factor K is ramped down to zero after a pre-defined interval. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00055">claim 51</dependent-claim-reference>, wherein the second ISI compensation circuit comprises: 
<claim-text>a Viterbi decoder configured to decode a digital signal and generate tentative decisions; and </claim-text>
<claim-text>feedback equalizer circuitry coupled to the Viterbi decoder, the feedback equalizer circuitry receiving the tentative decisions and combining the tentative decisions with a set of high-ordered coefficients to generate a first value. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein the second ISI compensation circuit further comprises: 
<claim-text>summing circuitry combining the first value with a second digital signal, the summing circuitry outputting an intermediate signal; and </claim-text>
<claim-text>a multiple decision feedback equalizer receiving the intermediate signal and combining the intermediate signal with a set of pre-computed values generated by combining values of a set of low-ordered coefficients with a set of values representing levels of a multi-level symbolic alphabet to produce a set of potential digital signals, one of the potential digital signals being substantially ISI compensated, the multiple decision feedback equalizer outputting said one of the potential digital signals to the Viterbi decoder. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00055">claim 53</dependent-claim-reference>, wherein the characteristic feedback gain factor K is ramped to zero after convergence of the decision feedback equalizer. </claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, the codeword being a concatenation of L symbols selected from two disjoint symbol-subsets X and Y, the codeword being included in one of a plurality of code-subsets, the received word being represented by L inputs, each of the L inputs uniquely corresponding to one of L dimensions, the decoder system comprising: 
<claim-text>a set of slicers for producing a set of one-dimensional errors from the L inputs, each of the one-dimensional errors representing a distance metric between one of the L-inputs and a symbol in one of the two disjoint symbol-subsets; and </claim-text>
<claim-text>a combining module for combining the one-dimensional errors to produce a set of L-dimensional errors such that each of the L-dimensional errors is a distance of the received word from a nearest codeword in one of the code-subsets. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00055">claim 55</dependent-claim-reference>, wherein each of the one-dimensional errors is represented by substantially fewer bits than each of the L inputs. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00055">claim 55</dependent-claim-reference>, wherein the slicers slice the L inputs with respect to each of the two disjoint symbol-subsets X and Y to produce a set of X-based errors, a set of Y-based errors and corresponding sets of X-based and Y-based decisions, the sets of X-based and Y-based errors forming the set of one-dimensional errors, the sets of X-based and Y-based decisions forming the set of one-dimensional decisions, each of the X-based and Y-based decisions being a symbol in a corresponding symbol-subset closest in distance to one of the L inputs, each of the one-dimensional errors representing a distance metric between a corresponding one-dimensional decision and one of the L inputs. </claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00055">claim 55</dependent-claim-reference>, wherein the set of slicers comprises: 
<claim-text>first slicers for slicing each of the L inputs with respect to each of the two disjoint symbol-subsets X and Y to produce a set of X-based decisions and a set of Y-based decisions, the sets of X-based and Y-based decisions forming the set of one-dimensional decisions, each of the X-based and Y-based decisions being a symbol in a corresponding symbol-subset closest in distance to one of the L inputs; </claim-text>
<claim-text>second slicers for slicing each of the L inputs with respect to a symbol-set comprising all symbols of the two disjoint symbol-subsets to produce a set of hard decisions; and </claim-text>
<claim-text>error-computing modules for combining each of the sets of X-based and Y-based decisions with the set of hard decisions to produce the set of one-dimensional errors, each of the one-dimensional errors representing a distance metric between the corresponding one-dimensional decision and one of the L inputs. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00055">claim 55</dependent-claim-reference>, wherein the combining module comprises: 
<claim-text>a first set of adders for combining the one-dimensional errors to produce two-dimensional errors; </claim-text>
<claim-text>a second set of adders for combining the two-dimensional errors to produce intermediate L-dimensional errors, the intermediate L-dimensional errors being arranged into pairs of errors such that the pairs of errors correspond one-to-one to the code-subsets; and </claim-text>
<claim-text>a minimum-select module for determining a minimum for each of the pairs of errors, the minima being the L-dimensional errors. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. An integrated circuit communication device configured for operation over a multi-pair transmission channel, the communication device comprising: 
<claim-text>a decision feedback sequence estimation (DFSE) circuit, for decoding an input sample into a final decision corresponding to a codeword of a trellis code having N states, the DFSE including a single state decision feedback equalizer; and </claim-text>
<claim-text>a decoder system for computing the distance of a received symbolic word from a codeword. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference>, the single state decision feedback equalizer having a set of ordered coefficients, the decision feedback equalizer defining a coefficient related tail value and a low order subset of coefficient values </claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00066">claim 61</dependent-claim-reference>, wherein the single state decision feedback equalizer has a width dimension D, wherein the width dimension D corresponds to the number of pairs defining the multi-pair transmission channel. </claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00066">claim 62</dependent-claim-reference>, further comprising a state multiplication circuit, the state multiplication circuit expanding a single state representation output signal received from the single state decision feedback equalizer into an N state representation signal suitable for decoding by the DFSE. </claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference>, configured to receive information encoded in accordance with a multi-level symbolic scheme and over a multi-dimensional transmission channel, the decoder system comprising: 
<claim-text>an input, coupled to receive an input signal; </claim-text>
<claim-text>a first slicer, coupled to detect the input signal with respect to a first one of two disjoint one-dimensional symbol-subsets; and </claim-text>
<claim-text>a second slicer, coupled to detect the input signal with respect to a second one of the two disjoint one-dimensional symbol-subsets; </claim-text>
<claim-text>wherein the first slicer outputs a first decision term and a first error term with respect to the first one of the two disjoint one-dimensional symbol-subsets, the second slicer outputting a second decision term and a second error term with respect to the second one of the two disjoint one-dimensional symbol-subsets; and </claim-text>
<claim-text>wherein each of the first and second error terms is expressed by a digital representation having substantially fewer bits than the input signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. The symbol decoder according to <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference>, wherein each of the first and second error terms represents a distance metric between the input signal and a symbol in the respective one of the two disjoint one-dimensional symbol-subsets. </claim-text>
</claim>
<claim id="CLM-00066">
<claim-text><highlight><bold>66</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference>, configured to receive information encoded in accordance with a multi-level symbolic scheme and over a multi-dimensional transmission channel, the decoder system comprising: 
<claim-text>an input to receive an input signal; </claim-text>
<claim-text>a first slicer coupled to the input, the first slicer detecting the input signal with respect to a first one of two disjoint one-dimensional symbol-subsets; </claim-text>
<claim-text>a second slicer coupled to the input, the second slicer detecting the input signal with respect to a second one of the two disjoint one-dimensional symbol-subsets; and </claim-text>
<claim-text>a third slicer coupled to detect the input signal with respect to a union set of the two disjoint one-dimensional symbol-subsets. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00067">
<claim-text><highlight><bold>67</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00066">claim 66</dependent-claim-reference>, wherein the first slicer outputs a first decision with respect to the first one of the two disjoint one-dimensional symbol-subsets, the second slicer ouputting a second decision with respect to the second one of the two disjoint one-dimensional symbol-subsets, and wherein the third slicer outputs a third decision with respect to the union set of the two disjoint one-dimensional symbol-subsets. </claim-text>
</claim>
<claim id="CLM-00068">
<claim-text><highlight><bold>68</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, further comprising: 
<claim-text>a first combination logic block configured to combine the first decision with the third decision, the first combination logic block defining a first error term; and </claim-text>
<claim-text>a second combination logic block configured to combine the second decision with the third decision, the second combination logic block defining a second error term. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00069">
<claim-text><highlight><bold>69</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00066">claim 68</dependent-claim-reference>, further comprising: 
<claim-text>a first square error generation block configured to operate on the first error term so as to define a square error representation thereof; and </claim-text>
<claim-text>a second square error generation block configured to operate on the second error term so as to define a square error representation thereof. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00070">
<claim-text><highlight><bold>70</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00066">claim 69</dependent-claim-reference>, wherein each of the error terms is expressed as a digital representation having one bit. </claim-text>
</claim>
<claim id="CLM-00071">
<claim-text><highlight><bold>71</bold></highlight>. An integrated circuit communication device configured for operation over a multi-pair transmission channel, the communication device comprising: 
<claim-text>a decision feedback sequence estimation (DFSE) circuit, for decoding an input sample into a final decision corresponding to a codeword of a trellis code having N states, the DFSE including a single state decision feedback equalizer; </claim-text>
<claim-text>a first ISI compensation circuit configured to compensate for a transmitter induced ISI component; </claim-text>
<claim-text>a second ISI compensation circuit configured to compensate for a transmission channel induced ISI component; and </claim-text>
<claim-text>adaptive circuitry for reducing power consumption of a filter, the filter having an initial set of active coefficients, an input and an output, the active coefficients being ordered, a lowest ordered active coefficient of the initial set being proximal to the input, each of the active coefficients having a stable value. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00072">
<claim-text><highlight><bold>72</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference>, further comprising: 
<claim-text>a threshold module generating a threshold; </claim-text>
<claim-text>a comparing module coupled to the threshold module, the comparing module comparing an active coefficient with the threshold; and </claim-text>
<claim-text>a decision module coupled to the comparing module, the decision module deactivating the active coefficient according to a criterion. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00073">
<claim-text><highlight><bold>73</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00077">claim 72</dependent-claim-reference>, wherein the decision module deactivates the active coefficient if the active coefficient has a value smaller than the threshold. </claim-text>
</claim>
<claim id="CLM-00074">
<claim-text><highlight><bold>74</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00077">claim 73</dependent-claim-reference>, further comprising: 
<claim-text>a buffer providing a specified error; </claim-text>
<claim-text>an error computing module computing a error metric; and </claim-text>
<claim-text>a second comparing module coupled to the buffer, the error computing module and the threshold module, the second comparing module comparing the error metric with the specified error and producing a first control signal to the threshold module when the error metric is smaller than the specified error and a second control signal to the threshold module when the error metric is larger than the specified error. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00075">
<claim-text><highlight><bold>75</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00077">claim 74</dependent-claim-reference>, wherein the threshold module updates the threshold upon reception of the first or second control signal. </claim-text>
</claim>
<claim id="CLM-00076">
<claim-text><highlight><bold>76</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00077">claim 70</dependent-claim-reference>, wherein the first ISI compensation circuit comprises: 
<claim-text>an inverse partial response filter having an impulse response substantially an inverse of an impulse response of a pulse shaping filter of a remote transmitter, so as to substantially compensate an input digital signal for a first ISI component. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00077">
<claim-text><highlight><bold>77</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00077">claim 76</dependent-claim-reference>, wherein the inverse partial response filter is implemented with a characteristic feedback gain factor K. </claim-text>
</claim>
<claim id="CLM-00078">
<claim-text><highlight><bold>78</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00077">claim 77</dependent-claim-reference>, wherein the inverse partial response filter operates in accordance with a non-zero value of the characteristic feedback gain factor K during communication initialization and wherein the value of the feedback gain factor K is ramped down to zero after a pre-defined interval. </claim-text>
</claim>
<claim id="CLM-00079">
<claim-text><highlight><bold>79</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00077">claim 78</dependent-claim-reference>, wherein the second ISI compensation circuit comprises: 
<claim-text>a Viterbi decoder configured to decode a digital signal and generate tentative decisions; and </claim-text>
<claim-text>feedback equalizer circuitry coupled to the Viterbi decoder, the feedback equalizer circuitry receiving the tentative decisions and combining the tentative decisions with a set of high-ordered coefficients to generate a first value. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00080">
<claim-text><highlight><bold>80</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference>, wherein the second ISI compensation circuit further comprises: 
<claim-text>summing circuitry combining the first value with a second digital signal, the summing circuitry outputting an intermediate signal; and </claim-text>
<claim-text>a multiple decision feedback equalizer receiving the intermediate signal and combining the intermediate signal with a set of pre-computed values generated by combining values of a set of low-ordered coefficients with a set of values representing levels of a multi-level symbolic alphabet to produce a set of potential digital signals, one of the potential digital signals being substantially ISI compensated, the multiple decision feedback equalizer outputting said one of the potential digital signals to the Viterbi decoder. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00081">
<claim-text><highlight><bold>81</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00088">claim 80</dependent-claim-reference>, wherein the characteristic feedback gain factor K is ramped to zero after convergence of the decision feedback equalizer. </claim-text>
</claim>
<claim id="CLM-00082">
<claim-text><highlight><bold>82</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00077">claim 70</dependent-claim-reference>, the single state decision feedback equalizer having a set of ordered coefficients, the decision feedback equalizer defining a coefficient related tail value and a low order subset of coefficient values </claim-text>
</claim>
<claim id="CLM-00083">
<claim-text><highlight><bold>83</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00088">claim 82</dependent-claim-reference>, wherein the single state decision feedback equalizer has a width dimension D, wherein the width dimension D corresponds to the number of pairs defining the multi-pair transmission channel. </claim-text>
</claim>
<claim id="CLM-00084">
<claim-text><highlight><bold>84</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00088">claim 83</dependent-claim-reference>, further comprising a state multiplication circuit, the state multiplication circuit expanding a single state representation output signal received from the single state decision feedback equalizer into an N state representation signal suitable for decoding by the DFSE. </claim-text>
</claim>
<claim id="CLM-00085">
<claim-text><highlight><bold>85</bold></highlight>. The integrated circuit communication device according to <dependent-claim-reference depends_on="CLM-00088">claim 84</dependent-claim-reference>, the state multiplication circuit comprising: 
<claim-text>a convolution engine coupled to combine the low order subset of coefficient values with each member of a set of symbolic levels to define a first sample signal set; and </claim-text>
<claim-text>a summing circuit coupled to combine the tail value with each member of the first sample signal set to define an N state representational set of signal samples. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00086">
<claim-text><highlight><bold>86</bold></highlight>. An integrated circuit communication device configured for operation over a multi-pair transmission channel, the communication device comprising: 
<claim-text>measurement circuitry configured to measure a performance degradation characteristic resulting from disabling each member of a set of sub-pluralities of a plurality of circuit elements; </claim-text>
<claim-text>disabling circuitry configured to adaptively disable one or more of the sub-pluralities of the circuit elements until the performance degradation characteristic reaches a threshold level; </claim-text>
<claim-text>a single state decision feedback equalizer; </claim-text>
<claim-text>a first ISI compensation circuit configured to compensate for a transmitter induced ISI component; </claim-text>
<claim-text>a second ISI compensation circuit configured to compensate for a transmission channel induced ISI component; and </claim-text>
<claim-text>a decoder system for computing the distance of a received symbolic word from a codeword. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00087">
<claim-text><highlight><bold>87</bold></highlight>. A method for reducing system performance degradation due to switching noise in a system, the system comprising a set of subsystems, each of the subsystems comprising an analog section and a digital section, each of the analog sections operating in accordance with a corresponding one of a set of sampling clock signals, the sampling clock signals being synchronous in frequency, the digital sections operating in accordance with a receive clock signal, the method comprising the operations of: 
<claim-text>generating the receive clock signal such that the receive clock signal is synchronous in frequency with the sampling clock signals and having a phase offset with respect to one of the sampling clock signals; and </claim-text>
<claim-text>adjusting the phase offset such that system performance degradation due to coupling of switching noise from the digital sections to the analog sections is substantially minimized. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00088">
<claim-text><highlight><bold>88</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 87</dependent-claim-reference> wherein, in the operation of adjusting the phase offset, the phase offset is adjusted such that a time difference between a transition occurrence of the receive clock signal and transition occurrences of sampling clock signals, that are adjacent in time to the transition occurrence of the receive clock signal, is substantially maximized. </claim-text>
</claim>
<claim id="CLM-00089">
<claim-text><highlight><bold>89</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 87</dependent-claim-reference> wherein the operation of adjusting the phase offset of the receive clock comprises the operations of: 
<claim-text>(1) determining a set of phase offset values for the phase offset; </claim-text>
<claim-text>(2) computing a set of system performance errors corresponding one-to-one to the phase offset values; and </claim-text>
<claim-text>(3) selecting one of the phase offset values, said one phase offset value corresponding to a minimum of the system performance errors. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00090">
<claim-text><highlight><bold>90</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 89</dependent-claim-reference> wherein the set of phase offset values comprises 64 phase offset values. </claim-text>
</claim>
<claim id="CLM-00091">
<claim-text><highlight><bold>91</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 89</dependent-claim-reference> wherein operation (2) comprises the operations of: 
<claim-text>computing a subsystem performance error, corresponding to one of the phase offset values, for each of the subsystems; </claim-text>
<claim-text>combining the subsystem performance errors to generate the corresponding system performance error. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00092">
<claim-text><highlight><bold>92</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00099">claim 91</dependent-claim-reference> wherein the operation of computing a subsystem performance error for a corresponding subsystem comprises: 
<claim-text>squaring a slicer error associated with the subsystem; </claim-text>
<claim-text>accumulating a number of associated squared slicer errors via a filter for a period of time; and </claim-text>
<claim-text>outputting an accumulated squared error as the subsystem performance error after the period of time. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00093">
<claim-text><highlight><bold>93</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 87</dependent-claim-reference> further comprising the operation of: 
<claim-text>adjusting a sampling phase of at least one of the sampling clock signals such that a subsystem performance error of the subsystem which corresponds to said one of the sampling clock signals is substantially minimized. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00094">
<claim-text><highlight><bold>94</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00099">claim 93</dependent-claim-reference> wherein the operation of adjusting the sampling phase of at least one of the sampling clock signals comprises the operations of: 
<claim-text>(1) determining a set of sampling phase values for the sampling phase; </claim-text>
<claim-text>(2) computing a set of subsystem performance errors corresponding one-to-one to the sampling phase values; and </claim-text>
<claim-text>(3) selecting one of the sampling phase values, said one sampling phase value corresponding to a minimum of the subsystem performance errors. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00095">
<claim-text><highlight><bold>95</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00099">claim 94</dependent-claim-reference> wherein the set of sampling phase values comprises 16 sampling phase values. </claim-text>
</claim>
<claim id="CLM-00096">
<claim-text><highlight><bold>96</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00099">claim 94</dependent-claim-reference> wherein the operation of computing a subsystem performance error for the corresponding subsystem comprises: 
<claim-text>squaring a slicer error associated with the subsystem; </claim-text>
<claim-text>accumulating a number of associated squared slicer errors via a filter for a period of time; and </claim-text>
<claim-text>outputting an accumulated squared error as the subsystem performance error after the period of time. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00097">
<claim-text><highlight><bold>97</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 87</dependent-claim-reference> further comprising the operation of: 
<claim-text>adjusting a sampling phase of each of the sampling clock signals such that a subsystem performance error of a corresponding subsystem is substantially minimized. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00098">
<claim-text><highlight><bold>98</bold></highlight>. A method for reducing effect of switching noise in a system, the system comprising a set of subsystems, each of the subsystems comprising an analog section and a digital section, each of the analog sections operating in accordance with a corresponding one of a set of sampling clock signals, the digital sections operating in accordance with a receive clock signal, the method comprising the operations of: 
<claim-text>generating the sampling clock signals such that the sampling clock signals are synchronous in frequency with each other; </claim-text>
<claim-text>generating the receive clock signal such that the receive clock signal is synchronous in frequency with the sampling clock signals and having a phase offset with respect to one of the sampling clock signals; and </claim-text>
<claim-text>adjusting the phase offset such that effect of switching noise from the digital sections on the analog sections is substantially minimized. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00099">
<claim-text><highlight><bold>99</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00099">claim 98</dependent-claim-reference> wherein, in the operation of adjusting the phase offset, the phase offset is adjusted such that time difference between a transition occurrence of the receive clock signal and transition occurrences of sampling clock signals that are adjacent in time to the transition occurrence of the receive clock signal is substantially maximized. </claim-text>
</claim>
<claim id="CLM-00100">
<claim-text><highlight><bold>100</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00099">claim 98</dependent-claim-reference> further comprising the operation of: 
<claim-text>adjusting a phase of at least one of the sampling clock signals such that a subsystem performance error of the subsystem which corresponds to said one of the sampling clock signals is substantially minimized. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00101">
<claim-text><highlight><bold>101</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00099">claim 98</dependent-claim-reference> wherein the operation of generating the sampling clock signals comprises the operations of: 
<claim-text>(a)generating a phase error for each of the sampling clock signals from a corresponding phase detector; </claim-text>
<claim-text>(b)inputting each of the phase errors to a corresponding loop filter; </claim-text>
<claim-text>(c)generating filtered phase errors from the corresponding loop filters; </claim-text>
<claim-text>(d)inputting each of the filtered phase errors to a corresponding oscillator; </claim-text>
<claim-text>(e)generating phase control signals from the corresponding oscillators; </claim-text>
<claim-text>(f)inputting each of the phase control signals to a corresponding phase selector; and </claim-text>
<claim-text>(g)generating the sampling clock signals from the corresponding phase selectors. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00102">
<claim-text><highlight><bold>102</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 101</dependent-claim-reference> wherein the operation of generating the receive clock signal comprises the operations of: 
<claim-text>(1)combining one of the phase control signals with the phase offset to produce a phase shift value; </claim-text>
<claim-text>(2)inputting the phase shift value to a receive clock phase selector; and </claim-text>
<claim-text>(3)generating the receive clock signal from the receive clock phase selector. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00103">
<claim-text><highlight><bold>103</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein the phase shift value comprises a set of phase steps and wherein operation (2) comprises the operation of inputting the phase steps consecutively to the receive clock phase selector. </claim-text>
</claim>
<claim id="CLM-00104">
<claim-text><highlight><bold>104</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein the operation of adjusting the phase offset of the receive clock comprises the operations of: 
<claim-text>(4)determining a set of phase offset values for the phase offset; </claim-text>
<claim-text>(5)computing a set of system performance errors corresponding one-to-one to the phase offset values; and </claim-text>
<claim-text>(6)selecting one of the phase offset values, said one phase offset value corresponding to a minimum of the system performance errors. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00105">
<claim-text><highlight><bold>105</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 104</dependent-claim-reference> wherein the set of phase offset values comprises 64 phase offset values. </claim-text>
</claim>
<claim id="CLM-00106">
<claim-text><highlight><bold>106</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 104</dependent-claim-reference> wherein operation (5) comprises the operations of: 
<claim-text>computing a subsystem performance error for each of the subsystems for one of the phase offset values; combining the subsystem performance errors to generate the corresponding system performance error. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00107">
<claim-text><highlight><bold>107</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 106</dependent-claim-reference> wherein the operation of computing a subsystem performance error for a corresponding subsystem comprises: 
<claim-text>squaring a slicer error associated with the subsystem; </claim-text>
<claim-text>accumulating a number of associated squared slicer errors via a filter for a period of time; and </claim-text>
<claim-text>outputting an accumulated squared error as the subsystem performance error after the period of time. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00108">
<claim-text><highlight><bold>108</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 101</dependent-claim-reference> wherein, in operation (a), each of the phase detectors receives a corresponding slicer error and a corresponding tentative decision from a decoding system. </claim-text>
</claim>
<claim id="CLM-00109">
<claim-text><highlight><bold>109</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 108</dependent-claim-reference> wherein operation (a) comprises: 
<claim-text>(1)generating a pre-cursor phase error by multiplying the corresponding tentative decision by a delayed version of the corresponding slicer error; </claim-text>
<claim-text>(2)generating a post-cursor phase error by multiplying the corresponding slicer error by a delayed version of the corresponding tentative decision; and </claim-text>
<claim-text>(3)combining the pre-cursor and post-cursor phase errors to produce the corresponding phase error. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00110">
<claim-text><highlight><bold>110</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 109</dependent-claim-reference> wherein operations (1), (2) and (3) are performed via a lattice structure, the lattice structure comprising two delay elements, two multipliers and an adder. </claim-text>
</claim>
<claim id="CLM-00111">
<claim-text><highlight><bold>111</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 110</dependent-claim-reference> wherein operation (3) includes the operation of combining the pre-cursor, post-cursor phase errors and an offset input from a control unit to produce the corresponding phase error. </claim-text>
</claim>
<claim id="CLM-00112">
<claim-text><highlight><bold>112</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 101</dependent-claim-reference> wherein operation (c) comprises: 
<claim-text>accumulating a number of consecutive values of one of the phase errors via a first filter, resulting in a sum value; </claim-text>
<claim-text>outputting the sum value from the first filter; </claim-text>
<claim-text>integrating the sum value via a second filter to produce an integral value; and </claim-text>
<claim-text>combining the sum value and the integral value to produce a filtered phase error. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00113">
<claim-text><highlight><bold>113</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 112</dependent-claim-reference> wherein operation (3) includes the operation of scaling the integrated sum value by a scale factor to produce the integral value. </claim-text>
</claim>
<claim id="CLM-00114">
<claim-text><highlight><bold>114</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 112</dependent-claim-reference> wherein operation (c) further comprises, before operation (3), the operation of multiplying the sum value by a factor different than 1 when the system is operating in a different bandwidth mode. </claim-text>
</claim>
<claim id="CLM-00115">
<claim-text><highlight><bold>115</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 101</dependent-claim-reference> wherein operation (e) comprises the operation of filtering recursively the filtered phase errors to produce the corresponding phase control signals. </claim-text>
</claim>
<claim id="CLM-00116">
<claim-text><highlight><bold>116</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 115</dependent-claim-reference> wherein operation (e) further comprises the operation of scaling, before filtering recursively, the filtered phase errors by a scale factor. </claim-text>
</claim>
<claim id="CLM-00117">
<claim-text><highlight><bold>117</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 101</dependent-claim-reference> wherein operation (g) comprises the operations of: 
<claim-text>inputting a multi-phase input signal from a clock generator to each of the phase selectors; and </claim-text>
<claim-text>selecting at each of the phase selectors one of the phases of the multi-phase input signal based on the phase control signal received from the corresponding oscillator. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00118">
<claim-text><highlight><bold>118</bold></highlight>. A method for generating a set of clock signals in a system, the set of clock signals comprising a set of sampling clock signals, the system comprising a set of subsystems, each of the subsystems comprising an analog section, each of the analog sections operating in accordance with a corresponding one of the sampling clock signals, the method comprising the operations of: 
<claim-text>generating a phase error for each of the sampling clock signals from a corresponding phase detector; </claim-text>
<claim-text>inputting each of the phase errors to a corresponding loop filter; </claim-text>
<claim-text>generating filtered phase errors from the corresponding loop filters; </claim-text>
<claim-text>inputting each of the filtered phase errors to a corresponding oscillator; </claim-text>
<claim-text>generating phase control signals from the corresponding oscillators; </claim-text>
<claim-text>inputting each of the phase control signals to a corresponding phase selector; and </claim-text>
<claim-text>generating the sampling clock signals from the corresponding phase selectors. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00119">
<claim-text><highlight><bold>119</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 118</dependent-claim-reference> wherein the set of clock signals further comprises a receive clock signal and wherein each of the subsystems further comprises a digital section, the digital sections operating in accordance with the receive clock signal. </claim-text>
</claim>
<claim id="CLM-00120">
<claim-text><highlight><bold>120</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 119</dependent-claim-reference> wherein the receive clock signal is related to one of the sampling clock signals. </claim-text>
</claim>
<claim id="CLM-00121">
<claim-text><highlight><bold>121</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 120</dependent-claim-reference> further comprising the operations of: 
<claim-text>combining one of the phase control signals with a receive clock offset to produce a phase shift value; </claim-text>
<claim-text>inputting the phase shift value to a receive clock phase selector; and </claim-text>
<claim-text>generating the receive clock signal from the receive clock phase selector. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00122">
<claim-text><highlight><bold>122</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 121</dependent-claim-reference> wherein the phase shift value comprises a set of phase steps and wherein the inputting operation comprises the operation of inputting one phase step of the phase shift value at a time to the receive clock phase selector. </claim-text>
</claim>
<claim id="CLM-00123">
<claim-text><highlight><bold>123</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 118</dependent-claim-reference> wherein the set of clock signals further comprises a transmit clock signal and wherein each of the subsystems further comprises a transmit section, the transmit sections operating in accordance with the transmit clock signal. </claim-text>
</claim>
<claim id="CLM-00124">
<claim-text><highlight><bold>124</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 123</dependent-claim-reference> further comprising the operations of: 
<claim-text>inputting a transmit clock offset to a transmit clock phase selector; and </claim-text>
<claim-text>generating the transmit clock signal from the transmit clock phase selector. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00125">
<claim-text><highlight><bold>125</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 124</dependent-claim-reference> wherein the transmit clock offset is equal to zero. </claim-text>
</claim>
<claim id="CLM-00126">
<claim-text><highlight><bold>126</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 123</dependent-claim-reference> wherein the transmit clock signal is related to one of the sampling clock signals. </claim-text>
</claim>
<claim id="CLM-00127">
<claim-text><highlight><bold>127</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 126</dependent-claim-reference> further comprising the operations of: 
<claim-text>inputting one of the phase control signals to a transmit clock phase selector; and </claim-text>
<claim-text>generating the transmit clock signal from the transmit clock phase selector. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00128">
<claim-text><highlight><bold>128</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 118</dependent-claim-reference> wherein each of the phase detectors receives a corresponding slicer error and a corresponding tentative decision from a decoding system. </claim-text>
</claim>
<claim id="CLM-00129">
<claim-text><highlight><bold>129</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 128</dependent-claim-reference> wherein operation (a) comprises: 
<claim-text>(1) generating a pre-cursor phase error by multiplying the corresponding tentative decision by a delayed version of the corresponding slicer error; </claim-text>
<claim-text>(2) generating a post-cursor phase error by multiplying the corresponding slicer error by a delayed version of the corresponding tentative decision; </claim-text>
<claim-text>(3) combining the pre-cursor and post-cursor phase errors to produce the corresponding phase error. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00130">
<claim-text><highlight><bold>130</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 129</dependent-claim-reference> wherein operations (1), (2) and (3) are performed via a lattice structure, the lattice structure comprising two delay elements, two multipliers and an adder. </claim-text>
</claim>
<claim id="CLM-00131">
<claim-text><highlight><bold>131</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 129</dependent-claim-reference> wherein operation (3) includes the operation of combining the pre-cursor, post-cursor phase errors and an offset input from a control unit to produce the corresponding phase error. </claim-text>
</claim>
<claim id="CLM-00132">
<claim-text><highlight><bold>132</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 118</dependent-claim-reference> wherein operation (c) comprises: 
<claim-text>(1) accumulating a number of consecutive values of one of the phase errors via a first filter, resulting in a sum value; </claim-text>
<claim-text>(2) outputting the sum value from the first filter; </claim-text>
<claim-text>(3) integrating the sum value via a second filter to produce an integral value; and </claim-text>
<claim-text>(4) combining the sum value and the integral value to produce a filtered phase error. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00133">
<claim-text><highlight><bold>133</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 132</dependent-claim-reference> wherein operation (3) includes the operation of scaling the integrated sum value by a scale factor to produce the integral value. </claim-text>
</claim>
<claim id="CLM-00134">
<claim-text><highlight><bold>134</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 132</dependent-claim-reference> wherein operation (c) further comprises, before operation (3), the operation of multiplying the sum value by a factor different than 1 when the system is operating in a different bandwidth mode. </claim-text>
</claim>
<claim id="CLM-00135">
<claim-text><highlight><bold>135</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 118</dependent-claim-reference> wherein operation (e) comprises the operation of filtering recursively the filtered phase errors to produce the corresponding phase control signals. </claim-text>
</claim>
<claim id="CLM-00136">
<claim-text><highlight><bold>136</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 135</dependent-claim-reference> wherein operation (e) further comprises the operation of scaling, before filtering recursively, the filtered phase errors by a scale factor. </claim-text>
</claim>
<claim id="CLM-00137">
<claim-text><highlight><bold>137</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00111">claim 118</dependent-claim-reference> wherein operation (g) comprises the operations of: 
<claim-text>(1) inputting a multi-phase input signal from a clock generator to each of the phase selectors; and </claim-text>
<claim-text>(2) selecting at each of the phase selectors one of the phases of the multi-phase input signal based on the phase control signal received from the corresponding oscillator. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00138">
<claim-text><highlight><bold>138</bold></highlight>. A timing recovery system for generating a set of clock signals in a processing system, the set of clock signals comprising a set of sampling clock signals, the processing system comprising a set of processing subsystems, each of the processing subsystems comprising an analog section, each of the analog sections operating in accordance with a corresponding one of the sampling clock signals, the timing recovery system comprising: 
<claim-text>(a) a set of phase detectors generating phase errors for the corresponding sampling clock signals; </claim-text>
<claim-text>(b) a set of loop filters coupled to the corresponding phase detectors, the loop filters receiving the corresponding phase errors and generating filtered phase errors; </claim-text>
<claim-text>(c) a set of oscillators coupled to the corresponding loop filters, the oscillators receiving the filtered phase errors and generating phase control signals; and </claim-text>
<claim-text>(d) a set of phase selectors coupled to the corresponding oscillators, the phase selectors receiving the phase control signals and generating the sampling clock signals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00139">
<claim-text><highlight><bold>139</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 138</dependent-claim-reference> wherein the set of clock signals further comprises a receive clock signal and wherein each of the processing subsystems further comprises a digital section, the digital sections operating in accordance with the receive clock signal. </claim-text>
</claim>
<claim id="CLM-00140">
<claim-text><highlight><bold>140</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 139</dependent-claim-reference> wherein the receive clock signal is related to one of the sampling clock signals. </claim-text>
</claim>
<claim id="CLM-00141">
<claim-text><highlight><bold>141</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 140</dependent-claim-reference> further comprising a first adder and a receive clock phase selector, the first adder receiving one of the phase control signals and a receive clock offset and generating a phase shift value, the receive clock phase selector receiving the phase shift value and generating the receive clock signal. </claim-text>
</claim>
<claim id="CLM-00142">
<claim-text><highlight><bold>142</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 141</dependent-claim-reference> wherein the phase shift value comprises a set of phase steps and wherein the receive clock phase selector receives the phase shift value in the form of consecutive phase steps. </claim-text>
</claim>
<claim id="CLM-00143">
<claim-text><highlight><bold>143</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 138</dependent-claim-reference> wherein the set of clock signals further comprises a transmit clock signal and wherein each of the subsystems further comprises a transmit section, the transmit sections operating in accordance with the transmit clock signal. </claim-text>
</claim>
<claim id="CLM-00144">
<claim-text><highlight><bold>144</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 143</dependent-claim-reference> further comprising a transmit clock phase selector, the transmit clock phase selector receiving a transmit clock offset and generating the transmit clock signal. </claim-text>
</claim>
<claim id="CLM-00145">
<claim-text><highlight><bold>145</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 144</dependent-claim-reference> wherein the transmit clock offset is equal to zero. </claim-text>
</claim>
<claim id="CLM-00146">
<claim-text><highlight><bold>146</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 143</dependent-claim-reference> wherein the transmit clock signal is related to one of the sampling clock signals. </claim-text>
</claim>
<claim id="CLM-00147">
<claim-text><highlight><bold>147</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 146</dependent-claim-reference> further comprising a transmit clock phase selector, the transmit clock phase selector receiving one of the phase control signals and generating the transmit clock signal. </claim-text>
</claim>
<claim id="CLM-00148">
<claim-text><highlight><bold>148</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 138</dependent-claim-reference> wherein each of the phase detectors receives a corresponding slicer error and a corresponding tentative decision from a decoding system. </claim-text>
</claim>
<claim id="CLM-00149">
<claim-text><highlight><bold>149</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 148</dependent-claim-reference> wherein each of the phase detectors comprises a lattice structure, the lattice structure comprising two delay elements, two multipliers and an adder, the lattice structure generating a pre-cursor phase error by multiplying the corresponding tentative decision by a delayed version of the corresponding slicer error and generating a post-cursor phase error by multiplying the corresponding slicer error by a delayed version of the corresponding tentative decision and combining the pre-cursor and post-cursor phase errors to produce the corresponding phase error. </claim-text>
</claim>
<claim id="CLM-00150">
<claim-text><highlight><bold>150</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 149</dependent-claim-reference> wherein at least one of the phase detectors further receives an offset input from a control unit and wherein the associated lattice structure combines the pre-cursor, post-cursor phase errors and the offset input to produce the corresponding phase error. </claim-text>
</claim>
<claim id="CLM-00151">
<claim-text><highlight><bold>151</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 138</dependent-claim-reference> wherein at least one of the loop filters comprises a first filter for accumulating a number of consecutive values of one of the phase errors to produce a filtered phase error. </claim-text>
</claim>
<claim id="CLM-00152">
<claim-text><highlight><bold>152</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 138</dependent-claim-reference> wherein at least one of the loop filters comprises a first filter for accumulating a number of consecutive values of one of the phase errors to produce a sum value, a second filter for integrating the sum value to produce an integral value and an adder for combining the sum value and the integral value to produce a filtered phase error. </claim-text>
</claim>
<claim id="CLM-00153">
<claim-text><highlight><bold>153</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 152</dependent-claim-reference> wherein the second filter includes a multiplier for scaling the integrated sum value by a scale factor to produce the integral value. </claim-text>
</claim>
<claim id="CLM-00154">
<claim-text><highlight><bold>154</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 152</dependent-claim-reference> wherein at least one of the loop filters further comprises a multiplier for multiplying the sum value by a factor different than 1 when the system is operating in a different bandwidth mode. </claim-text>
</claim>
<claim id="CLM-00155">
<claim-text><highlight><bold>155</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 138</dependent-claim-reference> wherein each of the oscillators comprises an infinite impulse response filter for filtering recursively the filtered phase errors to produce the corresponding phase control signals. </claim-text>
</claim>
<claim id="CLM-00156">
<claim-text><highlight><bold>156</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 155</dependent-claim-reference> wherein at least one of the oscillators further comprises a multiplier for scaling the filtered phase errors by a scale factor and outputting the scaled filtered phase errors to the associated impulse response filter. </claim-text>
</claim>
<claim id="CLM-00157">
<claim-text><highlight><bold>157</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00111">claim 138</dependent-claim-reference> wherein each of the phase selectors receives a multi-phase input signal from a clock generator and selects one of the phases of the multi-phase input signal based on the phase control signal received from the corresponding oscillator. </claim-text>
</claim>
<claim id="CLM-00158">
<claim-text><highlight><bold>158</bold></highlight>. A timing recovery system for generating a set of clock signals in a processing system, the set of clock signals comprising a set of sampling clock signals, the processing system comprising a set of processing subsystems, each of the processing subsystems comprising an analog section, each of the analog sections operating in accordance with a corresponding one of the sampling clock signals, the timing recovery system comprising: 
<claim-text>(a) a set of phase detectors generating phase errors for the corresponding sampling clock signals; </claim-text>
<claim-text>(b) a set of loop filters coupled to the corresponding phase detectors, the loop filters receiving the corresponding phase errors and generating filtered phase errors; </claim-text>
<claim-text>(c) a set of digital-to-analog (D/A) converters coupled to the loop filters, the D/A converters receiving the filtered phase errors and generating analog filtered phase errors; and </claim-text>
<claim-text>(d) a set of oscillators coupled to the corresponding D/A converters, the oscillators receiving the analog filtered phase errors and generating the sampling clock signals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00159">
<claim-text><highlight><bold>159</bold></highlight>. The timing recovery system of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference> wherein the oscillators comprise varactor diodes.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>0</representative-figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002575A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002575A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002575A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002575A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002575A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002575A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002575A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002575A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002575A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002575A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002575A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002575A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002575A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002575A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002575A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002575A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030002575A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030002575A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030002575A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030002575A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030002575A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030002575A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030002575A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030002575A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030002575A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030002575A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030002575A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030002575A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030002575A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030002575A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030002575A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00032">
<image id="EMI-D00032" file="US20030002575A1-20030102-D00032.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00033">
<image id="EMI-D00033" file="US20030002575A1-20030102-D00033.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00034">
<image id="EMI-D00034" file="US20030002575A1-20030102-D00034.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00035">
<image id="EMI-D00035" file="US20030002575A1-20030102-D00035.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00036">
<image id="EMI-D00036" file="US20030002575A1-20030102-D00036.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00037">
<image id="EMI-D00037" file="US20030002575A1-20030102-D00037.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00038">
<image id="EMI-D00038" file="US20030002575A1-20030102-D00038.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
