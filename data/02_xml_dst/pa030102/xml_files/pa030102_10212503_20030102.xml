<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002491A1-20030102-D00000.TIF SYSTEM "US20030002491A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00001.TIF SYSTEM "US20030002491A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00002.TIF SYSTEM "US20030002491A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00003.TIF SYSTEM "US20030002491A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00004.TIF SYSTEM "US20030002491A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00005.TIF SYSTEM "US20030002491A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00006.TIF SYSTEM "US20030002491A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00007.TIF SYSTEM "US20030002491A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00008.TIF SYSTEM "US20030002491A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00009.TIF SYSTEM "US20030002491A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00010.TIF SYSTEM "US20030002491A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00011.TIF SYSTEM "US20030002491A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002491A1-20030102-D00012.TIF SYSTEM "US20030002491A1-20030102-D00012.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002491</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10212503</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020805</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L012/66</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>H04L012/28</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>H04L012/56</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>356000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>395600</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Broadband telecommunications system</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10212503</doc-number>
<kind-code>A1</kind-code>
<document-date>20020805</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09438669</doc-number>
<document-date>19991112</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6452928</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>09438669</doc-number>
<document-date>19991112</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08525897</doc-number>
<document-date>19950908</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5991301</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>09438669</doc-number>
<document-date>19991112</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08568551</doc-number>
<document-date>19951207</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5825780</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>09438669</doc-number>
<document-date>19991112</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08238605</doc-number>
<document-date>19940505</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>ABANDONED</parent-status>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Joseph</given-name>
<middle-name>Michael</middle-name>
<family-name>Christie</family-name>
</name>
<residence>
<residence-us>
<city>San Bruno</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>SPRINT</name-1>
<name-2></name-2>
<address>
<address-1>6391 SPRINT PARKWAY</address-1>
<address-2>KSOPHT0101-Z2100</address-2>
<city>OVERLAND PARK</city>
<state>KS</state>
<postalcode>66251-2100</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The invention is a system for providing virtual connections through an ATM interworking multiplexer on a call-by-call basis. A signaling processor receives signaling for a call and selects the virtual connection for the call. The signaling processor generates new signaling that identifies the selection and transfers the new signaling to the ATM interworking multiplexer that accepted the access connection for the call. The multiplexer converts user information from the access connection into ATM cells for transmission over the virtual connection in accord with the new signaling. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS-REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation of pending U.S. patent application Ser. No. 09/438,669, entitled &ldquo;Broadband Telecommunications System,&rdquo; filed Nov. 12, 1999, which is a continuation of U.S. Pat. No. 5,991,301, filed on Sep. 8, 1995, which is incorporated by reference into this application, and which is a continuation-in-part of U.S. Pat. No. 5,825,780 entitled &ldquo;Method, System, and Apparatus for Telecommunications Control,&rdquo; which is incorporated by reference into this application, and which is a continuation of U.S. patent application Ser. No. 08/238,605.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> At present, Asynchronous Transfer Mode (ATM) technology is being developed to provide broadband switching capability. Some ATM systems have used ATM cross-connects to provide virtual connections. Cross-connect devices do not have the capacity to process signaling. Signaling refers to messages that are used by telecommunications networks to set-up and tear down calls. Thus, ATM cross-connects cannot make connections on a call by call basis. As a result, connections through cross-connect systems must be pre-provisioned. They provide a relatively rigid switching fabric. Due to this limitation, ATM cross-connect systems have been primarily used to provide dedicated connections, such as permanent virtual circuits (PVCs) and permanent virtual paths (PVPs). But, they do not to provide ATM switching on a call by call basis as required to provide switched virtual circuits (SVCs) or switched virtual paths (SVPs). Those skilled in the art are well aware of the efficiencies created by using SVPs a and SVCs as opposed to PVCs and PVPs. SVCs and SVPs utilize bandwidth more efficiently. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> ATM switches have also been used to provide PVCs and PVPs. Since PVCs and PVPs are not established on a call-by-call basis, the ATM switch does need to use its call processing or signaling capacity. ATM switches require both signaling capability and call processing capability to provide SVCs and SVPs. In order to achieve virtual connection switching on a call by call basis, ATM switches are being developed that can process calls in response to signaling to provide virtual connections for each call. These systems cause problems because they must be very sophisticated to support current networks. These ATM switches must process high volumes of calls and transition legacy services from existing networks. An example would be an ATM switch that can handle large numbers of POTS, 800, and VPN calls. This generation of sophisticated ATM switches is not yet mature and should be expensive when they are first deployed. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Currently, ATM multiplexers are being developed that can interwork traffic into ATM cells and multiplex the cells for transport over an ATM network. One example of an application of these muxes is provided by T<highlight><bold>1</bold></highlight> transport over an ATM connection. Traffic that leaves the switch in T<highlight><bold>1</bold></highlight> format is muxed into ATM cells for transport over a high speed connection. Before the cells reach another switch, they are converted back into the T<highlight><bold>1</bold></highlight> format. Thus, the ATM mux is used for high speed transport. The ATM mux is not used to select virtual connections on a call-by-call basis. Unfortunately, there is not a telecommunications system that can provide ATM switching on a call by call basis without relying on the call processing and signaling capability of an ATM switch. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The invention includes a method of operating a telecommunications system to provide a call with a virtual connection. The method is for use when a user places the call by sending signaling for the call to the telecommunications system and by transmitting user information to the telecommunications system over a particular connection. The system comprises an ATM interworking multiplexer and a signaling processor linked to the ATM interworking multiplexer. The method comprises receiving the signaling for the call into the signaling processor, processing the signaling to select the virtual connection, generating new signaling to identify the particular connection and the selected virtual connection, and then transmitting the new signaling to the ATM interworking multiplexer. The method also includes receiving the user information for the call from the particular connection into the ATM interworking multiplexer, converting the user information into ATM cells that identify the selected virtual connection in response to the new signaling, and transmitting the ATM cells over the selected virtual connection. The signaling for the call could be a call set-up message, such a Signaling System &num;7 (SS7) initial address message (IAM). The method could also include applying digital signal processing (DSP) to the call in the multiplexer in accord with DSP requirements selected by the signaling processor. DSP requirements could include echo control or encryption. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The invention also includes a telecommunications system to provide a call with a virtual connection in response to signaling for the call. The system comprises a signaling processor to receive and process signaling to select the virtual connection for the call, and to generate and transmit new signaling that identifies the selected virtual connection. The system includes an ATM interworking multiplexer to receive user information from a connection, convert the user information into ATM cells that identify the selected virtual connection, and transmit the ATM cells over the selected virtual connection. The system could also include an ATM cross-connect system connected to the ATM interworking multiplexer and configured to provide a plurality of virtual connections to the ATM interworking multiplexer. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The invention also includes an ATM interworking multiplexer for providing calls with virtual connections in response to signaling for each of the calls. The multiplexer comprises an access interface to receive user information for each call from a particular connection. It also includes a control interface to receive signaling for each call that identifies the particular connection and a virtual connection for that call. It also includes an ATM adaption processor to convert user information from the particular connection for each call into ATM cells that identify the virtual connection for that call. The multiplexer also includes an ATM interface to transmit the ATM cells for each call over the virtual connection. The multiplexer could include a digital signal processor to apply digital signal processing to the user information for each call. The processing could include echo control and encryption. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> In various embodiments, the invention accepts calls placed over DSO voice connections and provides virtual connections for the calls. In this way, broadband virtual connections can be provided to narrowband traffic on a call-by-call basis without requiring the call processing and signaling capability of an ATM switch.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a version of the present invention. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of a version of the present invention. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of a version of the present invention. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram of a version of the present invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram of a version of the present invention. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> depicts a logic diagram of a version of the invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> depicts a logic diagram of a version of the invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> depicts a logic diagram of a version of the invention. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> depicts a logic diagram of a version of the invention. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> depicts a flow diagram of a version of the invention. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> depicts a flow diagram of a version of the invention. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> depicts a flow diagram of a version of the invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> For purposes of clarity, the term &ldquo;connection&rdquo; will be used to refer to the transmission media used to carry user traffic. The term &ldquo;link&rdquo; will be used to refer to the transmission media used to carry signaling. On the Figures, connections are shown by a single line and signaling links are shown by double lines. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> depicts a version of the present invention. Shown is telecommunications system <highlight><bold>100</bold></highlight>, user <highlight><bold>110</bold></highlight>, and user <highlight><bold>120</bold></highlight>. Telecommunications system <highlight><bold>100</bold></highlight> includes ATM interworking multiplexer (mux) <highlight><bold>130</bold></highlight>, mux <highlight><bold>140</bold></highlight>, ATM cross-connect system <highlight><bold>150</bold></highlight>, and signaling processing system <highlight><bold>160</bold></highlight>. User <highlight><bold>110</bold></highlight> is connected to mux <highlight><bold>130</bold></highlight> by connection <highlight><bold>180</bold></highlight>. Mux <highlight><bold>130</bold></highlight> and mux <highlight><bold>140</bold></highlight> are connected through cross-connect system <highlight><bold>150</bold></highlight> by connection <highlight><bold>181</bold></highlight>. Mux <highlight><bold>140</bold></highlight> is connected to user <highlight><bold>120</bold></highlight> by connection <highlight><bold>182</bold></highlight>. Signaling processing system <highlight><bold>160</bold></highlight> is linked to user <highlight><bold>110</bold></highlight> by link <highlight><bold>190</bold></highlight>, to mux <highlight><bold>130</bold></highlight> by link <highlight><bold>191</bold></highlight>, to mux <highlight><bold>140</bold></highlight> by link <highlight><bold>192</bold></highlight>, and to user <highlight><bold>120</bold></highlight> by link <highlight><bold>193</bold></highlight>. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Those skilled in the art are aware that large networks have many more components than are shown. For example, there would typically be a multitude of virtual connections through ATM cross-connect system <highlight><bold>150</bold></highlight>. The number of these components has been restricted for clarity. The invention is fully applicable to a large network. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> User <highlight><bold>110</bold></highlight> and user <highlight><bold>120</bold></highlight> could be any entity that supplies telecommunications traffic to network <highlight><bold>100</bold></highlight>. Some examples would be a local exchange carrier (LEC) switch or customer premises equipment (CPE). Typically, the user traffic would be provided to system <highlight><bold>100</bold></highlight> in DS3. DS1. or OC-3 format that have embedded DS0 and VT 1.5 circuits. Connections <highlight><bold>180</bold></highlight> and <highlight><bold>182</bold></highlight> represent any connection that might be used by user <highlight><bold>120</bold></highlight> to access system <highlight><bold>100</bold></highlight> and would also include formats such as E1, E3, and DS2. As such, these connections are periodically referred to as access connections. Connections <highlight><bold>180</bold></highlight> and <highlight><bold>182</bold></highlight> would typically be DS0 connections embedded within a DS3 connection, however, the invention fully contemplates other connection being used with a few examples being a fractional DS1. a clear DS3. or even SONET OC-3. Links <highlight><bold>190</bold></highlight> and <highlight><bold>193</bold></highlight> are any links capable of transferring signaling messages with an example being Signaling System &num;7 (SS7) links. ATM cross-connect system <highlight><bold>150</bold></highlight> is any system that provides a plurality of virtual connections. Such a system could be comprised of individual ATM cross-connect devices interconnected by ATM connections using DS3 or SONET for transport. An example of an ATM cross-connect is the NEC Model 10. Connection <highlight><bold>181</bold></highlight> could be any virtual connection. Typically, the virtual connection would use DS3 or SONET for transport. ATM cross-connect system <highlight><bold>150</bold></highlight> would be pre-provisioned to provide a plurality of virtual connections through the cross-connect system, and virtual connection <highlight><bold>181</bold></highlight> represents one of these connections. As virtual connections are logical paths, many physical paths can be used based on the pre-provisioning of ATM cross-connect system <highlight><bold>150</bold></highlight>. Links <highlight><bold>191</bold></highlight> and <highlight><bold>192</bold></highlight> could be any links capable of transporting data messages. Examples of such links could be SS7 or UDP/IP. The components described in this paragraph are known in the art. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Signaling processing system <highlight><bold>160</bold></highlight> is any processing platform that can receive and process signaling to select virtual connections, and then generate and transmit signaling to identify the selections. Various forms of signaling are contemplated by the invention, including SS7, C7, and user to network interface (UNI) signaling. A preferred embodiment of the signaling processor is discussed in detail toward the end of the disclosure. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Mux <highlight><bold>130</bold></highlight> could be any muxing system operable to place user information arriving over connection <highlight><bold>180</bold></highlight> on the virtual connection selected by signaling processing system <highlight><bold>160</bold></highlight>. Typically, this involves receiving signaling messages from signaling processing system <highlight><bold>160</bold></highlight> that identify assignments of virtual connections to an access connection on a call by call basis. The mux would convert user traffic from access connection <highlight><bold>180</bold></highlight> into ATM cells that identify the selected virtual connection. Mux <highlight><bold>140</bold></highlight> is similar to mux <highlight><bold>130</bold></highlight>. A preferred embodiment of these muxes are also discussed in detail below. The system would operate as follows for a call from user <highlight><bold>110</bold></highlight> to user <highlight><bold>120</bold></highlight>. User <highlight><bold>110</bold></highlight> would send a signaling message over link <highlight><bold>190</bold></highlight> to system <highlight><bold>100</bold></highlight> initiating the call. Signaling processing system <highlight><bold>160</bold></highlight> would process the message. Such processing could include validation, screening, translating, route selection, echo control, network management, signaling, and billing. In particular, a virtual connection through ATM cross-connect system <highlight><bold>150</bold></highlight> from mux <highlight><bold>130</bold></highlight> to mux <highlight><bold>140</bold></highlight> would be selected, and a connection from mux <highlight><bold>140</bold></highlight> to user <highlight><bold>120</bold></highlight> would also be selected. Although many possible connections would be available, only the selected connections are shown&mdash;connection <highlight><bold>181</bold></highlight> and connection <highlight><bold>182</bold></highlight>. Generally, the selection is based on the dialed number, but call processing can entail many other factors with a few examples being network loads and user routing instructions. Signaling processing system <highlight><bold>160</bold></highlight> would then send signaling reflecting the selections to mux <highlight><bold>130</bold></highlight> and mux <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> User <highlight><bold>110</bold></highlight> would also seize a connection to system <highlight><bold>100</bold></highlight>. The connection is represented by connection <highlight><bold>180</bold></highlight> to mux <highlight><bold>130</bold></highlight>. Although, only one connection is shown for purposes of clarity, numerous connections would typically be available for seizure. The seized connection would be identified in the signaling from user <highlight><bold>110</bold></highlight> to system <highlight><bold>100</bold></highlight>. Signaling processing system <highlight><bold>160</bold></highlight> would include the identity of this connection in its signal to mux <highlight><bold>130</bold></highlight>. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> If required, user <highlight><bold>120</bold></highlight> would receive signaling to facilitate completion of the call. The signaling from signaling processing system <highlight><bold>160</bold></highlight> would indicate that system <highlight><bold>100</bold></highlight> was connecting to user <highlight><bold>120</bold></highlight> over connection <highlight><bold>182</bold></highlight>. Typically, user <highlight><bold>120</bold></highlight> would accept and acknowledge the connection in a signaling message back to system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Mux <highlight><bold>130</bold></highlight> would receive signaling from signaling processing system <highlight><bold>160</bold></highlight> identifying connection <highlight><bold>180</bold></highlight> as the access connection and connection <highlight><bold>181</bold></highlight> as the selected virtual connection through ATM cross-connect system <highlight><bold>150</bold></highlight>. Mux <highlight><bold>130</bold></highlight> would convert the user information from connection <highlight><bold>180</bold></highlight> into ATM cells. Mux <highlight><bold>130</bold></highlight> would designate connection <highlight><bold>181</bold></highlight> in the cell headers. Connection <highlight><bold>181</bold></highlight> would have been previously provisioned through ATM cross-connect system <highlight><bold>150</bold></highlight> from mux <highlight><bold>130</bold></highlight> to mux <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Mux <highlight><bold>140</bold></highlight> would receive signaling from signaling processing system <highlight><bold>160</bold></highlight> identifying connection <highlight><bold>181</bold></highlight> as the selected virtual connection and connection <highlight><bold>182</bold></highlight> as the selected access connection to user <highlight><bold>120</bold></highlight>. Mux <highlight><bold>140</bold></highlight> would convert cells arriving on connection <highlight><bold>181</bold></highlight> to user information suitable for connection <highlight><bold>182</bold></highlight> to user <highlight><bold>120</bold></highlight>. Although the above example employs two muxes, a single mux could be employed for calls that enter and exit system <highlight><bold>100</bold></highlight> through the same mux. In this case, the ATM system would simply provide a virtual connection back to the same mux. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> From the above discussion, it can be seen that multiple virtual connections can be pre-provisioned through an ATM cross-connect system to interconnect ATM interworking multiplexers. When a user places a call, one of the virtual connections is selected for the call by the signal processing system and identified to the appropriate muxes. The muxes convert the user information into cells that identify the selected connection. As such, user information can be switched through an ATM fabric on a call by call basis. The system does not require the call processing or signaling capabilities of an ATM switch (although an ATM switch could be used to provide the virtual connections without using its call processing and signaling functions). The system can also implement enhanced services such as N00 and virtual private network (VPN). </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> depicts another embodiment of the invention. In this embodiment, the user information from the access connection is capable of being muxed to the DS0 level, but this is not required in other embodiments. Additionally, SS7 signaling is used in this embodiment, but other signaling protocols, such as C7 or UNI signaling, are also applicable to the invention. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Shown are DS0 interface <highlight><bold>210</bold></highlight>, ATM adaption layer (AAL) <highlight><bold>220</bold></highlight>, ATM interface <highlight><bold>230</bold></highlight>, DS0&mdash;virtual connection assignment <highlight><bold>240</bold></highlight>, call/connection manager (CCM) <highlight><bold>250</bold></highlight> and signal transfer point (STP) <highlight><bold>260</bold></highlight>. Also shown are connections <highlight><bold>280</bold></highlight>-<highlight><bold>283</bold></highlight> and links <highlight><bold>290</bold></highlight>-<highlight><bold>292</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> Connection <highlight><bold>280</bold></highlight> could by any connection or group of connections that contain information that can be converted to DS0 format. Examples of these connections are OC-3, VT 1.5, DS3. and DS1. DS0 interface <highlight><bold>210</bold></highlight> is operable to convert user information in these formats into the DS0 format. AAL <highlight><bold>220</bold></highlight> comprises both a convergence sublayer and a segmentation and reassembly (SAR) layer. AAL <highlight><bold>220</bold></highlight> is operational to accept the user information in DS0 format from DS0 interface <highlight><bold>210</bold></highlight> and convert the information into ATM cells. AALs are known in the art and information about AALs is provided by International Telecommunications Union (ITU) document I.363.1. An AAL for voice is also described in patent application Ser. No. 08/395,745, filed on Feb. 28, 1995, entitled &ldquo;Cell Processing for Voice Transmission&rdquo;, and hereby incorporated by reference into this application. ATM interface <highlight><bold>230</bold></highlight> is operational to accept ATM cells and transmit them over connection <highlight><bold>283</bold></highlight>. Connection <highlight><bold>283</bold></highlight> is a standard DS3 or SONET connection transporting ATM cells. Connection <highlight><bold>281</bold></highlight> is operational for the DS0 format and connection <highlight><bold>282</bold></highlight> is operational to transfer ATM cells. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> It can be seen that a communications path through connections <highlight><bold>280</bold></highlight>-<highlight><bold>283</bold></highlight> could be established to carry user information. Although the communications path has been described from connection <highlight><bold>280</bold></highlight> to connection <highlight><bold>283</bold></highlight>, the invention contemplates components that are also operational to perform reciprocal processing in the reverse direction. If the communications path is bi-directional, user information in ATM cells arriving on connection <highlight><bold>283</bold></highlight> would be processed for output on connection <highlight><bold>280</bold></highlight> in the appropriate format. Those skilled in the art will appreciate that separate connections could also be set up in each direction, or that only a connection in one direction may be required. These components and their operation are known in the art. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Signaling links <highlight><bold>290</bold></highlight> and <highlight><bold>291</bold></highlight> are SS7 links. Link <highlight><bold>292</bold></highlight> is a data link with an example being an ethernet connection transporting UDP/IP. STP <highlight><bold>260</bold></highlight> is device that routes signaling messages. STPs are well known in the art. CCM <highlight><bold>250</bold></highlight> would be identified by its own signaling point code. STP <highlight><bold>260</bold></highlight> would route signaling messages addressed to this point code to CCM <highlight><bold>250</bold></highlight>. In some embodiments, STP <highlight><bold>260</bold></highlight> may also convert other point codes to the point code for CCM <highlight><bold>250</bold></highlight> so these signaling messages are also routed to CCM <highlight><bold>250</bold></highlight>. Although point code conversion is not essential, it facilitates the transition of a network to the system of the invention. The conversion could be implemented through a conversion table located between level <highlight><bold>2</bold></highlight> and level <highlight><bold>3</bold></highlight> of the message transfer part (MTP) function of STP <highlight><bold>260</bold></highlight>. The conversion table would convert the destination point code of the message to that of CCM <highlight><bold>250</bold></highlight>, so that the route function of MTP <highlight><bold>3</bold></highlight> would forward the message to CCM <highlight><bold>250</bold></highlight>. Point code conversion could be based on many factors with a few examples being the destination point code, the origination point code, the signaling link, the circuit identification code, the message type, and various combinations of these and other factors. For example, SS<highlight><bold>7</bold></highlight> Integrated Services User Part (ISUP) messages with particular OPC/DPC combinations could have the DPC converted to the point code of CCM <highlight><bold>250</bold></highlight>. These signaling messages would then be routed to CCM <highlight><bold>250</bold></highlight> by STP <highlight><bold>260</bold></highlight>. One version of a suitable STP is disclosed in United States patent application entitled &ldquo;Telecommunications Apparatus, System, and Method with Enhanced Signal Transfer Point&rdquo;, filed simultaneously with this application, assigned to the same entity, and hereby incorporated by reference into this application. CCM <highlight><bold>250</bold></highlight> is a signaling processor that operates as discussed above. A preferred embodiment of CCM <highlight><bold>250</bold></highlight> is provided later. In this embodiment CCM <highlight><bold>250</bold></highlight> would be operable to receive and process SS<highlight><bold>7</bold></highlight> signaling to select connections, and to generate and transmit signaling identifying the selections. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Assignment <highlight><bold>240</bold></highlight> is a control interface that accepts messages from CCM <highlight><bold>250</bold></highlight>. In particular, assignment <highlight><bold>240</bold></highlight> identifies DS0/virtual connection assignments in the messages from link <highlight><bold>292</bold></highlight>. These assignments are provided to AAL <highlight><bold>220</bold></highlight> for implementation. As such, AAL <highlight><bold>220</bold></highlight> obtains the virtual path identifier (VPI) and virtual channel identifier (VCI) for each call from assignment <highlight><bold>240</bold></highlight>. AAL <highlight><bold>220</bold></highlight> also obtains the identity of the DS0 for each call (or the DS0s for an N&times;64 call). AAL <highlight><bold>220</bold></highlight> then converts user information between the identified DS0 and the identified ATM virtual connection. Acknowledgments that the assignments have been implemented may be sent back to CCM <highlight><bold>250</bold></highlight> if desired. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> In operation, calls are processed as follows. Signaling messages for calls arrive on link <highlight><bold>290</bold></highlight> and are routed by STP <highlight><bold>260</bold></highlight> to CCM <highlight><bold>250</bold></highlight>. Access connections are typically seized contemporaneously with the signaling. All of these connections are represented by connection <highlight><bold>280</bold></highlight>. DS0 interface <highlight><bold>210</bold></highlight> would convert the traffic on connection <highlight><bold>280</bold></highlight> into the DS0 format and provide the DS0s to AAL <highlight><bold>220</bold></highlight> over connection <highlight><bold>281</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The signaling received by CCM <highlight><bold>250</bold></highlight> would identify the access connections for the calls (i.e. the particular DS0s on connection <highlight><bold>280</bold></highlight>), and contain call information, such as a dialed number. CCM <highlight><bold>250</bold></highlight> would process the signaling and select connections for the call. Since multiple virtual connections are pre-provisioned from ATM interface <highlight><bold>230</bold></highlight> to the other destinations in the network, CCM <highlight><bold>250</bold></highlight> can select a virtual connection to the destination. The selection process can be accomplished through table look-ups. For example, a table could be used to translate a portion of the dialed number into a VPI. The VCI would be selected based on the available VCIs in the selected VPI. The VPI/VCI combination would correspond to a unique virtual connection pre-provisioned from ATM interface <highlight><bold>230</bold></highlight> to the appropriate network destination. The selections represent the DS0&mdash;virtual connection assignments that are provided to assignment <highlight><bold>240</bold></highlight> over link <highlight><bold>292</bold></highlight>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> Assignment <highlight><bold>240</bold></highlight> accepts the DS0&mdash;virtual connection assignments and provides them to AAL <highlight><bold>220</bold></highlight>. When AAL <highlight><bold>220</bold></highlight> receives a particular assignment, it converts user information from the designated DS0 into cells that identify the designated VPI/VCI. The cells are provided to ATM interface <highlight><bold>230</bold></highlight> over connection <highlight><bold>282</bold></highlight>. ATM interface <highlight><bold>230</bold></highlight> accepts the cells and places them within the transport format for connection <highlight><bold>283</bold></highlight>. The cells are then transported over the selected virtual connection to the appropriate destination. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Calls also exit the network through connection <highlight><bold>280</bold></highlight>. In this case, CCMs at the origination points select the virtual connections to ATM interface <highlight><bold>230</bold></highlight>. The originating CCMs also send signaling messages to CCM <highlight><bold>250</bold></highlight>. The signaling messages identify the destinations for the calls and the selected virtual connections. CCM <highlight><bold>250</bold></highlight> will have a list of available access connections to the identified destinations. CCM <highlight><bold>250</bold></highlight> will select the access connections to the destination from the list. For example, the connection selected by CCM <highlight><bold>250</bold></highlight> could be a DS0 embedded within a DS3 connected to a LEC. The virtual connections on connection <highlight><bold>283</bold></highlight> and selected access connections on connection <highlight><bold>280</bold></highlight> are provided to assignment <highlight><bold>240</bold></highlight> over link <highlight><bold>292</bold></highlight>. Assignment <highlight><bold>240</bold></highlight> provides these assignments to AAL <highlight><bold>220</bold></highlight>. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> ATM interface <highlight><bold>230</bold></highlight> will demux the cells arriving from connection <highlight><bold>283</bold></highlight> and provide them to AAL <highlight><bold>220</bold></highlight>. AAL <highlight><bold>220</bold></highlight> converts the user information in the cells into the DS0 format. AAL <highlight><bold>220</bold></highlight> make the conversion so that cells from a particular virtual connection are provided to the assigned DS0 on connection <highlight><bold>281</bold></highlight>. DS0 interface will convert the DS0s from connection <highlight><bold>281</bold></highlight> into the appropriate format, such as DS3. for connection <highlight><bold>280</bold></highlight>. Those skilled in the art are aware of the techniques for muxing and transporting DS0 signals. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> From the above discussion, it can be seen that user information for calls can flow from connection <highlight><bold>280</bold></highlight> to connection <highlight><bold>283</bold></highlight>, and in the reverse direction from connection <highlight><bold>283</bold></highlight> to connection <highlight><bold>280</bold></highlight>. DS0 interface <highlight><bold>210</bold></highlight> and ATM interface <highlight><bold>230</bold></highlight> provide user information in their respective formats to AAL <highlight><bold>220</bold></highlight>. AAL <highlight><bold>220</bold></highlight> converts the user information between DS0 and ATM formats based on the assignments from assignment <highlight><bold>240</bold></highlight>. CCM <highlight><bold>250</bold></highlight> can select the DS0&mdash;virtual connection assignments that drive the process. </paragraph>
</section>
<section>
<heading lvl="1">The ATM Interworking Multiplexer </heading>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows one embodiment of the mux that is suitable for the present invention, but muxes that support the requirements of the invention are also applicable. Shown are control interface <highlight><bold>300</bold></highlight>, OC-3 interface <highlight><bold>305</bold></highlight>, DS3 interface <highlight><bold>310</bold></highlight>, DS1 interface <highlight><bold>315</bold></highlight>, DS0 interface <highlight><bold>320</bold></highlight>, digital signal processing(DSP) <highlight><bold>325</bold></highlight>, AAL <highlight><bold>330</bold></highlight>, and OC-<highlight><bold>12</bold></highlight> interface <highlight><bold>335</bold></highlight>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> OC-3 interface <highlight><bold>305</bold></highlight> accepts the OC-3 format and makes the conversion to DS3. DS3 interface <highlight><bold>310</bold></highlight> accepts the DS3 format and makes the conversion to DS1. DS3 interface <highlight><bold>310</bold></highlight> can accept DS3s from OC-3 interface <highlight><bold>305</bold></highlight> or from an external connection. DS1 interface <highlight><bold>315</bold></highlight> accepts the DS1 format and makes the conversion to DS0. DS1 interface <highlight><bold>315</bold></highlight> can accept DS1s from DS3 interface <highlight><bold>310</bold></highlight> or from an external connection. DS0 interface <highlight><bold>320</bold></highlight> accepts the DS0 format and provides an interface to digital signal processing (DSP) <highlight><bold>325</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> DS0 interface <highlight><bold>320</bold></highlight> is coupled to DSP <highlight><bold>325</bold></highlight>. DSP <highlight><bold>325</bold></highlight> is capable of manipulating the user information to improve transmission quality. DSP processing primarily entails echo cancellation, but could include other features as well. As is known, echo cancellation can be required for voice calls. DSP <highlight><bold>325</bold></highlight> passes the DS0s through echo cancellers. These echo cancellers must be disabled for calls that do not require echo control. Data calls do not require echo cancellation, and the CCM has the ability to recognize data calls that require an echo canceller to be disabled. The CCM will send a control message through control interface <highlight><bold>300</bold></highlight> to DSP <highlight><bold>325</bold></highlight> indicating the particular echo canceller that is to be disabled. The CCM selects the echo canceller based on the CIC in the signaling it receives from the user. After the data call, the CCM sends a message that causes the particular echo canceller to be enabled again for subsequent voice calls. The above technique of applying echo control is preferred, but other means of implementing echo control instructions from the CCM are also applicable. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> In addition to echo control, the CCM and the mux can work to provide other digital signal processing features on a call by call basis. Compression algorithms can be applied, either universally, or on a per call basis. The decibel level could be adjusted for calls form a particular origin or to a particular destination, i.e. where a hearing impaired person may reside. Encryption could be applied on a call-by-call basis based on various criteria like the origination number or the destination number. Various DSP features could be associated with various call perameters and implemented by the CCM through DSP <highlight><bold>325</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> DSP <highlight><bold>325</bold></highlight> is connected to AAL <highlight><bold>330</bold></highlight>. AAL <highlight><bold>330</bold></highlight> operates as described above for an AAL. DS0&mdash;virtual connection assignments from control interface <highlight><bold>300</bold></highlight> are implemented by AAL <highlight><bold>330</bold></highlight> when converting between the DS0 and ATM formats. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Calls with a bit rate greater than 64 kbit/sec. are known as N&times;64 calls. If desired, AAL <highlight><bold>330</bold></highlight> can be capable of accepting control messages through control interface <highlight><bold>300</bold></highlight> from the CCM for N&times;64 calls. The CCM would instruct AAL <highlight><bold>330</bold></highlight> to group the DS0s for the call. </paragraph>
</section>
<section>
<heading lvl="1">The ATM Cross-connect System </heading>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> depicts virtual connections provided by the ATM cross connect system in a version of the invention, although numerous other techniques for providing virtual connections will be appreciated by one skilled in the art, and the invention contemplates any such system. Shown are virtual connections <highlight><bold>410</bold></highlight>, <highlight><bold>412</bold></highlight>, <highlight><bold>414</bold></highlight>, <highlight><bold>416</bold></highlight>, <highlight><bold>418</bold></highlight>, and <highlight><bold>420</bold></highlight>. These virtual connections are shown interconnecting muxes A, B, and C through cross-connects Y and Z. Virtual connections are provisioned in between each mux. Each mux would have a virtual path to the cross-connect system that is designated for each possible destination mux. Virtual path AB contains virtual connection <highlight><bold>412</bold></highlight> from mux A to mux B. For calls that originate and terminate at the same mux, virtual connections <highlight><bold>410</bold></highlight>, <highlight><bold>416</bold></highlight>, and <highlight><bold>420</bold></highlight> are provisioned for that purpose. Virtual connections <highlight><bold>414</bold></highlight> and <highlight><bold>418</bold></highlight> connect muxes A/C and B/C respectively. Alternate routes for different virtual connections can be provisioned between the same two muxes. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Within each virtual path are thousands of virtual channels (not shown). Virtual connections are provisioned by cross-connecting VPI/VCI combinations at cross-connects Y and Z. If a call enters mux A and needs to terminate at mux B, the CCM will select virtual path AB. The selection could be based on a translation of the dialed number. Within virtual path AB, the CCM would select the particular virtual channel. This selection could be based on available VCIs within the VPI. In this way, pre-provisioned virtual connections can be selected on a call by call basis. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Typically, calls will require a bi-directional voice connection. For t his purpose, a virtual connection must transport user information in both directions. The virtual connections can be provisioned so that the mux at the terminating end may use the same VPI/VCI for cells transported in the opposite direction. The terminating CCM could also translate the originating VPI/VCI into another VPI/VCI provisioned in the opposite direction and provide this VPI/VCI to the terminating mux. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Additionally, the number of active virtual connections in between cross-connects can be tracked. Virtual path YZ connects cross-connects Y and Z. The capacity of virtual path YZ would be sized based on network requirements, but should it become overloaded, the CCMs can be programmed to select an alternate virtual path. </paragraph>
</section>
<section>
<heading lvl="1">Operation within a Network </heading>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> depicts an embodiment of the invention with respect to a specific telecommunications network scenario, although the invention is not limited to this specific scenario. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows telecommunications system <highlight><bold>500</bold></highlight>. Shown are user <highlight><bold>510</bold></highlight>, user <highlight><bold>512</bold></highlight>, user <highlight><bold>514</bold></highlight>, user <highlight><bold>516</bold></highlight>, STP <highlight><bold>518</bold></highlight>, STP <highlight><bold>520</bold></highlight>, STP <highlight><bold>522</bold></highlight>, STP <highlight><bold>524</bold></highlight>, mux <highlight><bold>526</bold></highlight>, mux <highlight><bold>528</bold></highlight>, mux <highlight><bold>530</bold></highlight>, mux <highlight><bold>532</bold></highlight>, call/connection manager (CCM) <highlight><bold>534</bold></highlight>, CCM <highlight><bold>536</bold></highlight>, CCM <highlight><bold>538</bold></highlight>, CCM <highlight><bold>540</bold></highlight>, ATM cross-connect <highlight><bold>542</bold></highlight>, ATM cross-connect <highlight><bold>544</bold></highlight>, and ATM cross-connect <highlight><bold>546</bold></highlight>. For clarity, the connections and signaling links are not numbered. All of these components are described, and the CCMs are also discussed below. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> In operation, user <highlight><bold>510</bold></highlight> may forward an 800 call to system <highlight><bold>500</bold></highlight>. User <highlight><bold>510</bold></highlight> could be connected to mux <highlight><bold>526</bold></highlight> with a DS3 connection. The 800 call would occupy a DS0 embedded in the DS3 connected to mux <highlight><bold>526</bold></highlight>. User <highlight><bold>510</bold></highlight> would send an SS<highlight><bold>7</bold></highlight> Initial Address Message (IAM) through STP <highlight><bold>518</bold></highlight> to system <highlight><bold>500</bold></highlight>. STP <highlight><bold>520</bold></highlight> would be configured to route the IAM to CCM <highlight><bold>534</bold></highlight>. An IAM contains information such as the dialed number, the caller&apos;s number, and the circuit identification code (CIC). The CIC identifies the DS0 used by user <highlight><bold>510</bold></highlight> for the call. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> CCM <highlight><bold>534</bold></highlight> would process the IAM and identify that the call was an 800 call. Either through its own database or by accessing a service control point (SCP) (not shown), the CCM would translate the dialed number based on the <highlight><bold>800</bold></highlight> subscriber&apos;s routing plan. For example, <highlight><bold>800</bold></highlight> calls from user <highlight><bold>510</bold></highlight> may be routed to user <highlight><bold>512</bold></highlight> during business hours, to user <highlight><bold>514</bold></highlight> at night, and to user <highlight><bold>516</bold></highlight> on weekends. If the call is placed from user <highlight><bold>512</bold></highlight> on a weekend, the call would be routed to user <highlight><bold>516</bold></highlight>. As such, CCM <highlight><bold>534</bold></highlight> would select a pre-provisioned virtual connection from mux <highlight><bold>526</bold></highlight> through ATM cross-connect <highlight><bold>542</bold></highlight> and ATM cross-connect <highlight><bold>544</bold></highlight> to mux <highlight><bold>530</bold></highlight>. CCM <highlight><bold>534</bold></highlight> would send an IAM message to CCM <highlight><bold>538</bold></highlight> through STP <highlight><bold>520</bold></highlight> and STP <highlight><bold>522</bold></highlight>. The IAM would indicate that a call was being routed to user <highlight><bold>516</bold></highlight> and would identify the selected virtual connection being used to reach mux <highlight><bold>530</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Typically, mux <highlight><bold>530</bold></highlight> would be connected to user <highlight><bold>516</bold></highlight> with a DS3 connection. CCM <highlight><bold>538</bold></highlight> would select a DS0 embedded in the DS3 and would send an IAM to user <highlight><bold>516</bold></highlight> through STP <highlight><bold>522</bold></highlight> and STP <highlight><bold>524</bold></highlight>. The CIC of the IAM would indicate that a call was being routed to user <highlight><bold>516</bold></highlight> over the selected DS0. User <highlight><bold>516</bold></highlight> would process the IAM and complete the call. When the call is answered, user <highlight><bold>516</bold></highlight> would transmit an answer message (ANM) through STP <highlight><bold>524</bold></highlight> back to system <highlight><bold>500</bold></highlight>. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> CCM <highlight><bold>534</bold></highlight> would also send a UDP/IP message to mux <highlight><bold>526</bold></highlight> instructing it to assemble the user information in the DS0 from user <highlight><bold>510</bold></highlight> into ATM cells with a cell header identifying the selected virtual connection. CCM <highlight><bold>538</bold></highlight> would send a UDP/IP message to mux <highlight><bold>530</bold></highlight> instructing it to dis-assemble ATM cells from the selected virtual connection and output the user information to the selected DS0 to user <highlight><bold>516</bold></highlight>. ATM cross-connect <highlight><bold>542</bold></highlight> would route ATM cells from mux <highlight><bold>526</bold></highlight> to ATM cross-connect <highlight><bold>544</bold></highlight> based on the cell header. Likewise, ATM cross-connect <highlight><bold>544</bold></highlight> would route these cells to mux <highlight><bold>530</bold></highlight> based on the cell header. As such, user information for the call would flow from user <highlight><bold>510</bold></highlight> to user <highlight><bold>516</bold></highlight> over the DS0 from user <highlight><bold>510</bold></highlight>, the virtual connection selected by CCM <highlight><bold>534</bold></highlight>, and the DS0 to user <highlight><bold>516</bold></highlight> selected by CCM <highlight><bold>538</bold></highlight>. The muxes would implement the selections of the CCMs. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The call would require that a voice channel be available in both directions. As such, the DS0s and virtual connection would be bi-directional. Cut-through on the receive channel (from the user <highlight><bold>516</bold></highlight> to the user <highlight><bold>510</bold></highlight>) would occur after the address complete message (ACM) had been received by system <highlight><bold>500</bold></highlight>. Cut-through on the transmit channel (from the user <highlight><bold>510</bold></highlight> to the user <highlight><bold>516</bold></highlight>) would occur after the answer message (ANM) had been received by system <highlight><bold>500</bold></highlight>. This could be accomplished by not allowing mux <highlight><bold>530</bold></highlight> to release any cells for the call until the ANM has been received by system <highlight><bold>500</bold></highlight>. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> If user <highlight><bold>510</bold></highlight> were to place the call at night, CCM <highlight><bold>534</bold></highlight> would determine that user <highlight><bold>514</bold></highlight> was the destination. Accordingly a pre-provisioned virtual connection from mux <highlight><bold>526</bold></highlight> through ATM cross-connect <highlight><bold>542</bold></highlight> and ATM cross-connect <highlight><bold>546</bold></highlight> to mux <highlight><bold>528</bold></highlight> would be selected for the call. CCM <highlight><bold>536</bold></highlight> would select the DS0 to user <highlight><bold>514</bold></highlight>. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> If user <highlight><bold>510</bold></highlight> were to place the call during the day, CCM <highlight><bold>534</bold></highlight> would determine that user <highlight><bold>512</bold></highlight> was the destination. Accordingly a pre-provisioned virtual connection from mux <highlight><bold>526</bold></highlight> through ATM cross-connect <highlight><bold>542</bold></highlight> and back to mux <highlight><bold>526</bold></highlight> would be selected for the call. CCM <highlight><bold>534</bold></highlight> would also select the DS0 to user <highlight><bold>512</bold></highlight>. </paragraph>
</section>
<section>
<heading lvl="1">The Call/Connection Manager (CCM) </heading>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> FIGS. <highlight><bold>6</bold></highlight>-<highlight><bold>12</bold></highlight> refer to a preferred embodiment of the signaling processor, also known as the CCM, but any processor which supports the requirements stated for the invention would suffice. <cross-reference target="DRAWINGS">FIG. 6</cross-reference> depicts a signaling processor suitable for the invention. Signaling processor <highlight><bold>610</bold></highlight> would typically be separate from the mux, but those skilled in the art appreciate that they could be housed together. Also, signaling processor may support a single mux or support multiple muxes. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Signaling processor <highlight><bold>610</bold></highlight> includes Message Transfer Part (MTP) level <highlight><bold>1</bold></highlight> <highlight><bold>612</bold></highlight>, MTP level <highlight><bold>2</bold></highlight> <highlight><bold>615</bold></highlight>, and MTP level <highlight><bold>3</bold></highlight> <highlight><bold>620</bold></highlight>. MTP level <highlight><bold>1</bold></highlight> <highlight><bold>612</bold></highlight> defines the physical and electrical requirements for a signaling link. MTP level <highlight><bold>2</bold></highlight> <highlight><bold>615</bold></highlight> sits on top of level <highlight><bold>1</bold></highlight> and maintains reliable transport over a signaling link by monitoring status and performing error checks. Together, MTP levels <highlight><bold>1</bold></highlight>-<highlight><bold>2</bold></highlight> provide reliable transport over an individual link. A device would need MTP level <highlight><bold>1</bold></highlight>-<highlight><bold>2</bold></highlight> functionality for each link it uses. MTP level <highlight><bold>3</bold></highlight> <highlight><bold>620</bold></highlight> sits on top of level <highlight><bold>2</bold></highlight> and provides a routing and management function for the signaling system at large. MTP level <highlight><bold>3</bold></highlight> <highlight><bold>620</bold></highlight> directs messages to the proper signaling link (actually to the MTP level <highlight><bold>2</bold></highlight> for that link). MTP level <highlight><bold>3</bold></highlight> <highlight><bold>620</bold></highlight> directs messages to applications using the MTP levels for access the signaling system. MTP level <highlight><bold>3</bold></highlight> <highlight><bold>620</bold></highlight> also has a management function which monitors the status of the signaling system and can take appropriate measures to restore service through the system. MTP levels <highlight><bold>1</bold></highlight>-<highlight><bold>3</bold></highlight> correspond to layers <highlight><bold>1</bold></highlight>-<highlight><bold>3</bold></highlight> of the open systems interconnection basic reference model (OSIBRF). Both the MTP <highlight><bold>1</bold></highlight>-<highlight><bold>3</bold></highlight> and the OSIBRF are well known in the art </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Also shown for signaling processor <highlight><bold>610</bold></highlight> are ethernet interface <highlight><bold>635</bold></highlight>, platform handler <highlight><bold>640</bold></highlight>, message handler <highlight><bold>645</bold></highlight>, and data handler <highlight><bold>650</bold></highlight>. Ethernet interface <highlight><bold>635</bold></highlight> is a standard ethernet bus supporting TCP/IP which transfers signaling messages from MTP level <highlight><bold>3</bold></highlight> to platform handler <highlight><bold>640</bold></highlight>. Also, if UDP/IP is used to communicate with the muxes, ethernet interface <highlight><bold>335</bold></highlight> would accept the links to the muxes. Those skilled in the art will recognize other interfaces and protocols which could support these functions in accord with the invention. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> In accord with this invention, the logic of the signaling interface (indicated by reference numerals <highlight><bold>612</bold></highlight>, <highlight><bold>615</bold></highlight>, <highlight><bold>620</bold></highlight>, and <highlight><bold>635</bold></highlight>) would be operational to route select ISUP messages to platform handler <highlight><bold>640</bold></highlight>. Technique for doing this have been discussed above. Preferably, an SS<highlight><bold>7</bold></highlight> interface to platform handler <highlight><bold>640</bold></highlight> could be constructed using commercially available SS<highlight><bold>7</bold></highlight> software interface tools. An example of such tools would be SS<highlight><bold>7</bold></highlight> interface software provided by Trillium, Inc. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> Platform handler <highlight><bold>640</bold></highlight> is a system which accepts ISUP and B-ISUP messages from ethernet interface <highlight><bold>635</bold></highlight> and routes them to message handler <highlight><bold>645</bold></highlight>. Preferably, platform handler <highlight><bold>640</bold></highlight> is configured to route messages to a particular message handler processor based on the signaling link selection (SLS) code in the message. Message handler <highlight><bold>645</bold></highlight> is a system which exchanges signaling with platform handler <highlight><bold>640</bold></highlight> and controls the connection and switching requirements for the calls. It can select and implement services and initiate echo control. It also converts signaling between ISUP and B-ISUP. Data handler <highlight><bold>650</bold></highlight> is a set of logic coupled to message handler <highlight><bold>645</bold></highlight> which processes service requests and provides data to message handler <highlight><bold>645</bold></highlight>. Data handler <highlight><bold>650</bold></highlight> also controls echo cancellers and generates billing records for the call. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> In the discussions that follow, the term ISUP will include B-ISUP as well. In operation, ISUP messages that meet the proper criteria are routed by MTP and/or ATM interface <highlight><bold>615</bold></highlight>, MTP level <highlight><bold>3</bold></highlight> <highlight><bold>620</bold></highlight>, and ethernet interface <highlight><bold>635</bold></highlight> to platform handler <highlight><bold>640</bold></highlight>. Platform handler <highlight><bold>640</bold></highlight> would route the ISUP messages to message handler <highlight><bold>645</bold></highlight>. Message handler <highlight><bold>645</bold></highlight> would process the ISUP information. This might include validation, screening, and determining if additional data is needed for call processing. If so, data handler <highlight><bold>650</bold></highlight> would be invoked and would provide message handler <highlight><bold>645</bold></highlight> with the relevant data so message handler <highlight><bold>645</bold></highlight> could complete call processing. Message handler <highlight><bold>645</bold></highlight> would generate the appropriate ISUP message to implement the call and pass the signals to platform handler <highlight><bold>640</bold></highlight> for subsequent transmission to the designated network elements. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The distribution of functional entities among message handler <highlight><bold>645</bold></highlight> and data handler <highlight><bold>650</bold></highlight> are shown. These functional entities are well known in the art. Message handler <highlight><bold>645</bold></highlight> includes at least the call control function (CCF) and the service switching function (SSF). The CCF establishes and releases call connections, and the SSF recognizes triggers during call processing by the CCF and provides an interface between the CCF and the service control function (SCF). The SCF identifies services and obtains data for the service. In some embodiments, message handler <highlight><bold>645</bold></highlight> can include the SCF and the service data function (SDF). The SDF provides service data in real time to the SCF. Taken together, message handler <highlight><bold>645</bold></highlight> is able to at least control connections and recognize triggers. In some embodiments, message handler <highlight><bold>645</bold></highlight> can also identify services, obtain data for the services, and generate the signaling required to implement the services. Message handler <highlight><bold>645</bold></highlight> can provide signaling interworking (i.e. ISUP to B-ISUP), connection control, service selection and service implementation in a logically integrated package that interfaces with the network through conventional means. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> Data handler <highlight><bold>650</bold></highlight> includes at least the SCF and the SDF. In some embodiments, message handler <highlight><bold>645</bold></highlight> and data handler <highlight><bold>650</bold></highlight> both include the SCF and the SDF and services are partitioned among the functional entities. Two other functions are shown in data handler that are not standardized functional entities. Accounting generates a billing record and echo handles the echo cancellers. Typically, an echo canceller is disabled for a data call and enabled after the data call for use on subsequent voice calls, however, other techniques are applicable. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> In operation, the CCF would perform basic call processing until the SSF recognized a trigger and invoked the SCF. The SCF would identify the service associated with the trigger. The SCF would access data from the SDF in order to implement the service. The SCF would process the data from the SDF and provide the data to the CCF through the SSF. The CCF would then set-up the connections through conventional signaling to service switching points (SSPs). The SSPs are connected to the communications path and make the connections. Typically, an SSP is a switch. Also, echo cancellers may be controlled for the call, and a billing record could be generated for the call. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> Those skilled in the art are aware of various hardware components which can support the requirements of the invention. For example, the platform handler, message handier, and data handler could each reside on a separate SPARC station <highlight><bold>20</bold></highlight>. </paragraph>
</section>
<section>
<heading lvl="1">The Platform Handler </heading>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows a possible version of the platform handler. Platform handler <highlight><bold>710</bold></highlight> is shown. Platform handler <highlight><bold>710</bold></highlight> includes STP handler <highlight><bold>712</bold></highlight>, supervisor <highlight><bold>714</bold></highlight>, and CCM handler <highlight><bold>716</bold></highlight>. Platform handler <highlight><bold>710</bold></highlight> transmits and receives ISUP messages to/from the signaling interface (reference numerals <highlight><bold>312</bold></highlight>, <highlight><bold>315</bold></highlight>, <highlight><bold>320</bold></highlight>, and <highlight><bold>335</bold></highlight>). STP handler <highlight><bold>712</bold></highlight> would provide the ethernet&mdash;TCP/IP interface. STP handler <highlight><bold>712</bold></highlight> has a process to buffer and dis-assemble the incoming packets to the CCM, and buffer and assemble outgoing packets. STP handler <highlight><bold>712</bold></highlight> could also check the messages for basic flaws. Any technique for transfer of signaling messages to platform handler <highlight><bold>710</bold></highlight> is contemplated by the invention. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> Supervisor <highlight><bold>714</bold></highlight> is responsible for managing and monitoring CCM activities. Among these are CCM start-up and shut-down, log-in and log-off of various CCM modules, handling administrative messages (i.e. error, warning, status, etc.) from the CCM modules, and handling messages from network operations such as queries, configuration instructions, and data updates. The connection to network operations is the man machine interface which allows the CCM to be controlled and monitored by either a remote or a local operator. Supervisor <highlight><bold>714</bold></highlight> has a process which retrieves configuration data from internal tables to initialize and configure the CCM. The CCM modules also have internal tables which are used in conjunction with this procedure. Supervisor <highlight><bold>714</bold></highlight> also communicates internally with STP handler <highlight><bold>712</bold></highlight> and CCM handler <highlight><bold>716</bold></highlight>. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> CCM handler <highlight><bold>716</bold></highlight> exchanges ISUP information with STP handler <highlight><bold>712</bold></highlight>. CCM handler <highlight><bold>716</bold></highlight> also exchanges ISUP messages and CCM supervisory messages with the message handler. The connection between CCM handler <highlight><bold>716</bold></highlight> and the message handler could be an ethernet LAN transporting these messages encapsulated in TCP/IP packets, but other methods are known. CCM handler <highlight><bold>716</bold></highlight> would provide the ethernet&mdash;TCP/IP interface. CCM handler <highlight><bold>716</bold></highlight> has a process to buffer and dis-assemble the incoming packets from the message handler, and buffer and assemble outgoing packets to the message handler. CCM handler <highlight><bold>716</bold></highlight> could also check the messages for basic flaws. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> Internally, platform handler <highlight><bold>710</bold></highlight> is equipped with bi-directional channels which exchange information among STP handler <highlight><bold>712</bold></highlight>, supervisor <highlight><bold>714</bold></highlight>, and CCM handier <highlight><bold>716</bold></highlight>. The channels between STP handler <highlight><bold>712</bold></highlight>, CCM handler <highlight><bold>715</bold></highlight>, and supervisor <highlight><bold>712</bold></highlight> carry supervisory and administrative information. The channel between STP handler <highlight><bold>712</bold></highlight> and CCM handler <highlight><bold>716</bold></highlight> carries ISUP message information. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> Platform handler <highlight><bold>710</bold></highlight> accepts, disassembles, and buffers ISUP messages received from the network. It can perform basic checks on the messages before transferring them to the message handler. Should more than one message handler be connected to platform handler <highlight><bold>710</bold></highlight>, the ISUP messages could be allocated to the message handlers based on the SLS of the particular ISUP message. CCM handler <highlight><bold>716</bold></highlight> accepts routing instructions from the message handler for routing certain ISUP messages to select processes of the message handler. Platform handler <highlight><bold>710</bold></highlight> also provides supervision and a man/machine interface for the CCM. </paragraph>
</section>
<section>
<heading lvl="1">The Message Handler. </heading>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> depicts a version of the message handler. Message handler <highlight><bold>820</bold></highlight> is shown and includes call center <highlight><bold>821</bold></highlight>, origination manager <highlight><bold>822</bold></highlight>, termination manager <highlight><bold>823</bold></highlight>, detection point manager <highlight><bold>828</bold></highlight>, feature manager <highlight><bold>824</bold></highlight>, auxiliary manager <highlight><bold>825</bold></highlight>, switching manager <highlight><bold>826</bold></highlight>, and local resource <highlight><bold>827</bold></highlight>. A primary function of message handler <highlight><bold>820</bold></highlight> is to process ISUP messages. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> Call center <highlight><bold>821</bold></highlight> is the process which receives call set-up messages from the platform handler. ISUP call set-up is initiated with the IAM. When call center <highlight><bold>821</bold></highlight> receives an IAM, it creates an instance of an origination manager process with data defined by the information in the IAM. Origination manager <highlight><bold>822</bold></highlight> represents any of the origination manager processes spawned by call center <highlight><bold>821</bold></highlight>. The CCM handler is instructed of the new instance so that subsequent ISUP messages related to that call can be transferred directly to the appropriate instance of origination manager <highlight><bold>822</bold></highlight> by the platform handler. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Origination manager <highlight><bold>822</bold></highlight> sets up a memory block called an originating call control block. The call control block provides a repository for information specific to a call. For example, the originating call control block could identify the following: the call control block, the origination manager, the message handler, the originating LEC, the LEC trunk circuit (CIC), the ATM virtual circuit, the ATM virtual path, the caller&apos;s number, the dialed number, the translated dialed number, the originating line information, the ANI service class, the selected route, the number of the selected route, the SLS, the OPC, the DPC, the service indicator (SiO), echo cancellation status, reason of release, call status, and pointers to adjacent call control blocks. In addition, the call control block would also contain the various times that signaling messages are received, such the address complete message (ACM), the answer message (ANM), the suspend message (SUS), the resume message (RES), and the release message (REL). Those skilled in the art would be aware of other pertinent data to include. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Origination manager <highlight><bold>822</bold></highlight> executes call processing in accordance with the Basic Call State Model (BCSM) recommended by the International Telecommunications Union (ITU), but with some notable exceptions. Origination manager <highlight><bold>822</bold></highlight> processes the IAM through each point in call (PIC) until a detection point (DP) is encountered. When a detection point is encountered, a message is sent to detection point manager <highlight><bold>828</bold></highlight> and processing is suspended at origination manager <highlight><bold>822</bold></highlight> until detection point manager <highlight><bold>828</bold></highlight> responds. An example of a detection point for origination manager <highlight><bold>822</bold></highlight> would be to authorize an origination attempt. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> Detection point manager <highlight><bold>828</bold></highlight> accepts messages from originating manager <highlight><bold>822</bold></highlight> caused by a detection point encountered during call processing. Detection point manager <highlight><bold>828</bold></highlight> will identify whether or not the detection point is armed. An armed detection point has specific criteria which can affect call processing if met. If the detection point is not armed, detection point manager <highlight><bold>828</bold></highlight> will send a continue signal back to origination manager <highlight><bold>822</bold></highlight>. A continue message instructs origination manager <highlight><bold>822</bold></highlight> to continue call processing to the next detection point. If the detection point is armed, detection point manager <highlight><bold>828</bold></highlight> will take action to see if the detection point criteria are met. If detection point manager <highlight><bold>828</bold></highlight> requires assistance to process the armed detection point, it will send a message to feature manager <highlight><bold>824</bold></highlight>. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Feature manager <highlight><bold>824</bold></highlight> would accept messages from detection point manager <highlight><bold>828</bold></highlight> and either forward the a message to auxiliary manager <highlight><bold>825</bold></highlight> or to switching manager <highlight><bold>826</bold></highlight>. Particular feature messages would be routed to auxiliary manager <highlight><bold>825</bold></highlight> which will process these call features. These are typically non-IN features, such as echo control or POTS billing. Other feature messages would be routed to switching manager <highlight><bold>826</bold></highlight>. These are typically IN features. Examples of IN features are 800 number translation or a terminal mobility number translation. Feature manager <highlight><bold>824</bold></highlight> will pass information back to detection point manager <highlight><bold>828</bold></highlight> (then to origination manager <highlight><bold>822</bold></highlight>) when it is received back from auxiliary manager <highlight><bold>825</bold></highlight> or switching manager <highlight><bold>826</bold></highlight>. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> Switching manager <highlight><bold>826</bold></highlight> which will determine if the request will be handled by local resource <highlight><bold>827</bold></highlight> or by the data handler. Local resource <highlight><bold>827</bold></highlight> will be structured to provide data more efficiently stored at message handler <highlight><bold>820</bold></highlight>. Examples of such data include: an automatic number identification (ANI) validation table which checks the caller&apos;s number, a dialed number translation table to translate POTS numbers into a routing instructions, or N00 translation tables to translate select 800 numbers into routing instructions. Examples of a routing instruction yielded by the tables would be a particular access connection or a virtual connection. An example of data in the data handler would be virtual private network (VPN) routing tables or complex 800 routing plans. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> Typically, originating manager <highlight><bold>822</bold></highlight> will execute through the pertinent points in call to a point indicating that set up is authorized. At this point, origination manager <highlight><bold>822</bold></highlight> will instruct call center <highlight><bold>821</bold></highlight> to create an instance of a termination manager. Termination manager <highlight><bold>823</bold></highlight> represents any of these termination managers. Origination manager <highlight><bold>822</bold></highlight> will also transfer IAM information to termination manager <highlight><bold>823</bold></highlight>. Termination manager <highlight><bold>823</bold></highlight> sets up a memory block called a terminating call control block. The call control block provides a repository for information specific to a call and is similar in composition to the originating call control block. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> Termination manager <highlight><bold>823</bold></highlight> also operates in accord with the BCSM of the ITU, but also with some exceptions. Termination manager <highlight><bold>823</bold></highlight> continues processing for the call through its own points in call until detection points are encountered. When a detection point is encountered, a message is sent to detection point manager <highlight><bold>828</bold></highlight> and processing is suspended at termination manager <highlight><bold>823</bold></highlight> until detection point manager <highlight><bold>828</bold></highlight> responds. An example of detection point for termination manager <highlight><bold>822</bold></highlight> would be to authorize termination which would entail authorizing the call as set-up by origination manager <highlight><bold>822</bold></highlight>. Messages from termination manager <highlight><bold>823</bold></highlight> to detection point manager <highlight><bold>828</bold></highlight> are handled as discussed above for messages from originating manager <highlight><bold>822</bold></highlight>. When processing by termination manager <highlight><bold>823</bold></highlight> is complete, it will produce a signaling message to transmit through platform handler <highlight><bold>410</bold></highlight> to the appropriate multiplexers, and possibly to the users. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> Message handler <highlight><bold>820</bold></highlight> communicates with the data handler using a data transfer protocol. Examples include UDP/IP, or the Intelligent Network Applications Protocol (INAP) which is contained within the component sublayer of Transaction Capabilities Application Part (TCAP). </paragraph>
</section>
<section>
<heading lvl="1">The Data Handler </heading>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows a version of the data handler. Data handler <highlight><bold>930</bold></highlight> is shown. Data handler <highlight><bold>930</bold></highlight> includes service control center <highlight><bold>931</bold></highlight>, service selection <highlight><bold>932</bold></highlight>, service logic center <highlight><bold>933</bold></highlight>, feature process <highlight><bold>934</bold></highlight>, service data center <highlight><bold>935</bold></highlight>, service data manager <highlight><bold>936</bold></highlight>, echo control <highlight><bold>937</bold></highlight>, and accounting <highlight><bold>938</bold></highlight>. Data handler <highlight><bold>930</bold></highlight> receives service request messages from the message handler. These messages result from an armed detection points triggering the message handler to invoke data handler <highlight><bold>930</bold></highlight>. The messages also result from features implemented through the auxiliary manager. Service control center <highlight><bold>931</bold></highlight>, service logic center <highlight><bold>933</bold></highlight>, and service data center <highlight><bold>935</bold></highlight> are static processes created at start-up. Service control center <highlight><bold>931</bold></highlight> creates instances of service selection managers on a call by call basis. Service control center <highlight><bold>931</bold></highlight> notifies the Switching manager to route subsequent service request messages for that call to the appropriate service selection manager. Service selection manager <highlight><bold>932</bold></highlight> represents any of the service selection managers created by service control center <highlight><bold>931</bold></highlight>. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> Service selection manager <highlight><bold>932</bold></highlight> executes the service portion of the call processing. Service selection manager <highlight><bold>932</bold></highlight> identifies the various services associated with each message and implements the service through messages to service logic center <highlight><bold>933</bold></highlight>. Service logic center <highlight><bold>933</bold></highlight> accepts messages from service selection <highlight><bold>932</bold></highlight> and creates instances of the feature processes required for the identified services. Examples of feature processes are N00, messaging, personal/terminal mobility, and virtual private network (VPN). Feature processes are service logic programs which implement the required services for a call. Feature process <highlight><bold>934</bold></highlight> represents any of the feature processes created by service logic center <highlight><bold>933</bold></highlight>. Feature process <highlight><bold>934</bold></highlight> accesses the network resources and data required to implement the service. This would entail executing service independent blocks (SIBs). A SIB is a set of functions. An example of a function would be to retrieve the called number from a signaling message. SIBs are combined to build a service. An example of a SIB is translating a called number. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> Those skilled in the art are familiar with the above services, although they have never been implemented by a system such as the present invention. N00 services are services such as 800, 900, or 500 calling in which the dialed number is used to access call processing and billing logic defined by the subscriber to the service. Messaging entails connecting the caller to a voice massaging se r vice. For example, the receipt of a release message (REL) with a cause of busy could be a trigger recognized by the message handler. In response, the data handler would create an instance of the messaging feature process and determined if a call placed to a particular dialed number would require the voice messaging platform. If so, the CCM would instruct an SSP to connect the caller to the voice message platform. Personal/Terminal mobility includes recognizing that the dialed number has mobility that requires a database look-up to determine the current number. The database is updated when the called party changes locations. VPN is a private dialing plan. It is used for calls from particular dedicated lines, from particular calling numbers (ANIs), or to particular dialed numbers. Calls are routed as defined for the particular plan. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> In the execution of the SIB to provide the service, feature process <highlight><bold>934</bold></highlight> would invoke service data center <highlight><bold>935</bold></highlight> to create an instance of service data manager <highlight><bold>936</bold></highlight>. Service data manager <highlight><bold>936</bold></highlight> accesses the network databases that provide the data required for the service. Access could be facilitated by TCAP messaging to an SCP. Service data manager <highlight><bold>936</bold></highlight> represents any of the service managers created by service data center <highlight><bold>935</bold></highlight>. Once the data is retrieved, it is transferred back down to feature process <highlight><bold>934</bold></highlight> for further service implementation. When the feature processes for a call finish execution, service information is passed back down to the message handler and ultimately to the origination or termination manager for the call. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> After a release message on a call, billing requests will be forwarded to accounting <highlight><bold>938</bold></highlight>. Accounting <highlight><bold>938</bold></highlight> will use the call control block to create a billing record. The call control block would contain information from the ISUP messages for the call and from CCM processing. From the address complete message (ACM), the call control block would include the routing label, CIC, message type, and cause indicators. From the answer message (ANM), the call control block would include the routing label, CIC, message type, and backward call indicators. From the initial address message (IAM), the call control block would include the routing label, CIC, message type, forward call indicators, user service information, called party number, calling party number, carrier identification, carrier selection information, charge number, generic address, origination line information, original called number, and redirecting number. From the release message (REL), the call control block would include the routing label, CIC, message type, and cause indicators. From the suspend message (SUS) or the pass along message (PAM), the call control block would include the routing label, CIC, and message type. Those skilled in the art are familiar with other pertinent information for a billing record and appreciate that some of this information could be deleted. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> For POTS calls, the billing request will come from the origination and termination managers through the auxiliary manager. For IN calls, the request will come from service selection <highlight><bold>932</bold></highlight>. Accounting <highlight><bold>938</bold></highlight> will generate a billing record from the call control blocks. The billing record will be forwarded to a billing system over a billing interface. An example of such an interface is the I.E.E.E. 802.3 FTAM protocol. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> At some point during call set-up, the origination manager, termination manager or even the detection point process will check the user service information data and originating line information to assess the need for echo control. If the call is a data call, a message is sent to data handler <highlight><bold>930</bold></highlight>. Specifically, the message is routed through the auxiliary manager to the echo control manager <highlight><bold>937</bold></highlight> in data handler <highlight><bold>930</bold></highlight>. Based on the CIC, echo control manager <highlight><bold>937</bold></highlight> can select which echo canceller and DS0 circuit needs to be disabled. A message will be generated to that effect and transmitted over a standard data link to the pertinent echo canceller or echo control system. As described above, echo control can be implemented by the multiplexer. Once a release (REL) message is received for the call, the echo canceller is re-enabled. On a typical call, this procedure will occur twice. Once for an echo canceller on the access side, and again for an echo canceller on the terminating side. The CCM that handles the IAM for a particular call segment will control the particular echo cancellers for the segment. </paragraph>
</section>
<section>
<heading lvl="1">IAM Call Processing </heading>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> Prior to a description of IAM processing, a brief description of SS<highlight><bold>7</bold></highlight> message is given. SS<highlight><bold>7</bold></highlight> messaging is well known in the art. SS<highlight><bold>7</bold></highlight> ISUP messages contain numerous fields of information. Each message will have a routing label containing a destination point code (DPC), an origination point code (OPC), and a signaling link selection (SLS) which are used primarily for routing the message. Each message contains a circuit identification code (CIC) which identifies the circuit to which the message relates. Each message contains the message type which is used to recognize the message. ISUP messages also contain mandatory parts filled with fixed length data and variable length data, in addition to a part available for optional data. These parts vary from message type to message type depending on the information needed. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> The initial address message (IAM) initiates the call and contains call set-up information, such as the dialed number. IAMs are transferred in the calling direction to set up the call. During this process, TCAP messages may be sent to access remote data and processing. When the IAMs have reached the final network element, an address complete message (ACM) is sent in the backward direction to indicate that the required information is available and the called party can be alerted. If the called party answers, an answer message (ANM) is sent in the backward direction indicating that the call/connection will be used. If the calling party hangs up, a release message (REL) is sent to indicate the connection is not being used and can be torn down. If the called party hangs up, a suspend message (SUS) is sent and if the called party reconnects, a resume (RES) message keeps the line open, but if their is no re-connection, a release message (REL) is sent. When the connections are free, release complete messages (RLC) are sent to indicate that the connection can be re-used for another call. Those skilled in the art are aware of other ISUP messages, however, these are the primary ones to be considered. As can be seen, the IAM is the message that sets-up the call. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> In the preferred embodiment, call processing deviates from the basic call model recommended by the ITU, although strict adherence to the model could be achieved in other embodiments. FIGS. <highlight><bold>10</bold></highlight>-<highlight><bold>12</bold></highlight> depicts the preferred call processing. Referring first to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, When the IAM for a call is received at <highlight><bold>1005</bold></highlight>, the call center creates an instance of an origination manager at <highlight><bold>1010</bold></highlight>. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> The origination manager begins call processing by sending an authorize message to the detection point manager. Detection point manager checks IAM information, including the dialed number, the CIC, and the originating line information, to perform service discrimination at <highlight><bold>1015</bold></highlight>. This is done to determine if the service requested requires validation at <highlight><bold>1020</bold></highlight>. Current call processing systems and the BCSM of the ITU both validate the call before performing service discrimination. In a significant advance over the prior art, the preferred embodiment deviates from known call processing methods by looking at the IAM information prior to validation to determine if validation is even required. For example, the calling party may not pay the bill for a call. The called party pays the bill on 800 calls and validation can be unnecessary. If validation is not required at <highlight><bold>1020</bold></highlight>, call processing proceeds directly to B. Advantageously, this avoids unnecessary look-ups in validation tables for a significant percentage of calls. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> If validation is required at <highlight><bold>1020</bold></highlight>, a validation table is checked at <highlight><bold>1025</bold></highlight>. Validation checks to see if a call should be allowed and focuses on potential billing problems for the call. For example, calls from ANIs that are delinquent on payments pose problems for billing and may not be validated. Validation would entail messaging from the detection point manager through the feature manager and the switching manager to the local resource to access the tables. The table may list authorized ANIs, unauthorized ANIs, or both. If the call is not authorized at <highlight><bold>1030</bold></highlight>, treatment (i.e. route to an operator or message) is given to the call at <highlight><bold>1035</bold></highlight>. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> If the call is authorized at <highlight><bold>1030</bold></highlight>, the services identified at <highlight><bold>1015</bold></highlight> are checked at <highlight><bold>1040</bold></highlight> to determine if the call can be routed. This would typically occur for POTS calls. If no additional services are required at <highlight><bold>1040</bold></highlight>, the dialed number is translated into a route instruction at <highlight><bold>1045</bold></highlight>. The route instruction could be a particular virtual connection and/or access connections. The processing then proceeds to A. If additional services are required at <highlight><bold>1040</bold></highlight>, processing proceeds to B. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> picks up processing at B after a route has been selected. A termination manager is created at <highlight><bold>1105</bold></highlight>. The termination manager is responsible for processing in accordance with the terminating BCSM of the ITU. However, in some embodiments, the processing can exhibit some deviation. For example, detection points such as select facility and validate call may be skipped. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The bearer capability is analyzed at <highlight><bold>1110</bold></highlight> to determine if the call is a data call at <highlight><bold>1115</bold></highlight>. This analysis could occur elsewhere in the call processing (i.e by the origination manager after the route is selected.) If a data call is found at <highlight><bold>1115</bold></highlight>, an echo control message is sent to the data handler at <highlight><bold>1120</bold></highlight>. Echo control instructions are created at <highlight><bold>1125</bold></highlight>. The echo control instructions identify the connection for the call which requires echo control. The message could be sent to the echo control system over a conventional data link from the CCM to the echo control system. If, the echo control is implemented in the multiplexers, the echo control message could be included with the route instruction message. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> If the call is not a data call at <highlight><bold>1115</bold></highlight> or after echo control processing at <highlight><bold>1125</bold></highlight>, a signaling message is created at <highlight><bold>1135</bold></highlight>. The new signaling message identifies the access connections and virtual connection for the call. The new signaling message can also contain echo control instructions. The new signaling message is sent to the platform handler at <highlight><bold>1140</bold></highlight>. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> picks up the processing at B. At this point, several things are known about the call concerning authorization and service requirements. The call information is then analyzed at <highlight><bold>1205</bold></highlight> as required to apply services to the call. If the data handler is not required at <highlight><bold>1210</bold></highlight>, the service is implemented and the route is selected at <highlight><bold>1215</bold></highlight>. This may occur if a service can be directly implemented by the origination manager or through the local resource. For example, particular 800 translations or dialed number service profiles (i.e call forwarding) can be stored in the local resource. In this case, route selection would be performed by the local resource after the information is analyzed to identify the correct entry to a local resource database. When the local resource is used, the messages must be routed from the detection point processor through the feature manager and switching manager to the local resource. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> If the data handler is required for the call at <highlight><bold>1210</bold></highlight>, a message is sent to the data handler at <highlight><bold>1220</bold></highlight>. The messaging typically flows from the detection point processor to the feature manager and switching manager to the data handler. Upon receipt of the message at the data handler, the service control center creates an instance of the service selection process at <highlight><bold>1225</bold></highlight>. The service selection process analyzes the message from the detection point processor and selects the feature processes for the call at <highlight><bold>1230</bold></highlight>. For example, a call may be placed from a caller in a virtual private network (VPN) to a PCS number. In this case, both a VPN feature process and a PCS feature process would be created. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> Each feature process would determine if data was required at <highlight><bold>1240</bold></highlight>. For example, a personal mobility feature process would need to access a database to locate the called party&apos;s current telephone number. If data is required at <highlight><bold>1240</bold></highlight>, the service data center creates a service data manager at <highlight><bold>1245</bold></highlight>. The data manager manages the data session and accesses the appropriate database at <highlight><bold>1250</bold></highlight>. After the data is collected (or none is needed), the service is implemented by the feature process at <highlight><bold>1255</bold></highlight>. For some features, i.e. 800 service, this may include route selection. The results of the feature process analysis are returned to the origination manager to assimilate. If the feature process does not provide the route, the origination manager must select the route using the local resource or another feature process. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> The IAM itself contains numerous fields of information. The following table describes the elements of an IAM with regard to the information content and call processing.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 1</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Initial Address Message</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Parameter Field Name</entry>
<entry>Description</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>ROUTING LABEL</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Service Indicator</entry>
<entry>Set at 0101-ISDN user part</entry>
</row>
<row>
<entry>Priority</entry>
<entry>0 or 1 based on destination</entry>
</row>
<row>
<entry>Network ID</entry>
<entry>10 for national network or set based on</entry>
</row>
<row>
<entry></entry>
<entry>international trunk group</entry>
</row>
<row>
<entry>Destination Point Code</entry>
<entry>Destination of IAM</entry>
</row>
<row>
<entry>Originating Point Code</entry>
<entry>Origination of IAM</entry>
</row>
<row>
<entry>Signaling Link Connection</entry>
<entry>Link used for messages (same for all</entry>
</row>
<row>
<entry></entry>
<entry>messages for the call)</entry>
</row>
<row>
<entry>Circuit ID Code</entry>
<entry>Circuit used for the call between OPC</entry>
</row>
<row>
<entry></entry>
<entry>and DPC in the IAM</entry>
</row>
<row>
<entry>Message Type</entry>
<entry>0000 or 0001 for IAM</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>NATURE OF CONNECTION INDICATORS</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Satellite Indicator</entry>
<entry>Increment for each satellite used</entry>
</row>
<row>
<entry>Continuity Check Indicator</entry>
<entry>00 - no check</entry>
</row>
<row>
<entry></entry>
<entry>01 - set up check and start COT timer</entry>
</row>
<row>
<entry></entry>
<entry>10 - start timer for COT message.</entry>
</row>
<row>
<entry>Echo Suppresser Indicator</entry>
<entry>Indicates if echo control already</entry>
</row>
<row>
<entry></entry>
<entry>implemented or is set if echo control is</entry>
</row>
<row>
<entry></entry>
<entry>implemented</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>FORWARD CALL INDICATORS</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>National/International Call</entry>
<entry>0 for domestic</entry>
</row>
<row>
<entry>Indicator</entry>
<entry>1 for international</entry>
</row>
<row>
<entry>End to End Method Indicator</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Interworking Indicator</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>IAM Segmentation Indicator</entry>
<entry>0 for POTS</entry>
</row>
<row>
<entry>ISDN User Part Indicator</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>ISDN Preference Indicator</entry>
<entry>Pass any information and default to 00</entry>
</row>
<row>
<entry>ISDN Access Indicator</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>SCCP Method Indicator</entry>
<entry>00</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>CALLING PARTIES CATEGORY</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Calling Party Category</entry>
<entry>00000000 for unknown</entry>
</row>
<row>
<entry></entry>
<entry>00001010 for ordinary caller</entry>
</row>
<row>
<entry></entry>
<entry>00001101 for test call</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>USER SERVICE INFORMATION</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Information Transfer Capability</entry>
<entry>Pass any information unless destination</entry>
</row>
<row>
<entry></entry>
<entry>requires particular settings, but always</entry>
</row>
<row>
<entry></entry>
<entry>pass ISDN &ldquo;unrestricted digital</entry>
</row>
<row>
<entry></entry>
<entry>information&rdquo;</entry>
</row>
<row>
<entry>Coding Standard</entry>
<entry>00</entry>
</row>
<row>
<entry>Extension</entry>
<entry>1</entry>
</row>
<row>
<entry>Information Transfer Rate</entry>
<entry>Pass any information (will be 10000 for</entry>
</row>
<row>
<entry></entry>
<entry>POTS)</entry>
</row>
<row>
<entry>Transfer Mode</entry>
<entry>Set at 00 for 64 kbit/sec</entry>
</row>
<row>
<entry>Extension</entry>
<entry>1</entry>
</row>
<row>
<entry>User Layer Protocol</entry>
<entry>Set based on rate adaption, typically</entry>
</row>
<row>
<entry>Indentification</entry>
<entry>0100010 for user information layer 1</entry>
</row>
<row>
<entry>Extension</entry>
<entry>1 for normal calls</entry>
</row>
<row>
<entry></entry>
<entry>0 for rate adaption</entry>
</row>
<row>
<entry>Rate</entry>
<entry>Nothing for user information layer 1,</entry>
</row>
<row>
<entry></entry>
<entry>but 0111 for other rate adaption</entry>
</row>
<row>
<entry>Extension</entry>
<entry>1</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>CALLED PARTY NUMBER</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Nature of Address Indicator</entry>
<entry>Identifies the type of call:</entry>
</row>
<row>
<entry></entry>
<entry>0000001 - original NPA or 950 call</entry>
</row>
<row>
<entry></entry>
<entry>0000011 - 1 &plus; call</entry>
</row>
<row>
<entry></entry>
<entry>0000100 - direct dial international call</entry>
</row>
<row>
<entry></entry>
<entry>1110001 - operator call</entry>
</row>
<row>
<entry></entry>
<entry>1110010 - operator default</entry>
</row>
<row>
<entry></entry>
<entry>1110011 - international operator call</entry>
</row>
<row>
<entry></entry>
<entry>1110100 - long distance operator call</entry>
</row>
<row>
<entry></entry>
<entry>1110101 - cut through call</entry>
</row>
<row>
<entry></entry>
<entry>1110110 - 950, hotel/motel, or non</entry>
</row>
<row>
<entry></entry>
<entry>equal access call</entry>
</row>
<row>
<entry></entry>
<entry>1110111 - test call</entry>
</row>
<row>
<entry>Odd/Even</entry>
<entry>number of digits in a called number</entry>
</row>
<row>
<entry>Numbering Plan</entry>
<entry>000 - default</entry>
</row>
<row>
<entry></entry>
<entry>001 - for ISDN</entry>
</row>
<row>
<entry></entry>
<entry>101 - private</entry>
</row>
<row>
<entry>Digits Field</entry>
<entry>number of the called party</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>ACCESS TRANSPORT</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Access Transport Elements</entry>
<entry>pass any information</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>CALLING PARTY NUMBER</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Nature of Address Indicator</entry>
<entry>Indicates the type of calling party</entry>
</row>
<row>
<entry></entry>
<entry>address, unique numbers can be used</entry>
</row>
<row>
<entry></entry>
<entry>for billing, but the charge number</entry>
</row>
<row>
<entry></entry>
<entry>is used for non-unique numbers:</entry>
</row>
<row>
<entry></entry>
<entry>0000000 - unknown</entry>
</row>
<row>
<entry></entry>
<entry>0000001 - unique caller number</entry>
</row>
<row>
<entry></entry>
<entry>0000011 - unique national number</entry>
</row>
<row>
<entry></entry>
<entry>0000100 - unique international number</entry>
</row>
<row>
<entry></entry>
<entry>1110001 - non-unique caller number</entry>
</row>
<row>
<entry></entry>
<entry>1110011 - non-unique national number</entry>
</row>
<row>
<entry></entry>
<entry>1110100 - non-unique international</entry>
</row>
<row>
<entry></entry>
<entry>number</entry>
</row>
<row>
<entry></entry>
<entry>1110111 - test call</entry>
</row>
<row>
<entry>Odd/Even</entry>
<entry>Number of digits in the calling number</entry>
</row>
<row>
<entry>Screening</entry>
<entry>Not applicable</entry>
</row>
<row>
<entry>Presentation Allowed/Restricted</entry>
<entry>Pass any information for POTS, but</entry>
</row>
<row>
<entry></entry>
<entry>restrict for N00 calls that are not</entry>
</row>
<row>
<entry></entry>
<entry>allowed</entry>
</row>
<row>
<entry>Numbering Plan</entry>
<entry>000 - default</entry>
</row>
<row>
<entry></entry>
<entry>001 - ISDN</entry>
</row>
<row>
<entry></entry>
<entry>101 - private</entry>
</row>
<row>
<entry>Digits Field</entry>
<entry>Number of the calling party</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>CARRIER IDENTIFICATION</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Network Identification Plan</entry>
<entry>Number of digits in identification code</entry>
</row>
<row>
<entry></entry>
<entry>for the requested carrier</entry>
</row>
<row>
<entry>Type of Network Identification</entry>
<entry>Identifies the network numbering plan</entry>
</row>
<row>
<entry></entry>
<entry>for the call - 010 for POTS call from</entry>
</row>
<row>
<entry></entry>
<entry>LEC</entry>
</row>
<row>
<entry>Digit One</entry>
<entry>First digit in carrier identification code</entry>
</row>
<row>
<entry>Digit Two</entry>
<entry>Second digit in carrier identification</entry>
</row>
<row>
<entry></entry>
<entry>code</entry>
</row>
<row>
<entry>Digit Three</entry>
<entry>Third digit in carrier identification code</entry>
</row>
<row>
<entry>Digit Four or Null</entry>
<entry>Fourth digit in carrier identification</entry>
</row>
<row>
<entry></entry>
<entry>code (if there are four digits)</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>CARRIER SELECTION INFORMATION</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Carrier Selection Indicator</entry>
<entry>Indicates whether the carrier</entry>
</row>
<row>
<entry></entry>
<entry>identification code was presubscribed or</entry>
</row>
<row>
<entry></entry>
<entry>input</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>CHARGE NUMBER</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Nature of Address Indicator</entry>
<entry>This information may be used for</entry>
</row>
<row>
<entry></entry>
<entry>billing.</entry>
</row>
<row>
<entry></entry>
<entry>00000001 - caller number</entry>
</row>
<row>
<entry></entry>
<entry>00000010 - no ANI, route to operator</entry>
</row>
<row>
<entry></entry>
<entry>00000011 - caller&apos;s national number</entry>
</row>
<row>
<entry></entry>
<entry>00000101 - route if 800, or route to</entry>
</row>
<row>
<entry></entry>
<entry>operator</entry>
</row>
<row>
<entry></entry>
<entry>0000110 - no ANI</entry>
</row>
<row>
<entry></entry>
<entry>0000111 - route if 800 or route to</entry>
</row>
<row>
<entry></entry>
<entry>operator</entry>
</row>
<row>
<entry>Odd/Even</entry>
<entry>Number of digits in calling number</entry>
</row>
<row>
<entry>Numbering Plan</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Digits Field</entry>
<entry>The number of calling party</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>GENERIC ADDRESS</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Nature of Address Indicator</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Odd/Even</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Screening</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Presentation Allowed/Restricted</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Numbering Plan</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Digits Field</entry>
<entry>Pass any information</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>ORIGINATING LINE INFORMATION</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Originating Line Information</entry>
<entry>Identifies particular types of calls, for</entry>
</row>
<row>
<entry></entry>
<entry>example:</entry>
</row>
<row>
<entry></entry>
<entry>00000000 - normal call</entry>
</row>
<row>
<entry></entry>
<entry>00000111 - call from a restricted phone</entry>
</row>
<row>
<entry></entry>
<entry>00111111 - call from a cellular roamer</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>ORIGINAL CALLED NUMBER</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Nature of address Indicator</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Odd/Even</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Screening</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Presentation Allowed/Restricted</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Numbering Plan</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Digits Field</entry>
<entry>Pass any information</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>REDIRECTING NUMBER</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Nature of Address Indicator</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Odd/Even</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Screening</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Presentation Allowed/Restricted</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Numbering Plan</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Digits Field</entry>
<entry>Pass any information</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>REDIRECTION INFORMATION</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Redirection Indicator</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Original Redirecting Reason</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Redirection Counter</entry>
<entry>Pass any information</entry>
</row>
<row>
<entry>Redirection Reason</entry>
<entry>Pass any information</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>SERVICE CODE</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Service Code</entry>
<entry>Pass any information</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>TRANSIT NETWORK SELECTION</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Network Identification Plan</entry>
<entry>Identifies the number of digits in the</entry>
</row>
<row>
<entry></entry>
<entry>carrier identification code (3 or 4)</entry>
</row>
<row>
<entry>Type of Network Identification</entry>
<entry>Type of network identification for</entry>
</row>
<row>
<entry></entry>
<entry>transit network parameter</entry>
</row>
<row>
<entry>Digits 1, 2, 3, 4</entry>
<entry>Carrier identification code of the</entry>
</row>
<row>
<entry></entry>
<entry>international transit carrier</entry>
</row>
<row>
<entry>Circuit Code</entry>
<entry>Indicates how the call was dialed:</entry>
</row>
<row>
<entry></entry>
<entry>0001 - international call, no operator</entry>
</row>
<row>
<entry></entry>
<entry>requested</entry>
</row>
<row>
<entry></entry>
<entry>0010 - international call, operator</entry>
</row>
<row>
<entry></entry>
<entry>requested</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry>HOP COUNTER</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<tbody valign="top">
<row>
<entry>Hop Counter</entry>
<entry>limits the number of times an IAM may</entry>
</row>
<row>
<entry></entry>
<entry>transfer through a signaling point. If the</entry>
</row>
<row>
<entry></entry>
<entry>count reaches the limit, release the call</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
</section>
<section>
<heading lvl="1">Subsequent ISUP Message Processing </heading>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> The processing of the IAM is discussed above. Those skilled in the art are will appreciate how other SS<highlight><bold>7</bold></highlight> messages can be incorporated into the processing of the present invention. For example, the time an address complete message (ACM) is received is recorded in the call control block for billing and maintenance. Triggers can also be based on receipt of subsequent messages, such as the ACM. The process for the answer message (ANM) is much the same. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> Cut-through is the time point at which the users are able to pass information along the call connection from end to end. Messages from the CCM to the appropriate network elements are required to allow for cut-through of the call. Typically, call connections include both a transmit path from the caller and a receive path to the caller, and cut through is allowed on the receive path after the ACM is received and on the transmit path after the ANM is received. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> Upon receipt of a release (REL) message, the CCM will write a time for the message to the call control block and check for triggers upon release (such as call re-originate). Additionally, any disabled echo canceller will be re-enabled, and the call control block will be used to create a billing record. Upon the receipt of a release complete message (RLC), the CCM will transmit messages directing tear down of the call path. It will clear its call specific processes and reuse the call connections for subsequent calls. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Additionally, suspend messages (SUS) and pass along messages (PAM) may be processed by the CCM. A suspend message (SUS) indicates that the called party has disconnected and a REL will follow if the called party does not re-connect with a specified time. A PAM is simply a message between signaling points and can contain a variety of information and be used for a variety of purposes. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> The invention allows switching over an ATM fabric on a call by call basis. This allows efficient high capacity virtual connections to be exploited. Advantageously, the invention does not require signaling capability in an ATM switch. The invention does not require call processing capability in an ATM switch. This enables networks to implement ATM switching without these sophisticated ATM switches that support high volumes of calls. It also avoids the cost of these switches. The invention fully supports voice traffic and non-voice traffic. The invention supports services, such as N00, VPN, personal/terminal mobility, and voice messaging without requiring the service capability in an ATM switch. Relying on ATM cross-connects is advantageous because ATM cross-connects are farther advanced than ATM switches, and the cross-connects require less administrative support. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> Those skilled in the art will appreciate that variations from the specific embodiments disclosed above are contemplated by the invention. The invention should not be restricted to the above embodiments, but should be measured by the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">I claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A telecommunication signal embodied in a tangible medium, the telecommunication signal comprising: 
<claim-text>a first signal component including user information from a narrowband communication signal; and </claim-text>
<claim-text>a second signal component including an identifier for routing the user information wherein an interworking device receives the narrowband communication signal and a control signal indicating the narrowband communication signal and the identifier, and in response to the control signal, adds the identifier to the user information to form the telecommunication signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The telecommunication signal of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the user information comprises echo-cancelled communications. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The telecommunication signal of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the user information comprises encrypted communications. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The telecommunication signal of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the user information comprises compressed communications. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The telecommunication signal of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the identifier comprises an asynchronous transfer mode virtual identifier. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The telecommunication signal of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the identifier is selected by processing a signaling message. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The telecommunication signal of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the identifier is selected by processing an Initial Address Message (IAM). </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The telecommunication signal of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the identifier is selected by processing a called number. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The telecommunication signal of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the narrowband communication signal comprises a DS0 communication signal. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The telecommunication signal of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the tangible medium is an optical medium. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A control signal embodied in a tangible medium, the control signal comprising: 
<claim-text>a first signal component indicating a narrowband communication signal having user information; and </claim-text>
<claim-text>a second signal component indicating an identifier for routing the user information wherein an interworking device receives the narrowband communication signal and the control signal indicating the narrowband communication signal and the identifier, and in response to the control signal, adds the identifier to the user information to form a telecommunication signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The control signal of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> further comprising a third signal component indicating an echo cancellation instruction. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The control signal of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> further comprising a third signal component indicating an encryption instruction. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The control signal of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> further comprising a third signal component indicating a compression instruction. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The control signal of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> wherein the identifier comprises an asynchronous transfer mode virtual identifier. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The control signal of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> wherein the identifier is selected by processing a signaling message. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The control signal of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> <highlight><bold>1</bold></highlight> wherein the identifier is selected by processing an Initial Address Message (IAM). </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The control signal of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> wherein the identifier is selected by processing a called number. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The control signal of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> wherein the narrowband communication signal comprises a DS0 communication signal. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The control signal of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> wherein the control signal comprises an Internet Protocol message. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A method of transferring a telecommunication signal, the method comprising: 
<claim-text>transferring a first signal component including user information from a narrowband communication signal; and </claim-text>
<claim-text>transferring a second signal component including an identifier for routing the user information wherein an interworking device receives the narrowband communication signal and a control signal indicating the narrowband communication signal and the identifier, and in response to the control signal, adds the identifier to the user information to form the telecommunication signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein the user information comprises echo-cancelled communications. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein the user information comprises encrypted communications. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein the user information comprises compressed communications. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein the identifier comprises an asynchronous transfer mode virtual identifier. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein the identifier is selected by processing a signaling message. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein the identifier is selected by processing an Initial Address Message (IAM). </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein the identifier is selected by processing a called number. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein the narrowband communication signal comprises a DS0 communication signal. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein transferring the telecommunication signal comprises transferring the telecommunication signal over an optical medium. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. A method of transferring a control signal, the method comprising: 
<claim-text>transferring a first signal component indicating a narrowband communication signal having user information; and </claim-text>
<claim-text>transferring a second signal component indicating an identifier for routing the user information wherein an interworking device receives the narrowband communication signal and the control signal indicating the narrowband communication signal and the identifier, and in response to the control signal, adds the identifier to the user information to form a telecommunication signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> further comprising transferring a third signal component indicating an echo cancellation instruction. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> further comprising transferring a third signal component indicating an encryption instruction. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> further comprising transferring a third signal component indicating a compression instruction. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the identifier comprises an asynchronous transfer mode virtual identifier. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the identifier is selected by processing a signaling message. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the identifier is selected by processing an Initial Address Message (IAM). </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the identifier is selected by processing a called number. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the narrowband communication signal comprises a DS0 communication signal. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the control signal comprises an Internet Protocol message.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002491A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002491A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002491A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002491A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002491A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002491A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002491A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002491A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002491A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002491A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002491A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002491A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002491A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
