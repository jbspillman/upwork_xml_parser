<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005151A1-20030102-P00001.TIF SYSTEM "US20030005151A1-20030102-P00001.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-P00002.TIF SYSTEM "US20030005151A1-20030102-P00002.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00000.TIF SYSTEM "US20030005151A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00001.TIF SYSTEM "US20030005151A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00002.TIF SYSTEM "US20030005151A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00003.TIF SYSTEM "US20030005151A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00004.TIF SYSTEM "US20030005151A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00005.TIF SYSTEM "US20030005151A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00006.TIF SYSTEM "US20030005151A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00007.TIF SYSTEM "US20030005151A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00008.TIF SYSTEM "US20030005151A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00009.TIF SYSTEM "US20030005151A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00010.TIF SYSTEM "US20030005151A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00011.TIF SYSTEM "US20030005151A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00012.TIF SYSTEM "US20030005151A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00013.TIF SYSTEM "US20030005151A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00014.TIF SYSTEM "US20030005151A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00015.TIF SYSTEM "US20030005151A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030005151A1-20030102-D00016.TIF SYSTEM "US20030005151A1-20030102-D00016.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005151</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10217637</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020812</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/173</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>238000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Enhanced video programming system and method for providing a distributed community network</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10217637</doc-number>
<kind-code>A1</kind-code>
<document-date>20020812</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09396693</doc-number>
<document-date>19990915</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>09396693</doc-number>
<document-date>19990915</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09109945</doc-number>
<document-date>19980706</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6018768</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-in-part-of>
</continuations>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>09109945</doc-number>
<document-date>19980706</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08615143</doc-number>
<document-date>19960314</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5778181</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-in-part-of>
</continuations>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>08615143</doc-number>
<document-date>19960314</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08613144</doc-number>
<document-date>19960308</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>ABANDONED</parent-status>
</parent-child>
</continuation-in-part-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Craig</given-name>
<middle-name>D.</middle-name>
<family-name>Ullman</family-name>
</name>
<residence>
<residence-us>
<city>Brooklyn</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Jeffrey</given-name>
<middle-name>M.</middle-name>
<family-name>Harrington</family-name>
</name>
<residence>
<residence-us>
<city>Brooklyn</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Michael</given-name>
<middle-name>R.</middle-name>
<family-name>Abato</family-name>
</name>
<residence>
<residence-us>
<city>White Plains</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Carl</given-name>
<middle-name>R.</middle-name>
<family-name>Duda</family-name>
</name>
<residence>
<residence-us>
<city>Santa Barbara</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>DORSEY &amp; WHITNEY, LLP</name-1>
<name-2>INTELLECTUAL PROPERTY DEPARTMENT</name-2>
<address>
<address-1>370 SEVENTEENTH STREET</address-1>
<address-2>SUITE 4700</address-2>
<city>DENVER</city>
<state>CO</state>
<postalcode>80202-5647</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A distributed community network for providing services to an arbitrarily large community of end users by distributing the load among many machines. The network uses hubs on the machines for routing packets. The hubs obtain routing instructions from a router and use those instructions for routing the packets. The packets include content for the machines based upon a particular network service, such as a chat service for permitting users to interact in chat rooms or a push/pull service for pushing content to the user machines either directly or based upon information received from the users. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation of is a continuation of U.S. application Ser. No. 09/396,693 filed Sep. 15, 1999, entitled &ldquo;ENHANCED VIDEO PROGRAMMING SYSTEM AND METHOD FOR PROVIDING A DISTRIBUTED COMMUNITY NETWORK&rdquo;, which is a continuation-in-part of U.S. application Ser. No. 09/109,945, filed Jul. 6, 1998, entitled &ldquo;ENHANCED VIDEO PROGRAMMING SYSTEM AND METHOD FOR INCORPORATING AND DISPLAYING RETRIEVED INTEGRATED INTERNET INFORMATION SEGMENTS,&rdquo; which is a continuation-in-part of U.S. application Ser. No. 08/615,143, filed Mar. 14, 1996, entitled &ldquo;ENHANCED VIDEO PROGRAMMING SYSTEM AND METHOD FOR INCORPORATING AND DISPLAYING RETRIEVED INTEGRATED INTERNET INFORMATION SEGMENTS,&rdquo; which is a continuation-in-part of U.S. application Ser. No. 08/613,144, filed Mar. 8, 1996, entitled &ldquo;INTEGRATED INTERACTIVE VIDEO AND INTERNET SYSTEM&rdquo;, and is related to U.S. application Ser. No. 08/622,474 filed Mar. 25, 1996, now U.S. Pat. No. 5,774,664, all of which are incorporated herein by reference.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Today, the capabilities of computers to provide massive amounts of educational and entertainment information has exploded with the Internet. The Internet has the power to transform society through unprecedented levels of information flow between members. Currently, on-line systems offer a variety of different services to users, including news feeds, electronic databases (either searchable by the user directly on the on-line system, or downloadable to the user&apos;s own computer), private message services, electronic newsletters, real time games for play by several users at the same time, and job placement services, to name a few. However, today, most on-line communications occur merely through text. This currently stands in great contrast to the audio/visual presentation of the alternative electronic medium, television. However, it is expected that as multi-media&apos;s incessant growth continues, audio/visual programs will proliferate and text will become less and less dominant in the on-line environment. Even though these programs will be introduced, the Internet, will remain essentially user unfriendly due to its very massiveness, organization, and randomness. Simply stated, there is no order or direction in the Internet. Specific pieces of information are many times hard to find, and harder yet, is the ability to put that piece of information into a meaningful context. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Television, on the other hand, has been criticized for being a passive medium&mdash;&ldquo;chewing gum for the eyes,&rdquo; as Fred Allen once observed. Television has always been something you watched, not something you do. Many social critics believe that the passivity television depends on has seeped into our entire culture, turning a nation of citizens into a nation of viewers. While interactive television systems have increased the level of user interaction, and thus, provided greater learning and entertainment opportunities, vast information resources such as databases are inaccessible from such a medium. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> What is needed is a means to close the gap between video programming and the information superhighway of the Internet. What is needed is a wider, richer experience integrating audio/visual and textual database elements into an organized unique interactive, educational, entertainment experience. Currently, the Internet is a repository of information on virtually any subject. However, what is needed is a mechanism for combining the user-friendly visual experience of television with the vast information resources of the Internet. What is further needed is a system and method for distributing content with that mechanism combining television programming with Internet resources. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Systems consistent with the present invention combine broadcast television programming and/or video programming which appears on a VHS or Beta tape, CD-ROM, DVD or other medium, or particular content from the Internet, or video programming at a video server (hereinafter &ldquo;video programming&rdquo;) with the massive Internet, creating a new and powerful educational and entertainment medium. The system allows consumers to receive more information in a more efficient manner than either television or the Internet alone. Consumers not only can see a news report on television, but they can also read pertinent information about the report, as well as explore related information about the story. The program becomes the introduction to a particular subject, rather than the entire subject itself. The act of viewing a program has now become a more engaging, enriching experience. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The system can also create a more intimate relationship between the viewer and the program. The user might be solving problems or performing virtual experiments on the Internet site that a teacher is discussing in an educational television program. Similarly, the consumer might be solving problems that the fictional characters in a television program must solve. In both cases, the consumer is an active participant in the process, rather than a passive observer. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Instead of an undirected and unfocused exploration of Internet sites, by synching specific Internet pages to the video signal, the system puts the Internet in context. The television program producers now can decide what additional information to offer their audience. This material can now be seen in the context of the television program. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> An additional advantage is that consumers don&apos;t have to search through the literally hundreds of millions of pages on the Internet to find appropriate material. The material has already been filtered by the program producers and delivered to the consumer automatically. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Another advantage of the system is that it changes the nature of advertising. Since additional information can be given to consumers automatically, advertising can now be more substantive, allowing customers to make more informed choices. Now, the act of purchasing a product seen on television can be streamlined -the consumer can be given the choice of buying the product instantly using the two-way capabilities of the system. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In addition, users can take advantage of the two-way capabilities of the Internet to respond to polls, to send e-mail or to link to additional sites. For example, a viewer watching a television news program, through the system of the invention, can receive a stream of Web pages which provide additional, specific information relating to the news content&mdash;whether background on the Presidential primaries or the latest change in interest rates. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The video programming and corresponding Internet pages can be viewed on personal computers equipped with a television card, but the open software-based approach enables anyone with a television set and JAVA enabled PC to experience the system of the invention. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> By marrying the appeal of video with the two-way data transfer capabilities of the Internet, the system creates a powerful new medium: Video producers and Internet site creators can enhance their content to extend their brand identity and differentiate their program offerings to the millions of people who are spending more time navigating through the resources of the World Wide Web rather than watching television; advertisers can speak more directly to consumers by directly sending Web pages to the consumer instead of only displaying Web addresses in their commercials; and consumers can gain a new level of interest and interactivity over a video-based medium. In addition to providing significant and immediate benefits to broadcasters and advertisers, the system will also present educational programmers with a way to more effectively use Internet resources in the classroom. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Recently, several media companies have joined to create a system for linking the Internet and television on the personal computer, called &ldquo;Intercast.&rdquo; In this system, content will be provided simultaneously with the TV video signal. This system, however, requires that stripped down Web pages be sent in the vertical blanking interval (VBI) of the video signal, using up to three scan lines limiting effective bandwidth to approximately 28.8 kbps. This approach, however, requires specialized hardware to both insert the Web pages into the VBI and extract these codes at each PC since it takes up to three scan lines of the VBI. Thus, the complexity and cost of the PC is increased. Because the Web pages are transmitted with the video signal, the Intercast system is not a true &ldquo;two-way&rdquo; system, but merely a one-way &ldquo;piggyback&rdquo; system. In addition, the Intercast is an analog video product, and thus, cannot handle digital video data. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Systems consistent with the present invention, on the other hand, are much more flexible, but less complex, systems. The systems support either analog or digital television broadcasts without broadcasters or end-users having to alter their existing systems, thus enabling broadcasters to reach a wide audience within a short time. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In one embodiment, the actual Web pages are not forced into the very limited bandwidth of the vertical blanking interval (VBI). Instead, merely eight fields of line <highlight><bold>21</bold></highlight> of the VBI are used to deliver the relevant Internet Web page addresses to the PC. These addresses are called &ldquo;uniform resource locators&rdquo; (URLs). The system then directs the particular Web browser to retrieve the identified Web pages from the Internet. Upon receipt of the particular Web page(s), the system syncs the Web page(s) to the video signal, and at the appropriate times, presents the Web pages on one portion of the computer screen with the television video signal, shown in a window on another portion of the screen, and thus, provides the synergistic Internet and television experience. One of the advantages of the system of the present invention is that no specialized chip set need be produced and implemented into the standard PC. Thus, complexity is kept to a minimum. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> In another embodiment of the present invention, the VBI is not used to transmit the URLs to the user. In this alternative embodiment, member broadcasters enter the Internet through a member account, and will be provided with a graphical user interface for pre-scheduling Internet addresses, or URLs, for transmission to users at particular times of day. This interface could also be used to transmit real time live transmissions of URLs to users at the same time as a broadcast. The URLs are stored in a &ldquo;Link File&rdquo; for later transmission over the Internet to the user at the broadcasters entered time, which corresponds to the broadcast time of an associated program. The timing of URLs could be determined in advance or can be sent out live. This embodiment eliminates the need to place the URLs in the VBI, and also allows the broadcaster to store more than one Link File for transmission to users in different time zones, for example. Further, more than one broadcaster could access the same master schedule if desired, and add or delete certain URLs to personalize the program for their local audiences. Also, personalization can be taken to the single user, or small group of users, by having the system send a different stream of URLs to each user, depending on a unique user profile, for example. Thus, the personalization feature of this embodiment allows each user to receive information uniquely relevant to their interests, demographics, history, etc. This embodiment makes the transmission of URLs to the user even less complex than other embodiments disclosed herein. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Another embodiment permits dynamic reconfiguration of a network for transmitting content, such as that located using the URLs. The network referred to as a distributed community network, includes hubs that may logically reside on any machine and provide control of routing packets containing the content. By using hubs to assist in routing of packets, the burden of routing control at a corresponding server is decreased, enhancing the reliability and efficiency of the network in transmitting content and permitting access to content. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Thus, embodiments consistent with the present invention provide order and direction to the Internet by using television signals to place, orient and control such information in a meaningful context. They also create a more intimate relationship between the viewer and the program by enriching the learning experience through the provision of more in-depth information. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Methods and apparatus consistent with the present invention distribute functions for routing packets of information among multiple machines in a network. The machines include hubs for implementing routing functionality. The hubs receive the packets and, based upon information in the packets, determine target machines or other network entities for receiving the packet. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The methods and apparatus, in particular, transmit content associated with a media program to a user machine. They receive from the user machine a packet including an indication of hierarchical routing information and content using a particular service, and they determine targets for receiving the packet based upon the hierarchical routing information. Based upon the determination, the packet is transmitted to the targets.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram of the system design, showing the receipt and decoding of video signals at the subscriber location using the method of the present invention. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram showing an alternative system embodiment to achieve the integration of the Internet information with the video content by decoding the uniform resource locators at a server site and then transmitting the URLs to the subscriber stations via the Internet. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow diagram of the basic software design of the present invention. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram showing another system embodiment to achieve the direct transmission of URLs over the Internet to the user at a broadcaster&apos;s entered time without encoding the URLs into the VBI. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram of another embodiment including a digital cable box. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram of another embodiment including a digital T.V. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram of a user interface illustrating a playlist. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a sample display provided to a student of a lesson. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram of the distributed Com Server embodiment. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10A</cross-reference> is a diagram of an exemplary physical network configuration for a distributed community network. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10B</cross-reference> is a diagram of an exemplary physical network configuration for a particular application of a distributed community network. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11A</cross-reference> is a diagram of an exemplary logical structure for a distributed community network. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11B</cross-reference> is an exemplary diagram of a physical network configuration for a distributed community network illustrating an alternative source for a video signal. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12A</cross-reference> is a diagram of an exemplary content push packet flow in a distributed community network. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12B</cross-reference> is a diagram of an exemplary push/pull packet content for use in a distributed community network. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a diagram of an exemplary chat packet flow in a distributed community network. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14A</cross-reference> is a diagram of an exemplary implementation of a distributed community network as a small eSchool. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14B</cross-reference> is a diagram of an exemplary implementation of a distributed community network as a large eSchool. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14C</cross-reference> is a diagram of an exemplary implementation of a distributed community network as a simple network providing video and other content. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14D</cross-reference> is a diagram of an exemplary implementation of a distributed community network as a complex network providing video and other content. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
</section>
<section>
<heading lvl="1">Video Programming System and Method </heading>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> One system consistent with the present invention combines the rich visual capabilities of video with the vast resources of the Internet. As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, an embodiment of the invention is a computer based system for receiving a video program along with embedded uniform resource locators (URLs)&mdash;which direct the user&apos;s computer <highlight><bold>16</bold></highlight> to address locations, or Web sites, on the Internet <highlight><bold>20</bold></highlight> to retrieve related Web pages. These Web pages correspond to the video presentation. The particular video programming can be delivered in analog, digital or digitally compressed formats (e.g., MPEG2) via any transmission means, including satellite, cable, wire, television broadcast or sent via the Web. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The video programming is preferably created at a centralized location, i.e., content creation <highlight><bold>4</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, for distribution to subscribers in their homes, for example. Program creation is accomplished according to any conventional means known in the art. After a video program is created, uniform resource locators are embedded, in one embodiment, into the vertical blank interval of the video programming by the URL encoder <highlight><bold>8</bold></highlight>, shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. In this embodiment, the URLs are encoded onto eight fields of line <highlight><bold>21</bold></highlight> of the VBI. Line <highlight><bold>21</bold></highlight> is the line associated with close captioning, among other things. However, the URLs could also be embedded in other fields of the VBI, in the horizontal portion of the video, as part of the audio channel, in any subcarrier to the video, or if digital, in one of the data fields. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Although <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows the video with URLs over the same transmission line, the URLs can be sent down independently of the video program on a data channel. In this embodiment, the URLs can be forwarded to the remote sites either prior to initiation or during the program. Preferably, the URLs have associated time stamps which indicate to the subscriber stations when, during the video program, to display the particular Web pages addressed by the URLs. Alternatively, the user can select when to call the particular Web pages for display with the video program. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The particular information in line <highlight><bold>21</bold></highlight> is not part of the visual part of the program, and thus, is not perceptible to the human eye, thereby making it ideal to send data information to the users. While the bandwidth capacity of line <highlight><bold>21</bold></highlight> is limited, because the system transmits only the uniform resource locators (URLs), and not full Web pages, there is more than enough capacity. Furthermore, no additional hardware is necessary at the PC <highlight><bold>16</bold></highlight> to implement the elements of the present invention. Thus, the present invention has the additional advantages of being very efficient and takes advantage of conventional hardware. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Once the video program is created, it can be transmitted to user sites over any transmission means, including broadcast, cable, satellite, or Internet, and may reside on video servers. Furthermore, the video program, with or without embedded URLs, can be encoded on a VHS or Beta tape, DVD or other medium. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Preferably, each receiver station comprises any Intel x86 machine (preferably a 486 processor, pentium processor, etc.), an Apple Computer, UNIX or any other type of standard computer workstation. The local PC <highlight><bold>16</bold></highlight> is preferably connected to either a cable and/or broadcast television connection or to a local VCR or other video source. At each subscriber site, the local personal computer <highlight><bold>16</bold></highlight> preferably receives the cable transmission by cable connection on the back of the personal computer <highlight><bold>16</bold></highlight>. The video/audio program can then be processed for display on the computer screen using any conventional PC card capable of displaying NTSC signals on a computer monitor, such as a WinTV card. In addition to the cable connection, however, in the present invention there is also an Internet <highlight><bold>20</bold></highlight> connection created concurrently with the cable connection. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> The Internet <highlight><bold>20</bold></highlight> connection can be via high-speed line, RF, conventional modem or by way of two-way cable carrying the video programming. The local PC <highlight><bold>16</bold></highlight> has Internet access via any of the current ASCII software mechanisms. In one embodiment, at each subscriber home, an associated local URL decoder <highlight><bold>12</bold></highlight> receives the cable video television program, as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The local URL decoder <highlight><bold>12</bold></highlight> extracts the URLs, preferably embedded in the vertical blanking interval, with the use of any conventional VBI decoder device. The URL decoder <highlight><bold>12</bold></highlight> may be either a stand-alone unit or a card which is implemented into the personal computer <highlight><bold>16</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> In another embodiment shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the uniform resource locators (URLs) are encoded into the video in the same manner as described above. Again, the URLs are preferably encoded onto eight fields of line <highlight><bold>21</bold></highlight> of the VBI, but may also be sent independently of the video. In this embodiment, the URL decoder <highlight><bold>24</bold></highlight> is located at the server site, as opposed to the subscriber location. When the decoder <highlight><bold>24</bold></highlight> receives the video program signal, it strips out the URL codes on line <highlight><bold>21</bold></highlight> of the VBI and delivers these codes independently to an Internet server <highlight><bold>28</bold></highlight>. The URL code is then subsequently delivered over the Internet <highlight><bold>20</bold></highlight> to the user PC <highlight><bold>16</bold></highlight>. Simultaneously, the video is broadcast over conventional broadcast or cable transmission means <highlight><bold>36</bold></highlight> to the user&apos;s personal computer <highlight><bold>16</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Another embodiment of the system, shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, does not depend on, or even use, the VBI. In this embodiment, the system will run an online service over the Internet <highlight><bold>20</bold></highlight>. This service will be in the form of an Internet Web site <highlight><bold>62</bold></highlight> that provides a user-interface to a database <highlight><bold>78</bold></highlight> and to one or more associated data servers <highlight><bold>90</bold></highlight>. The service will provide member-accounts to TV broadcasters <highlight><bold>66</bold></highlight> who sign up to use the system of the invention in conjunction with their broadcasts. Each member broadcaster will enter the service at their computer <highlight><bold>70</bold></highlight> through Web browser software <highlight><bold>74</bold></highlight> using their member account by entering various identification and password information. Once within their account, the member will be provided with a graphical user interface for pre-scheduling URLs for transmission to users <highlight><bold>118</bold></highlight> over a direct Internet connection <highlight><bold>94</bold></highlight> at particular times of day. The same user interface, or a variation on it, can be used by broadcasters for live transmission <highlight><bold>82</bold></highlight> of URLs to users at the same time as a broadcast <highlight><bold>86</bold></highlight>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> For example, one example of this interface might be a scheduling calendar (daily, weekly, monthly, yearly) in which the broadcaster <highlight><bold>66</bold></highlight> may allocate time periods which coincide with their broadcasts <highlight><bold>86</bold></highlight>, and during which they will send out URLs to their users to link to Web pages. For each time period (for example, a particular hour long period during the day) determined by the broadcaster <highlight><bold>66</bold></highlight> to be a broadcast period (a period during which they want to transmit URLs that correspond to a television show being broadcast from their TV broadcast facility <highlight><bold>110</bold></highlight> to the external TV <highlight><bold>114</bold></highlight> of the user <highlight><bold>118</bold></highlight> at that time), the broadcaster <highlight><bold>66</bold></highlight> may then enter a series of URLs into an associated file (&ldquo;Link File&rdquo;) for transmission over the Internet <highlight><bold>20</bold></highlight> at that time. This Link File might have a user interface such as a spreadsheet, table, or list, or it could be simply a tab-delimited or paragraph-delimited text-file. As an example, each of the records in the Link File consists of a data structure which could contain information such as: </paragraph>
<paragraph id="P-0051" lvl="2"><number>&lsqb;0051&rsqb;</number> (&lt;timecode&gt;,&lt;URL&gt;,&lt;label or title&gt;,&lt;additional information&gt;,&lt;additional information&gt;, . . . ) </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The above data structure is just one example. The records in the Link File preferably specify the time, Internet address (i.e. URL), label (such as an associated name), and some optional additional information, for each Web page the broadcaster <highlight><bold>66</bold></highlight> desires to launch during a show. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> When a broadcaster <highlight><bold>66</bold></highlight> modifies their calendar and/or the Link File associated with any given time period(s) in their calendar, this information is saved into the database <highlight><bold>78</bold></highlight> that is attached to the site <highlight><bold>62</bold></highlight>. Each broadcaster <highlight><bold>66</bold></highlight> may maintain multiple calendars in the database <highlight><bold>78</bold></highlight> if they broadcast in different time zones, for example. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The database <highlight><bold>78</bold></highlight> provides the Link File records for upcoming time periods to a server <highlight><bold>90</bold></highlight>, which may be one server or a distributed network of server programs on multiple computers across the network, to be utilized for scaling to large national or global audiences. The server <highlight><bold>90</bold></highlight> provides the Link File records, including the URLs, to the user&apos;s personal computer <highlight><bold>16</bold></highlight>, which is connected via a network. Examples of possible networks include the public Internet <highlight><bold>94</bold></highlight>, a direct private network, or even a wireless network. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> One feature of the above embodiment is that one or more broadcasters <highlight><bold>66</bold></highlight> may utilize the same schedule in the database <highlight><bold>78</bold></highlight> for their own broadcasts <highlight><bold>86</bold></highlight> or during the same broadcast. For example, a network broadcaster may develop a master schedule and various affiliate broadcasters may subscribe to that schedule or copy it (in the database) and add or delete specific URLs in the schedule for their local audiences or unique programming. This scheme enables affiliates to insert URLs for local advertisers or local subjects into a sequence of more general URLs provided by their network broadcaster <highlight><bold>66</bold></highlight>. In other words, the affiliate can add links that ride on the network feed and then redistribute it to their local audiences. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> This embodiment can also enable personalization in the form of unique series of URLs specific to each user&apos;s unique profile, which is directly sent over the Internet <highlight><bold>20</bold></highlight> to each user&apos;s specific client software <highlight><bold>106</bold></highlight>. This can be achieved from the broadcaster <highlight><bold>66</bold></highlight> to each individual user <highlight><bold>118</bold></highlight>, or to particular collections of users. To accomplish personalization, the service may send a different stream of URLs to each user&apos;s client software program <highlight><bold>106</bold></highlight>. The stream of URLs sent would depend on a user profile stored in the database <highlight><bold>78</bold></highlight> or the client software program <highlight><bold>106</bold></highlight>, a user profile which is built on demand or over time for each user <highlight><bold>118</bold></highlight> based on criteria such as the location of the user, choices the user makes while using a client software program <highlight><bold>106</bold></highlight>, or choices the broadcaster <highlight><bold>66</bold></highlight> makes during a broadcast <highlight><bold>86</bold></highlight>, or automatic choices made by an algorithm (such as a filter) residing on the service <highlight><bold>62</bold></highlight>. Personalization enables each user to receive URLs which are uniquely relevant to their interests, demographics, history, or behavior in the system. </paragraph>
</section>
<section>
<heading lvl="1">System Operation </heading>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Once the URLs have reached the personal computer <highlight><bold>16</bold></highlight>, system operation is similar for all of the embodiments diagramed in <cross-reference target="DRAWINGS">FIGS. 1, 2</cross-reference>, and <highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> In one embodiment, a JAVA enabled browser <highlight><bold>98</bold></highlight> as well as specialized software <highlight><bold>106</bold></highlight> for performing part of the method of the present invention are installed on the computer <highlight><bold>16</bold></highlight>. The JAVA enabled browser <highlight><bold>98</bold></highlight> allows the computer <highlight><bold>16</bold></highlight> to retrieve the Web pages <highlight><bold>102</bold></highlight> and is preferred software, since it is platform independent, and thus, enables efficient and flexible transfer of programs, images, etc., over the Internet <highlight><bold>20</bold></highlight>. The specialized interface software <highlight><bold>106</bold></highlight> (hereinafter, &ldquo;client software&rdquo;), attached as Appendix A, acts as an interface between the video programming and the Internet functions of the present invention. The client software <highlight><bold>106</bold></highlight> retrieves URLs from the video program (embodiment of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) or directly from the Internet connection (embodiments of <cross-reference target="DRAWINGS">FIGS. 2 and 4</cross-reference>), interprets these URLs and directs the JAVA enabled browser <highlight><bold>98</bold></highlight> to retrieve the particular relevant Web pages <highlight><bold>102</bold></highlight>, and synchronizes the retrieved Web pages to the video content for display on the user&apos;s computer <highlight><bold>16</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIGS. 3 and 4</cross-reference> and explained in more detail below. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> In one method, the URLs are encoded and embedded into the video signal by inserting them into the vertical blanking interval (VBI), as mentioned above. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> In another embodiment, the URLs are entered by member TV broadcasters <highlight><bold>66</bold></highlight> along with specified times for transmitting the URLs to the user. At the appropriate times, the URLs are sent directly over the Internet to the user&apos;s PC <highlight><bold>16</bold></highlight> via the client software <highlight><bold>106</bold></highlight> over a direct point-to-point or multicasting connection. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> One method of the present invention has the capability to detect identical URLs sent directly after one another which causes the browser not to fetch URLs in these particular cases. As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, once the URL code is received at the computer, the client software <highlight><bold>106</bold></highlight> first interprets the URL and determines in step <highlight><bold>42</bold></highlight> whether the particular URL has been received previously. If it has already been received, the next received URL is interpreted for determination of prior receipt. If the particular URL has not been detected before, the software checks for misspelling in step <highlight><bold>46</bold></highlight> and any other errors, and if errors exist, corrects these particular errors. Once again, it is determined whether the URL has been previously detected. If it has, the next URL is accessed in step <highlight><bold>38</bold></highlight>. If the URL has not been detected, the specific URL is added to the URL list in step <highlight><bold>54</bold></highlight>. The specific URL is then sent to the Web browser, preferably a JAVA enabled browser <highlight><bold>98</bold></highlight>. Upon receipt of the URL, the browser <highlight><bold>98</bold></highlight>, in step <highlight><bold>58</bold></highlight>, will access the Web site address <highlight><bold>122</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>) indicated by the URL and retrieve the cited Web page(s) <highlight><bold>102</bold></highlight> via the Internet. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Viewers can view the integrated presentation in the following manner. As mentioned above, the video signal is processed and displayed on a video window on the PC screen using a WinTV card, for example. The corresponding audio is forwarded to the audio card and sent to the PC speakers. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The actual retrieved Web pages <highlight><bold>102</bold></highlight>, referenced by the URL, are optionally time stamped to be displayed on the computer screen when predetermined related video content is displayed in the video window, thus, enlightening and enhancing the video presentation by providing in-depth information related to the video content thereto. Another section on the screen is also preferably used to represent an operational control panel. This control panel provides a list of the URLs that have been broadcast and correspondingly received by the computer <highlight><bold>16</bold></highlight>. This control panel is updated to add a URL code each time a new URL code is received by the PC <highlight><bold>16</bold></highlight>. This list gives the subscriber the flexibility to go back and retrieve particularly informative or interesting Web pages that have already been displayed earlier in the program, or alternatively, to print them out for future reference. Furthermore, the list could include URLs referring to Web pages not displayed with the broadcast program, but that provide further information on a certain topic of interest to the viewer. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> An exemplary implementation of the present invention can best be understood with reference to an example. A viewer can begin watching a musical video featuring a new band, for example. As the video is received by the PC <highlight><bold>16</bold></highlight>, URLs are either being received with the video signal or are being received directly via the Internet <highlight><bold>20</bold></highlight> or another data channel, and are being interpreted by the client software <highlight><bold>106</bold></highlight>. Upon direction and command, the JAVA enabled browser <highlight><bold>98</bold></highlight> retrieves particular Web pages <highlight><bold>102</bold></highlight> from Internet <highlight><bold>20</bold></highlight> Web sites identified in the URLs. These Web pages <highlight><bold>102</bold></highlight> will then be displayed on the video screen at particular times. Thus, for example, while the viewer is watching the music video, biographical information on the band can also be displayed adjacently to the video window. Web pages <highlight><bold>102</bold></highlight> could also include an upcoming concert schedule, or even audio clips of the band&apos;s music may be downloaded from the Internet <highlight><bold>20</bold></highlight>. As another example, a user could be watching a program relating to financial news. While the narrator is shown discussing high tech stocks, Web pages corresponding to detailed financial performance information on high tech stocks, environment and characteristics can be displayed with the video on the computer screen. If the personalization features are included, Web pages associated with a particular user&apos;s stock can be fetched and displayed on the computer screen with the video program. When the program narrator switches to a discussion on the weekly performance of the Dow Jones, Web pages presenting related financial performance information can be simultaneously displayed. Thus, it is evident that the present invention profoundly enriches the viewing and learning experience. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> It is understood that there can exist alternative embodiments for use with the present invention. For example, the user can view the interactive program using a television set <highlight><bold>114</bold></highlight> or other display monitor in conjunction with the display screen of the personal computer <highlight><bold>16</bold></highlight>. In this embodiment, the relevant Web pages are shown on the personal computer <highlight><bold>16</bold></highlight> while the video program is displayed on the television monitor <highlight><bold>114</bold></highlight>. In this alternative embodiment, a cable set top box receives the television program from the multichannel cable. The personal computer <highlight><bold>16</bold></highlight> also receives the video program from the multi-channel cable and extracts the URLs, embedded in the vertical blanking interval of the video signal or directly transmitted <highlight><bold>94</bold></highlight> over the Internet <highlight><bold>20</bold></highlight>. The client software <highlight><bold>106</bold></highlight> extracts the URLs and retrieves the particular Web pages as described above. The Web pages are then synchronized with the particular video frames and presented to the user. It is understood that a hyperlink may exist on the Web site that will allow the user to automatically load the client software and call up the specific television channel referenced in the Web site. For example, someone browsing the Internet <highlight><bold>20</bold></highlight> may come upon a major television network&apos;s Web site. They scroll to an interesting story then click on an hyperlink to turn on the software which tunes the TV window to the network to enhance the information residing at the Web site. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> Furthermore, instead of receiving the video program from a transmission means, the video program can be addressed directly from the user site if the video program, with or without embedded URLs, is stored on a VHS, Beta, DVD or other medium. In this embodiment, the user PC <highlight><bold>16</bold></highlight> and/or television <highlight><bold>114</bold></highlight> are connected to a VCR, DVD player or other appropriate device. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5 and 6</cross-reference> show two alternative embodiments for use with the present invention. For example, the user can view the interactive program using a television set <highlight><bold>18</bold></highlight> or other display monitor in conjunction with a digital cable box <highlight><bold>140</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. In this embodiment, the digital cable box <highlight><bold>140</bold></highlight> performs the functions of the personal computer <highlight><bold>16</bold></highlight> shown in <cross-reference target="DRAWINGS">FIGS. 1, 2</cross-reference> and <highlight><bold>4</bold></highlight>. In the embodiment shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the client software is stored in memory in the digital cable box <highlight><bold>140</bold></highlight>. In one embodiment, the digital cable box <highlight><bold>140</bold></highlight> includes two tuners, thus allowing both the Web Page and the Video program to be simultaneously viewed on the same screen. If Video and Webstream, however, are carried on one channel, then only one tuner is necessary. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The client software retrieves URLs from the received video program, directly from the Internet connection <highlight><bold>20</bold></highlight> or via a separate data channel, interprets these URLs and directs the Web enabled browser to retrieve the particular relevant Web pages, and synchronizes the retrieved Web pages to the video content for display on the television <highlight><bold>18</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. In this embodiment, the relevant Web pages are preferably shown in one frame of the television <highlight><bold>18</bold></highlight> while the video program is displayed in another frame. Alternatively, the web page can replace the video program on the display. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> In this alternative embodiment, the digital cable set top box <highlight><bold>140</bold></highlight> receives the television program from the multichannel cable. The URLs can be encoded into the digital program channel using MPEG 1, MPEG2, MPEG4, MPEG7 or any other compression video scheme. Alternatively, the URLs can be transmitted to the digital cable boxes <highlight><bold>140</bold></highlight> from an Internet server <highlight><bold>148</bold></highlight>. The digital cable box <highlight><bold>140</bold></highlight> decodes the URLs from the digital video signal or directly transmitted over the Internet <highlight><bold>20</bold></highlight>. The client software decodes the URLs and retrieves the particular Web pages as described above. The Web pages are then preferably synchronized with the particular video frames and presented to the user. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> As with all the embodiments described above, instead of receiving the video program from a transmission means, the video program can be addressed directly from a local video source <highlight><bold>144</bold></highlight> if the video program, with or without embedded URLs, is stored on a VHS, Beta, DVD or other medium. In this embodiment, the digital cable box <highlight><bold>140</bold></highlight> is connected to a VCR, DVD player or other appropriate device. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> discloses an embodiment where a digital TV <highlight><bold>152</bold></highlight> is the remote reception unit. In this embodiment, the digital TV <highlight><bold>152</bold></highlight> performs the functions of the personal computer, shown in <cross-reference target="DRAWINGS">FIGS. 1, 2</cross-reference> and <highlight><bold>4</bold></highlight>, and the digital cable box <highlight><bold>140</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. In the embodiment shown in <cross-reference target="DRAWINGS">FIG. 6, a</cross-reference> processor means and memory are incorporated into the digital TV <highlight><bold>152</bold></highlight>. Further, the client software and Web browser software are implemented into memory in the digital TV <highlight><bold>152</bold></highlight>. All of the functions described above with reference to the other embodiments are performed in a similar manner by the digital TV <highlight><bold>152</bold></highlight> embodiment. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Although the digital cable box/TV <highlight><bold>140</bold></highlight>, <highlight><bold>18</bold></highlight> and digital TV <highlight><bold>152</bold></highlight>, shown in <cross-reference target="DRAWINGS">FIGS. 5 and 6</cross-reference>, are incorporated into the embodiment of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, in substitution for the PC <highlight><bold>16</bold></highlight>, they also could be substituted for the PC <highlight><bold>16</bold></highlight> shown in <cross-reference target="DRAWINGS">FIGS. 2 and 4</cross-reference>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> The user can view the video and web content on one screen (in two windows), or with the video on one display screen and the Web content on a separate display monitor. Alternatively, the user can access the video or web content separately. Thus, the user can branch from video to web content and vice versa. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The present invention is well-suited to the education environment. In this embodiment, students and teachers access one or more Web servers. The software components include instructor and student user software, authoring software and database assessment software. In one such embodiment, an instructor uses content creation software on a personal computer to easily integrate into their curriculum current information published on the Web, through an easy to use interface <highlight><bold>156</bold></highlight> such as that shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. The instructor creates a playlist (i.e. linkfile) <highlight><bold>160</bold></highlight>, the playlist <highlight><bold>160</bold></highlight> comprising a listing of Web pages, text notes and questions. The Web sites and questions are set forth in a predetermined order and can be assigned times. Preferably, the URLs identifying the Web site and time stamps are sent automatically to the desktop of each student in the virtual community, either during playback of a pre-recorded program or during a live event. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> At each of the student workstations, the program is directed by the playlist <highlight><bold>160</bold></highlight>. In other words, the playlist <highlight><bold>160</bold></highlight> provides the structure for the program. At predetermined times as dictated by the playlist <highlight><bold>160</bold></highlight>, the browser will go fetch and display a Web page in a frame on the computer screen. Because program events can be set up in this manner at predetermined times, the entire program and playlist can be prerecorded and stored in a Web database for later access by students. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> A significant advantage of an embodiment for educational applications is that the students and the instructor can be located anywhere, as long as they are all connected to the Web. Because a server is essentially controlling the program, the instructor output comes from the server and the student workstations get automatically updated by the Web server. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> This educational embodiment integrates Web content and other media with collaborative groupware functionality to create an interactive environment for students and teachers. In this embodiment, the student can receive a traditional video lesson through a frame in his or her Web browser, or from a television. Simultaneously, the present invention provides separate frames, an example of which is shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, in the browser displaying: (1)Web pages <highlight><bold>176</bold></highlight> automatically delivered to each student&apos;s desktop with information or exercises that complement the video presentation; (2) a chat dialogue frame <highlight><bold>168</bold></highlight> for conversing with the instructor and/or other students online; and (3), an interactive playlist <highlight><bold>164</bold></highlight> of Web pages and questions comprising the lesson. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> In the student interface of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, each student can perform a virtual experiment during a physics lesson to learn about gravity, for example. Further, the students are conversing with one another and the instructor in the chat dialogue frame <highlight><bold>168</bold></highlight>. They may also send Web pages to one another and provide answers to questions from the teacher via the chat dialogue frame <highlight><bold>168</bold></highlight> of the student interface <highlight><bold>176</bold></highlight>. With the chat feature, students may break into subgroups for collaborative learning. Whenever a student in the group sends a message, the message is sent to the Internet server <highlight><bold>20</bold></highlight> and every other student in the subgroup receives and views the message in their Chat dialogue frame <highlight><bold>168</bold></highlight>. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> The instructor, however, may retain control over the chat feature. For example, the instructor can terminate the chat feature or web pushing to terminate unruly on-line conversations or the sending of Web pages by students. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Unlike conventional distance learning systems, systems consistent with the present invention are more powerful by allowing the instructor to freely and conveniently exercise almost any type of testing strategy. The instructor can test students using a combination of the Chat dialogue feature and Web pages. For example, multiple choice questions and short answer questions can appear in the Chat window <highlight><bold>168</bold></highlight>. Essay questions, requiring longer answers, become Web pages. As mentioned above, students can perform virtual experiments on-line. Once the instructor&apos;s personal computer receives student answers, student scoring can be presented to the instructor in any format including tables, charts, diagrams, bar graphs, etc. The instructor, thus, can analyze the results and has the capability of providing real-time feedback to the students. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> Students can also receive individualized feedback via branched interactive audio, video and/or graphics responses. For example, the workstation may branch to a particular audio response, preferably prerecorded in the instructor&apos;s own voice, based on the student response to a multiple choice question. In this embodiment, a plurality of potential audio responses are made available at the student&apos;s workstation according to any one of the methodologies set forth in U.S. Pat. No. 5,537,141, entitled DISTANCE LEARNING SYSTEM, herein incorporated by reference. Alternatively, personalized video, audio and graphics segments can be delivered and displayed to the student based on a student answer or personal profile in the manner set forth in U.S. Pat. No. 5,724,091, entitled COMPRESSED DIGITAL DATA INTERACTIVE PROGRAM SYSTEM, herein incorporated by reference. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Responses to student answers can be more substantive based on the memory feature of the system. The memory feature is an algorithm that selects an interactive response to the user based not only on the student&apos;s current answer selection, but also his or her previous responses, as discussed in the aforementioned applications. The algorithm, preferably stored in memory at each student&apos;s workstation and under processor control, merely selects an output interactive response based on student responses. As another example, if a student gets three answers in sequence right, he or she receives a more difficult question. If, however, the student misses one or more of the three questions, he or she receives an easier question. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> In another embodiment of the present invention, a system is described capable of handling the education requirements of several schools in an efficiently designed network. The system shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference> solves the problems inherent in attempting to service large numbers of users, the most obvious obstacles being the issues of load and performance. In this embodiment shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, communications servers <highlight><bold>180</bold></highlight> distribute and route messages across a LAN, WAN and the Internet. Referring to <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, in the center of the diagram is the Group Database server. Surrounding the database server are several Com Servers <highlight><bold>180</bold></highlight>, each serving an area <highlight><bold>192</bold></highlight>. Surrounding each Corn Server <highlight><bold>180</bold></highlight> are squares representing user stations <highlight><bold>188</bold></highlight>. The Communication Servers <highlight><bold>180</bold></highlight> are organized in node relationships with one another. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> Each node is responsible for serving an Area <highlight><bold>192</bold></highlight>. An Area <highlight><bold>192</bold></highlight> is defined as a Virtual location serviced by a single Communications Server <highlight><bold>180</bold></highlight> (or &ldquo;Corn Server&rdquo;). An Area <highlight><bold>192</bold></highlight> may be a single school, an office, or may consist of several actual physical locations. The defining characteristic of an Area <highlight><bold>192</bold></highlight> is that messages sent from one member of an Area <highlight><bold>192</bold></highlight> to another need not be routed outside of the servicing Corn Server <highlight><bold>180</bold></highlight>. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> An Area member is analogous to the frequently used term &ldquo;user.&rdquo; For example, a &ldquo;user&rdquo; may be a student in the educational embodiment described above with reference to <cross-reference target="DRAWINGS">FIGS. 7 and 8</cross-reference>. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> The Distributed Communication System of <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shall permit the dynamic addition of Communication Servers <highlight><bold>180</bold></highlight> within a group with little or no administrative tasks as well as the addition of groups within an overall communications network. A Communication Server group consists of several defined Virtual Areas <highlight><bold>192</bold></highlight> (preferably, consisting of no more the <highlight><bold>250</bold></highlight> members each), each area <highlight><bold>192</bold></highlight> serviced by a single Com Server <highlight><bold>180</bold></highlight>. This system shall allow members of one Area <highlight><bold>192</bold></highlight>, or group to easily communicate with members of another Area 192 or group without any configuration changes. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Generally, service of very large numbers of users has required large expensive servers and networks. As the user base increases, performance suffers and hardware must be upgraded to service the demand. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> The Distributed Communication System of the present invention allows the same, relatively inexpensive machines to serve an ever-increasing user base. The technique by which this will be accomplished will be through the routing of messages from one server to another when necessary. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> The method essentially follows the same core pattern as IP routing and DNS lookups. If a message is for a member not belonging to the current Area <highlight><bold>192</bold></highlight> or group, the message shall be routed through the Distributed Communication System until its destination, or someone who knows the destination and can deliver the message, is found. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> The destination will be cached so subsequent messages for that member or group may be more efficiently delivered. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Referring again to <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, if a message is posted by member &ldquo;A&rdquo; and is intended only for the members of group 1 the message shall never leave Area 1 Com Server. However, if the message is intended for members of Area 1 and the members of Area 2, the Area 1 Com server forwards the message to the group database server <highlight><bold>184</bold></highlight>. The message shall be broadcast to the members of Area 1 and tagged in the database <highlight><bold>184</bold></highlight> as belonging to Area 2. The message is then routed to Area 2 and broadcast to Area 2 members. With this technique any member can potentially send a message to any other member. If the Area Com server <highlight><bold>180</bold></highlight> does not recognize the destination, the message is forwarded up the line. Each Com server <highlight><bold>180</bold></highlight> does not need to know about any other server <highlight><bold>180</bold></highlight>. Messages are routed until they delivered. If undeliverable, the original sender is notified. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> New Areas <highlight><bold>192</bold></highlight> can be added on the fly. When a new Com server <highlight><bold>188</bold></highlight> is added to the network, it registers itself with the database application. Henceforth, any message destined for the new Area <highlight><bold>192</bold></highlight> can be routed properly without altering the other Area Servers <highlight><bold>180</bold></highlight>. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> This method and system works for global messages or for user to user messages. </paragraph>
<paragraph id="P-0094" lvl="7"><number>&lsqb;0094&rsqb;</number> Furthermore, new Groups may also be dynamically added. Once added, each new Group Database Server <highlight><bold>184</bold></highlight> registers itself with the existing database servers <highlight><bold>184</bold></highlight>. This distribution of load permits nearly unlimited expansion with existing software and hardware. Each server manages a finite number of members, cumulatively serving a growing community. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> Users need not be informed as to the particular Corn Server <highlight><bold>180</bold></highlight> they should connect to. Members are directed to a single URL. The selection of the server for user connection is determined by load balancing software. In this manner, the network may appear to be a global network of Servers or simply a local classroom. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> The unique aspects of this architecture, using database servers as routing gateways, using techniques resembling IP routing and DNS lookup, enables this system to serve with minimum administration and configuration and with lower end, cost-effective hardware. </paragraph>
</section>
<section>
<heading lvl="1">Distributed Community Network </heading>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> A distributed community network provides services, including those discussed above, to an arbitrarily large community of end users by distributing the load among many machines, each providing specific parts of the community. All server functions could reside on one machine in a modest context, whereas in a network of potentially millions, the web of distribution could involve additional server-side hardware or even actual client machines. An implementation of the distributed community network permits routing of content to be spread among multiple machines, which eases the processing burden on the server and provides for dynamic reconfiguration of the network. The dynamic reconfiguration thus may involve adding or removing machines to or from the network due to, for example, new network users or machine failures. As users and machines are added to the network, for example, those machines may include software packet switching. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Examples of services maintained by the distributed community network include a chat service, whiteboard service, and content push/pull service. A chat service involves the ability of a particular group of users to interact, such as via chat frame <highlight><bold>168</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. The interaction of a particular group of users is referred to as a room, and the distributed community network may dynamically change room assignments to add or delete users from a room. Users may be assigned to a particular room based upon their user profile. A whiteboard service involves the ability of users to receive frames of video information for network collaboration among the users. The whiteboard includes a frame of video information transmitted to users within the same network chat room. The users, depending upon their drawing privileges, may make modifications to the frame, and those modifications are transmitted to the other users. In this manner, the users may collaboratively draw upon the frame. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> A content push/pull service involves the ability of users to receive content either directly or through the use of received URLs or other network address information such as Uniform Resource Identifiers (URIs). A URI is a compact string of characters for identifying an abstract or physical resource. More specifically, URIs provide a simple and extensible means for identifying a resource, and a URI can be further classified as a locator, a name, or both. The specification of URI syntax and semantics is derived from concepts introduced by the World Wide Web global information initiative. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> URIs include, for example, URLs and Uniform Resource Names (URNs). A URL is a subset of a URI that identifies resources via a representation of their primary access mechanism, such as their network &ldquo;location,&rdquo; rather than identifying the resource by name or other attribute of that resource. The term URN refers to a subset of URI that is required to remain globally unique and persistent even when the resource ceases to exist or becomes unavailable. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The term &ldquo;push&rdquo; refers to the configuration shown in FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>6</bold></highlight> for automatic delivery of content to the user. The term &ldquo;pull&rdquo; refers to delivery of content requiring user interaction. A content push/pull service thus permits users to request content by, for example, selecting or &ldquo;clicking on&rdquo; an icon or URL in order to have content transmitted to their machine. In effect, the user &ldquo;pulls&rdquo; content to the user machine by requesting the content. The distributed community network may provide for other network-type services as well. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> Control over these individual services resides centrally on a server providing the services. However, packet distribution for that service could be distributed over many server or client machines implementing logical entities referred to as hubs. A hub is implemented in software, for example, and it performs routing of packets. The hubs need not implement the specific services for which they distribute packets; rather, they typically need only know the routing protocol for the service. Similarly, centrally controlled routers maintain routing logic for implementing network services. For example, they dynamically update algorithms for optimizing room assignments for a chat service without disturbing routing implemented by the hubs. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> In addition, rooms assignments for a chat service are organized hierarchically to facilitate distribution to a targeted audience. The chat service may be controlled by the client as in the case of simple chat service. It also may be controlled by a database and content push/pull service making use of custom knowledge about a client via a profile for use in advertising purposes. In particular, the service may select advertisements to push to a particular client or user based upon the user&apos;s profile. Clients may also belong to multiple rooms in a chat service, making it simpler for a push/pull service to create distribution channels for similar clients by subscribing them to the new rooms. The push/pull service may then send the same or similar content to all members of the new room. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10A</cross-reference> is a diagram of an exemplary physical network configuration for implementing a distributed community network <highlight><bold>200</bold></highlight>. The configuration includes client machines <highlight><bold>204</bold></highlight>, <highlight><bold>206</bold></highlight>, <highlight><bold>208</bold></highlight> connected through a network <highlight><bold>202</bold></highlight> to a hub <highlight><bold>220</bold></highlight> within a server <highlight><bold>210</bold></highlight>. Network <highlight><bold>202</bold></highlight> may represent, for example, the Internet, a wide-area network, a local area network, or an intranet. Network <highlight><bold>202</bold></highlight> may also comprise a cable TV distribution medium, broadcast medium, satellite broadcast, telephone lines, fiber optics, or any other conventional transmission medium. Each of the client machines includes access to particular services managed by corresponding servers. Client machine <highlight><bold>204</bold></highlight> provides donut, chat, and whiteboard services to a client or user at that machine, for example. Client machine <highlight><bold>206</bold></highlight> provides donut and whiteboard services. Client machine <highlight><bold>208</bold></highlight> is a conventional television. A client machine may also comprise a digital TV, a TV with a digital or analog cable box, or a computer connected with a TV. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> A donut service refers to the ability to provide content to users based upon user-profile information. The donut services specifies a &ldquo;donut&rdquo; of dynamic, hierarchical, shared user-profile information. In particular, it maintains either user profiles or database keys into a data repository containing the profiles. The donut may be stored in a file-type structure on a computer-readable medium such as a memory and accessed by browser programs, associated web server programs, and other applications for use in routing content to the user associated with the donut. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> Distributed community network <highlight><bold>200</bold></highlight> in this example includes three servers <highlight><bold>210</bold></highlight>, <highlight><bold>212</bold></highlight>, and <highlight><bold>214</bold></highlight>. Server <highlight><bold>210</bold></highlight> includes hub <highlight><bold>220</bold></highlight> and a whiteboard service <highlight><bold>216</bold></highlight>. Server <highlight><bold>212</bold></highlight> includes a hub <highlight><bold>222</bold></highlight> and a chat service <highlight><bold>218</bold></highlight>. Server <highlight><bold>214</bold></highlight> includes a hub <highlight><bold>224</bold></highlight> connected to two exemplary services, a donut service <highlight><bold>226</bold></highlight> and a content push/pull service <highlight><bold>228</bold></highlight>. Both services <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight> are connected with a data repository <highlight><bold>230</bold></highlight>. <highlight><bold>31</bold></highlight> Examples of information for storage in data repository <highlight><bold>230</bold></highlight> include user profiles, content for transmission to users, and web pages. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> Each of the three servers <highlight><bold>210</bold></highlight>, <highlight><bold>212</bold></highlight>, <highlight><bold>214</bold></highlight> are interconnected via their respective hubs <highlight><bold>220</bold></highlight>, <highlight><bold>222</bold></highlight>, and <highlight><bold>224</bold></highlight>. In addition, this embodiment includes an authoring client machine <highlight><bold>232</bold></highlight> connected with hub <highlight><bold>224</bold></highlight> in server <highlight><bold>214</bold></highlight>. The exemplary services <highlight><bold>216</bold></highlight>, <highlight><bold>218</bold></highlight>, <highlight><bold>226</bold></highlight>, and <highlight><bold>228</bold></highlight> are only examples of services provided by servers. Many more services could also be provided by the server. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> For the services, the servers may provide many types of content such as, for example, video, audio, and multimedia. Web browsers for communicating with the server may be located in various places such as, for example, on a user machine, in a cable head end, in a satellite operations center, or in a set-top box. The web browsers may obtain the content in realtime, or it may be prefetched and cached either locally or on the server. In addition to web browsers, other entities may obtain content. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> A distributed community network permits processing for these exemplary services to be distributed among multiple machines, such as servers <highlight><bold>210</bold></highlight>, <highlight><bold>212</bold></highlight>, and <highlight><bold>214</bold></highlight>. The routing for providing the services to client machines <highlight><bold>204</bold></highlight>, <highlight><bold>206</bold></highlight>, and <highlight><bold>208</bold></highlight> are distributed among the multiple hubs of the servers. Therefore, in order to transmit content to the client machines, the hubs in the servers provide route content from an authoring client machine <highlight><bold>232</bold></highlight> through network <highlight><bold>202</bold></highlight> to client machines <highlight><bold>204</bold></highlight>, <highlight><bold>206</bold></highlight>, and <highlight><bold>208</bold></highlight>. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Use of a distributed community network distributes processing among multiple machines in order to ease the burden of providing routing to multiple client machines. It also provides a dynamic reconfigurable network by shifting routing among multiple hubs so that additional client machines may be dynamically added to the network. Each of the client machines <highlight><bold>204</bold></highlight>, <highlight><bold>206</bold></highlight>, and <highlight><bold>232</bold></highlight> may be implemented with a conventional computer with communication capability for interacting through a network. Each of the servers <highlight><bold>210</bold></highlight>, <highlight><bold>212</bold></highlight>, and <highlight><bold>214</bold></highlight> may be implemented with a typical server machine. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10B</cross-reference> provides an example of use of the network in <cross-reference target="DRAWINGS">FIG. 10A</cross-reference> for a particular application. For instance, during a Jets v. Giants professional football game, a user, Bob, first switches his cable set-top box to the appropriate video channel for the game. The video originates at a television operations center, is transmitted via satellite to a cable head end, then through a cable plant to Bob&apos;s set-top box. Bob also connects to the Internet <highlight><bold>202</bold></highlight> on his computer and accesses the matching HyperTV web page, involving a particular network service. This web page is located on a server in the point of presence for the service. The point of presence configures Bob&apos;s machine <highlight><bold>204</bold></highlight> into distributed community network <highlight><bold>200</bold></highlight>. Machine <highlight><bold>204</bold></highlight> opens a persistent socket on configured hub A (<highlight><bold>220</bold></highlight>) and sends a subscribe message to configured chat service <highlight><bold>218</bold></highlight> via hub C (<highlight><bold>222</bold></highlight>). In response to the subscribe message, chat service <highlight><bold>218</bold></highlight> sends an announcement packet to all the members of the configured room via hub A (<highlight><bold>220</bold></highlight>) and the Internet <highlight><bold>202</bold></highlight>. In addition, chat service <highlight><bold>218</bold></highlight> subscribes Bob to the appropriate push/pull service <highlight><bold>228</bold></highlight> via hubs C (<highlight><bold>222</bold></highlight>) and B (<highlight><bold>224</bold></highlight>). </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> Push/pull service <highlight><bold>228</bold></highlight> extracts Bob&apos;s user profile donut from database <highlight><bold>230</bold></highlight> and pushes the values of the profile down through hub B (<highlight><bold>224</bold></highlight>) and hub A (<highlight><bold>220</bold></highlight>) through the Internet <highlight><bold>202</bold></highlight> to Bob&apos;s machine <highlight><bold>204</bold></highlight>. Since Bob&apos;s donut shows that he has previously indicated that he is a Giants fan, Bob is subscribed to a particular push room for Giant fans by push/pull service <highlight><bold>228</bold></highlight>. As the game progresses, any pushed content for Giants fans and any chat messages from Bob&apos;s friends in the chat room are transmitted to him at machine <highlight><bold>204</bold></highlight> as well. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> During the game, a content producer uses the authoring client <highlight><bold>232</bold></highlight> to send a web page detailing the biography of the Giants quarterback and supporting links to hub B (<highlight><bold>224</bold></highlight>). The pushed information is routed to push/pull service <highlight><bold>228</bold></highlight>, which sends a message to Bob and all the other members of that push room by routing it first to hub B (<highlight><bold>224</bold></highlight>). Hub B (<highlight><bold>224</bold></highlight>) in turn routes it to hub A (<highlight><bold>220</bold></highlight>), which distributes it via Internet <highlight><bold>202</bold></highlight> to Bob&apos;s machine <highlight><bold>204</bold></highlight> and all his friends in the chat room. Hub B (<highlight><bold>224</bold></highlight>) might also have routed the message to other hubs that support other people in the same chat room. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> Bob reviews the page on the Giants and decides he wants to play a prediction game about the quarterback&apos;s decisions from one of the displayed supporting links. Bob &ldquo;clicks on&rdquo; the link to select it and generate a pull request, which is transmitted through the persistent socket connection through the Internet <highlight><bold>202</bold></highlight>. The request is routed via hub B (<highlight><bold>224</bold></highlight>) to push/pull service <highlight><bold>228</bold></highlight>, which pulls the distributed object (a JAVA game) from database <highlight><bold>230</bold></highlight> and returns it via the same channel to Bob&apos;s machine <highlight><bold>204</bold></highlight>. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> As the game progresses, Bob makes predictions about the quarterback&apos;s behavior. After each play, data updating the game arrives from authoring client <highlight><bold>232</bold></highlight> into hub B (<highlight><bold>224</bold></highlight>), and is then routed to QB game service <highlight><bold>217</bold></highlight> via hub A (<highlight><bold>220</bold></highlight>) and hub B (<highlight><bold>224</bold></highlight>). The game service processes the authoring client&apos;s data and sends the resultant data to Bob via hub A (<highlight><bold>220</bold></highlight>) and the Internet <highlight><bold>202</bold></highlight>. The data is presented by the distributed object JAVA game on Bob&apos;s client machine <highlight><bold>204</bold></highlight>. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The quarterback fumbles. The producer at authoring client <highlight><bold>232</bold></highlight> pushes a dynamic HyperText Markup Language (DHTML) instruction in Javascript through hub B (<highlight><bold>224</bold></highlight>) and hub A (<highlight><bold>220</bold></highlight>) through the Internet <highlight><bold>202</bold></highlight> to Bob&apos;s machine <highlight><bold>204</bold></highlight>. At Bob&apos;s machine, the DHTML is executed and Bob receives on his computer screen an animated image of the word Fumble&excl;</paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11A</cross-reference> is a diagram of an exemplary logic structure <highlight><bold>240</bold></highlight> for distributed community network <highlight><bold>200</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 10A</cross-reference>. Logic structure <highlight><bold>240</bold></highlight> illustrates logical relationships among entities within physical distributed community network <highlight><bold>200</bold></highlight>. In particular, an arrow represents a class/subclass relationship, and a diamond represents a relationship identifying an attribute of an entity. A client <highlight><bold>244</bold></highlight> may correspond with one of the client machines <highlight><bold>204</bold></highlight>, <highlight><bold>206</bold></highlight>, and <highlight><bold>208</bold></highlight> and it subscribes to a hub <highlight><bold>248</bold></highlight>, which may correspond with hub <highlight><bold>220</bold></highlight>, <highlight><bold>222</bold></highlight>, or <highlight><bold>224</bold></highlight> within one of the servers <highlight><bold>210</bold></highlight>, <highlight><bold>212</bold></highlight>, and <highlight><bold>214</bold></highlight>. A server <highlight><bold>246</bold></highlight> may correspond with one of the servers <highlight><bold>210</bold></highlight>, <highlight><bold>212</bold></highlight>, and <highlight><bold>214</bold></highlight>, and it manages a service <highlight><bold>250</bold></highlight>, which may correspond with one of the services <highlight><bold>216</bold></highlight>, <highlight><bold>218</bold></highlight>, <highlight><bold>226</bold></highlight>, or <highlight><bold>228</bold></highlight>. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> Client <highlight><bold>244</bold></highlight> is a type of participant <highlight><bold>242</bold></highlight>, which is a client machine subscribed to a particular service such as service <highlight><bold>250</bold></highlight>. The client&apos;s status as participant <highlight><bold>242</bold></highlight> identifies it as a member of a particular room for a chat service. A directory <highlight><bold>254</bold></highlight> through a connection <highlight><bold>252</bold></highlight> provides communication for locating users for participant <highlight><bold>242</bold></highlight>. In particular, connection <highlight><bold>252</bold></highlight> is a network connection between two participants over which packets can be sent, and directory <highlight><bold>254</bold></highlight> provides instructions for identifying which participants are to receive particular content, where they are located on the network, and which content they are to receive. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> Router <highlight><bold>256</bold></highlight> maintains map of a portion of the distributed community network for resolving routing questions from hubs, adding new participants to the network, and adding participants to services, which involves adding connections. In particular, hubs request routing decisions from router <highlight><bold>256</bold></highlight>, and in response router <highlight><bold>256</bold></highlight> provides instructions to the hubs for their use in routing packets. For example, if hub A (<highlight><bold>220</bold></highlight>) failed, router <highlight><bold>256</bold></highlight> can issue instructions to the remaining hubs to avoid routing packets through hub A (<highlight><bold>220</bold></highlight>). </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> Directory <highlight><bold>254</bold></highlight> includes information used in routing information among client machines, and it provides information to hub <highlight><bold>248</bold></highlight> for use in routing information. The term directory is used to refer to a room for a chat service or any other service. Directory <highlight><bold>254</bold></highlight> is a hierarchical collection of a directory, terminated with a room and it has a subdir (set of directories). A room is a directory and identifies a group of clients subscribed to a service, such as a chat service. A room has clients (set of participants) and hubs (set of hubs) where hubs is a subset of clients. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> Packet <highlight><bold>258</bold></highlight> is a structured piece of information delivered from one client to another. It may include any type of content for various services such as a push/pull service or a chat service. For example, in the chat service client <highlight><bold>244</bold></highlight> creates a packet when the user enters information and sends it to a hub associated with the client&apos;s machine. The hub sends that packet to all the connections subscribed to that room. If the connections include another hub, the process iterates, thus distributing the packet to the room over multiple hubs. Packet <highlight><bold>258</bold></highlight> identifies hierarchical routing information including a source (participant), dir (directory), target (participant), conn (connection), and a route (set of participants). </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> The packet with the routing information may include a variety of types of information as its payload or transmitted content. The packet may include data to be displayed, for example, to a user in a particular frame on a display device. The packet may also include one or more distributed executable objects, and the objects may include data, executable code, or data in combination with executable code. The executable code may include, for example, a JAVA applet or any type of entity specifying executable code. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> Hub <highlight><bold>248</bold></highlight> includes software for routing packets, and it may be used to push an application or content to multiple users. Examples of such applications or content include a whiteboard, a JAVA game, chat messages, text, and a file. By distributing hubs among multiple machines, the burden on a server of routing packets is decreased. Also, hub <highlight><bold>248</bold></highlight> includes a connection to a router <highlight><bold>256</bold></highlight> for obtaining routing information, if necessary. Table 1 includes an example of hub logic for use by hub <highlight><bold>248</bold></highlight> in routing packet <highlight><bold>258</bold></highlight>; this logic may be implemented in software or firmware modules for execution by a corresponding machine. 
<image file="US20030005151A1-20030102-P00001.TIF" id="EMI-00001"></image>
<image file="US20030005151A1-20030102-P00002.TIF" id="EMI-00002"></image>
</paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11B</cross-reference> is an exemplary diagram of a physical network configuration <highlight><bold>259</bold></highlight> for a distributed community network illustrating an alternative source for a video signal. Configuration <highlight><bold>259</bold></highlight> illustrates conventional distribution of video or television content using cable television signals. An operations center <highlight><bold>261</bold></highlight> generates a cable television signal having content for distribution and transmits the cable television signal over a satellite link <highlight><bold>263</bold></highlight> to one or more cable head ends <highlight><bold>265</bold></highlight>. Cable head end <highlight><bold>265</bold></highlight> can include a web browser for interacting with a network such as the Internet <highlight><bold>202</bold></highlight>. Cable head end <highlight><bold>265</bold></highlight> receives the cable television signal from satellite link <highlight><bold>263</bold></highlight> and distributes the signal over cable lines to client machines <highlight><bold>267</bold></highlight>. Alternatively, the operations center can transmit over a satellite link to the client machines, foregoing the cable route. Client machines <highlight><bold>267</bold></highlight> may represent conventional televisions or any machine capable of displaying cable television signals (such as a personal computer with a TV card or module for processing TV signals for display). Client machines <highlight><bold>267</bold></highlight> may also include connection to a network such as the Internet <highlight><bold>202</bold></highlight> for implementing a distributed community network. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12A</cross-reference> is a diagram of an exemplary content push packet flow <highlight><bold>260</bold></highlight> in distributed community network <highlight><bold>200</bold></highlight> for implementing a content push/pull service. The content push packet flow involves transmission of content via packets through the logic structure <highlight><bold>240</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 11A</cross-reference> as implemented in the physical distributed community network configuration <highlight><bold>200</bold></highlight> shown in <cross-reference target="DRAWINGS">FIGS. 10A and 10B</cross-reference>. As described above, a system may provide to a user both video and other media content, such as any content available via a URI or a client-side script such as a JAVA script. The type of media content pushed to a user may depend upon the user&apos;s profile. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> The media content may include, for example, video, audio, combined video and audio, or multimedia content. When transmitting different types of media content, such as both video and audio, the media content may be transmitted from the same or different sources. In addition, the content may be transmitted from a wide variety of sources such as, for example, television, broadcast television, cable, satellite, local video, and local CD-ROM or digital versatile disk (DVD). The local content may be stored on the hard disk drive of a user&apos;s machine. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 12A, a</cross-reference> content push/pull packet flow <highlight><bold>260</bold></highlight> includes interaction of multiple machines transmitting the packets. The packets may originate from various sources such as a web browser on a client machine, a cable head end, or a server. Client machines <highlight><bold>284</bold></highlight>, <highlight><bold>276</bold></highlight>, and <highlight><bold>268</bold></highlight> may correspond with client machines shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>A and client logic elements shown in <cross-reference target="DRAWINGS">FIG. 11A</cross-reference>. Client <highlight><bold>284</bold></highlight> includes a browser program which provides frames for the following services: media <highlight><bold>286</bold></highlight>, chat <highlight><bold>290</bold></highlight>, and content <highlight><bold>288</bold></highlight>. Client <highlight><bold>276</bold></highlight> likewise includes a browser program providing frames for media <highlight><bold>280</bold></highlight>, chat <highlight><bold>282</bold></highlight>, and content <highlight><bold>278</bold></highlight> services. Client <highlight><bold>268</bold></highlight> includes frames for media <highlight><bold>270</bold></highlight>, chat <highlight><bold>272</bold></highlight>, and content <highlight><bold>274</bold></highlight> services. Clients <highlight><bold>284</bold></highlight>, <highlight><bold>276</bold></highlight>, and <highlight><bold>268</bold></highlight>, as shown, typically have the same services or access to the same services; alternatively, they may each implement different services. Also, they may implement different network services than those shown, such as a whiteboard service as identified above. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, chat service may include an associated chat frame <highlight><bold>168</bold></highlight> on a user&apos;s machine; content may include web pages <highlight><bold>176</bold></highlight>; and media frames may include transmitted video programs. Also, as explained in the embodiments provided above, the implementation of a chat service may use a digital television, digital cable box, or personal computer. In addition, the program from the program sources, such as those identified above, and the content from a network service, such as a chat service or a push/pull service, may be provided on the same or different physical machines. For example, both the program and the content may be provided on a television or on a personal computer, or they may be provided on separate physical machines such as providing the program on a television and providing the content for the network service on an associated personal computer. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 12A</cross-reference> for the push/pull service flow, authoring client <highlight><bold>262</bold></highlight> includes an authoring application <highlight><bold>264</bold></highlight> for creating a packet <highlight><bold>266</bold></highlight>. An authoring application includes any program for use in creating a packet containing or identifying particular content. A server <highlight><bold>292</bold></highlight> provides for routing of packet <highlight><bold>266</bold></highlight>. In particular, it includes a hub <highlight><bold>294</bold></highlight> coupled to a content push/pull service <highlight><bold>296</bold></highlight> and a chat service <highlight><bold>298</bold></highlight>. The routing of packets and their content for the exemplary content push/pull service is further explained in Table 2 illustrating packet structure throughout the flow. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> Authoring client <highlight><bold>262</bold></highlight>, using authoring application <highlight><bold>264</bold></highlight>, creates packet P-0 (step <highlight><bold>266</bold></highlight>) and transmits it to server <highlight><bold>292</bold></highlight> where it is received by hub <highlight><bold>294</bold></highlight> as packet P-1 (step <highlight><bold>306</bold></highlight>). Hub <highlight><bold>294</bold></highlight> routes the packet to an individual target. In particular, content push/pull service <highlight><bold>296</bold></highlight> sends packet P-2 to an entire directory via hub <highlight><bold>294</bold></highlight> (step <highlight><bold>308</bold></highlight>). Hub <highlight><bold>294</bold></highlight> routes packet P-3 to all members of the directory (step <highlight><bold>306</bold></highlight>), and each client receives the packet P-4 (steps <highlight><bold>312</bold></highlight>, <highlight><bold>314</bold></highlight>, <highlight><bold>316</bold></highlight>). Hub <highlight><bold>294</bold></highlight> may include software for routing packets, as illustrated by the logic in Table 1. The packets identify information in the header used by the hub logic in routing the packets for the push/pull service. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12B</cross-reference> is a diagram of an exemplary push/pull packet content <highlight><bold>271</bold></highlight> for use in distributed community network <highlight><bold>260</bold></highlight> as packet P-4. Packet <highlight><bold>271</bold></highlight> includes a primary URI <highlight><bold>273</bold></highlight> for use by client machines <highlight><bold>262</bold></highlight>, <highlight><bold>268</bold></highlight>, <highlight><bold>276</bold></highlight>, and <highlight><bold>284</bold></highlight> in retrieving content to be pushed to the machines. Packet <highlight><bold>271</bold></highlight> also may include one or more URIs for use by the client machines in pulling content. For example, packet <highlight><bold>271</bold></highlight> includes a URI <highlight><bold>275</bold></highlight> for a first pull item, a URI <highlight><bold>277</bold></highlight> for a second pull item, and a URI <highlight><bold>279</bold></highlight> for a third pull item. The pull items may include an element to be displayed to the user, such as an icon, such that when the user &ldquo;clicks on&rdquo; or selects the item, the corresponding client machine uses the URI associated with the displayed item to retrieve content and display the content to the user. Packet <highlight><bold>271</bold></highlight> may include multiple URIs for pushed content, as well as the multiple URIs for pulled content.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="56PT" align="center"/>
<colspec colname="2" colwidth="56PT" align="center"/>
<colspec colname="3" colwidth="56PT" align="center"/>
<colspec colname="4" colwidth="56PT" align="center"/>
<colspec colname="5" colwidth="56PT" align="center"/>
<thead>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="5" align="center">TABLE 2</entry>
</row>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="5" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>P-0</entry>
<entry>P-1</entry>
<entry>P-2</entry>
<entry>P-3</entry>
<entry>P-4</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="5" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="1" colwidth="28PT" align="left"/>
<colspec colname="2" colwidth="56PT" align="center"/>
<colspec colname="3" colwidth="56PT" align="center"/>
<colspec colname="4" colwidth="56PT" align="center"/>
<colspec colname="5" colwidth="56PT" align="center"/>
<colspec colname="6" colwidth="56PT" align="center"/>
<tbody valign="top">
<row>
<entry>source</entry>
<entry>2000</entry>
<entry>2000</entry>
<entry>2000</entry>
<entry>2000</entry>
<entry>2000</entry>
</row>
<row>
<entry>service</entry>
<entry>content</entry>
<entry>content</entry>
<entry>content</entry>
<entry>content</entry>
<entry>content</entry>
</row>
<row>
<entry></entry>
<entry>push/pull</entry>
<entry>push/pull</entry>
<entry>push/pull</entry>
<entry>push/pull</entry>
<entry>push/pull</entry>
</row>
<row>
<entry>target</entry>
<entry>&ensp;200</entry>
<entry>&ensp;200</entry>
<entry>&mdash;</entry>
<entry>&mdash;</entry>
<entry>&mdash;</entry>
</row>
<row>
<entry>dir</entry>
<entry>&emsp;&ensp;5</entry>
<entry>&emsp;&ensp;5</entry>
<entry>&emsp;&ensp;5</entry>
<entry>&emsp;&ensp;5</entry>
<entry>&emsp;&ensp;5</entry>
</row>
<row>
<entry>action</entry>
<entry>PUSH</entry>
<entry>PUSH</entry>
<entry>PUSH</entry>
<entry>PUSH</entry>
<entry>PUSH</entry>
</row>
<row>
<entry>note</entry>
<entry>author 262</entry>
<entry>hub 294 routes</entry>
<entry>service 296</entry>
<entry>hub 294 routes</entry>
<entry>each client 268,</entry>
</row>
<row>
<entry></entry>
<entry>creates packet</entry>
<entry>packet P-1 to</entry>
<entry>sends packet P-</entry>
<entry>packet P-3 to</entry>
<entry>276, 284 in the</entry>
</row>
<row>
<entry></entry>
<entry>P-0 containing a</entry>
<entry>individual target,</entry>
<entry>2 to entire</entry>
<entry>all members of</entry>
<entry>directory receives</entry>
</row>
<row>
<entry></entry>
<entry>URI to be</entry>
<entry>service 296</entry>
<entry>directory via</entry>
<entry>the directory</entry>
<entry>packet P-4,</entry>
</row>
<row>
<entry></entry>
<entry>displayed and</entry>
<entry></entry>
<entry>hub 294</entry>
<entry></entry>
<entry>including the URI</entry>
</row>
<row>
<entry></entry>
<entry>URIs to pull</entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>to be displayed</entry>
</row>
<row>
<entry></entry>
<entry>information</entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>and the URIs to</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>pull information</entry>
</row>
<row><entry namest="1" nameend="6" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a diagram of exemplary chat packet flow <highlight><bold>330</bold></highlight> in distributed community network <highlight><bold>200</bold></highlight>. This diagram includes the same logic elements as shown in <cross-reference target="DRAWINGS">FIG. 12A</cross-reference> with routing for flow of a chat packet using chat service <highlight><bold>298</bold></highlight> and implementations include the various alternatives identified above with respect to <cross-reference target="DRAWINGS">FIG. 12A</cross-reference>. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> The routing of packets and their content for the exemplary chat service is further explained in Table 3 illustrating packet structure throughout the flow. In this example, client <highlight><bold>284</bold></highlight> creates a new chat message as packet P-0 (step <highlight><bold>332</bold></highlight>). The client may use an application associated with the chat service to enter information, such as typing in a text string using an keyboard, and send it in packet form. The application may include, for example, scripts associated with the chat frame on the user machine. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> Packet P-0 from client machine <highlight><bold>284</bold></highlight> is directed to the server <highlight><bold>292</bold></highlight> where it is received as packet P-1 (step <highlight><bold>334</bold></highlight>). Hub <highlight><bold>294</bold></highlight> routes the packet to an individual target as identified in the header information of the packet. In particular, chat service <highlight><bold>298</bold></highlight>, using hub <highlight><bold>294</bold></highlight>, sends packet P-2 to the entire directory (step <highlight><bold>336</bold></highlight>). Hub <highlight><bold>294</bold></highlight> routes packet P-3 to all members of the directory (step <highlight><bold>338</bold></highlight>), in which case is received by each of the client machines in the directory as packet P-4 (steps <highlight><bold>340</bold></highlight>, <highlight><bold>342</bold></highlight>, <highlight><bold>344</bold></highlight>). Hub <highlight><bold>294</bold></highlight> may include software for routing packets, as illustrated by the logic in Table 1. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> Programs in each client machine <highlight><bold>268</bold></highlight>, <highlight><bold>276</bold></highlight>, <highlight><bold>284</bold></highlight> associated with the chat service, such as scripts associated with the chat frames in the client machine, receive packet P-4 and perform necessary processing to extract the content originally created by the user at machine <highlight><bold>284</bold></highlight> (packet P-0) and display that content in the chat frames <highlight><bold>272</bold></highlight>, <highlight><bold>282</bold></highlight>, <highlight><bold>290</bold></highlight>. </paragraph>
</section>
<section>
<heading lvl="1">Table 3</heading>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number>  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="56PT" align="center"/>
<colspec colname="2" colwidth="56PT" align="center"/>
<colspec colname="3" colwidth="56PT" align="center"/>
<colspec colname="4" colwidth="56PT" align="center"/>
<colspec colname="5" colwidth="56PT" align="center"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="5" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>P-0</entry>
<entry>P-1</entry>
<entry>P-2</entry>
<entry>P-3</entry>
<entry>P-4</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="5" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="1" colwidth="28PT" align="left"/>
<colspec colname="2" colwidth="56PT" align="center"/>
<colspec colname="3" colwidth="56PT" align="center"/>
<colspec colname="4" colwidth="56PT" align="center"/>
<colspec colname="5" colwidth="56PT" align="center"/>
<colspec colname="6" colwidth="56PT" align="center"/>
<tbody valign="top">
<row>
<entry>source</entry>
<entry>3000</entry>
<entry>3000</entry>
<entry>3000</entry>
<entry>3000</entry>
<entry>3000</entry>
</row>
<row>
<entry>service</entry>
<entry>chat</entry>
<entry>chat</entry>
<entry>chat</entry>
<entry>chat</entry>
<entry>chat</entry>
</row>
<row>
<entry>target</entry>
<entry>&ensp;201</entry>
<entry>&ensp;201</entry>
<entry>&mdash;</entry>
<entry>&mdash;</entry>
<entry>&mdash;</entry>
</row>
<row>
<entry>dir</entry>
<entry>&emsp;&ensp;5</entry>
<entry>&emsp;&ensp;5</entry>
<entry>&emsp;&ensp;5</entry>
<entry>&emsp;&ensp;5</entry>
<entry>&emsp;&ensp;5</entry>
</row>
<row>
<entry>Action</entry>
<entry>SAY</entry>
<entry>SAY</entry>
<entry>SAY</entry>
<entry>SAY</entry>
<entry>SAY</entry>
</row>
<row>
<entry>note</entry>
<entry>client at</entry>
<entry>hub 294 routes</entry>
<entry>chat service 298</entry>
<entry>hub 294 routes</entry>
<entry>each client</entry>
</row>
<row>
<entry></entry>
<entry>machine 284</entry>
<entry>packet P-1 to</entry>
<entry>sends packet P-2</entry>
<entry>packet P-3 to all</entry>
<entry>268, 276, 284</entry>
</row>
<row>
<entry></entry>
<entry>enters new chat</entry>
<entry>individual target,</entry>
<entry>to entire</entry>
<entry>members of the</entry>
<entry>in the directory</entry>
</row>
<row>
<entry></entry>
<entry>message, packet</entry>
<entry>chat service 298</entry>
<entry>directory via hub</entry>
<entry>directory</entry>
<entry>receives packet</entry>
</row>
<row>
<entry></entry>
<entry>P-0</entry>
<entry></entry>
<entry>294</entry>
<entry></entry>
<entry>P-4</entry>
</row>
<row><entry namest="1" nameend="6" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> FIGS. <highlight><bold>14</bold></highlight>A-<highlight><bold>14</bold></highlight>D are examples of implementations for distributed community network <highlight><bold>200</bold></highlight>. <cross-reference target="DRAWINGS">FIGS. 14A</cross-reference> is a diagram of a distributed community network <highlight><bold>350</bold></highlight> for a small eSchool. Network <highlight><bold>350</bold></highlight> includes in this example a server <highlight><bold>352</bold></highlight> providing service for all chat rooms and whiteboards and is coupled to client machines <highlight><bold>354</bold></highlight>, <highlight><bold>356</bold></highlight>, <highlight><bold>358</bold></highlight>, and <highlight><bold>360</bold></highlight>. Each client machine thus may access chat room and whiteboard services as managed by the server. Server <highlight><bold>352</bold></highlight> may include a hub having software for routing information, as illustrated by the logic in Table <highlight><bold>1</bold></highlight>. Server <highlight><bold>352</bold></highlight> may also include a connection with a network such as the Internet <highlight><bold>202</bold></highlight>. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14B</cross-reference> is a diagram of an exemplary implementation of a distributed community network <highlight><bold>200</bold></highlight> as a large eSchool <highlight><bold>362</bold></highlight>. Configuration <highlight><bold>362</bold></highlight> includes a router <highlight><bold>364</bold></highlight> connecting servers <highlight><bold>366</bold></highlight> and <highlight><bold>368</bold></highlight>. Each server manages a separate chat room and may exchange information through router <highlight><bold>364</bold></highlight>. Two clients <highlight><bold>370</bold></highlight> and <highlight><bold>372</bold></highlight> are connected with a server <highlight><bold>366</bold></highlight> for the first chat room. Two additional clients <highlight><bold>374</bold></highlight> and <highlight><bold>376</bold></highlight> are connected with server <highlight><bold>368</bold></highlight> for the second chat room. Servers <highlight><bold>366</bold></highlight> and <highlight><bold>368</bold></highlight> may include hubs having software for routing information, as illustrated by the logic in Table 1. Servers <highlight><bold>366</bold></highlight> and <highlight><bold>368</bold></highlight> may include a connection with a network such as the Internet <highlight><bold>202</bold></highlight>. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14C</cross-reference> is a diagram of an exemplary implementation of distributed community network <highlight><bold>200</bold></highlight> as a simple configuration <highlight><bold>378</bold></highlight> providing video and other content. Configuration <highlight><bold>378</bold></highlight> includes a server <highlight><bold>380</bold></highlight> coupled to clients <highlight><bold>382</bold></highlight>, <highlight><bold>384</bold></highlight>, <highlight><bold>386</bold></highlight>, and <highlight><bold>388</bold></highlight>. Server <highlight><bold>380</bold></highlight> in this example includes two directories identified as teams 1 and 2. One directory includes clients <highlight><bold>382</bold></highlight> and <highlight><bold>384</bold></highlight>, and the other includes clients <highlight><bold>386</bold></highlight> and <highlight><bold>388</bold></highlight>. These directories identify rooms for participants of a chat service maintained by server <highlight><bold>380</bold></highlight>. Server <highlight><bold>380</bold></highlight> also identifies the type of content to be transmitted to the clients in its directory by being pushed to the clients by a content push/pull service. In this example, a first advertisement is to be transmitted to clients <highlight><bold>382</bold></highlight> and <highlight><bold>386</bold></highlight>, and a second advertisement is to be transmitted to clients <highlight><bold>384</bold></highlight> and <highlight><bold>388</bold></highlight>. Therefore, server <highlight><bold>380</bold></highlight> via a directory structure may specifically identify the type of content to be transmitted to particular clients. Server <highlight><bold>380</bold></highlight> may include a hub having software for routing information, as illustrated by the logic in Table 1. Server <highlight><bold>380</bold></highlight> may also include a connection with a network such as the Internet <highlight><bold>202</bold></highlight>. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14D</cross-reference> is a diagram of an exemplary implementation of a distributed community network as a complex configuration <highlight><bold>390</bold></highlight> providing video and other content. Configuration <highlight><bold>390</bold></highlight> includes a server <highlight><bold>392</bold></highlight> and a server <highlight><bold>394</bold></highlight> both connected with a server <highlight><bold>396</bold></highlight>. Server <highlight><bold>396</bold></highlight> is connected with hubs <highlight><bold>398</bold></highlight> and <highlight><bold>400</bold></highlight>. Hub <highlight><bold>398</bold></highlight> is connected with clients <highlight><bold>402</bold></highlight> and <highlight><bold>404</bold></highlight>, and hub <highlight><bold>400</bold></highlight> is connected with clients <highlight><bold>406</bold></highlight> and <highlight><bold>408</bold></highlight>. Servers <highlight><bold>392</bold></highlight>, <highlight><bold>394</bold></highlight>, and <highlight><bold>396</bold></highlight> may include hubs having software for routing information, as illustrated by the logic in Table 1. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> Configuration <highlight><bold>390</bold></highlight> also includes its own directory structure for the routing of information. Server <highlight><bold>396</bold></highlight> routes to team 1 or hub <highlight><bold>398</bold></highlight>, and provides separate advertisements for hubs <highlight><bold>398</bold></highlight> and <highlight><bold>400</bold></highlight>. The teams identify rooms for participants of a chat service, and the advertisements refer to particular content to be pushed to users by a content push/pull service. The directory for server <highlight><bold>394</bold></highlight> includes a first advertisement to be transmitted to server <highlight><bold>396</bold></highlight> and a second advertisement to be transmitted to server <highlight><bold>396</bold></highlight>. The directory for hub <highlight><bold>398</bold></highlight> includes a first team for clients <highlight><bold>402</bold></highlight> and <highlight><bold>404</bold></highlight>, and hub <highlight><bold>400</bold></highlight> and server <highlight><bold>396</bold></highlight>. It further includes the first advertisement to be transmitted to client <highlight><bold>402</bold></highlight>, and a second advertisement to be transmitted to client <highlight><bold>404</bold></highlight>. The directory for hub <highlight><bold>400</bold></highlight> includes a first team for clients <highlight><bold>406</bold></highlight> and <highlight><bold>408</bold></highlight> and hub <highlight><bold>398</bold></highlight>. It also includes a first advertisement to be transmitted to client <highlight><bold>406</bold></highlight>, and a second advertisement to be transmitted to client <highlight><bold>408</bold></highlight>. Servers <highlight><bold>392</bold></highlight>, <highlight><bold>394</bold></highlight>, and <highlight><bold>396</bold></highlight> may also include a connection with a network such as the Internet <highlight><bold>202</bold></highlight>. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> Using the foregoing embodiments, methods and processes, the system of the present invention creates a synergistic experience combining the vast resources of the Internet with the presentation capabilities of television. Various embodiments for implementing a distributed community network consistent with the present invention are possible using different types of networks with or without use of the Internet. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for routing packets of information in a network, comprising: 
<claim-text>at a routing device located on a network, establishing at least one directory comprising at least one routing instruction to one or more targets in the network; </claim-text>
<claim-text>receiving a message to modify the at least one routing instruction; and </claim-text>
<claim-text>modifying the at least one routing instruction. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising: 
<claim-text>receiving a packet at the routing device; </claim-text>
<claim-text>accessing the at least one directory comprising the at least one routing instruction to one or more targets in the network; and </claim-text>
<claim-text>routing the packet to the one or more targets in the network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the operation of receiving a message to modify the at least one routing instruction comprises: 
<claim-text>receiving a message to add at least one routing instruction for at least one new target in the network to the at least one directory. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the operation of receiving a message to modify the at least one routing instruction comprises: 
<claim-text>receiving a message to delete at least one routing instruction for at least one new target in the network from the at least one directory. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the routing device comprises a hub. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the routing instruction comprises an identification of participants to receive the packet. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein the routing instruction further comprises an address on the network to send the packet. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method for transmitting data packets of information to one or more client devices, comprising: 
<claim-text>in a server, providing for at least one directory comprising at least one identification of a client and at least one identification of at least one type of content to transmit to the client; </claim-text>
<claim-text>accessing the at least one directory; and </claim-text>
<claim-text>transmitting a packet from the server, the packet corresponding with the at least one type of content, the packet comprising the at least one identification of the client. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> further comprising: 
<claim-text>receiving a message to modify the at least one directory; and </claim-text>
<claim-text>modifying the directory. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein the message to modify the at least one directory comprises an instruction to add at least one identification of a client. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein the message to modify the at least one directory comprises an instruction to add at least one identification of at least one type of content. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein the message to modify the at least one directory comprises an instruction to delete at least one identification of a client. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein the message to modify the at least one directory comprises an instruction to delete at least one identification of at least one type of content. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> where the at least one type of content is selected from the group consisting of text data, video data, audio data, a uniform resource identifier, a uniform resource name, and a uniform resource locator. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the operation of transmitting a packet from the server further comprises the operation of transmitting a packet from the server to a network. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein the network is selected from the group consisting of the Internet, a wide-area network, a local area network, an intranet, a cable TV distribution medium, a broadcast medium, and a satellite broadcast medium.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>11A</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005151A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005151A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005151A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005151A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005151A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005151A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005151A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005151A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005151A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030005151A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030005151A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030005151A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030005151A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030005151A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030005151A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030005151A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030005151A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
