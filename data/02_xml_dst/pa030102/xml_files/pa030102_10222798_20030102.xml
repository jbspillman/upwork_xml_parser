<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002355A1-20030102-D00000.TIF SYSTEM "US20030002355A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002355A1-20030102-D00001.TIF SYSTEM "US20030002355A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002355A1-20030102-D00002.TIF SYSTEM "US20030002355A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002355A1-20030102-D00003.TIF SYSTEM "US20030002355A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002355A1-20030102-D00004.TIF SYSTEM "US20030002355A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002355A1-20030102-D00005.TIF SYSTEM "US20030002355A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002355A1-20030102-D00006.TIF SYSTEM "US20030002355A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002355A1-20030102-D00007.TIF SYSTEM "US20030002355A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002355A1-20030102-D00008.TIF SYSTEM "US20030002355A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002355</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10222798</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020819</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G11C007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>365</class>
<subclass>191000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method of synchronizing read timing in a high speed memory system</title-of-invention>
</technical-information>
<continuity-data>
<division-of>
<parent-child>
<child>
<document-id>
<doc-number>10222798</doc-number>
<kind-code>A1</kind-code>
<document-date>20020819</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09790538</doc-number>
<document-date>20010223</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6445624</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</division-of>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Jeffery</given-name>
<middle-name>W.</middle-name>
<family-name>Janzen</family-name>
</name>
<residence>
<residence-us>
<city>Meridian</city>
<state>ID</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Troy</given-name>
<middle-name>A.</middle-name>
<family-name>Manning</family-name>
</name>
<residence>
<residence-us>
<city>Meridian</city>
<state>ID</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Chris</given-name>
<middle-name>G.</middle-name>
<family-name>Martin</family-name>
</name>
<residence>
<residence-us>
<city>Boise</city>
<state>ID</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Brent</given-name>
<family-name>Keeth</family-name>
</name>
<residence>
<residence-us>
<city>Boise</city>
<state>ID</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>DICKSTEIN SHAPIRO MORIN &amp; OSHINSKY LLP</name-1>
<name-2></name-2>
<address>
<address-1>2101 L STREET NW</address-1>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20037-1526</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The read latency of a plurality of memory devices in a high speed synchronous memory subsystem is equalized through the use of at least one flag signal. The flag signal has equivalent signal propagation characteristics read clock signal, thereby automatically compensating for the effect of signal propagation. After detecting the flag signal, a memory device will begin outputting data associated with a previously received read command in a predetermined number of clock cycles. For each of the flag signal, the memory controller, at system initialization, determines the required delay between issuing a read command and issuing the flag signal to equalize the system read latencies. The delay(s) are then applied to read transactions during regular operation of the memory system. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates generally to high speed synchronous memory systems, and more particularly to controlling the read latency of memory devices so that read data from any memory device arrives at the memory controller at the same time. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> An exemplary computer system is illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The computer system includes a processor <highlight><bold>500</bold></highlight>, a memory subsystem <highlight><bold>100</bold></highlight><highlight><italic>p</italic></highlight>, and an expansion bus controller <highlight><bold>510</bold></highlight>. The memory subsystem <highlight><bold>100</bold></highlight><highlight><italic>p </italic></highlight>and the expansion bus controller <highlight><bold>510</bold></highlight> are coupled to the processor <highlight><bold>500</bold></highlight> via a local bus <highlight><bold>520</bold></highlight>. The expansion bus controller <highlight><bold>510</bold></highlight> is also coupled to at least one expansion bus <highlight><bold>530</bold></highlight>, to which various peripheral devices <highlight><bold>540</bold></highlight>-<highlight><bold>542</bold></highlight> such as mass storage devices, keyboard, mouse, graphic adapters, and multimedia adapters may be attached. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The memory subsystem <highlight><bold>100</bold></highlight><highlight><italic>p </italic></highlight>includes a memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>and a plurality of memory modules <highlight><bold>301</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>302</bold></highlight><highlight><italic>p </italic></highlight>which each include a plurality of memory devices, for example, DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight><highlight><italic>p </italic></highlight>and DRAM-<highlight><bold>2</bold></highlight> <highlight><bold>102</bold></highlight><highlight><italic>p </italic></highlight>for memory module <highlight><bold>301</bold></highlight><highlight><italic>p </italic></highlight>and DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight><highlight><italic>p </italic></highlight>and DRAM-<highlight><bold>4</bold></highlight> <highlight><bold>104</bold></highlight><highlight><italic>p </italic></highlight>for memory module <highlight><bold>302</bold></highlight><highlight><italic>p</italic></highlight>. Each memory device <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p </italic></highlight>is a high speed synchronous memory device. Although only two memory modules <highlight><superscript>301</superscript></highlight><highlight><italic>p</italic></highlight>, <highlight><bold>302</bold></highlight><highlight><italic>p </italic></highlight>and associated signal lines <highlight><bold>401</bold></highlight><highlight><italic>ap</italic></highlight>, <highlight><bold>40</bold></highlight>l<highlight><italic>bp</italic></highlight>, <highlight><bold>402</bold></highlight><highlight><italic>ap</italic></highlight>, <highlight><bold>402</bold></highlight><highlight><italic>bp</italic></highlight>, <highlight><bold>403</bold></highlight><highlight><italic>p</italic></highlight>, <highlight><bold>406</bold></highlight><highlight><italic>p</italic></highlight>, <highlight><bold>407</bold></highlight><highlight><italic>p </italic></highlight>are shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, it should be noted that any number of memory modules can be used. Similarly, although each memory module is illustrated as having only two memory devices <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>102</bold></highlight><highlight><italic>p</italic></highlight>, <highlight><bold>103</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p</italic></highlight>, the memory modules <highlight><bold>301</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>302</bold></highlight><highlight><italic>p </italic></highlight>may have more or less memory devices <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p</italic></highlight>, though a typical configuration may have eight or nine memory devices on each memory module. Signal lines <highlight><bold>401</bold></highlight><highlight><italic>ap</italic></highlight>, <highlight><bold>401</bold></highlight><highlight><italic>bp</italic></highlight>, <highlight><bold>402</bold></highlight><highlight><italic>ap</italic></highlight>, <highlight><bold>402</bold></highlight><highlight><italic>bp</italic></highlight>, and <highlight><bold>403</bold></highlight><highlight><italic>p</italic></highlight>, are known as the data bus <highlight><bold>150</bold></highlight><highlight><italic>p</italic></highlight>, while signal lines <highlight><bold>406</bold></highlight><highlight><italic>p </italic></highlight>and <highlight><bold>407</bold></highlight><highlight><italic>p </italic></highlight>are known as the command/address bus <highlight><bold>151</bold></highlight><highlight><italic>p. </italic></highlight></paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The data bus <highlight><bold>150</bold></highlight><highlight><italic>p </italic></highlight>includes a plurality of data signal lines <highlight><bold>401</bold></highlight><highlight><italic>ap</italic></highlight>, <highlight><bold>401</bold></highlight><highlight><italic>bp </italic></highlight>which is used to exchange data DATA between the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>and the memory devices <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p</italic></highlight>. Read data is output from the memory modules <highlight><bold>301</bold></highlight><highlight><italic>p</italic></highlight>, <highlight><bold>302</bold></highlight><highlight><italic>p </italic></highlight>and serially synchronized to a free running read clock signal RCLK on the read clock signal line <highlight><bold>402</bold></highlight><highlight><italic>ap</italic></highlight>, <highlight><bold>402</bold></highlight><highlight><italic>bp</italic></highlight>.; The read clock signal RCLK is generated by the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>and first driven to the farthest memory module <highlight><bold>302</bold></highlight><highlight><italic>p </italic></highlight>from the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>before being driven through the remaining memory module(s) <highlight><bold>301</bold></highlight><highlight><italic>p </italic></highlight>to return to the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p</italic></highlight>. Write data is output from the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>and serially synchronized to a free running write clock signal WCLK on the write clock signal line <highlight><bold>403</bold></highlight><highlight><italic>p</italic></highlight>. The write clock is generated by the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>and driven first to the closest memory module <highlight><bold>301</bold></highlight><highlight><italic>p </italic></highlight>before being driven through the remaining memory module(s) <highlight><bold>302</bold></highlight><highlight><italic>p</italic></highlight>. A plurality of command signal lines <highlight><bold>406</bold></highlight> is used by the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>to send commands CMD to the memory modules <highlight><bold>301</bold></highlight><highlight><italic>p</italic></highlight>, <highlight><bold>302</bold></highlight><highlight><italic>p</italic></highlight>. Similarly, a plurality of address signal lines <highlight><bold>407</bold></highlight><highlight><italic>p </italic></highlight>are used by the memory controller to send addresses ADDR to the memory modules <highlight><bold>301</bold></highlight><highlight><italic>p</italic></highlight>, <highlight><bold>302</bold></highlight><highlight><italic>p</italic></highlight>. The data bus <highlight><bold>150</bold></highlight><highlight><italic>p </italic></highlight>or the command/address bus <highlight><bold>151</bold></highlight><highlight><italic>p </italic></highlight>may have additional signal lines which are well known in the art, for example chip select lines, which are not illustrated for simplicity. The commands CMD and addresses ADDR may also be buffered by an register (not shown) on the memory modules <highlight><bold>301</bold></highlight><highlight><italic>p</italic></highlight>, <highlight><bold>302</bold></highlight><highlight><italic>p </italic></highlight>before being distributed to the memory devices <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p </italic></highlight>of a respective module. Each of the plurality of write clock signal lines <highlight><bold>404</bold></highlight><highlight><italic>p</italic></highlight>, the plurality of data signal lines <highlight><bold>401</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>401</bold></highlight><highlight><italic>b</italic></highlight>, the plurality of command signal lines <highlight><bold>406</bold></highlight>, and the plurality of address signal lines <highlight><bold>407</bold></highlight> is terminated by a terminator <highlight><bold>450</bold></highlight>, which may be a resistor. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> When a memory device <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p </italic></highlight>accepts a read command, data associated with that read command is not output on the data bus <highlight><bold>150</bold></highlight><highlight><italic>p </italic></highlight>until a certain amount of time has elapsed. This time is known as device read latency. Each memory device <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p </italic></highlight>has an associated minimum device read latency but can also be operated at a plurality of greater read latencies. The amount of time which elapses between the time the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>issues a read command and the time read data arrives at the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>is known as system read latency. System read latency is equal to the sum of a memory device&apos;s <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p </italic></highlight>device read latency and the signal propagation time between the memory device <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p </italic></highlight>and the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p</italic></highlight>. Since memory module <highlight><bold>301</bold></highlight><highlight><italic>p </italic></highlight>is closert the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>than memory module <highlight><bold>302</bold></highlight><highlight><italic>p</italic></highlight>, the memory devices <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>, <highlight><bold>102</bold></highlight><highlight><italic>p </italic></highlight>located on memory module <highlight><bold>301</bold></highlight><highlight><italic>p </italic></highlight>have shorter signal propagation times than the memory devices <highlight><bold>103</bold></highlight><highlight><italic>p</italic></highlight>, <highlight><bold>104</bold></highlight><highlight><italic>p </italic></highlight>located on memory module <highlight><bold>302</bold></highlight><highlight><italic>p</italic></highlight>. At high clock frequencies (e.g., 300 MHz to at least 533 MHz), this difference in signal propagation time may become significant. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Due to differences in each memory device&apos;s <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p </italic></highlight>minimum read latency as well as the differences in signal propagation time of the read clock RCLK along the read clock signal lines <highlight><bold>402</bold></highlight><highlight><italic>ap</italic></highlight>, <highlight><bold>402</bold></highlight><highlight><italic>bp </italic></highlight>(e.g., data output from DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight><highlight><italic>p </italic></highlight>takes longer to reach the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>than data output from DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight><highlight><italic>p </italic></highlight>because DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight> is located farther away from the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>than DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>), the memory devices coupled to the same read clock signal line (e.g., DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight><highlight><italic>p </italic></highlight>and DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight><highlight><italic>p</italic></highlight>) may have differing system read latencies. Forcing the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>to process read transactions with a different system read latency for each memory device <highlight><bold>101</bold></highlight><highlight><italic>p</italic></highlight>-<highlight><bold>104</bold></highlight><highlight><italic>p </italic></highlight>would make the memory controller <highlight><bold>400</bold></highlight><highlight><italic>p </italic></highlight>needlessly complex. Accordingly, there is a need for an apparatus and method to equalize the system read latency of the memory devices in order to reduce the complexity of the memory controller. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The present invention is directed at a method and apparatus for equalizing the system read latency of memory devices in a high speed memory subsystem. The present invention is directed at the use of a plurality of flag signals which controls the device read latency of each memory device. The flag signals are routed so that they have equivalent signal propagation times as the read clock signal. A memory device according to the present invention will begin to output data associated with a previously accepted read command at a predetermined number of read clock cycles after it receives the flag signal. Thus, the timing of the flag signal determines the device read latency of the memory device. A memory controller according to the present invention will perform a calibration routine during initialization. The calibration routine is used to determine the minimum timing offset required between the read command and the flag signal which will permit each memory device coupled to the same read clock signal line to reliably output read data, i.e., meet each device&apos;s minimum device read latency. Alternatively, the minimum timing offset may be predetermined and stored on a memory (e.g., a serial presence detect or SPD EEPROM), thereby permitting the controller to set a timing offset without having to perform a calibration. The timing offset is used during normal operation to control when each memory device outputs read data. Since the flag signal has an equivalent signal propagation timing as the read clock path due to a similar path length and signal propagation characteristics, the signal propagation time of the flag signal automatically compensates for the difference in signal propagation times between the memory devices, thereby ensuring that the memory controller sees the same system read latency for each memory device coupled to the flag signal. In an alternate embodiment, the flag signals are local to each memory module and generated by a flag generation logic also located on the memory module. Under this system the flag signals are associated with the memory module and serve to equalize the latency of the memory devices of each memory module. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The forgoing and other advantages and features of the invention will be more clearly understood from the following detailed description of the invention which is provided in connection with the accompanying drawings. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram illustrating a computer system with a high speed memory subsystem; </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of a high speed memory system according to a first embodiment of the present invention; </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram illustrating a memory device of the high speed memory system shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>; </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flow chart illustrating how a memory device responds to a flag signal; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram illustrating a high speed memory system according to a second embodiment of the present invention; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a block diagram illustrating a high speed memory system according to a third embodiment of the present invention; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram illustrating a high speed memory system according to the fifth embodiment of the present invention; and </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a block diagram illustrating a high speed memory system according to the sixth embodiment of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Now referring to the drawings, where like reference numerals designate like elements, there is shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> an illustration of an exemplary memory subsystem <highlight><bold>100</bold></highlight> according to the first embodiment of the present invention. The memory subsystem <highlight><bold>100</bold></highlight> includes a memory controller <highlight><bold>400</bold></highlight> which transmits a plurality of signals over the data bus <highlight><bold>150</bold></highlight> and a command/address bus <highlight><bold>151</bold></highlight>. The data bus <highlight><bold>150</bold></highlight> includes a plurality of flag signals FL<highlight><bold>1</bold></highlight>, FL<highlight><bold>2</bold></highlight> which are transmitted using a corresponding plurality of flag signal lines <highlight><bold>404</bold></highlight>,<highlight><bold>405</bold></highlight>. Each flag signal line is associated with a corresponding read clock signal line and the memory devices coupled to that read clock signal line. For example, flag signal FL<highlight><bold>1</bold></highlight> is transmitted on flag-signal line <highlight><bold>404</bold></highlight> and is associated with the read clock RCLK transmitted on read clock signal line <highlight><bold>402</bold></highlight><highlight><italic>ap </italic></highlight>and memory devices DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight><highlight><italic>p </italic></highlight>and DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight><highlight><italic>p</italic></highlight>. Each memory module <highlight><bold>301</bold></highlight>, <highlight><bold>302</bold></highlight> is coupled to the memory controller <highlight><bold>400</bold></highlight> through the data bus <highlight><bold>150</bold></highlight>, including the plurality of flag signal lines <highlight><bold>404</bold></highlight>, <highlight><bold>405</bold></highlight>. It should be noted that although <cross-reference target="DRAWINGS">FIG. 2</cross-reference> (as well as FIGS. <highlight><bold>5</bold></highlight>-<highlight><bold>8</bold></highlight> which are directed to alternate embodiments) illustrates a specific routing scheme for the command signal lines <highlight><bold>406</bold></highlight> and address signal lines <highlight><bold>407</bold></highlight>, the principles of the present invention are also applicable to alternate routing arrangements. For example, the command signal lines <highlight><bold>406</bold></highlight> and address signal lines <highlight><bold>407</bold></highlight> may be routed in parallel to each of the memory devices <highlight><bold>101</bold></highlight>-<highlight><bold>104</bold></highlight>, and/or be buffered by a register (not shown). </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a more detailed diagram of one of the memory modules <highlight><bold>101</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. In the exemplary embodiment, the memory devices <highlight><bold>101</bold></highlight>-<highlight><bold>104</bold></highlight> are Advance DRAM Technology (ADT) devices. However, the principles of the present invention may be incorporated into any type of synchronous memory device. An ADT memory device <highlight><bold>101</bold></highlight> includes a control circuit <highlight><bold>2000</bold></highlight> (including address decoders) coupled to the read clock signal line <highlight><bold>402</bold></highlight><highlight><italic>a</italic></highlight>, the write clock signal line <highlight><bold>403</bold></highlight>, the flag signal line <highlight><bold>404</bold></highlight>, the plurality of command signal lines <highlight><bold>406</bold></highlight>, and the plurality of address signal lines <highlight><bold>407</bold></highlight>. The control circuit <highlight><bold>2000</bold></highlight> may be coupled to additional conventional signal lines which are not illustrated in order to simplify the figure. The ADTmemory device <highlight><bold>101</bold></highlight> also includes a write data path <highlight><bold>2002</bold></highlight> and a read data path <highlight><bold>2004</bold></highlight>, both of which are coupled to the data signal line <highlight><bold>401</bold></highlight><highlight><italic>a </italic></highlight>and a plurality of memory arrays <highlight><bold>2001</bold></highlight> (via I/O Gating circuit <highlight><bold>2006</bold></highlight>.) The read data path <highlight><bold>2004</bold></highlight>, which is also coupled to the read clock signal line <highlight><bold>402</bold></highlight><highlight><italic>a</italic></highlight>, includes a serializer <highlight><bold>2005</bold></highlight>, which converts the parallel data read from the plurality of memory arrays <highlight><bold>2001</bold></highlight> into the serial data output on the data signal line <highlight><bold>401</bold></highlight><highlight><italic>a </italic></highlight>in synchronism with the read clock signal RCLK. Similarly, the write data path <highlight><bold>2002</bold></highlight>, which is also coupled to the write clock signal line <highlight><bold>403</bold></highlight>, includes a parallelizer <highlight><bold>2003</bold></highlight> which converts serial write data from the data signal line <highlight><bold>401</bold></highlight><highlight><italic>a </italic></highlight>into parallel data. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The memory device <highlight><bold>101</bold></highlight> uses the flag signal FL<highlight><bold>1</bold></highlight> as a cue to determine when to begin the output of data associated with a previously accepted read command. The memory device thereby has its read latency determined by the timing of the flag signal FL<highlight><bold>1</bold></highlight> on the flag signal line <highlight><bold>404</bold></highlight>. More specifically, the memory device&apos;s <highlight><bold>101</bold></highlight> control circuit <highlight><bold>2000</bold></highlight> causes the read data path <highlight><bold>2003</bold></highlight> to begin outputting data associated with a previously accepted read command at a predetermined number of read clock cycles after the flag FL<highlight><bold>1</bold></highlight> has been asserted on the flag signal line <highlight><bold>404</bold></highlight>. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The process is illustrated in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, which begins at step <highlight><bold>1001</bold></highlight> when the memory device accepts a read command transmitted over the plurality of command signal lines <highlight><bold>406</bold></highlight>. In step <highlight><bold>1002</bold></highlight>, the control circuit waits until the flag signal FL<highlight><bold>1</bold></highlight> has been received. After the flag signal is received, in steps <highlight><bold>1003</bold></highlight>-<highlight><bold>1004</bold></highlight> the memory device waits a predetermined number of read cock cycles before outputting data. In the exemplary embodiment, the memory device <highlight><bold>101</bold></highlight> will begin to output read data four read clock cycles after receiving the flag signal FL<highlight><bold>1</bold></highlight>. However, a different number of elapsed read clock cycles may be used, as long as the number is the same for each memory device <highlight><bold>101</bold></highlight>-<highlight><bold>104</bold></highlight> and includes sufficient time for the memory device <highlight><bold>101</bold></highlight>-<highlight><bold>104</bold></highlight> to output the requested data. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The control timing for a memory device&apos;s <highlight><bold>101</bold></highlight>-<highlight><bold>104</bold></highlight> device read latency set via the flag signals FL<highlight><bold>1</bold></highlight>, FL<highlight><bold>2</bold></highlight> is determined in a calibration procedure performed by the memory controller at, for example, system initialization. At such time, the memory controller <highlight><bold>400</bold></highlight> determines a timing offset between when it issues a read command and when it issues a flag signal for each memory device. The timing offset will equalize the system read latencies of the memory devices (e.g., DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight> and DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight>) coupled to the same flag signal line (e.g. flag signal line <highlight><bold>404</bold></highlight>). The calibration process is performed on a flag signal line basis. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The calibration process begins when the memory controller <highlight><bold>400</bold></highlight> sends a calibrate command to the memory device (e.g., DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight>) located farthest from the memory controller <highlight><bold>400</bold></highlight> of the memory devices coupled to the flag signal line being calibrated (e.g., flag signal line <highlight><bold>404</bold></highlight>). The calibrate command is a special read command which causes the memory device <highlight><bold>103</bold></highlight> to output a reference calibration pattern. The reference calibration pattern is formatted to permit the memory controller to easily identify when data first arrives at the memory controller. In the exemplary embodiment memory device <highlight><bold>103</bold></highlight> returns 8-bits of data per read command. The memory device <highlight><bold>103</bold></highlight> drives the data serially across the data signal lines <highlight><bold>401</bold></highlight><highlight><italic>a </italic></highlight>to the memory controller <highlight><bold>400</bold></highlight>. A good calibration pattern would permit the memory controller to easily recognize when the first bit of data arrives at the memory controller. In the exemplary embodiment, the preferred reference calibration pattern is a byte in which the first bit which arrives at the memory controller is set to one state and the remaining bits are set to a different state. Thus (binary) 01111111 or (binary) 10000000 would be good calibration patterns. The choice between these two pattern may be influenced by the bus architecture. For example, in the exemplary embodiment the memory bus <highlight><bold>150</bold></highlight> is a &ldquo;pull-up&rdquo; bus which has a natural logic state of &ldquo;1&rdquo;. Thus, the pattern (binary) 01111111 would be ideal since the only time a &ldquo;0&rdquo; would appear on the bus is if it were being driven onto the bus. However, if the data bus <highlight><bold>150</bold></highlight> were constructed so that its natural logic state were a &ldquo;0&rdquo;, the preferred pattern would instead be (binary) 10000000. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> As the memory controller <highlight><bold>400</bold></highlight> issues the calibrate command, it also simultaneously asserts the flag signal FL<highlight><bold>1</bold></highlight> on the flag signal line <highlight><bold>404</bold></highlight>. When DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight> receives the flag signal, it begins to output the calibration pattern after the predetermined number of read clock cycles elapses. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The flag signal line <highlight><bold>404</bold></highlight> is routed so that a the flag signal FL<highlight><bold>1</bold></highlight> will return to the memory controller <highlight><bold>400</bold></highlight> after it has traversed each of the memory devices <highlight><bold>103</bold></highlight>, <highlight><bold>101</bold></highlight> coupled to the flag signal line <highlight><bold>404</bold></highlight> associated with the flag signal FL<highlight><bold>1</bold></highlight>. When the memory controller <highlight><bold>400</bold></highlight> receives the returning flag signal FL<highlight><bold>1</bold></highlight> it will attempt to read the calibration pattern off the data signal line <highlight><bold>401</bold></highlight><highlight><italic>a </italic></highlight>after the predetermined number of read clock cycles has elapsed. If the reference calibration pattern is detected, then the predetermined number of read clock cycles imposes a sufficient device read latency for the memory device <highlight><bold>103</bold></highlight> to operate properly. If the reference calibration pattern has not been detected, the memory controller concludes that the flag signal FL<highlight><bold>1</bold></highlight> was sent too early, resulting in an attempt to operate the memory device <highlight><bold>103</bold></highlight> at a device read latency faster than its minimum device read latency. In this case, the memory controller <highlight><bold>400</bold></highlight> therefore repeats the above described procedure with increasing number of read clock cycles between the sending of the calibrate command and the sending of the flag signal FL<highlight><bold>1</bold></highlight> until the reference calibration pattern is properly received. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The memory controller <highlight><bold>400</bold></highlight> then repeats the above procedure on each of the remaining memory devices coupled to the same flag signal line. The memory controller continues the process with the next closer memory device coupled to the flag signal line <highlight><bold>404</bold></highlight> (e.g., DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight>) until the calibration procedure has been performed on the closest memory device coupled to that same flag signal line (e.g., flag signal line <highlight><bold>404</bold></highlight>). For each iteration, the memory controller <highlight><bold>400</bold></highlight> adopts the final timing offset used in the previous iteration as the initial timing difference. After the closest memory device (e.g., DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight>) has been calibrated by this procedure, the final timing offset is adopted by the memory controller <highlight><bold>400</bold></highlight> for conducting read transactions upon the memory devices coupled to that flag signal lie (e.g., flag signal line <highlight><bold>404</bold></highlight>). This timing offset causes each memory device coupled to the same flag signal line (e.g., flag signal line <highlight><bold>404</bold></highlight> and memory devices DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight>, DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight>) to be operated at the minimum device read latency of the slowest memory device of that set of memory devices. Since the flag signal propagates with equivalent signal propagation characteristics as the read clock path due to a similar path length and signal propagation characteristics, the signal propagation delay of the flag signal automatically compensates for the difference in signal propagation times among the memory devices (e.g., DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight> and DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight>) coupled to the same flag signal line (e.g., flag signal line <highlight><bold>404</bold></highlight>). </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> For example, in the system illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the memory <highlight><bold>400</bold></highlight> controller would first calibrate DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight> because DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight> and DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight> are both coupled to the same flag signal line (i.e., <highlight><bold>404</bold></highlight>) and DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight> is the farthest memory device from the memory controller <highlight><bold>400</bold></highlight>. During the first step, the memory controller would simultaneously send the calibrate command and the flag signal FL<highlight><bold>1</bold></highlight>. The control circuit <highlight><bold>2000</bold></highlight> of the memory device <highlight><bold>103</bold></highlight> causes the memory device to output read data at a predetermined number of read clock cycles following the flag signal. In the exemplary embodiment the predetermined number is <highlight><bold>4</bold></highlight> read clock cycles. If the calibration pattern is not properly received by the memory controller <highlight><bold>400</bold></highlight> four cycles after the returning flag signal FL<highlight><bold>1</bold></highlight> is detected at the memory controller <highlight><bold>400</bold></highlight>, this means the memory device <highlight><bold>103</bold></highlight> was not ready to output read data at the specified time, i.e., the memory device&apos;s <highlight><bold>103</bold></highlight> minimum device read latency had not been satisfied. The memory controller <highlight><bold>400</bold></highlight> therefore sends another calibrate command but transmits the flag signal FL<highlight><bold>1</bold></highlight> using a modified timing equal to increasing the delay between the read command and the flag signal FL<highlight><bold>1</bold></highlight> by one read clock cycle. The process is repeated until the calibration pattern is detected at the memory controller <highlight><bold>400</bold></highlight> four clock cycles after the memory controller receives the returning flag signal FL<highlight><bold>1</bold></highlight>. This timing is equal to operating the memory device <highlight><bold>103</bold></highlight> at its minimum device read latency. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The memory controller <highlight><bold>400</bold></highlight> then proceeds to calibrate the remaining memory devices coupled to the flag signal line <highlight><bold>404</bold></highlight>. The calibration continues with the next closest memory device and is completed when the closest memory device has been calibrated. In this example, the next closest memory device is DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight>. For each remaining memory device being calibrated, the initial delay between the read command and the flag signal being is set to the final timing offset used for the previously calibrated memory device. In the example, the memory controller <highlight><bold>400</bold></highlight> continues the calibration process by calibrating DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight>. The memory controller <highlight><bold>400</bold></highlight> sends a calibrate command to DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight> and waits one read clock cycle before it sends the flag signal FL<highlight><bold>1</bold></highlight> because a one read clock timing difference was the final timing difference used for the previously calibrated memory device (i.e., DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight>). If the reference calibration pattern is not properly received by the memory controller <highlight><bold>400</bold></highlight>, the memory controller <highlight><bold>400</bold></highlight> continues to send calibrate commands to DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight> using increasing read clock cycle offsets between the read command and the flag signal FL<highlight><bold>1</bold></highlight> for each calibrate command. Suppose the memory controller <highlight><bold>400</bold></highlight> sent three calibrate commands to DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight> before the reference calibration pattern has been properly received at the memory controller. This corresponds to a timing offset of 3 read clock cycles between the calibrate command and the flag signal (since the first calibrate command adopts the timing from the previous memory module, which is equal to a 1 read clock cycle delay, the second calibrate command increases the timing by 1 read clock cycle to 2 read clock cycles, and finally the third calibrate command increases the timing by yet another read clock cycle to 3 read clock cycles). Since DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight> is the closest memory device coupled to the flag signal line <highlight><bold>404</bold></highlight> the calibration process has been completed for the memory devices coupled to this flag signal line <highlight><bold>404</bold></highlight>. In normal operation the memory controller <highlight><bold>400</bold></highlight> will assert the flag signal FL<highlight><bold>1</bold></highlight> <highlight><bold>3</bold></highlight> read clock cycles after it sends the read command, and the data returned by each memory device DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight>, DRAM-<highlight><bold>3</bold></highlight> <highlight><bold>103</bold></highlight> coupled to flag signal line <highlight><bold>404</bold></highlight> will have the same system latency. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The above described procedure is performed for each flag signal line (e.g. flag signal line <highlight><bold>405</bold></highlight>). For example, in the system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, flag signal FL<highlight><bold>2</bold></highlight> is used for memory devices DRAM-<highlight><bold>4</bold></highlight> <highlight><bold>104</bold></highlight> and DRAM-<highlight><bold>2</bold></highlight> <highlight><bold>102</bold></highlight>. Preferably, the memory controller calibrates each flag line simultaneously. The memory controller may also adopt the maximum of the final timing offsets for the flag lines as a common timing offset for use on every flag line, thereby permitting the memory controller to operate the entire memory system with the same system latency. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> One aspect of the invention is that the plurality of flag signals FL<highlight><bold>1</bold></highlight>, FL<highlight><bold>2</bold></highlight> have equivalent signal propagation times as the plurality of read clocks RCLK. Since the flag signals FL<highlight><bold>1</bold></highlight>, FL<highlight><bold>2</bold></highlight> have the equivalent propagation times as the read clock signal RCLK used to synchronize data output from the memory devices <highlight><bold>101</bold></highlight>-<highlight><bold>104</bold></highlight>, the flag signals FL<highlight><bold>1</bold></highlight>, FL<highlight><bold>2</bold></highlight> automatically compensate for the difference in signal propagation times between the memory modules <highlight><bold>301</bold></highlight>, <highlight><bold>302</bold></highlight> of the memory subsystem. In the embodiment illustrated by <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the plurality of flag signal lines <highlight><bold>404</bold></highlight>, <highlight><bold>405</bold></highlight> are routed parallel to the read clock signal lines <highlight><bold>402</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>402</bold></highlight><highlight><italic>b </italic></highlight>to ensure that the plurality of flag signal lines <highlight><bold>404</bold></highlight>, <highlight><bold>405</bold></highlight> and the read clock signal lines <highlight><bold>402</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>402</bold></highlight><highlight><italic>b </italic></highlight>have equivalent propagation times. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows a second embodiment of the memory subsystem <highlight><bold>100</bold></highlight>&prime; of the invention. The memory subsystem <highlight><bold>100</bold></highlight>&prime; routes a single outgoing read clock signal RCLK&prime; on the outgoing read clock signal line <highlight><bold>402</bold></highlight>&prime; from the memory controller <highlight><bold>400</bold></highlight> to a clock buffer <highlight><bold>401</bold></highlight>. The clock buffer <highlight><bold>401</bold></highlight> is a low delay device which generates a plurality of read clock signals RCLK on the plurality of read clock signal lines <highlight><bold>402</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>402</bold></highlight><highlight><italic>b </italic></highlight>with virtually identical phasing as the single outgoing read clock signal RCLK&prime;. The plurality of flag signals lines <highlight><bold>404</bold></highlight>,<highlight><bold>405</bold></highlight> are initially routed parallel to the single outgoing read clock signal line <highlight><bold>402</bold></highlight>&prime; from the memory controller <highlight><bold>400</bold></highlight> to an area near the clock buffer <highlight><bold>401</bold></highlight>. The plurality of flag signal lines <highlight><bold>404</bold></highlight>, <highlight><bold>405</bold></highlight> are then routed parallel to the plurality of read clock signal lines <highlight><bold>402</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>402</bold></highlight><highlight><italic>b</italic></highlight>. This arrangement maintains the equivalent propagation times between the flag signals FL<highlight><bold>1</bold></highlight>, FL<highlight><bold>2</bold></highlight> and the read clock signals RCLK&prime;, RCLK. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Now referring to <cross-reference target="DRAWINGS">FIG. 6, a</cross-reference> third embodiment of the invention is illustrated. The memory subsystem <highlight><bold>100</bold></highlight>&Prime; of the third embodiment uses a clock buffer with a flag repeater <highlight><bold>401</bold></highlight>&prime;. Thus, the outgoing read clock signal RCLK&prime; as well as the plurality of outgoing flag signals FL<highlight><bold>1</bold></highlight>&prime;, FL<highlight><bold>2</bold></highlight>&prime; are initially routed parallel to each other, from the memory controller <highlight><bold>400</bold></highlight> to the clock buffer with flag repeater <highlight><bold>401</bold></highlight>&prime;. The clock buffer with flag repeater <highlight><bold>401</bold></highlight>&prime; then retransmits these signals as the plurality of read clock signals RCLK and the plurality of flag signals FL<highlight><bold>1</bold></highlight>, FL<highlight><bold>2</bold></highlight>. The clock buffer with flag repeater preserves the equivalent signal propagation timing relationship between the read clock signals and the flag signals. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Now referring to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, there is shown a memory subsystem <highlight><bold>100</bold></highlight>&prime;&Prime; according to an embodiment of the present invention in which the flag signals FL<highlight><bold>1</bold></highlight>, FL<highlight><bold>2</bold></highlight> are generated by an internal logic <highlight><bold>410</bold></highlight> on the memory module instead of the memory controller <highlight><bold>400</bold></highlight>. The flag signal lines <highlight><bold>404</bold></highlight>, <highlight><bold>405</bold></highlight> on each memory module (e.g., memory module <highlight><bold>301</bold></highlight>) are independent from the corresponding flag signals on other memory modules (e.g., memory module <highlight><bold>302</bold></highlight>) and therefore not coupled to the flag signal lines <highlight><bold>404</bold></highlight>,<highlight><bold>405</bold></highlight> of other memory modules. The memory subsystem <highlight><bold>100</bold></highlight>&prime;&Prime; shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is typically at a smaller memory system. Since a smaller memory system would have a smaller timing skew, it is possible to use a single clock CLK&Prime; on a clock signal line <highlight><bold>402</bold></highlight>&Prime;. However, this embodiment is not restricted to small memory systems. In a larger memory system the single clock signal CLK&Prime; on the clock signal line <highlight><bold>402</bold></highlight>&Prime; can be replaced by independent read and write clocks. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The function of the internal logic <highlight><bold>410</bold></highlight> of each memory module is to generate internal flag signals FL<highlight><bold>1</bold></highlight>, FL<highlight><bold>2</bold></highlight> which can be used to equalize the device read latency of the memory devices (e.g., DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight> and DRAM-<highlight><bold>2</bold></highlight> <highlight><bold>102</bold></highlight>) within a memory module (e.g., memory module <highlight><bold>301</bold></highlight>). The calibration process is modified so that moves between the memory devices in the same memory module. For example, in memory module <highlight><bold>301</bold></highlight>, the calibration process may begin with the &ldquo;top&rdquo; memory device (e.g., DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight>) and continue until the &ldquo;bottom&rdquo; memory device (e.g., DRAM-<highlight><bold>2</bold></highlight> <highlight><bold>102</bold></highlight>) has been calibrated. This procedure therefore ensures that each memory device (e.g. DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight> and DRAM-<highlight><bold>2</bold></highlight> <highlight><bold>102</bold></highlight> ) of a memory module (e.g. memory module <highlight><bold>301</bold></highlight>) is operated with the same device read latency. Thus, after calibration, a memory controller <highlight><bold>400</bold></highlight> would be able to read any memory device from the same memory module at the same system read latency. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> If the memory system <highlight><bold>100</bold></highlight>&prime;&Prime; is to be applied to larger memory systems with increased inter-module timing skews, in addition to replacing the single clock CLK&Prime; on signal line <highlight><bold>402</bold></highlight>&prime;&Prime; with independent read and write clocks, the inter-module calibration technique of the other embodiments may also be adopted. The calibration procedure of the other embodiments are applicable to a large memory system implementation of the present embodiment. However, since there are no flag signal lines which run from the memory controller <highlight><bold>400</bold></highlight> through each memory module <highlight><bold>301</bold></highlight>, <highlight><bold>302</bold></highlight>, the memory controller merely determines whether the calibration pattern has been properly received, and if not, instructs the internal logic <highlight><bold>410</bold></highlight> of the memory module being calibrated to increase its flag signal timing offset (for each of the within module flags FL<highlight><bold>1</bold></highlight>, FL<highlight><bold>2</bold></highlight>). The memory controller <highlight><bold>400</bold></highlight> can instruct the internal logic <highlight><bold>410</bold></highlight> of a memory module (e.g., memory module <highlight><bold>302</bold></highlight>) to increase its flag timing by a variety of mechanisms, including, for example, sending special commands on the plurality of command lines <highlight><bold>406</bold></highlight>, or via dedicated signal lines (not shown). </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Now referring to <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, there is shown a memory subsystem <highlight><bold>100</bold></highlight>&Prime;&Prime; according to another embodiment of the present invention. The memory system <highlight><bold>100</bold></highlight>&Prime;&Prime; is similar to memory system <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. However, the memory modules <highlight><bold>301</bold></highlight>, <highlight><bold>302</bold></highlight> of memory system <highlight><bold>100</bold></highlight>&Prime;&Prime; each include a configuration memory <highlight><bold>105</bold></highlight>, <highlight><bold>106</bold></highlight> and at least one associated signal line <highlight><bold>410</bold></highlight>. The configuration memories <highlight><bold>105</bold></highlight>, <highlight><bold>106</bold></highlight> may be any memory which stores predetermined configuration information regarding the memory devices DRAM-<highlight><bold>1</bold></highlight> <highlight><bold>101</bold></highlight>-DRAM-<highlight><bold>4</bold></highlight> <highlight><bold>104</bold></highlight> on a memory module <highlight><bold>301</bold></highlight>, <highlight><bold>302</bold></highlight>. For example, the configuration memories <highlight><bold>105</bold></highlight>, <highlight><bold>106</bold></highlight> may be a serial presence detect or SPD EEPROMs. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The predetermined configuration data SPDDC may be read by the memory controller <highlight><bold>400</bold></highlight> using the at least one signal line <highlight><bold>410</bold></highlight>. The configuration data SPDDC includes predetermined flag timing delays for each flag signal line. The predetermined flag timing delays may be specified as a series of single values for each flag signal line (i.e., the actual delay a memory controller should use), or it may be a combination of values which, when taken together, permits the memory controller to calculate the required delay value for each flag signal line. For example, the configuration memory may store a single value representing the system latency common to all memory devices on the memory module as well as a minimum device read latency for each memory device. The memory controller sums the system latency with the appropriate minimum device read latency to calculate the suggested flag timing delay for the flag associated with that memory device. Thus, the memory controller <highlight><bold>400</bold></highlight> does not need to perform a calibration routine during system initialization. Instead, the required flag timing delays may be read or calculated from the data stored in the configuration memories <highlight><bold>105</bold></highlight>, <highlight><bold>106</bold></highlight>. If the configuration memories <highlight><bold>105</bold></highlight>, <highlight><bold>106</bold></highlight> specify different flag timing delays for the same flag signal, the memory controller <highlight><bold>400</bold></highlight> adopts the largest of those flag timing delays for that flag. This permits the memory controller to operate the memory modules <highlight><bold>301</bold></highlight>, <highlight><bold>302</bold></highlight> at a timing which accommodates the timing requirements of each memory module. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The principles of this embodiment are also applicable to the other previously described embodiments. For example memory systems <highlight><bold>100</bold></highlight>&prime;, <highlight><bold>100</bold></highlight>&Prime;, and <highlight><bold>100</bold></highlight>&prime;&Prime;, as shown in FIGS. <highlight><bold>5</bold></highlight>-<highlight><bold>7</bold></highlight>, may also be similarly modified to include configuration memories and their associated signal line(s) in order to avoid the need for calibration. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Thus, the present invention utilizes one or more flag signals which cause the memory devices to output data associated with a previously accepted read command at a predetermined number of read clock cycles following the arrival of the flag signal. During system initialization, a calibration routine is performed to derive a timing delay between the assertion of a read command and the assertion of the flag signal(s). Alternatively, the timing delay may be predetermined and stored on a configuration memory on the memory module. The timing delay is subsequently used to assert the flag signal(s) during normal operation. The flag signal is used to equalize the system read latency of memory devices. When the flag signals are generated external to the memory module (e.g., by a memory controller), they may be used to equalize the system read latency of memory devices coupled to the flag signal line. Alternatively, the flag signals may also be generated within each memory module by an on-module logic. If the on-module flag signals never leave the memory module they cannot be used to equalize the system read latency of memory devices of other memory modules. However, they may be used to equalize the system read latencies of the memory devices of the memory module. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> While certain embodiments of the invention have been described and illustrated above, the invention is not limited to these specific embodiments as numerous modifications, changes and substitutions of equivalent elements can be made without departing from the spirit and scope of the invention. Accordingly, the scope of the present invention is not to be considered as limited by the specifics of the particular structures which have been described and illustrated, but is only limited by the scope of the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed as new and desired to be protected by Letters Patent of the United States is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A memory device comprising: 
<claim-text>a memory array; </claim-text>
<claim-text>at least one data signal line coupled to said memory array; </claim-text>
<claim-text>a control circuit; </claim-text>
<claim-text>a read clock signal line coupled to said control circuit for receiving a read clock signal; </claim-text>
<claim-text>a flag signal line coupled to said control circuit for receiving a flag signal; </claim-text>
<claim-text>at least one command signal line coupled to said control circuit for receiving commands; and </claim-text>
<claim-text>wherein said control circuit causes the memory device to output data from said array associated with a previously accepted command on said at least one data signal line, beginning at a predetermined number of read clock cycles after the control circuit receives the flag signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the previously accepted command is a read command. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the previously accepted command is a calibrate command. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the data is a calibration pattern. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the calibration pattern includes at least two successive bits which have a different logic state. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein said calibration pattern has its first bit set to a binary 0 and all subsequent bits set to a binary 1. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein said calibration pattern has its first bit set to a binary 1 and all subsequent bits set to a binary 0. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said memory device is arranged with at least one other memory device the memory device and each of the at least one other memory device having their flag signal lines coupled and their command signal lines coupled, and 
<claim-text>wherein each memory device receives the flag signal over their respective flag signal lines at the same number of read clock cycles after each memory device of the rank receives a read command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said memory device is arranged with at least one other memory device on a memory module, the memory module and each of the at least one other memory device having their flag signal lines coupled to a flag generation logic located on the memory module. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A memory module comprising: 
<claim-text>a plurality of memory devices, wherein each of said memory devices further comprises, </claim-text>
<claim-text>a memory array; </claim-text>
<claim-text>at least one data signal line coupled to said memory array; </claim-text>
<claim-text>a control circuit; </claim-text>
<claim-text>a read clock signal line coupled to said control circuit for receiving a read clock signal; </claim-text>
<claim-text>a flag signal line coupled to said control circuit for receiving a flag signal; </claim-text>
<claim-text>at least one command signal line coupled to said control circuit for receiving a read command; and </claim-text>
<claim-text>wherein said control circuit causes the memory device to output data from said array associated with a previously accepted command on said at least one data signal line, beginning at a predetermined number of read clock cycles after the control circuit receives the flag signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the previously accepted command is a read command. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the previously accepted command is a calibrate command. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the data is output is a calibration pattern. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the calibration pattern includes at least two successive bits which have a different logic state. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein said calibration pattern has its first bit set to a binary 0 and all subsequent bits set to a binary 1. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein said calibration pattern has its first bit set to a binary 1 and all subsequent bits set to a binary 0. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, further comprising: 
<claim-text>a flag generation logic coupled to each of said plurality of memory devices by their respective flag signal lines. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein said flag generation logic sends the flag signal to each of the plurality of memory devices at the same number of read clock cycles after a read command is sent to each of the plurality of memory devices. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein each of the plurality of memory devices outputs read data at the same predetermined number of read clock cycles after receiving the flag signal. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said memory module is coupled with at least one other memory module so that each of the plurality of memory devices on the memory module has its flag signal line coupled with the flag signal lines of each corresponding memory device from the at least one other memory module. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A computer system comprising: 
<claim-text>a processor; </claim-text>
<claim-text>a memory controller coupled to the processor; </claim-text>
<claim-text>at least one memory module coupled to the memory controller, each of said at least one memory module having a plurality of memory devices organized into at least one set </claim-text>
<claim-text>wherein each of said plurality of memory devices comprises, 
<claim-text>a read clock signal line for receiving a read clock signal, said read clock signal line being coupled to read clock signal lines of corresponding memory devices in the other memory modules of the at least one memory module; </claim-text>
<claim-text>at least one command signal line for receiving commands; and </claim-text>
<claim-text>a flag signal line for receiving a flag signal, said flag signal line being coupled to flag signal lines of other corresponding memory devices in the other memory modules of the at least one memory module, </claim-text>
<claim-text>wherein the flag signal causes the memory device to output data corresponding to a previously accepted command received on the command signal line, beginning at a predetermined number of read clock cycles after receipt of the flag signal. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the previously accepted command is a read command. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the previously accepted command is a calibrate command. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the data is output is a calibration pattern. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein the calibration pattern includes at least two successive bits which have a different logic state. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said calibration pattern has its first bit set to a binary 0 and all subsequent bits set to a binary 1. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein said calibration pattern has its first bit set to a binary 1 and all subsequent bits set to a binary 0. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, further comprising: 
<claim-text>a clock buffer coupled to said memory controller by a master read clock signal line and to each of the at least one memory module by the read clock signal lines of the at least one memory module, </claim-text>
<claim-text>wherein said clock buffer retransmits a master read clock signal received on the master read clock signal line on each rank&apos;s read clock signal line with minimal delay. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, further comprising: 
<claim-text>a clock buffer coupled to said memory controller by a master read clock signal line and a plurality of master flag signal lines, said clock buffer also coupled to each of the at least one memory module by the read clock signal lines and the flag signal lines of the at least one memory module, </claim-text>
<claim-text>wherein said clock buffer retransmits a master read clock signal received on the master read clock signal line on each read clock signal line, and also retransmits the plurality of master flag signals received on the plurality of flag signal lines on each flag signal line, wherein </claim-text>
<claim-text>said clock buffer retransmits the master read clock signal and the master flag signals with the same delay. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A computer system comprising: 
<claim-text>a processor; </claim-text>
<claim-text>a memory controller coupled to the processor; </claim-text>
<claim-text>at least one memory module coupled to the memory controller, each of said at least one memory module having at least one set of memory devices, each of said at least one set of memory devices further comprising: 
<claim-text>a flag generation logic, and </claim-text>
<claim-text>a plurality of memory devices, wherein each of said memory devices comprises, 
<claim-text>a read clock signal line for receiving a read clock signal, said read clock signal line being coupled to read clock signal lines of other corresponding memory devices on others of the at least one memory module; </claim-text>
<claim-text>at least one command signal line for receiving commands; </claim-text>
<claim-text>at least one data signal line coupled to said memory array; and </claim-text>
<claim-text>a flag signal line coupled to said flag generation logic for receiving a flag signal, </claim-text>
<claim-text>wherein the flag signal causes the memory device to output data on said data signal line corresponding to a previously accepted command received on the command signal line, beginning at a predetermined number of read clock cycles after receipt of the flag signal. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the flag generation logic transmits the flag signal to each coupled memory devices using the same number of read clock cycles subsequent to the coupled memory devices receiving a read command. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. A method of operating a memory device coupled to a memory controller, a read clock signal source, and a flag signal source, comprising: 
<claim-text>receiving a command from the memory controller; </claim-text>
<claim-text>receiving a flag signal from the flag signal source; </claim-text>
<claim-text>receiving a read clock signal from the read clock signal source; </claim-text>
<claim-text>outputting a data associated with the command synchronized with the read clock signal and beginning at a predetermined number of read clock cycles after receiving the flag signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference>, wherein the command is a read command. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference>, wherein the command is a calibrate command. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein the data is a calibration pattern. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference>, wherein the calibration pattern includes at least two successive bits which have a different logic state. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, wherein said calibration pattern has its first bit set to a binary 0 and all subsequent bits set to a binary 1. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, wherein said calibration pattern has its first bit set to a binary 1 and all subsequent bits set to a binary 0. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference>, wherein said read clock source is the memory controller and said flag signal source is the memory controller. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference>, wherein said memory device is located on a memory module and said flag signal source is a flag generation logic located on said memory module. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. In a memory system having a memory controller coupled to a plurality of memory devices, the memory devices having a common flag signal line and a common read clock signal line, both also coupled to the memory controller, a method for equalizing the system read latency for the memory devices comprising: 
<claim-text>sending, by the memory controller, a read command to a target memory device selected from one of the plurality of memory devices; </claim-text>
<claim-text>sending, by the memory controller, a flag signal on the common flag signal line to the target memory device at a number of read clock cycles after the read command had been sent; </claim-text>
<claim-text>outputting data associated with the read command by the target memory device, beginning at a predetermined number of read clock cycles after the target memory device having received the flag signal; </claim-text>
<claim-text>wherein the number is the same regardless of which memory device had been selected as the target memory device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. In a memory system having a memory controller and at least one memory module, each of said memory modules having a plurality of memory devices coupled to a flag generation logic and a clock, a method for equalizing the read latency of the plurality of memory devices on each memory module comprising: 
<claim-text>sending a read command to a target memory device selected from the plurality of memory devices located on a target memory module selected from the at least one memory module; </claim-text>
<claim-text>sending a flag signal after a number of clock cycle to said target memory device; </claim-text>
<claim-text>outputting, by the target memory device, data associated with the read command, beginning at a predetermined number of clock cycles after the target memory device having received the flag signal; </claim-text>
<claim-text>wherein the number is the same regardless of which memory device of the target memory module had been selected as the target memory device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. A method of calibrating a memory system, having at least one memory device, each of said at least one memory device being coupled to a memory controller, a flag source, and a read clock source via at least one read clock line, at least one command line, at least one flag line, and at least one data line, the method comprising the steps of: 
<claim-text>(a) setting a timing offset to zero read clock cycles; </claim-text>
<claim-text>(b) sending a calibrate command over the at least one command line from the memory controller to a selected memory device from the at least one memory device; </claim-text>
<claim-text>(c) sending a flag signal from the memory controller on the at least one flag line, said flag signal being sent after a delay equal to the timing offset in read clock cycles relative to when the calibrate command was sent; </claim-text>
<claim-text>(d) receiving the flag signal at the selected memory device and outputting a reference calibration pattern after a predetermined number of read clock cycles has elapsed relative to when the flag signal was received at the selected memory device; </claim-text>
<claim-text>(e) receiving the flag signal on the flag line at the memory controller and reading a data from the data line beginning after the predetermined number of read clock cycles elapses from the time the flag signal was received at the memory controller; </claim-text>
<claim-text>(f) concluding the timing offset is sufficient if the data corresponds to the reference calibration pattern; </claim-text>
<claim-text>(g) concluding the timing offset is insufficient if the data does not correspond to the reference calibration pattern; </claim-text>
<claim-text>(h) increasing the timing offset by one read clock cycle and repeating steps (b), (c), (d), (e), (f), and (g) if the timing offset is insufficient. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 43</dependent-claim-reference>, wherein the selected memory device is one which is located farthest from the memory controller. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 44</dependent-claim-reference>, wherein the memory system has a plurality of memory devices ordered from a farthest to a closest memory device, to the memory controller, further comprising the steps of: 
<claim-text>(i) repeating steps (b), (c), (d), (e), (f), (g), and (h) for each remaining memory device, in order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. A method of controlling read latency for a plurality of memory devices, said method comprising: 
<claim-text>providing a read clock signal in sequence to said plurality of memory devices; </claim-text>
<claim-text>issuing a read command to one of said memory devices; </claim-text>
<claim-text>issuing a flag signal to said one memory device a first predetermined number of read clock periods after said read command is issued; and </claim-text>
<claim-text>outputting by said memory device, data associated with the read command at a second predetermined number of read clock periods after the flag signal has been received at the memory device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, wherein said first predetermined number of read clock periods plus said second predetermined number of read clock periods is greater than or equal to a maximum of minimum device read latencies corresponding to the plurality of memory devices. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, wherein said second predetermined number of read clock cycles periods is four. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, further comprising: 
<claim-text>a configuration memory, said configuration memory storing a suggested delay an external memory controller should wait between asserting a read command and a flag signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The memory module of <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the suggested delay is comprised of a device minimum read latency delay and a system latency. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein each of the at least one memory modules further comprises a configuration memory, said configuration memory storing a suggested delay the memory controller should wait between asserting a read command and a flag signal. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00055">claim 51</dependent-claim-reference>, wherein the suggested delay is comprised of a device minimum read latency delay and a system latency. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein each of the at least one memory module further comprises a configuration memory, said configuration memory storing a suggested delay to be used by the flag generation logic for determining when to generate the plurality of flag signals. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference> wherein the number corresponds to a suggested delay value stored in a configuration memory associated with at least one of said plurality of memory devices. </claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 54</dependent-claim-reference>, wherein the suggested delay is comprised of a device minimum read latency delay and a system latency delay. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 42</dependent-claim-reference>, wherein the number corresponds to the maximum of the suggested delay values stored in a configuration memory of each memory module. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 56</dependent-claim-reference>, wherein each of the suggested delay values is comprised of a minimum read latency delay and a system latency delay.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002355A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002355A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002355A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002355A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002355A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002355A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002355A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002355A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002355A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
