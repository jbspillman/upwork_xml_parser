<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004875A1-20030102-D00000.TIF SYSTEM "US20030004875A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004875A1-20030102-D00001.TIF SYSTEM "US20030004875A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004875A1-20030102-D00002.TIF SYSTEM "US20030004875A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004875A1-20030102-D00003.TIF SYSTEM "US20030004875A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004875A1-20030102-D00004.TIF SYSTEM "US20030004875A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004875A1-20030102-D00005.TIF SYSTEM "US20030004875A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004875A1-20030102-D00006.TIF SYSTEM "US20030004875A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004875A1-20030102-D00007.TIF SYSTEM "US20030004875A1-20030102-D00007.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004875</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10223552</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020819</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F017/60</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>705</class>
<subclass>040000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Apparatus for encouraging timely periodic payments associated with a computer system</title-of-invention>
</technical-information>
<continuity-data>
<division-of>
<parent-child>
<child>
<document-id>
<doc-number>10223552</doc-number>
<kind-code>A1</kind-code>
<document-date>20020819</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09433168</doc-number>
<document-date>19991103</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</division-of>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Gerald</given-name>
<middle-name>Arthur</middle-name>
<family-name>Kramer</family-name>
</name>
<residence>
<residence-us>
<city>Carmel</city>
<state>IN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Eric</given-name>
<middle-name>Scott</middle-name>
<family-name>Whitlow</family-name>
</name>
<residence>
<residence-us>
<city>Greenfield</city>
<state>IN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>D. Michael Corporation</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Intellectual Property Group</name-1>
<name-2>Bose McKinney &amp; Evans LLP</name-2>
<address>
<address-1>2700 First Indiana Plaza</address-1>
<address-2>135 North Pennsylvania Street</address-2>
<city>Indianapolis</city>
<state>IN</state>
<postalcode>46204</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method of encouraging timely period payments that are associated with a computer system includes the step of storing passwords in the computer system wherein each password is associated with a separate payment period. Another step of the method includes determining based upon the passwords stored in the computer system whether a supplied password corresponds to a current payment period. The method also includes enabling use of the computer system based upon determining that the supplied password corresponds to the current payment period. The method may further include the step of disabling use of the computer system based upon determining that the supplied password does not correspond to the current payment period. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to payment monitoring systems, and more particularly to encouraging timely periodic payments by automatically disabling a computer system if an periodic payment is not timely received. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Computer systems are often purchased on time or leased over an extended period. Alternatively, computer systems are often packaged free or at a minimal cost with other products such as software licenses or with other services such as Internet services. Whether organizations collect payments for the computer system itself or for products/service packaged with the computer system, consumers often procure computer systems with little or no money down. In such cases, the organizations providing the consumers with the computer systems depend greatly upon receiving timely periodic payments from their costumers on a periodic basis in order to remain profitable. Due to their dependence on timely periodic payments, these organizations appreciate cost effective mechanisms which increase the likelihood of receiving timely periodic payments from their customers. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Accordingly, a need exists for a cost effective mechanism which increases the likelihood of receiving in a timely manner periodic payments associated with a computer system. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF INVENTION </heading>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The present invention addresses the above-identified need, as well as others, with a method and apparatus of automatically disabling a computer system in the event of untimely or none payment of a periodic fee. In accordance with one embodiment of the present invention, there is provided a method of encouraging timely periodic payments associated with a computer system. The method includes the step of storing passwords in the computer system wherein each password is associated with a separate payment period. Another step of the method includes determining based upon the passwords stored in the computer system whether a supplied password corresponds to a current payment period. The method also includes enabling use of the computer system based upon determining that the supplied password corresponds to the current payment period. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Pursuant to another embodiment of the present invention, there is provided a computer system that encourages timely periodic payments. The computer system includes a non-volatile storage medium, a system clock, a processor, and memory. The non-volatile storage medium includes passwords in which each password is associated with a separate payment period, and the system clock is operable to provide a system time. The processor is operably coupled to the non-volatile storage medium, the system clock, and the memory. The memory includes instructions, which when executed by the processor cause the processor to determine based upon the system time and the plurality of passwords whether a supplied password corresponds to a current payment period. The instructions of the memory when executed by the processor further cause the processor to enable execution of user processes based upon determining that the supplied password corresponds to the current payment period. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Pursuant to a further embodiment of the present invention, there is provided a computer readable medium for encouraging timing periodic payments associated with a computer system. The computer readable medium includes instructions which when executed by the computer system cause the computer system to determine based a group of passwords associated with a group of payment periods whether a supplied password corresponds to a current payment period. The instructions when executed by the computer system further cause the computer system to enable use of the computer system based upon determining that the supplied password corresponds to the current payment period. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> It is an object of the present invention to provide an improved method and apparatus for encouraging timely periodic payments that are associated with a computer system. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> It is also an object of the present invention to provide a new and useful for encouraging timely periodic payments that are associated with a computer system. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is another object of the present invention to provide a method and apparatus which disable use of a computer system in order to encourage timely periodic payments. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> It is yet another object of the present invention to provide a method and apparatus which encourages timely periodic payments without being overly intrusive if timely periodic payments are made. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> It is a further object of the present invention to provide a method and apparatus for cost effectively encouraging timely periodic payments associated with a computer system. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The above and other objects, features, and advantages of the present invention will become apparent from the following description and the attached drawings. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a simplified block diagram of computer system which incorporates various features of the present invention therein; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a flowchart of an installation method used to install a payment assurance application upon the computer system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a flowchart of a login service of the payment assurance application installed on the computer system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows a flowchart of a setup method of the payment assurance application used to configure the payment assurance application installed on the computer system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> FIGS. <highlight><bold>5</bold></highlight>A-<highlight><bold>5</bold></highlight>B shows a flowchart of a monitoring method of the payment assurance application used to monitor activities performed on the computer system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; and </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a flowchart of a removal method of the payment assurance application used to remove the payment assurance application from the computer system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF AN EXEMPLARY EMBODIMENT </heading>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> While the invention is susceptible to various modifications and alternative forms, exemplary embodiments thereof have been shown by way of example in the drawings and will herein be described in detail. It should be understood, however, that there is no intent to limit the invention to the particular forms disclosed, but on the contrary, the intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the invention as defined by the appended claims. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, an exemplary computer system <highlight><bold>100</bold></highlight> is shown which incorporates various features of the present invention. The exemplary computer system <highlight><bold>100</bold></highlight> is generally operable to prevent use of the computer system <highlight><bold>100</bold></highlight> in response to non-payment or a non-timely payment of a periodic fee. To this end, the computer system <highlight><bold>100</bold></highlight> includes a processor <highlight><bold>102</bold></highlight>, memory <highlight><bold>104</bold></highlight>, a system bus <highlight><bold>106</bold></highlight>, controllers <highlight><bold>108</bold></highlight>, <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight>, and <highlight><bold>114</bold></highlight>, devices <highlight><bold>118</bold></highlight>, <highlight><bold>120</bold></highlight>, and <highlight><bold>122</bold></highlight>, system BIOS <highlight><bold>124</bold></highlight>, and a system clock <highlight><bold>126</bold></highlight>. Those skilled in the art should appreciate that features of the present invention may be implemented in a properly programmed general purpose computer system or server; however, those skilled in the art should also appreciate that various features of the present invention may alternatively be implemented in a special purpose device such as Internet appliances, set-top boxes, an medical diagnostic equipment. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The processor <highlight><bold>102</bold></highlight> of the computer system <highlight><bold>100</bold></highlight> is generally operable to execute software and/or firmware routines stored in the memory <highlight><bold>104</bold></highlight>. As a result of executing the software and/or firmware routines of the memory <highlight><bold>104</bold></highlight>, the processor <highlight><bold>102</bold></highlight> controls the general operation of the computer system <highlight><bold>100</bold></highlight> and the devices <highlight><bold>118</bold></highlight>, <highlight><bold>120</bold></highlight>, <highlight><bold>122</bold></highlight> via the respective controllers <highlight><bold>108</bold></highlight>, <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight>, and <highlight><bold>114</bold></highlight>. Moreover, the processor <highlight><bold>102</bold></highlight> as a result of executing software and/or firmware routines of the memory <highlight><bold>104</bold></highlight> is operable to prevent the computer system <highlight><bold>100</bold></highlight> from being used if a periodic payment is missed or is paid in an untimely manner. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The memory <highlight><bold>104</bold></highlight> of the computer system <highlight><bold>100</bold></highlight> is operable to store data and instructions used by the processor <highlight><bold>102</bold></highlight> in the course of ensuring timely periodic payments and in the course general execution of software applications. To this end, the memory <highlight><bold>104</bold></highlight>, in an exemplary embodiment, includes standard random access memory for storing the data and software routines needed by the processor <highlight><bold>102</bold></highlight>. However, the memory <highlight><bold>104</bold></highlight> may alternatively include other volatile memory types such as DRAM, SDRAM, and SRAM for storing data and software routines and/or non-volatile memory types such as ROMs, PROMs, EEPROMs, and flash memory for storing data and firmware routines. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The system bus <highlight><bold>106</bold></highlight> is generally operable to interconnect the processor <highlight><bold>102</bold></highlight>, the memory <highlight><bold>104</bold></highlight>, and the controllers <highlight><bold>108</bold></highlight>, <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight>, and <highlight><bold>114</bold></highlight>. To this end, the system bus <highlight><bold>106</bold></highlight> in the exemplary embodiment includes an address bus and data bus which enable the various components of the computer system <highlight><bold>100</bold></highlight> to communicate with one another. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The mass storage device <highlight><bold>118</bold></highlight> is generally operable to store data and/or software routines of the computer system <highlight><bold>100</bold></highlight> in a non-volatile manner, and the mass storage controller <highlight><bold>108</bold></highlight> is generally operable to provide the processor <highlight><bold>102</bold></highlight> with an interface to the data and/or software routines stored by the mass storage device <highlight><bold>118</bold></highlight>. To this end, the mass storage device <highlight><bold>118</bold></highlight> may include various computer readable and/or writeable media devices such as hard disk drives, floppy disk drives, CD-ROM drives, DVD-RAM drives, RAID devices, and/or Disk-On Chip devices to name a few. It should be appreciated by those skilled in the art that the computer system <highlight><bold>100</bold></highlight> may be implemented without a mass storage device <highlight><bold>118</bold></highlight> and mass storage controller <highlight><bold>108</bold></highlight>. For example, the computer system <highlight><bold>100</bold></highlight> may be implemented with all supported applications stored in a non-volatile memory of the memory <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The video display device <highlight><bold>120</bold></highlight> is operable to provide a visual display to a user of the computer system <highlight><bold>100</bold></highlight>, and the video controller <highlight><bold>110</bold></highlight> is operable to provide the processor <highlight><bold>102</bold></highlight> with an interface to the video display device <highlight><bold>120</bold></highlight>. To this end, the video display device <highlight><bold>120</bold></highlight> may include CRT displays, LCD displays, and/or LED displays. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The input device <highlight><bold>122</bold></highlight> is operable to provide users with a mechanism for inputting information into the computer system <highlight><bold>100</bold></highlight>, and the I/O interface controller <highlight><bold>112</bold></highlight> is operable to provide the processor <highlight><bold>102</bold></highlight> with an interface to the input device <highlight><bold>122</bold></highlight>. To this end, the input device <highlight><bold>122</bold></highlight> may include a mouse, keyboard, touch pad, and/or touch screen to name a few types of suitable input devices. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The system BIOS <highlight><bold>124</bold></highlight> provides the computer system <highlight><bold>100</bold></highlight> with basic input and output routines. In particular, the system BIOS <highlight><bold>124</bold></highlight> provides the computer system <highlight><bold>100</bold></highlight> with startup routines used to initialize hardware components of the computer system <highlight><bold>100</bold></highlight>. Moreover, the system BIOS <highlight><bold>124</bold></highlight> provides the computer system <highlight><bold>100</bold></highlight> with a hardware setup program which enables a technician to setup certain hardware components of the computer system <highlight><bold>100</bold></highlight> such as the system clock <highlight><bold>126</bold></highlight>, and interface controllers for controlling floppy drives, hard drives, and CD-ROM drives. Furthermore, the hardware setup program of the system BIOS <highlight><bold>124</bold></highlight> provides an interface for defining from which devices the computer system <highlight><bold>100</bold></highlight> will attempt to boot and the order of the devices from which the computer system <highlight><bold>100</bold></highlight> will attempt to boot. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The system clock <highlight><bold>126</bold></highlight> essentially maintains date and time information for the computer system <highlight><bold>100</bold></highlight>. In particular, the system clock <highlight><bold>126</bold></highlight> includes an oscillator and other hardware which in combination implement a conventional date and time clock for the computer system <highlight><bold>100</bold></highlight>. The system clock <highlight><bold>126</bold></highlight> typically operates from battery power so that the system clock <highlight><bold>126</bold></highlight> may continue to keep time even after the computer system <highlight><bold>100</bold></highlight> is powered off. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The network interface controller <highlight><bold>114</bold></highlight> is generally operable to provide the processor <highlight><bold>102</bold></highlight> with an interface to devices coupled to a network (not shown) such as a LAN or the Internet. To this end, the network interface controller <highlight><bold>114</bold></highlight> may include an analog modem, an ISDN modem, a DSL interface, an Ethernet controller, and/or other wired/wireless communication interfaces. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment executes a payment assurance application which is depicted in detail in FIGS. <highlight><bold>2</bold></highlight>-<highlight><bold>6</bold></highlight>. In general, the payment assurance application configures the computer system <highlight><bold>100</bold></highlight> to prevent use of the computer system <highlight><bold>100</bold></highlight> if a periodic payment has not been made in a timely manner. To this end, the payment assurance application attempts to configure the exemplary computer system <highlight><bold>100</bold></highlight> to provide a computing environment which allows a user to use the computer system <highlight><bold>100</bold></highlight> with minimal interference while at the same time making it difficult for the average user to circumvent the protection provided by the payment assurance application. Similar to locks on an automobile, the obstacles presented to an individual are sufficient to deter most into compliance; however, sophisticated individuals determined to gain unwarranted access at all costs are likely to succeed in finding a way to circumvent the obstacles. With this in mind, design choices were made during the development of the exemplary payment assurance application to lessen either (i) the amount of interference and intrusiveness caused by the payment assurance application, or (ii) the complexity and expense associated with implementing the payment assurance application, at the expense of the level of security provided by the payment assurance application. Accordingly, those skilled in the art may chose to provide additional or alternative safeguards than those described herein. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flowchart of an exemplary installation method <highlight><bold>200</bold></highlight> for installing the payment assurance application upon the exemplary computer system <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. In general, the installation method <highlight><bold>200</bold></highlight> causes the computer system <highlight><bold>100</bold></highlight> to copy an exemplary payment assurance application to the computer system <highlight><bold>100</bold></highlight> and perform some initial configuration of the payment assurance application. To this end, the computer system in step <highlight><bold>202</bold></highlight> invokes execution of an installation program stored on a computer readable medium such as a CD-ROM disc or a floppy disk. As a result of executing the installation program, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>204</bold></highlight> determines whether the payment assurance application is already installed on the computer system <highlight><bold>100</bold></highlight>. To this end, the computer system <highlight><bold>100</bold></highlight> may make this determination based upon several known techniques such as determining whether certain executables are available to the computer system <highlight><bold>100</bold></highlight> and/or determining whether certain configuration parameters are set in the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> If the computer system in step <highlight><bold>204</bold></highlight> determines that the payment assurance application is already installed on the computer system <highlight><bold>100</bold></highlight>, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>206</bold></highlight> terminates execution of the installation program and causes the computer system <highlight><bold>100</bold></highlight> to invoke execution of the payment assurance application. In particular, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment invokes execution of reboot operation which causes the computer system to execute a shutdown process and a subsequent a system startup process that invokes the payment assurance application. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> However, if the computer system in step <highlight><bold>204</bold></highlight> determines that the payment assurance application is not installed on the computer system <highlight><bold>100</bold></highlight>, then the computer system <highlight><bold>100</bold></highlight> installs the payment assurance application on the computer system <highlight><bold>100</bold></highlight>. To this end, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>208</bold></highlight> copies the payment assurance application to the computer system <highlight><bold>100</bold></highlight> in a persistent manner. For example, in an exemplary embodiment, the computer system <highlight><bold>100</bold></highlight> copies the payment assurance application to the mass storage device <highlight><bold>118</bold></highlight>. Those skilled in the art should appreciate that depending upon the implementation of the payment assurance application, the computer system <highlight><bold>100</bold></highlight> may need to copy one or more files. For example, the payment assurance application may be implemented as a single executable that does not require any other files, or the payment assurance application may be implemented as one or more executable files that are dynamically linked to several library files and that each rely upon various data and configuration files for proper execution. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> Besides causing the computer system <highlight><bold>100</bold></highlight> to copy the payment assurance application to the computer system <highlight><bold>100</bold></highlight> in a persistent manner, the installation program further causes the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>210</bold></highlight> to update configuration information so that during a system startup process the computer system <highlight><bold>100</bold></highlight> invokes execution of a login service provided by the payment assurance application. While various known techniques may be used to configure the computer system <highlight><bold>100</bold></highlight> to invoke upon system startup the login service of the payment assurance application, the installation program, in an exemplary Microsoft&trade; Windows&trade; embodiment of the payment assurance application, causes the computer system <highlight><bold>100</bold></highlight> to add appropriate references to the payment assurance application in the &ldquo;Run&rdquo; key and the &ldquo;RunOnce&rdquo; key of the Registry Database. In particular, the entry in the &ldquo;RunOnce&rdquo; causes the computer system <highlight><bold>100</bold></highlight> to invoke the login service of the payment assurance application upon system startup of the computer system <highlight><bold>100</bold></highlight> and prevents the computer system <highlight><bold>100</bold></highlight> from completing the startup process until execution of the payment assurance application is terminated. Moreover, since programs referenced by the &ldquo;RunOnce&rdquo; key in a Microsoft&trade; Windows&trade; environment are executed early in the system startup process, the payment assurance application configures the computer system <highlight><bold>100</bold></highlight> to implement features of the payment assurance application before a user may input commands to the computer system <highlight><bold>100</bold></highlight>. For example, in an exemplary Microsoft&trade; Windows&trade; embodiment, the program assurance application causes the computer system <highlight><bold>100</bold></highlight> to disable certain keys and/or key combinations such as the &ldquo;Alt-Tab&rdquo;, &ldquo;F6&rdquo;, &ldquo;Ctrl-Esc&rdquo;, &ldquo;Alt-F4&rdquo;, and &ldquo;Ctrl-Alt-Delete&rdquo; which may otherwise enable a user to circumvent the program assurance application by causing the computer system <highlight><bold>100</bold></highlight> to switch to another executing process or causing the computer system <highlight><bold>100</bold></highlight> to terminate execution of the programs assurance program. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Another advantage of causing the payment assurance application to be executed via the entries in the &ldquo;Run&rdquo; key and &ldquo;RunOnce&rdquo; key is that these entries cause the computer system <highlight><bold>100</bold></highlight> to execute the payment assurance application as a service. In Microsoft&trade; Windows&trade; environments, services are not listed by the Task Manager of Microsoft&trade; Windows&trade; operating systems. The Task Manager of the Microsoft&trade; Windows&trade; operating systems provides users with a interface to terminate processes; however, since the payment assurance application is executed as a non-listed service, users are prevented from simply terminating the payment assurance application via the Task Manager in order to circumvent the protections provided by the payment assurance application The installation program then in step <highlight><bold>210</bold></highlight> causes the computer system <highlight><bold>100</bold></highlight> to reboot in order to force the computer system <highlight><bold>100</bold></highlight> through the system startup process. Due to the above installation of the payment assurance application, the computer system <highlight><bold>100</bold></highlight> will begin execution of the payment assurance application as part of the system startup process. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The installation program then in step <highlight><bold>212</bold></highlight> causes the computer system <highlight><bold>100</bold></highlight> to terminate execution of the installation program and to invoke execution of the payment assurance application. To this end, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment invokes a reboot operation that causes the computer system to terminate all processes and to subsequently invoke execution of the payment assurance application as part of a startup operation. As a result of invoking the reboot operation, the computer system <highlight><bold>100</bold></highlight> terminates all executing processes and then invokes a system startup process. Since the above installation of the payment assurance program configured the computer system <highlight><bold>100</bold></highlight> to invoke execution of the login service of the payment assurance program upon system startup, rebooting the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>212</bold></highlight> effectively invokes the payment assurance application and the protections associated with the payment assurance application. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> While not part of the exemplary installation program, a technician who is configuring the computer system <highlight><bold>100</bold></highlight> may perform further actions in order to enhance the protection provided by the payment assurance application. In particular, the technician may configure the computer system <highlight><bold>100</bold></highlight> via the setup program of the system BIOS <highlight><bold>124</bold></highlight> to attempt to boot from the mass storage device <highlight><bold>118</bold></highlight> before attempting to boot from another device. In this manner, the technician prevents a user from circumventing the payment assurance application by simply booting the computer system <highlight><bold>100</bold></highlight> from a removable media such as a floppy disk or a CD-ROM disc. Furthermore, the technician may password protect the setup program of the system BIOS <highlight><bold>124</bold></highlight> to prevent users from circumventing the payment assurance application by reconfiguring the computer system <highlight><bold>100</bold></highlight> to attempt to boot from a removable media before attempting to boot from the mass storage device <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Moreover, while the exemplary payment assurance application was described above as being installed on the mass storage device <highlight><bold>118</bold></highlight>, the payment assurance application may take alternative forms which would not require installing the payment assurance application to the mass storage device <highlight><bold>118</bold></highlight>. For example, the payment assurance application may be implemented in non-volatile memory of the computer system <highlight><bold>100</bold></highlight> and/or as part of the system BIOS <highlight><bold>124</bold></highlight>. Furthermore, in such implementations, the computer system <highlight><bold>100</bold></highlight> may not need to execute an installation program in order to install the payment assurance application since the functionality of the payment assurance application is already integrated into the hardware components of the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> After being configured with the payment assurance application, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>302</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> automatically executes a login service of the payment assurance program as part of the startup process. The exemplary login service of the payment assurance application causes the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>304</bold></highlight> to disable certain keys and/or key combinations of the keyboard which would enable a user to switch to another process or prematurely terminate the payment assurance program. For example, in the Microsoft&trade; Windows&trade; environment, the exemplary assurance application causes the computer system <highlight><bold>100</bold></highlight> to disable the &ldquo;Alt-Tab&rdquo;, &ldquo;F6&rdquo;, &ldquo;Ctrl-Esc&rdquo;, &ldquo;AltF4&rdquo;, and &ldquo;Ctrl-Alt-Delete&rdquo; keys and/or key combinations which may otherwise enable users to circumvent the login service of the payment assurance application by causing the computer system <highlight><bold>100</bold></highlight> to switch to another executing process or causing the computer system <highlight><bold>100</bold></highlight> to prematurely terminate the execution of the payment assurance application. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The login service of the payment assurance application causes the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>306</bold></highlight> to display upon the video display <highlight><bold>120</bold></highlight> a prompt for a password. In particular, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment displays a dialog box in which a user may type a password. Each time a periodic payment is received by the organization responsible for monitoring payments associated with the computer system <highlight><bold>100</bold></highlight>, the organization supplies the user via mail, e-mail, or some other mechanism, the password associated with the next payment period. Accordingly, if the user makes the periodic payments in a timely manner, then the user will obtain the passwords for each payment period in a timely fashion. As will be apparent from the following description, the user will be effectively prevented from using the computer system <highlight><bold>100</bold></highlight> if the user does not have the appropriate password for the current payment period. Accordingly, if the user does not want to be prevented from using the computer system <highlight><bold>100</bold></highlight>, then the user will be motivated to make the period payments associated with the computer system <highlight><bold>100</bold></highlight> in a timely manner. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Upon receiving a password, the login service of the payment assurance application causes the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>310</bold></highlight> to determine whether the entered password corresponds to a setup password for the payment assurance application. The computer system <highlight><bold>100</bold></highlight> may utilize several known techniques for determining whether the entered password corresponds to the setup password for the payment assurance application. For example, the computer system <highlight><bold>100</bold></highlight> may determine whether the entered password corresponds to the setup password by comparing the entered password to a setup password that is hard-coded into the payment assurance application. Alternatively, the computer system <highlight><bold>100</bold></highlight> may determine whether the entered password corresponds to the setup password based upon an encrypted setup password which may be stored on the mass storage device <highlight><bold>118</bold></highlight>, non-volatile memory of the computer system <highlight><bold>100</bold></highlight>, or hard-coded into the payment assurance application. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> If the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>310</bold></highlight> determines that the user entered the setup password, then the computer system <highlight><bold>100</bold></highlight> proceeds to step <highlight><bold>402</bold></highlight> of a setup method <highlight><bold>400</bold></highlight> depicted in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. However, if the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>310</bold></highlight> determines that the user did not enter the setup password, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>312</bold></highlight> determines whether the user entered the stop program password. To this end, the computer system <highlight><bold>100</bold></highlight> may utilize several known techniques for determining whether the entered password corresponds to the stop program password for the payment assurance application. For example, the computer system <highlight><bold>100</bold></highlight> may determine whether the entered password corresponds to the stop program password by comparing the entered password to a stop program password that is hard-coded into the payment assurance application. Alternatively, the computer system <highlight><bold>100</bold></highlight> may determine whether the entered password corresponds to the stop program password based upon an encrypted stop program password which may be stored on the mass storage device <highlight><bold>118</bold></highlight>, non-volatile memory of the computer system <highlight><bold>100</bold></highlight>, or hard-coded into the payment assurance application. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> If the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>312</bold></highlight> determines that the user entered the stop program password, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>314</bold></highlight> terminates execution of the payment assurance application. As a result of terminating execution of the payment assurance application, a user of the computer system <highlight><bold>100</bold></highlight> regains complete access to the computer system <highlight><bold>100</bold></highlight>. A technician which is attempting to reconfigure a computer system <highlight><bold>100</bold></highlight> on which the payment assurance application is installed may find it advantageous to cease execution of the payment assurance application in order to regain complete control of the computer system. Assuming that the technician or another user does not reconfigure the computer system <highlight><bold>100</bold></highlight> to do otherwise, the stop program password does not prevent the computer system <highlight><bold>100</bold></highlight> from executing the payment assurance application as part of the startup process. In other words, the stop program password merely terminates current execution of the payment assurance application and does not effect future execution of the payment assurance application. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> However, if the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>312</bold></highlight> determines that the user did not enter the stop program password, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>315</bold></highlight> determines whether the user entered the password for the current payment period. To this end, the exemplary payment assurance application causes the computer system <highlight><bold>100</bold></highlight> to make this determination based upon the current system time and an encrypted password set stored in the Registry Database of the Microsoft&trade; Windows&trade; environment. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> If the computer system <highlight><bold>100</bold></highlight> determines in step <highlight><bold>315</bold></highlight> that the user did not enter the correct password for the current installment period, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>316</bold></highlight> updates a password counter used to track the number of incorrect passwords received by the computer system <highlight><bold>100</bold></highlight> since the system startup process. Based upon the password counter, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>318</bold></highlight> determines whether the computer system <highlight><bold>100</bold></highlight> has received more than a threshold number (e.g. 3) of incorrect passwords. If the computer system <highlight><bold>100</bold></highlight> determines that not more than the threshold number of incorrect passwords have been received, then the computer system <highlight><bold>100</bold></highlight> returns to step <highlight><bold>306</bold></highlight> in order to receive another password. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> However, if the computer system <highlight><bold>100</bold></highlight> determines in step <highlight><bold>318</bold></highlight> that more than the threshold number of incorrect passwords have been received, then the payment assurance application causes the computer system <highlight><bold>100</bold></highlight> to display a warning message in step <highlight><bold>320</bold></highlight>. In particular, the warning message, in an exemplary embodiment, provides the user with an indication that the password is incorrect for the current payment period and provides the user with contact information for an organization from which the user may obtain the correct password. After displaying the warning message for a few seconds, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>322</bold></highlight> disables further use of the computer system <highlight><bold>100</bold></highlight>. To this end, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment invokes a shutdown operation which causes the computer system <highlight><bold>100</bold></highlight> to terminate all running processes. However, those skilled in the art should appreciate that the computer system <highlight><bold>100</bold></highlight> may utilize other techniques for disabling the computer system <highlight><bold>100</bold></highlight>. For example, the computer system <highlight><bold>100</bold></highlight> may be disabled by preventing any further execution of user processes. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> If the computer system <highlight><bold>100</bold></highlight> determines in step <highlight><bold>315</bold></highlight> that the user entered the correct password for the current payment period, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>324</bold></highlight> determines whether the user has made the last payment. To this end, the computer system <highlight><bold>100</bold></highlight> determines based upon the received password and the encrypted password list for the computer system <highlight><bold>100</bold></highlight> whether the received password corresponds to the password for the last payment period. If the computer system <highlight><bold>100</bold></highlight> instep <highlight><bold>324</bold></highlight> determines that the user has made the last payment, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>326</bold></highlight> completes the startup process and invokes execution of the program removal method <highlight><bold>600</bold></highlight> depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> If the computer system <highlight><bold>100</bold></highlight>, however, determines that the received password is not the last password of the encrypted password set, then the payment assurance application causes the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>328</bold></highlight> to complete the system startup process and invoke a monitoring service of the payment assurance application. To this end, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment updates the &ldquo;Run&rdquo; key of the Registry Database to ensure that &ldquo;Run&rdquo; key of the Registry Database includes a proper reference to invoke the monitoring service of payment assurance application. After updating the Registry Database, the computer system <highlight><bold>100</bold></highlight> terminates the current execution of the payment assurance application in order to enable the computer system <highlight><bold>100</bold></highlight> to complete the system startup procedure. Termination of the payment assurance application causes the computer system <highlight><bold>100</bold></highlight> to delete the reference to the login service of the payment assurance application from the &ldquo;RunOnce&rdquo; key of the Registry Database. Furthermore, as a result of the entry in the &ldquo;Run&rdquo; key, the computer system <highlight><bold>100</bold></highlight> invokes execution of the monitoring service of the payment assurance application depicted in FIGS. <highlight><bold>5</bold></highlight>A-<highlight><bold>5</bold></highlight>B upon termination of the login service. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, there is depicted a flowchart for a setup method <highlight><bold>400</bold></highlight> implemented by the computer system <highlight><bold>100</bold></highlight> in response to determining in step <highlight><bold>310</bold></highlight> that the setup password was received. In general, the computer system <highlight><bold>100</bold></highlight> during the setup method <highlight><bold>400</bold></highlight> provides a technician with a graphical user interface that enables the technician to configure the computer system <highlight><bold>100</bold></highlight> for a particular payment schedule. To this end, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>402</bold></highlight> determines whether the setup program is available. In an exemplary embodiment, the payment assurance application is pre-configured to execute the setup program from a particular location on a floppy drive. Accordingly, the computer system <highlight><bold>100</bold></highlight> determines whether the setup program is accessible from the particular location. If the computer system <highlight><bold>100</bold></highlight> determines that the setup program is not accessible, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>404</bold></highlight> displays a warning message that indicates the user performed a prohibited action. After displaying the warning message for a few seconds, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>406</bold></highlight> disables use of the computer system <highlight><bold>100</bold></highlight>. To this end, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment invokes a shutdown operation which causes the computer system <highlight><bold>100</bold></highlight> to terminate all executing processes. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> However, if the computer system <highlight><bold>100</bold></highlight> determines in step <highlight><bold>402</bold></highlight> that the setup program is accessible, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>408</bold></highlight> invokes execution of the setup program. By implementing the setup program as a separate program, the program assurance application introduces additional obstacles for a user who is intent on circumventing the payment assurance application. In particular, a user intent on circumventing the payment assurance application via the setup program would need not only the correct setup password but would also need a copy of the setup program. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> In response to executing the setup program, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>410</bold></highlight> provides a graphical user interface from which a technician may request the computer system <highlight><bold>100</bold></highlight> to clear any prior password lists installed on the computer system <highlight><bold>100</bold></highlight>. For example, the computer system <highlight><bold>100</bold></highlight> may detect whether the technician has activated a &ldquo;Clear Password&rdquo; button of the graphical user interface and clear any encrypted passwords lists by deleting appropriate keys from the Registry Database of the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The computer system <highlight><bold>100</bold></highlight> then in step <highlight><bold>412</bold></highlight> obtains information concerning the payment schedule. In an exemplary embodiment, the computer system <highlight><bold>100</bold></highlight> provides a graphical user interface from which a technician may define the length of the payment schedule (e.g. 36 months, 102 weeks, etc.); the grace period for receiving each periodic payment (e.g. 10 days); the date the first payment is due (e.g. Jan. 1, 2000); and the day each recurring payment is due (e.g. every Friday, the first of the month, the fifth of the month, etc.). Moreover, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>414</bold></highlight> obtains a unique identifier for the computer system <highlight><bold>100</bold></highlight> being configured. In particular, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment provides a graphical user interface from which a technician may enter a unique identifier such as the customer&apos;s telephone number. By assigning a unique identifier to the computer system <highlight><bold>100</bold></highlight>, an organization may easily associate a password list with the appropriate computer system. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>416</bold></highlight> stores the collected information in a secure and persistent manner. To this end, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment encrypts the collected information with the Blowfish encryption algorithm and stores the encrypted information in keys of the Registry Database that is stored on the mass storage device <highlight><bold>118</bold></highlight>. The computer system <highlight><bold>100</bold></highlight> alternatively may encrypt the collected information with other algorithms and store the collected information on other non-volatile media such as EEPROMs or flash memory devices. Furthermore, in computing environments that provide built in security measures such file permissions and file ownership, the computer system <highlight><bold>100</bold></highlight> may store the collected information in a non-encrypted manner in files that are in accessible to users of the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> After storing the collected information, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>418</bold></highlight> generates a password list for the computer system <highlight><bold>100</bold></highlight> and saves the password list in a persistent manner. More specifically, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment generates a different password for each payment period and three additional date passwords that enable a user to update the system clock <highlight><bold>126</bold></highlight> of the computer system <highlight><bold>100</bold></highlight>, and stores the generated password list in a file on the mass storage device <highlight><bold>118</bold></highlight>. Then, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>420</bold></highlight> displays upon the video display <highlight><bold>120</bold></highlight> each password of the generated password list. As a result of displaying the password list, the technician may visual verify that appropriate passwords were generated for the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>422</bold></highlight> encrypts each generated password with an encryption algorithm such as the DES algorithm, the IDEA algorithm, the RC4 algorithm, or the Blowfish algorithm, and stores the encrypted password list in a persistent manner. In particular, in an exemplary embodiment, the computer system <highlight><bold>100</bold></highlight> stores the encrypted password list in CLSID keys of the Registry Database without associating meaningful descriptions to the keys. Since the Registry Database typically includes a large number of CLSID keys without highly meaningful descriptions, users in search of the passwords will have a difficult time identifying which CLSID keys of the Registry Database store the encrypted password list for the computer system <highlight><bold>100</bold></highlight>. Moreover, since the passwords are stored in CLSID keys in an encrypted manner, average users would find it very difficult to decrypt the passwords even if they were able to determine in which CLSID keys the encrypted passwords were stored. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>424</bold></highlight> prompts the technician via the graphical user interface to indicate whether the computer system <highlight><bold>100</bold></highlight> should print the password list or save the password list to disk. If the computer system <highlight><bold>100</bold></highlight> determines in step <highlight><bold>426</bold></highlight> that the technician chose to have the password list printed, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>428</bold></highlight> provides the technician with an interface for choosing a particular printer and causing the selected printer to print the password list along with the unique computer name assigned to the computer system <highlight><bold>100</bold></highlight>. In response to choosing a particular printer, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>430</bold></highlight> prints the password list for the computer system <highlight><bold>100</bold></highlight> along with the unique identifier assigned to the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> However, if the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>426</bold></highlight> determines that the technician chose to have the password list saved to disk, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>432</bold></highlight> provides the technician with a graphical user interface for defining a path and a filename to which the computer system <highlight><bold>100</bold></highlight> is to save the password list and unique identifier for the computer system <highlight><bold>100</bold></highlight>. In response to defining the path and filename, the computer system in step <highlight><bold>434</bold></highlight> saves the password list and unique identifier to the a file having the defined filename at a location defined by the path. Saving the password list and unique identifier to disk facilitates additional information retrieval and security functionality not provided by printing the password list and unique identifier. In particular, saved password lists and associated identifiers may be integrated with a database system to provide quick retrieval of passwords for a large inventory of computer systems. Moreover, the saved password lists maybe encrypted and password protected in order to secure access to the password lists. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> After printing or saving the password list and unique identifier, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>436</bold></highlight> removes the un-encrypted password list from the computer system <highlight><bold>100</bold></highlight>. More specifically, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment deletes a file containing the un-encrypted password list from the computer system <highlight><bold>100</bold></highlight> in such a manner which prevents undelete utilities from recovering the file. Removing the un-encrypted password list from the computer system <highlight><bold>100</bold></highlight> prevents users from simply locating and reading the un-encrypted password list in order to obtain the proper password for each payment period of the payment schedule. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The computer system <highlight><bold>100</bold></highlight> then in step <highlight><bold>438</bold></highlight> tests the integrity of the computer system <highlight><bold>100</bold></highlight> and the configuration of the payment assurance application. To this end, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment tests the integrity of the mass storage device <highlight><bold>118</bold></highlight>, the integrity of the Registry Database, and the integrity of the decryption algorithms. For example, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment verifies that the encrypted passwords can be successfully retrieved from the Registry Database that is stored on the mass storage device <highlight><bold>118</bold></highlight> and that the retrieved passwords can be successfully decrypted. Moreover, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment causes the first password to be displayed upon the video display <highlight><bold>120</bold></highlight> in both its encrypted form and its decrypted form so that the technician configuring the computer system <highlight><bold>100</bold></highlight> may make a visual verification that the computer system <highlight><bold>100</bold></highlight> can successfully retrieve and decrypt passwords of the password list. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The computer system <highlight><bold>100</bold></highlight> then in step <highlight><bold>440</bold></highlight> disables removal of the payment assurance application for the computer system <highlight><bold>100</bold></highlight>. In an exemplary implementation of the payment assurance application, the login service and monitoring service are implemented with a single executable file. After being powered-up, the computer system <highlight><bold>100</bold></highlight> either is executing the executable file for the payment assurance program or is not operable to receive user input. Microsoft&trade; Windows&trade; operating systems do not allow users to delete files which are currently being accessed by the operating system such as the executable file for the payment assurance program. Accordingly, since from the users standpoint, the computer system <highlight><bold>100</bold></highlight> is constantly executing the executable file for the payment assurance application, the Microsoft&trade; Windows&trade; operating systems inherently prevents the user from removing the executable file for the payment assurance application from the mass storage device <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> A user may, however, attempt to reformat the mass storage device <highlight><bold>118</bold></highlight> in order to remove the payment assurance application from the mass storage device <highlight><bold>118</bold></highlight>. In order to prevent removal of the payment assurance application from the computer system <highlight><bold>100</bold></highlight> via reformatting the mass storage device <highlight><bold>118</bold></highlight>, the computer system <highlight><bold>10</bold></highlight> disables the format command for MS-DOS command line of the Microsoft&trade; Windows&trade; operating system. In particular, the computer system <highlight><bold>100</bold></highlight> encrypts the executable file of the MS-DOS format command, renames the encrypted executable file to a non-descriptive name, and moves the renamed and encrypted executable file to a non-standard location on the mass storage device <highlight><bold>118</bold></highlight>. As a result of the above changes to the format command, average users should have a difficult time locating and executing the format command of the Microsoft&trade; Windows&trade; operating system while at the same time maintaining a copy of the format command on the mass storage device <highlight><bold>118</bold></highlight> so that the format command may be automatically re-enabled after the user makes the last payment of the payment schedule. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> As a result of disabling the format command of the Microsoft&trade; Windows&trade; operating system, a user cannot simply execute the format command stored upon the mass storage device <highlight><bold>118</bold></highlight> in order to reformat the mass storage device <highlight><bold>118</bold></highlight> and circumvent the payment assurance application. However, a user is still able to format removable media such as floppy disks via a the Microsoft&trade; Windows&trade; format interface. The Microsoft&trade; Windows&trade; format interface inherently forbids a user from reformatting the disk partition from which the Microsoft&trade; Windows&trade; operating system booted. Accordingly, the combination, of disabling the Microsoft&trade; Windows&trade; format command and functionality inherent to Microsoft&trade; Windows&trade; format interface, prevents a user of the computer system <highlight><bold>100</bold></highlight> from circumventing the payment assurance application by reformatting the mass storage device <highlight><bold>118</bold></highlight> while at the same time permitting the user to format other storage media such as floppy disks or a second hard drive. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The computer system then in step <highlight><bold>442</bold></highlight> requests the technician to enter contact information such as a business name and phone number and saves the received contact information in a persistent manner. The payment assurance application utilizes the supplied information to provide a user of the computer system <highlight><bold>100</bold></highlight> with contact information in case the user encounters problems with the computer system <highlight><bold>100</bold></highlight>, needs to obtain a password, has questions concerning the computer system <highlight><bold>100</bold></highlight>, or has questions concerning the payment schedule. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> In step <highlight><bold>444</bold></highlight>, the computer system <highlight><bold>100</bold></highlight> terminates execution of the setup program and forces execution of the payment assurance application. To this end, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment invokes execution of a reboot operation which causes the computer system <highlight><bold>100</bold></highlight> to terminate all executing processes and to invoke the payment assurance application as part of a subsequent startup operation. As a result of executing the reboot operation, the computer system <highlight><bold>100</bold></highlight> executes a shutdown process which causes the computer system <highlight><bold>100</bold></highlight> to terminate execution of all executing processes and to subsequently invoke a system startup process. Accordingly, after the computer system <highlight><bold>100</bold></highlight> completes execution of the setup method <highlight><bold>400</bold></highlight>, the computer system <highlight><bold>100</bold></highlight> will automatically execute the payment assurance program in accordance with the supplied payment schedule information and associated password list. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> In general, once the user has entered the proper password for the current payment period, the computer system <highlight><bold>100</bold></highlight> essentially invokes a monitoring service of the payment assurance application that causes the computer system <highlight><bold>100</bold></highlight> to periodically verify that the user has not perform certain operations that could circumvent the payment assurance application. Referring now to FIGS. <highlight><bold>5</bold></highlight>A-<highlight><bold>5</bold></highlight>B, there is depicted a monitoring method <highlight><bold>500</bold></highlight> which the computer system <highlight><bold>100</bold></highlight> executes on a periodic basis such as every 500 milliseconds. However, those skilled in the art should appreciate that monitoring method <highlight><bold>500</bold></highlight> may be implemented in various other manners which may include multiple interrupt service routines, polling routines, hardware timers, and/or software timers. For example, an exemplary embodiment of the monitoring method 500 utilizes a 500 millisecond timer that upon expiration causes the computer system <highlight><bold>100</bold></highlight> to verify a first set of conditions and a 1000 millisecond timer that upon expiration causes the computer system <highlight><bold>100</bold></highlight> to verify a second set of conditions. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> Upon each periodic execution of the monitoring method <highlight><bold>500</bold></highlight>, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>502</bold></highlight> ensures that execution of the payment assurance application will be invoked as part of the system startup process. To this end, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment updates the &ldquo;Run&rdquo; and &ldquo;RunOnce&rdquo; keys of the Registry Database with entries that properly reference the monitoring service and login service of the payment assurance application, respectively. In this manner, the computer system <highlight><bold>100</bold></highlight> effectively prevents a user from configuring the computer system <highlight><bold>100</bold></highlight> to not invoke execution of the payment assurance application upon system startup. In particular, assuming the computer system <highlight><bold>100</bold></highlight> updates the &ldquo;Run&rdquo; and &ldquo;RunOnce&rdquo; keys of the Registry Database on a relatively short interval such as 500 millisecond, even if the user were to delete or alter the entries of the Registry Database the periodic execution of the monitoring method <highlight><bold>500</bold></highlight> would effectively update the &ldquo;Run&rdquo; and &ldquo;RunOnce&rdquo; entries to proper values before the user could terminate the monitoring service by restarting or powering-down the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> One manner by which users may attempt to circumvent the payment assurance application is by setting the system clock <highlight><bold>126</bold></highlight> backwards to a date prior to an overdue payment date. Users may utilizes various different techniques in an attempt to set the system clock <highlight><bold>126</bold></highlight>. Accordingly, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment performs several tests to ensure that the user has not attempted to change the system clock <highlight><bold>126</bold></highlight> of the computer system <highlight><bold>100</bold></highlight>. In particular, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>504</bold></highlight> determines base upon the date as indicated by the system clock <highlight><bold>126</bold></highlight> and a date stamp associated with the program assurance application whether the system clock <highlight><bold>126</bold></highlight> has been set backwards. More specifically, the computer system <highlight><bold>100</bold></highlight> determines that the system clock <highlight><bold>126</bold></highlight> has been set backwards if the date indicated by the system clock <highlight><bold>126</bold></highlight> is earlier then the date indicated by the date stamp of the program assurance application. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> If the computer system <highlight><bold>100</bold></highlight> determines in step <highlight><bold>504</bold></highlight> that the system clock <highlight><bold>126</bold></highlight> has been set backwards, then the computer system in step <highlight><bold>508</bold></highlight> displays a warning message that indicates changes to the system clock <highlight><bold>126</bold></highlight> are prohibited and provides contact information for an organization from which a password that re-enables the computer system <highlight><bold>100</bold></highlight> may be obtained. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> After displaying the warning message for a few seconds, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>510</bold></highlight> prompts the user for a password. If the computer system <highlight><bold>100</bold></highlight> determines in step <highlight><bold>512</bold></highlight> that a user entered a proper date password, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>514</bold></highlight> updates a confirmed system time for the computer system <highlight><bold>100</bold></highlight>, disables the entered date password from being used again, and exits the monitoring method <highlight><bold>500</bold></highlight> until the next periodic execution of the monitoring method <highlight><bold>500</bold></highlight>. To this end, the computer system <highlight><bold>100</bold></highlight> determines that the received password is a proper date password if the entered password corresponds to a non-disabled date password of the password list. Moreover, upon determining that the received password is a proper date password, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment sets a flag associated with the date password that disables the date password from being used again. Furthermore, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment stores the confirmed system time of the system clock <highlight><bold>126</bold></highlight> in a key of the Registry Database in order to maintain a persistent copy of the last confirmed system time. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> However, if the computer system <highlight><bold>100</bold></highlight> determines that a user did not enter a proper date password, then the computer system <highlight><bold>100</bold></highlight> determines in step <highlight><bold>516</bold></highlight> whether the user entered the stop password. If the computer system <highlight><bold>100</bold></highlight> determines that the user entered the stop password, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>518</bold></highlight> terminates the current execution of the program assurance application in a manner similar to above step <highlight><bold>314</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> If the computer system <highlight><bold>100</bold></highlight> determines in step <highlight><bold>516</bold></highlight> that the user did not enter the stop password, then the computer system <highlight><bold>100</bold></highlight> instep <highlight><bold>520</bold></highlight> determines whether more than a threshold number (e.g. 3) of invalid passwords have been entered. If the computer system <highlight><bold>100</bold></highlight> determines that more than the threshold number of invalid passwords have not been entered, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>522</bold></highlight> updates a password counter, displays a warning that indicates the last password was invalid, and returns to step <highlight><bold>510</bold></highlight> in order to receive another password from the user. However, if the computer system <highlight><bold>100</bold></highlight> determines that more than the threshold number of invalid passwords have been entered, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>524</bold></highlight> displays a warning message that indicates the password was invalid, and disables use of the computer system <highlight><bold>100</bold></highlight>. To this end, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment invokes execution of a system shutdown process that causes the computer system <highlight><bold>100</bold></highlight> to terminate execution of all executing processes. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> The Microsoft&trade; Windows&trade; environment provides various utility programs for setting the system clock <highlight><bold>126</bold></highlight>. A user could potentially circumvent the protection of the payment assurance application by setting the system clock <highlight><bold>126</bold></highlight> backwards via these configuration utilities. Whenever one of the Microsoft&trade; Windows&trade; utility programs changes the system clock <highlight><bold>126</bold></highlight>, a Microsoft&trade; Windows&trade; API message is generated which informs other applications of the change to the system clock <highlight><bold>126</bold></highlight>. Accordingly, if the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>504</bold></highlight> determined based upon the date stamp that the system clock <highlight><bold>126</bold></highlight> had not been set backwards, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>526</bold></highlight> further determines whether the system clock <highlight><bold>126</bold></highlight> had been changed based upon Microsoft&trade; Windows&trade; API messages generated by the configuration utilities. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> If the computer system <highlight><bold>100</bold></highlight> determines in step <highlight><bold>526</bold></highlight> that the system clock <highlight><bold>126</bold></highlight> has changed, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>528</bold></highlight> displays a warning that indicates changes to the system clock <highlight><bold>126</bold></highlight> are prohibited. The computer system <highlight><bold>100</bold></highlight> then in step <highlight><bold>530</bold></highlight> determines whether the system clock has been set backwards by more than a threshold amount (e.g. 15 minutes) within a predetermined period (e.g. 24 hours). To this end, the computer system <highlight><bold>100</bold></highlight> determines whether the time difference between the current system time as indicated by the system clock <highlight><bold>126</bold></highlight> and the last confirmed system time is greater than the threshold amount remaining for the predetermined period. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> If the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>530</bold></highlight> determines that the system clock <highlight><bold>126</bold></highlight> has been set backwards by more than the threshold amount within the predetermined period, then the computer system <highlight><bold>100</bold></highlight> proceeds to step <highlight><bold>508</bold></highlight> in order to display a warning and receive a password from the user. However, if the computer system <highlight><bold>100</bold></highlight> determines that the system clock <highlight><bold>126</bold></highlight> has not been set backwards by more than the threshold amount within the predetermined period, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>532</bold></highlight> updates the threshold amount remaining for the predetermined period and exits the monitoring method <highlight><bold>500</bold></highlight> until the next periodic execution of the monitoring method <highlight><bold>500</bold></highlight>. To this end, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment subtracts the time difference from the threshold amount remaining, encrypts the obtained difference, and stores the encrypted difference in a nonvolatile manner. More specifically, the computer system <highlight><bold>100</bold></highlight> stores the encrypted difference in a key of the Registry Database for future access by the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> After verifying the payment assurance application will be invoked upon system startup and the system clock <highlight><bold>126</bold></highlight> has not been changed by the user, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>533</bold></highlight> updates the confirmed system time to the system time indicated by the system clock <highlight><bold>126</bold></highlight>. More specifically, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment updates the confirmed system time in a persistent manner by storing the system time in a key of the Registry Database. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The computer system <highlight><bold>100</bold></highlight> then in step <highlight><bold>534</bold></highlight> determines whether the date stamp associated with the payment assurance application needs to be updated. In particular, if the confirmed system time indicates a date later than the date stamp for the payment assurance application, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>535</bold></highlight> updates the date stamp for the payment assurance application. More specifically, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment updates the data stamp by storing the date indicated by the confirmed system time on the mass storage device <highlight><bold>118</bold></highlight> in a header portion of an executable file used to implement the payment assurance application. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> In step <highlight><bold>536</bold></highlight>, the computer system <highlight><bold>100</bold></highlight> resets the time amount remaining for the predetermined period and the pre-notification counter. In an exemplary embodiment, the computer system <highlight><bold>100</bold></highlight> provides a pre-notification warning once each day the computer system <highlight><bold>100</bold></highlight> is within a pre-notification period. Accordingly, by resetting the pre-notification counter upon determining the date has changed ensures that the pre-notification warning message is display only once a day. Similarly, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment allows the system clock <highlight><bold>126</bold></highlight> to be set backwards by no more than a threshold amount within a predetermined period of a day. Accordingly, resetting the time amount remaining upon determining that the date has changed ensures that the system clock <highlight><bold>126</bold></highlight> may be set backwards by the threshold amount each predetermined period. The predetermined period and the pre-notification period may be implemented with separate and different time intervals. Furthermore, those skilled in the art in light of the description herein may implement other time intervals for the predetermine period and the pre-notification using known techniques and without undue experimentation. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The computer system <highlight><bold>100</bold></highlight> then in step <highlight><bold>537</bold></highlight> determines whether the grace period has passed. To this end, the computer system <highlight><bold>100</bold></highlight> determines based upon the entered payment password, the stored payment schedule information, and the system clock <highlight><bold>126</bold></highlight> whether the grace period has passed. For example, if the stored payment schedule information defines monthly payments due on the 1<highlight><superscript>st </superscript></highlight>of each month and a 10 day grace period, then the computer system <highlight><bold>100</bold></highlight> would determine the grace period had passed in response to the user entering the correct payment password for March 1999 and the system clock <highlight><bold>126</bold></highlight> indicating the date as Apr. 11, 1999. If the computer system <highlight><bold>100</bold></highlight> determines that the grace period has passed, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>538</bold></highlight> displays a warning message that indicates the current installment period is past due and provides contact information of the organization to which payment is to be made. After displaying the warning message for a few seconds, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>540</bold></highlight> disables use of the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> If the computer system determines in step <highlight><bold>537</bold></highlight> that the grace period has not yet passed, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>542</bold></highlight> determines whether the grace period has been entered. To this end, the computer system <highlight><bold>100</bold></highlight> determines based upon the entered payment password, the stored payment schedule information, and the system clock <highlight><bold>126</bold></highlight> whether the grace period has been entered. For example, if the stored payment schedule information defines weekly payments due on Sunday of each week and a 10 day grace period, then the computer system <highlight><bold>100</bold></highlight> would determine the grace period had been entered in response to the user entering the correct payment password for the week beginning Sunday, Oct. 10, 1999 and the system clock <highlight><bold>126</bold></highlight> indicating the date as Oct. 18, 1999. If the computer system <highlight><bold>100</bold></highlight> determines that the grace period has been entered, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>544</bold></highlight> displays a warning message that indicates the current periodic payment is past due and provides contact information for the organization to which payment is to be made. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> However, if the computer system <highlight><bold>100</bold></highlight> determines that the grace period has not been entered, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>546</bold></highlight> determines whether the pre-notification period (e.g. 3 days before payment due date) has been entered. To this end, the computer system <highlight><bold>100</bold></highlight> determines based on the entered payment password, the stored payment schedule information, and the system clock <highlight><bold>126</bold></highlight> whether the pre-notification period has been entered. For example, if the stored payment schedule information defines monthly payments due on the first of each month and a 3 day pre-notification period, then the computer system <highlight><bold>100</bold></highlight> would determine that the pre-notification period had been entered in response to the user entering the correct password for the month of September and the system clock <highlight><bold>126</bold></highlight> indicating the date as Sep. 30, 1999. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> If the computer system <highlight><bold>100</bold></highlight> determines that the pre-notification period has been entered, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>548</bold></highlight> determines based upon a pre-notification counter and the system clock <highlight><bold>126</bold></highlight> whether the a pre-notification warning message has been displayed for the current date. If the computer system <highlight><bold>100</bold></highlight> determines that the pre-notification warning has already been displayed for the current date, then the computer system <highlight><bold>100</bold></highlight> exits the monitoring method until the next periodic execution of the monitoring method <highlight><bold>500</bold></highlight>. However, if the computer system <highlight><bold>100</bold></highlight> determines that the pre-notification warning has not been display for the current date, then the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>550</bold></highlight> displays a warning message that indicates the date by which the next periodic payment is due. The computer system then in step <highlight><bold>552</bold></highlight> updates the pre-notification counter in order to prevent the pre-notification warning from being displayed again for the current date. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Since the computer system <highlight><bold>100</bold></highlight> executes the monitoring method <highlight><bold>500</bold></highlight> on a periodic basis, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment causes the grace period warning to be displayed each time the computer system <highlight><bold>100</bold></highlight> periodically executes the monitoring method <highlight><bold>500</bold></highlight>. If the computer system <highlight><bold>100</bold></highlight> is configured to execute the monitoring method on a relatively short interval such as <highlight><bold>500</bold></highlight> millisecond, then the computer system <highlight><bold>100</bold></highlight> will essentially cause the grace period warning to be continually displayed once the grace period is entered. It should be appreciated, however, that the grace period warning may be implemented in a less intrusive manner similar to the pre-notification warning by utilizing a grace period counter that causes the grace period message to be displayed less frequently such as once a day, once an hour, or once every 15 minutes. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> A program removal method <highlight><bold>600</bold></highlight> is illustrated in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. In general, the computer system <highlight><bold>100</bold></highlight> executes the program removal method <highlight><bold>600</bold></highlight> in response to receiving the payment password for the last payment period. As depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>602</bold></highlight> re-enables mechanisms which were previously disabled in order to prevent the user from removing the payment assurance application from the computer system <highlight><bold>100</bold></highlight>. More specifically, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment re-enables the MS-DOS format command. To this end, the computer system <highlight><bold>100</bold></highlight> un-encrypts the format command, renames the format command to its standard filename, and stores the un-encrypted and properly named format command in its standard location on the mass storage device <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> In step <highlight><bold>604</bold></highlight>, the computer system <highlight><bold>100</bold></highlight> removes stored configuration information for the payment assurance application from the computer system <highlight><bold>100</bold></highlight>. In particular, the computer system <highlight><bold>100</bold></highlight> removes the password lists, the payment schedule information, the confirmed system time information, and mechanisms for ensuring execution of the payment assurance application upon startup. More specifically, the computer system <highlight><bold>100</bold></highlight> in an exemplary embodiment removes the references to the payment assurance application from the &ldquo;Run&rdquo; and &ldquo;RunOnce&rdquo; keys of the Registry Database. Furthermore, the computer system <highlight><bold>100</bold></highlight> in the exemplary embodiment removes all other keys of the Registry Database associated with the payment assurance applications such as keys used to store the password lists, confirmed system time, and payment schedule information. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> The computer system <highlight><bold>100</bold></highlight> then in step <highlight><bold>606</bold></highlight> removes all files associated with the payment assurance application from the computer system <highlight><bold>100</bold></highlight>. In an exemplary embodiment, the computer system <highlight><bold>100</bold></highlight> essentially deletes the executable file used to implement the payment assurance application from the mass storage device <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> After removing the configuration information and files associated with the payment assurance application, the computer system <highlight><bold>100</bold></highlight> in step <highlight><bold>608</bold></highlight> invokes a reboot operation in order to cause the computer system <highlight><bold>100</bold></highlight> to terminate all executing processes and to complete the removal of the payment assurance program from the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> While the invention has been illustrated and described in detail in the drawings and foregoing description, such illustration and description is to be considered as exemplary and not restrictive in character, it being understood that only exemplary embodiments have been shown and described and that all changes and modifications that come within the spirit of the invention are desired to be protected. For example, the exemplary embodiment of the payment assurance application automatically removes itself from the computer system <highlight><bold>100</bold></highlight> upon entering the password associated with the last payment which is advantageous for purchase-over-time agreement. However, the payment assurance application may be implemented to automatically disable the computer system <highlight><bold>100</bold></highlight> after the last day of the payment schedule which may be advantageous for lease arrangements where the user is to return the computer system <highlight><bold>100</bold></highlight> at the termination of the lease. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of encouraging timely periodic payments that are associated with a computer system, comprising the steps of: 
<claim-text>storing a plurality of passwords in said computer system, each password of said plurality of passwords associated with a separate payment period; </claim-text>
<claim-text>determining based upon said plurality of passwords whether a supplied password corresponds to a current payment period; and </claim-text>
<claim-text>enabling use of said computer system based upon determining that said supplied password corresponds to said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of: 
<claim-text>disabling use of said computer system based upon determining that said supplied password does not correspond to said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of: 
<claim-text>terminating execution of all processes on said computer system based upon determining that said supplied password does not correspond to said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of determining whether said supplied password corresponds to a predetermined grace period associated with said current payment period, wherein said enabling step further comprises the step of: 
<claim-text>enabling use of said computer system based further upon determining that said supplied password corresponds to said predetermined grace period associated with said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the steps of: 
<claim-text>in response to determining that said supplied password corresponds to said current payment period, determining whether said computer system is within a pre-notification period associated with a second payment period that immediately follows said current payment period, and </claim-text>
<claim-text>displaying a warning message concerning said second payment period in response to determining that said computer system is within said pre-notification period associated with said second payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the steps of: 
<claim-text>detecting whether a system time of said computer system has been changed in an unauthorized manner; and </claim-text>
<claim-text>disabling said computer system based upon detecting that said system time has been changed in said unauthorized manner. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A computer system that encourages timely periodic payments, comprising: 
<claim-text>a non-volatile storage medium in which is stored a plurality of passwords, each password of said plurality of passwords associated with a separate payment period; </claim-text>
<claim-text>a system clock operable to provide a system time; </claim-text>
<claim-text>a processor operably coupled to said non-volatile storage medium and said system clock; and </claim-text>
<claim-text>a memory operably coupled to said processor, said memory comprising a plurality of instructions, which when executed by said processor cause said processor to: 
<claim-text>determine based upon said system time and said plurality of passwords whether a supplied password corresponds to a current payment period; and </claim-text>
<claim-text>enable execution of user processes based upon determining that said supplied password corresponds to said current payment period. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said plurality of instructions when executed by said processor further cause said processor to: 
<claim-text>disable execution of user processes based upon determining that said supplied password does not correspond to said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said plurality of instructions when executed by said processor further cause said processor to: 
<claim-text>terminate execution of all processes on said computer system based upon determining that said supplied password does not correspond to said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said plurality of instructions when executed by said processor further cause said processor to: 
<claim-text>determine whether said supplied password corresponds to a predetermined grace period associated with said current payment period, </claim-text>
<claim-text>enable execution of user processes based further upon determining that said supplied password corresponds to said predetermined grace period associated with said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said plurality of instructions when executed by said processor further cause said processor to: 
<claim-text>determine, in response to determining that said supplied password corresponds to said current payment period, whether said system time is within a pre-notification period associated with a second payment period that immediately follows said current payment period, and </claim-text>
<claim-text>displaying a warning message concerning said second payment period in response to determining that said system time is within said pre-notification period associated with said second payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said plurality of instructions when executed by said processor further cause said processor to: 
<claim-text>detect whether said system time of said system clock has been changed in an unauthorized manner; and </claim-text>
<claim-text>disable execution of user processes based upon detecting that said system time has been changed in said unauthorized manner. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A computer readable medium for encouraging timing periodic payments associated with a computer system, said computer readable medium comprising a plurality of instructions which when executed by said computer system cause said computer system to: 
<claim-text>determine based upon a plurality of passwords associated with a plurality of payment periods whether a supplied password corresponds to a current payment period; and </claim-text>
<claim-text>enable use of said computer system based upon determining that said supplied password corresponds to said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said plurality of instructions when executed by said computer system further cause said computer system to: 
<claim-text>disable use of said computer system based upon determining that said supplied password does not correspond to said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said plurality of instructions when executed by said computer system further cause said computer system to: 
<claim-text>terminate execution of all processes on said computer system based upon determining that said supplied password does not correspond to said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said plurality of instructions when executed by said computer system further cause said computer system to: 
<claim-text>determine whether said supplied password corresponds to a predetermined grace period associated with said current payment period, </claim-text>
<claim-text>enable use of said computer system based further upon determining that said supplied password corresponds to said predetermined grace period associated with said current payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said plurality of instructions when executed by said computer system further cause said computer system to: 
<claim-text>determine, in response to determining that said supplied password corresponds to said current payment period, whether said computer system is within a pre-notification period associated with a second payment period that immediately follows said current payment period, and </claim-text>
<claim-text>displaying a warning message concerning said second payment period in response to determining that said computer system is within said pre-notification period associated with said second payment period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said plurality of instructions when executed by said computer system further cause said computer system to: 
<claim-text>detect whether a system clock of said computer system has been changed in an unauthorized manner; and </claim-text>
<claim-text>disable use of said computer system based upon detecting that said system time has been changed in said unauthorized manner.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004875A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004875A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004875A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004875A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004875A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004875A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004875A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004875A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
