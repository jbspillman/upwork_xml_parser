<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002858A1-20030102-D00000.TIF SYSTEM "US20030002858A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00001.TIF SYSTEM "US20030002858A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00002.TIF SYSTEM "US20030002858A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00003.TIF SYSTEM "US20030002858A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00004.TIF SYSTEM "US20030002858A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00005.TIF SYSTEM "US20030002858A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00006.TIF SYSTEM "US20030002858A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00007.TIF SYSTEM "US20030002858A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00008.TIF SYSTEM "US20030002858A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00009.TIF SYSTEM "US20030002858A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00010.TIF SYSTEM "US20030002858A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00011.TIF SYSTEM "US20030002858A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00012.TIF SYSTEM "US20030002858A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00013.TIF SYSTEM "US20030002858A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00014.TIF SYSTEM "US20030002858A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00015.TIF SYSTEM "US20030002858A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00016.TIF SYSTEM "US20030002858A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00017.TIF SYSTEM "US20030002858A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00018.TIF SYSTEM "US20030002858A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00019.TIF SYSTEM "US20030002858A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00020.TIF SYSTEM "US20030002858A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00021.TIF SYSTEM "US20030002858A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00022.TIF SYSTEM "US20030002858A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00023.TIF SYSTEM "US20030002858A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00024.TIF SYSTEM "US20030002858A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00025.TIF SYSTEM "US20030002858A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00026.TIF SYSTEM "US20030002858A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00027.TIF SYSTEM "US20030002858A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00028.TIF SYSTEM "US20030002858A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00029.TIF SYSTEM "US20030002858A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00030.TIF SYSTEM "US20030002858A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00031.TIF SYSTEM "US20030002858A1-20030102-D00031.TIF" NDATA TIF>
<!ENTITY US20030002858A1-20030102-D00032.TIF SYSTEM "US20030002858A1-20030102-D00032.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002858</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10224323</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020821</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>7-085693</doc-number>
</priority-application-number>
<filing-date>19950411</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04N005/781</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>386</class>
<subclass>098000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>386</class>
<subclass>125000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Recording medium, recording apparatus and recording method for recording data into recording medium, and reproducing apparatus and reproducing method for reproducing data from recording medium</title-of-invention>
</technical-information>
<continuity-data>
<division-of>
<parent-child>
<child>
<document-id>
<doc-number>10224323</doc-number>
<kind-code>A1</kind-code>
<document-date>20020821</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09785161</doc-number>
<document-date>20010220</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</division-of>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Shinichi</given-name>
<family-name>Kikuchi</family-name>
</name>
<residence>
<residence-non-us>
<city>Yokohama-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Kazuhiko</given-name>
<family-name>Taira</family-name>
</name>
<residence>
<residence-non-us>
<city>Yokohama-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Tomoaki</given-name>
<family-name>Kurano</family-name>
</name>
<residence>
<residence-non-us>
<city>Yokohama-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Hideki</given-name>
<family-name>Mimura</family-name>
</name>
<residence>
<residence-non-us>
<city>Yokohama-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>KABUSHIKI KAISHA TOSHIBA</organization-name>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>PILLSBURY WINTHROP, LLP</name-1>
<name-2></name-2>
<address>
<address-1>P.O. BOX 10500</address-1>
<city>MCLEAN</city>
<state>VA</state>
<postalcode>22102</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Data is recorded in a data area of a disk in a hierarchical structure of program chains, programs, cells and packs, each pack is constructed by a pack header for identifying the pack and a packet having a data stream recorded therein, the packet has a packet header having a stream ID indicating at least a private stream and a sub-stream ID indicating the classification of the private stream described therein, and the classification indicates packet data of Dolby AC3 audio data, packet data of linear audio data, packet data of sub-picture data, or packet data of computer data. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates to a recording medium such as an optical disk for recording data items of different classifications used for different purposes, for example, compressed moving picture data and audio data, a recording apparatus for recording data into the recording medium, a recording method for recording data into the recording medium, a reproducing apparatus for reproducing data from the recording medium, and a reproducing method for reproducing data from the recording medium. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Conventionally, as a system for compressing (coding) digital moving picture image data and audio data, an MPEG (Moving Picture Experts Group) system is internationally standardized. The MPEG compression system is a system for subjecting digital moving picture image data and audio data to the variable-length compression. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Further, the system format system corresponding to the MPEG compression system is defined as an MPEG system layer. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The MPEG system layer is so defined as to be easily dealt with in a communication system, and transfer starting time and reproduction starting time represented by using reference time are defined for moving picture data, audio data and other data so that the above data items can be transferred and reproduced in synchronism with one another. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Further, in the MPEG system layer, the data classifications of moving picture compressed data stream (MPEG moving picture data) and audio compressed data stream (MPEG audio data) are defined by use of stream ID, and the other data classification can be defined by the user as a private stream. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> However, in this case, the user can add but two kinds of data classification which, and the expandability is limited. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> As a result, it becomes impossible to freely deal with various classifications of data items and cope with the condition in the multimedia age. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Further, if a maximum data length is set for packets of data other than MPEG audio data and if the data length of the packet cannot be divided by the number of data items of a completed frame data block, the preceding data block will enter the packet and there occurs a possibility that the starting address of the frame data block cannot se determined, and when data is reproduced halfway, it may be impossible to reproduce the data. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> An object of this invention is to make it possible to deal with various classifications of data items. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Further, another object of this invention is to make it possible to reproduce data halfway when data to be dealt with is linear audio data, and make it possible to easily detect the environment in which date can be used when data to be dealt with is computer data. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> According to this invention, there is provided a recording medium comprising a management area formed in part of an area; and a data area formed in another area; wherein data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack is constructed by a pack header for identifying the pack and a packet having a data stream recorded therein, and the packet is constructed by a packet header having data indicating at least a private stream, data indicating the classification of the private stream, and packet data corresponding to the classification; and management data for managing the connection between the program chains, programs, cells and packs in the data area is recorded in the management area. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> According to this invention, there is provided a recording medium comprising a management area formed in part of an area; and a data area formed in another area; wherein a plurality of programs are recorded in the data area in a hierarchical structure in which one program is constructed by a plurality of packs, each pack is constructed by a pack header for identifying the pack and a packet having a data stream recorded therein, and the packet is constructed by a packet header having data indicating at least a private stream, data indicating the classification of the private stream, and packet data corresponding to the classification; and management data for managing the connection between the programs and packs in the data area is recorded in the management area. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> According to this invention, there is provided a recording apparatus for recording data on a recording medium which-includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising reception means for receiving audio data or sub-picture data; first creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of audio data received by the reception means, a start address of the frame data, a stream number of the audio data and data indicating the audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; second creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of sub-picture data received by the reception means, a stream number of the sub-picture data and data indicating the sub-picture data, and a packet header having a packet length and data indicating that the packet data is a private stream; and recording means for recording the pack created by the first and second creating means on the recording medium. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> According to this invention, there is provided a recording apparatus for recording data on a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising reception means for receiving Dolby AC3 audio data, linear audio data, computer data or sub-picture data; first creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of Dolby AC3 audio data received by the reception means, a start address of the frame data, a stream number of the Dolby AC3 audio data and data indicating the Dolby AC3 audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; second creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of linear audio data received by the reception means, a start address of the frame data, a stream number of the linear audio data and data indicating the linear audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; third creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of computer data received by the reception means, environmental data of an application CPU and application OS of the computer data and data indicating the computer data, and a packet header having a packet length and data indicating that the packet data is a private stream; fourth creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of sub-picture data received by the reception means, a stream number of the sub-picture data and data indicating the sub-picture data, and a packet header having a packet length and data indicating that the packet data is a private stream; and recording means for recording the pack created by the first to fourth creating means on the recording medium. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> According to this invention, there is provided a reproducing apparatus for reproducing recorded data for each pack from a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising reading means for reading data for each pack on the recording medium; first determining means for determining whether or not data indicating a private stream is present in a packet header of a pack read by the reading means and determining data length; second determining means for determining whether data is audio data or sub-picture data according to classification data of a stream which is successively read when the first determining means has determined the private stream; first extraction means for extracting audio data in the pack data read by the reading means by an amount corresponding to the data length determined by the first determining means according to a start address of frame data which is successively read after the classification data of the stream when the second determining means has determined the audio data; second extraction means for extracting data in the pack data successively read by the reading means after the classification data of the stream by an amount corresponding to the data length determined by the first determining means when the second determining means has determined the sub-picture data; demodulating means for subjecting data extracted by the first or second extraction means to a demodulation process corresponding to classification of data determined by the second determining means; and output means for outputting data demodulated by the demodulating means. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> According to this invention, there is provided a reproducing apparatus for reproducing recorded data for each pack from a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising reading means for reading data for each pack on the recording medium; first determining means for determining whether or not data indicating a private stream is present in a packet header of a pack read by the reading means and determining data length; second determining means for determining whether data is Dolby AC3 audio-data, linear audio data, computer data or sub-picture data according to classification data of a stream which is successively read when the first determining means has determined the private stream; first extraction means for extracting Dolby AC3 audio data or linear audio data in the pack data read by the reading means by an amount corresponding to the data length determined by the first determining means according to a start address of frame data which is successively read after the classification data of the stream when the second determining means has determined the Dolby AC3 audio data or linear audio data; second extraction means for extracting environmental data of application CPU and application OS successively read after the classification data of the stream and extracting data in the pack data successively read by the reading means after the environmental data by an amount corresponding to the data length determined by the first determining means when the second determining means has determined the computer data; third extraction means for extracting data in the pack data successively read by the reading means after the classification data of the stream by an amount corresponding to the data length determined by the first determining means when the second determining means has determined the sub-picture data; demodulating means for subjecting data extracted by the first or third extraction means to a demodulation process corresponding to the classification of data determined by the second determining means; first output means for outputting data demodulated by the demodulating means; and second output means for outputting program data extracted by the second extraction means and environmental data thereof. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Additional objects and advantages of the invention will be set forth in the description which follows, and in part will be obvious from the description, or may be learned by practice of the invention. The objects and advantages of the invention may be realized and obtained by means of the instrumentalities and combinations particularly pointed out in the appended claims.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate a presently preferred embodiment of the invention and, together with the general description given above and the detailed description of the preferred embodiment given below, serve to explain the principles of the invention. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic block diagram of an optical disk apparatus according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a detailed block diagram of the mechanical section of the disk drive unit of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic perspective view of the structure of an optical disk loaded in the disk drive unit of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows the structure of the logic format of the optical disk of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the structure of the video manager of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>; </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows an example of the structure of the video object set (VOBS) shorn in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>; </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram to help explain the structure of the video object unit of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows the parameters and contents of the video manger information management table (VMGI_MAT) in the video manager (VMGI) of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>; </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows the structure of the title search pointer table (TT_SRPT) in the video manager (VMGI) of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>; </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows the parameters and contents of the title search pointer table information (TT-SRPT) in the title search pointer table (TSPT) of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>; </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows the parameters and contents of the title search pointer (TT_SRP) corresponding to the input number in the title search pointer table (TSPT) of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>; </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> illustrates the structure of the video title set of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>; </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows the parameters and contents of the video title set information management table (VTSI_MAT) of the video title set information (VTSI) of <cross-reference target="DRAWINGS">FIG. 12</cross-reference>; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates the structure of the video title set program chain information table (VTS_PGCIT) of the video title set information (VTSI) of <cross-reference target="DRAWINGS">FIG. 12</cross-reference>; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows the parameters and contents of the information (VTS_PGCIT_I) in the video title set program chain information table (VTS_PGCIT) of <cross-reference target="DRAWINGS">FIG. 14</cross-reference>; </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows the parameters and contents of the search pointer (VTS_PGCIT_SRP) corresponding to the program chain in the video title set program chain information table (VTS_PGCIT) of <cross-reference target="DRAWINGS">FIG. 14</cross-reference>; </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> illustrates the structure of the program chain information (VTS_PGCI) in the video set corresponding to the program chain in the video title set program chain information table (VTS_PGCIT) of <cross-reference target="DRAWINGS">FIG. 14</cross-reference>; </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> shows the parameters and contents of the program chain general information (PGC_GI) in the program chain information (VTS_PGCI) of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>; </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> illustrates the structure of a program chain map (PGC_PGMAP) of the program chain information (VTS_PGCI) of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>; </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> shows the parameters and contents of the entry cell numbers (ECELLN) corresponding to the programs written in the program chain map (PGC_PGMAP) of <cross-reference target="DRAWINGS">FIG. 19</cross-reference>; </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> illustrate the structure of the cell playback information table (C_PBIT) of the program chain information (VTS_PGCI) of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>; </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> shows the parameters and contents of the cell playback information table (C_PBIT) of <cross-reference target="DRAWINGS">FIG. 21</cross-reference>; </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> illustrates the structure of the cell position information (C_POSI) in the program chain information (VTS_PGCI) of <cross-reference target="DRAWINGS">FIG. 18</cross-reference>; </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> shows the parameters and contents of the cell position information (C_POSI) of <cross-reference target="DRAWINGS">FIG. 23</cross-reference>; </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> illustrates the structure of the navigation pack of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>; </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> illustrates the structure of the video, audio, sub-picture, or VBI pack of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>; </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> shows the parameters and contents of the playback control information (PCI) in the navigation pack of <cross-reference target="DRAWINGS">FIG. 26</cross-reference>; </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> shows the parameters and contents of the general information (PCI_GI) in the playback control information (PCI) of <cross-reference target="DRAWINGS">FIG. 27</cross-reference>; </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference> shows the parameters and contents of the disk search information (DSI) in the navigation pack of <cross-reference target="DRAWINGS">FIG. 26</cross-reference>; </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> shows the parameters and contents of the DSI general information (DSI_GI) in the disk search information of <cross-reference target="DRAWINGS">FIG. 29</cross-reference>; </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> shows the parameters and contents of the synchronizing playback information (SYNCI) on the video object (VOB) of <cross-reference target="DRAWINGS">FIG. 29</cross-reference>; </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 32, 33</cross-reference> are diagrams for illustrating the structure of a pack; </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 34</cross-reference> is a diagram for illustrating an example of adjustment in a case where the adjustment data length is seven bytes or more; </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 35</cross-reference> is a diagram for illustrating an example of adjustment in a case where the adjustment data length is six bytes or less; </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 36A, 36B</cross-reference> are diagrams for illustrating the structure of a video pack; </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 37A, 37B</cross-reference> are diagrams for illustrating the structure of an audio pack; </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 38</cross-reference> is a diagram for illustrating the structure of a sub-picture pack; </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 39</cross-reference> is a diagram for illustrating the structure of a computer data pack; </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 40</cross-reference> is a diagram for illustrating the environmental classification of computer data; </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 41</cross-reference> is a diagram for illustrating the structure of stream ID; </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 42</cross-reference> is a diagram for illustrating the content of sub-stream ID for private stream <highlight><bold>1</bold></highlight>; </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 43</cross-reference> is a diagram for illustrating the content of sub-stream ID for private stream <highlight><bold>2</bold></highlight>; </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 44</cross-reference> is a diagram for illustrating the structure of an audio pack and packet; </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 45</cross-reference> is a diagram for illustrating the structure of a computer data pack and packet; </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 46</cross-reference> is a diagram for illustrating the structure of a sub-picture pack and packet; </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 47</cross-reference> is a block diagram for illustrating the construction of a packet transfer processing section; </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 48</cross-reference> is a flowchart for illustrating the procedure of a reproduction process for video data, audio data, sub-picture data, and computer data; </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 49</cross-reference> is a flowchart for illustrating the packet transferring process; </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 50</cross-reference> is a block diagram of an encoder system that encodes the video data and generates a video file; </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 51</cross-reference> is a flowchart for an encoding process of <cross-reference target="DRAWINGS">FIG. 50</cross-reference>; </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 52</cross-reference> is a flowchart for combining the main video data, audio data, and sup-picture data all encoded according to the flow of <cross-reference target="DRAWINGS">FIG. 51</cross-reference> to create a video data file; </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 53</cross-reference> is a block diagram of a disk formatter system that records the formatted video files on an optical disk; </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 54</cross-reference> is a flowchart for creating logic data to be recorded on a disk in the disk formatter of <cross-reference target="DRAWINGS">FIG. 53</cross-reference>; </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 55</cross-reference> is a flowchart for creating from the logic data the physical data to be recorded on a disk; and </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 56</cross-reference> is a schematic diagram of a system that transfers the video title set of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> via a communication route.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> Hereinafter, referring to the accompanying drawings, an optical disk reproducing apparatus according to an embodiment of the present invention will be explained. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of an optical disk reproducing apparatus that reproduces the data from an optical disk associated with an embodiment of the present invention. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of the disk drive section that drives the optical disk shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows the structure of the optical disk shown in <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference>. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the optical disk reproducing apparatus comprises a key/display section <highlight><bold>4</bold></highlight>, a monitor section <highlight><bold>6</bold></highlight>, and a speaker section <highlight><bold>8</bold></highlight>. When the user operates the key/display section <highlight><bold>4</bold></highlight>, this causes the recorded data to be reproduced from an optical disk <highlight><bold>10</bold></highlight>. The recorded data contains video data, sub-picture data, and audio data, which are converted into video signals and audio signals. The monitor section <highlight><bold>6</bold></highlight> displays images according to the video signals and the speaker section <highlight><bold>8</bold></highlight> generates sound according to the audio signals. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> It is known that the optical disk <highlight><bold>10</bold></highlight> is available with various structures. For instance, one type of the optical disk <highlight><bold>10</bold></highlight> is a read-only disk on which data is recorded with a high density as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. The optical disk <highlight><bold>10</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, is made up of a pair of composite layers <highlight><bold>18</bold></highlight> and an adhesive layer <highlight><bold>20</bold></highlight> sandwiched between the composite disk layers <highlight><bold>18</bold></highlight>. Each of the composite disk layers <highlight><bold>18</bold></highlight> is composed of a transparent substrate <highlight><bold>14</bold></highlight> and a recording layer or a light-reflecting layer <highlight><bold>16</bold></highlight>. The disk layer <highlight><bold>18</bold></highlight> is arranged so that the light-reflecting layer <highlight><bold>16</bold></highlight> may be in contact with the surface of the adhesive layer <highlight><bold>20</bold></highlight>. A center hole <highlight><bold>22</bold></highlight> is made in the optical disk <highlight><bold>10</bold></highlight>. On the periphery of the center hole <highlight><bold>22</bold></highlight> on both sides, clamping areas <highlight><bold>24</bold></highlight> are provided which are used to clamp the optical disk <highlight><bold>10</bold></highlight> during its rotation. When the disk <highlight><bold>10</bold></highlight> is loaded in the optical disk apparatus, the spindle of a spindle motor <highlight><bold>12</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is inserted into the center hole <highlight><bold>22</bold></highlight>. As long as the disk is being rotated, it continues clamped at the clamping areas <highlight><bold>24</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the optical disk <highlight><bold>10</bold></highlight> has an information zone <highlight><bold>25</bold></highlight> around the clamping zone <highlight><bold>24</bold></highlight> on each side, the information zones allowing the information to be recorded on the optical disk <highlight><bold>10</bold></highlight>. In each information area <highlight><bold>25</bold></highlight>, its outer circumference area is determined to be a lead-out area <highlight><bold>26</bold></highlight> in which no information is normally recorded, its inner circumference area adjoining the clamping area <highlight><bold>24</bold></highlight> is determined to be a lead-in area <highlight><bold>27</bold></highlight> in which no information is normally recorded, and the area between the lead-out area <highlight><bold>26</bold></highlight> and the lead-in area <highlight><bold>27</bold></highlight> is determined to be a data recording area <highlight><bold>28</bold></highlight>. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> At the recording layer <highlight><bold>16</bold></highlight> in the information area <highlight><bold>25</bold></highlight>, a continuous spiral track is normally formed as an area in which data is to be recorded. The continuous track is divided into a plurality of physical sectors, which are assigned serial numbers. On the basis of the sectors, data is recorded. The data recording area <highlight><bold>28</bold></highlight> in the information recording area <highlight><bold>25</bold></highlight> is an actual data recording area, in which management data, main video data, sub-picture data, and audio data are recorded in the form of pits (that is, in the form of changes in the physical state) as explained later. With the read-only optical disk <highlight><bold>10</bold></highlight>, a train of pits is previously formed in the transparent substrate <highlight><bold>14</bold></highlight> by a stamper, a reflecting layer is formed by evaporation on the surface of the transparent substrate <highlight><bold>14</bold></highlight> in which the pit train is formed, and the reflecting layer serves as the recording layer <highlight><bold>16</bold></highlight>. In the read-only optical disk <highlight><bold>10</bold></highlight>, a groove is normally not provided as a track and the pit train in the surface of the transparent substrate <highlight><bold>14</bold></highlight> serves as a track. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> The optical disk apparatus <highlight><bold>12</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, further comprises a disk drive section <highlight><bold>30</bold></highlight>, a system CPU section <highlight><bold>50</bold></highlight>, a system ROM/RAM section <highlight><bold>52</bold></highlight>, a system processor section <highlight><bold>54</bold></highlight>, a data RAM section <highlight><bold>60</bold></highlight>, a video decoder <highlight><bold>58</bold></highlight>, an audio decoder section <highlight><bold>60</bold></highlight>, a sub-picture decoder section <highlight><bold>62</bold></highlight>, and a D/A and data reproducing section <highlight><bold>64</bold></highlight>. The system processor section <highlight><bold>54</bold></highlight> is provided with a system time clock (STC) <highlight><bold>54</bold></highlight>A and a register <highlight><bold>54</bold></highlight>B. The video decorder section <highlight><bold>58</bold></highlight>, audio decorder section <highlight><bold>60</bold></highlight>, and sub-picture decorder section <highlight><bold>62</bold></highlight> are also provided with system time clocks (STC) <highlight><bold>58</bold></highlight>A, <highlight><bold>60</bold></highlight>A, <highlight><bold>62</bold></highlight>A, respectively. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the disk drive section <highlight><bold>30</bold></highlight> contains a motor driving circuit <highlight><bold>11</bold></highlight>, a spindle motor <highlight><bold>12</bold></highlight>, an optical head <highlight><bold>32</bold></highlight> (i.e., an optical pickup), a feed motor <highlight><bold>33</bold></highlight>, a focus circuit <highlight><bold>36</bold></highlight>, a feed motor driving circuit <highlight><bold>37</bold></highlight>, a tracking circuit <highlight><bold>38</bold></highlight>, a head amplifier <highlight><bold>40</bold></highlight>, and a servo processing circuit <highlight><bold>44</bold></highlight>. The optical disk <highlight><bold>10</bold></highlight> is placed on the spindle motor <highlight><bold>12</bold></highlight> driven by the motor driving circuit <highlight><bold>11</bold></highlight> and is rotated by the spindle motor <highlight><bold>12</bold></highlight>. The optical head <highlight><bold>32</bold></highlight> that projects a laser beam on the optical disk <highlight><bold>10</bold></highlight> is located under the optical disk <highlight><bold>10</bold></highlight>. The optical head <highlight><bold>32</bold></highlight> is placed on a guide mechanism (not shown). The feed motor driving circuit <highlight><bold>37</bold></highlight> is provided to supply a driving signal to the feed motor <highlight><bold>33</bold></highlight>. The motor <highlight><bold>33</bold></highlight> is driven by the driving signal and moves in and out the optical head <highlight><bold>32</bold></highlight> across the radius of the optical disk <highlight><bold>10</bold></highlight>. The optical head <highlight><bold>32</bold></highlight> is provided with an object lens <highlight><bold>34</bold></highlight> positioned so as to face the optical disk <highlight><bold>10</bold></highlight>. The object lens <highlight><bold>34</bold></highlight> is moved according to the driving signal supplied from the focus circuit <highlight><bold>36</bold></highlight> so as to move along its optical axis. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> To reproduce the data from the above optical disk, the optical head <highlight><bold>32</bold></highlight> projects a laser beam on the optical disk <highlight><bold>10</bold></highlight> via the object lens <highlight><bold>34</bold></highlight>. The object lens <highlight><bold>34</bold></highlight> is moved little by little across the radius of the optical disk <highlight><bold>10</bold></highlight> according to the driving signal supplied from the tracking circuit <highlight><bold>38</bold></highlight>. Furthermore, the object lens <highlight><bold>34</bold></highlight> is moved along its optical axis according to the driving signal supplied from the focusing circuit <highlight><bold>36</bold></highlight> so that its focal point may be positioned on the recording layer <highlight><bold>16</bold></highlight> of the optical disk <highlight><bold>10</bold></highlight>. This causes the laser beam to form the smallest beam spot on the spiral track (i.e., the pit train), enabling the beam spot to trace the track. The laser beam is reflected from the recording layer <highlight><bold>16</bold></highlight> and returned to the optical head <highlight><bold>32</bold></highlight>. The optical head <highlight><bold>32</bold></highlight> converts the beam reflected from the optical disk <highlight><bold>10</bold></highlight> into an electric signal, which is supplied from the optical head <highlight><bold>32</bold></highlight> to the servo processing circuit <highlight><bold>44</bold></highlight> via the head amplifier <highlight><bold>40</bold></highlight>. From the electric signal, the servo processing circuit <highlight><bold>44</bold></highlight> produces a focus signal, a tracking signal, and a motor control signal and supplies these signals to the focus circuit <highlight><bold>36</bold></highlight>, tracking circuit <highlight><bold>38</bold></highlight>, and motor driving circuit <highlight><bold>11</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> Therefore, the object lens <highlight><bold>34</bold></highlight> is moved along its optical axis and across the radius of the optical disk <highlight><bold>10</bold></highlight>, its focal point is positioned on the recording layer <highlight><bold>16</bold></highlight> of the optical disk <highlight><bold>10</bold></highlight>, and the laser beam forms the smallest beam spot on the spiral track. Furthermore, the spindle motor <highlight><bold>12</bold></highlight> is rotated by the motor driving circuit <highlight><bold>11</bold></highlight> at a specific rotating speed. This allows the beam to track at, for example, a constant linear speed. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> The system CPU section <highlight><bold>50</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> supplies to the servo processing circuit <highlight><bold>44</bold></highlight> a control signal serving as an access signal. In response to the control signal, the servo processing circuit <highlight><bold>44</bold></highlight> supplies a head-moving signal to the feed motor driving circuit <highlight><bold>37</bold></highlight>, which supplies a driving signal to the feed motor <highlight><bold>33</bold></highlight>. Then, the feed motor <highlight><bold>33</bold></highlight> is driven, causing the optical head <highlight><bold>32</bold></highlight> to move across the radius of the optical disk <highlight><bold>10</bold></highlight>. Then, the optical head <highlight><bold>32</bold></highlight> accesses a specific sector formed at the recording layer <highlight><bold>16</bold></highlight> of the optical disk <highlight><bold>10</bold></highlight>. The data is reproduced from the specific sector by the optical head <highlight><bold>32</bold></highlight>, which then supplies it to the head amplifier <highlight><bold>40</bold></highlight>. The head amplifier <highlight><bold>40</bold></highlight> amplifies the reproduced data, which is outputted at the disk drive section <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> The reproduced data is transferred and stored in a data RAM section <highlight><bold>56</bold></highlight> by the system processor section <highlight><bold>54</bold></highlight> which is controlled by the system CPU section <highlight><bold>50</bold></highlight> which is operated in accordance with the programs stored in the system ROM/RAM section <highlight><bold>52</bold></highlight>. The stored reproduced data is processed at the system processor section <highlight><bold>54</bold></highlight>, which sorts the data into video data, audio data, and sub-picture data, which are supplied to the video decoder section <highlight><bold>58</bold></highlight>, audio decoder section <highlight><bold>60</bold></highlight>, and sub-picture decoder section <highlight><bold>62</bold></highlight>, respectively, and are decoded at the respective decoders. The D/A and data-reproducing section <highlight><bold>64</bold></highlight> converts the decoded video data, audio data, and sub-picture data into an analog video signal, an analog audio signal, and an analog sub-picture signal, subjects these signal to a mixing process, and supplies the resulting video signal and sub-picture signal to the monitor section <highlight><bold>6</bold></highlight> and the resulting audio signal to the speaker section <highlight><bold>8</bold></highlight>. Then, on the basis of the video signal and sup-picture signal, an image is displayed on the monitor section <highlight><bold>6</bold></highlight> and according to the audio signal, sound is simultaneously reproduced from the speaker section <highlight><bold>8</bold></highlight>. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> The detailed operation of the optical disk apparatus of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> will be described later with reference to the logic format of the optical disk explained below. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> The data-recording area <highlight><bold>28</bold></highlight> between the lead-in area <highlight><bold>27</bold></highlight> and the lead-out area <highlight><bold>26</bold></highlight> on the optical disk of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> has a volume and file structure as shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. The structure has been determined in conformity to specific logic format standards, such as Micro UDF or ISO 9660. The data recording area <highlight><bold>28</bold></highlight> is physically divided into a plurality of sectors as described earlier. These physical sectors are assigned serial numbers. In the following explanation, a logical address means a logical sector number (LSN) as determined in Micro UDF or ISO 9660. Like a physical sector, a logical sector contains 2048 bytes. The numbers (LSN) of logical sectors are assigned consecutively in ascending order as the physical sector number increments. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the volume and file structure is a hierarchic structure and contains a volume and file structure area <highlight><bold>70</bold></highlight>, a video manager <highlight><bold>71</bold></highlight>, at least one video title set &num;i <highlight><bold>72</bold></highlight>, and another recorded area <highlight><bold>73</bold></highlight>. These areas <highlight><bold>70</bold></highlight>, <highlight><bold>71</bold></highlight>, <highlight><bold>72</bold></highlight>, <highlight><bold>73</bold></highlight> are aligned with the boundaries between logical sectors. As with a conventional CD, a logical sector is defined as a set of 2048 bytes. Accordingly, one logical sector corresponds to one logical block. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> The volume and file structure area <highlight><bold>70</bold></highlight> corresponds to a management area determined in Micro UDF or ISO 9660. According to the description in the management area, the video manager <highlight><bold>71</bold></highlight> is stored in the system ROM/RAM section <highlight><bold>52</bold></highlight>. As explained with reference to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the information used to manage video title sets <highlight><bold>72</bold></highlight> is written in the video manager <highlight><bold>71</bold></highlight>, which is composed of a plurality of files, starting with file &num;<highlight><bold>0</bold></highlight>. In each video title set <highlight><bold>72</bold></highlight>, compressed video data, compressed audio data, compressed sub-picture data, and the reproducing information about these data items are stored as explained later. Each video title set is composed of a plurality of files <highlight><bold>74</bold></highlight>. The number of video title sets <highlight><bold>72</bold></highlight> is limited to a maximum of 99. Furthermore, the number of files <highlight><bold>74</bold></highlight> (from file &num;j to file &num;j&plus;9) constituting each video title set <highlight><bold>72</bold></highlight> is determined to be a maximum of 10. These files <highlight><bold>72</bold></highlight> are also aligned with the boundaries between logical sectors. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> In the other recorded area <highlight><bold>73</bold></highlight>, the information capable of utilizing the aforementioned video title sets <highlight><bold>72</bold></highlight> is recorded. The other recorded areas <highlight><bold>73</bold></highlight> are not necessarily provided. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the video manager <highlight><bold>71</bold></highlight> contains at least three items each corresponding to individual files <highlight><bold>74</bold></highlight>. Specifically, the video manager <highlight><bold>71</bold></highlight> is made up of video manager information (VMGI) <highlight><bold>75</bold></highlight>, a video object set for video manager menu (VMGM_VOBS) <highlight><bold>76</bold></highlight>, and backup of video manager information (VMGI_BUP) <highlight><bold>77</bold></highlight>. Here, the video manager information (VMGI) <highlight><bold>75</bold></highlight> and the backup of video manager information (VMGI_BUP) <highlight><bold>77</bold></highlight> are determined to be indispensable items, and the video object set for video manager menu (VMGM_VOBS) <highlight><bold>76</bold></highlight> is determined to be an optional item. In the video object set <highlight><bold>76</bold></highlight> for VMGM, the video data, audio data, and sup-picture data about a menu of the volumes of the optical disk managed by the video manager <highlight><bold>71</bold></highlight> are stored. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> By the video object set <highlight><bold>76</bold></highlight> for VMGM (VMGM_VOBS), the volume name of the optical disk <highlight><bold>10</bold></highlight>, the sound accompanying the volume name representation, and the description of the sub-picture are displayed and at the same time, selectable items are provided in the form of sub-pictures as in video reproduction explained later. For example, the video object set <highlight><bold>76</bold></highlight> for VMGM (VMGM_VOBS) indicates that the optical disk <highlight><bold>10</bold></highlight> contains the video data representing the matches a boxer played until he won a world championship. Specifically, a fighting pose of boxer X, together with a volume name, such as the glorious history of boxer X, is reproduced in the form of video data and at the same time, his theme song is reproduced in sound, and his chronological table is provided in a sup-picture. Furthermore, the user is asked which language option to select, English or Japanese, in doing the narration of the matches. At the same time, the user is asked whether a caption in another language should be provided in a sub-picture or which language option should be selected for a caption. Thus, for example, the VMGM video object set <highlight><bold>76</bold></highlight> (VMGM_VOBS) provides the user with preparations to watch a video of a match of boxer X in English speech with a sub-picture using Japanese captions. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> Here, the structure of a video object set (VOBS) <highlight><bold>82</bold></highlight> will be described with reference to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows an example of a video object set (VOBS) <highlight><bold>82</bold></highlight>. The video object set (VOBS) <highlight><bold>82</bold></highlight> comes in three types for two menus and a title. Specifically, the video object set (VOBS) <highlight><bold>82</bold></highlight> contains the video title set for video manager menu (VMGM_VOBS) <highlight><bold>76</bold></highlight>, a video object set (VTSM_VOBS) <highlight><bold>95</bold></highlight> for a menu in the video title sets <highlight><bold>72</bold></highlight> and a video object set (VTSTT_VOBS) <highlight><bold>82</bold></highlight> for the titles of at least one video title set <highlight><bold>72</bold></highlight> in a video title set (VTS) <highlight><bold>72</bold></highlight> as explained later. Each video object set <highlight><bold>82</bold></highlight> has the same structure except that their uses differ. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 6, a</cross-reference> video object set (VOBS) <highlight><bold>82</bold></highlight> is defined as a set of one or more video objects (VOB) <highlight><bold>83</bold></highlight>. The video objects <highlight><bold>83</bold></highlight> in a video object set (VOBS) <highlight><bold>82</bold></highlight> is used for the same application. A video object set (VOBS) <highlight><bold>82</bold></highlight> for menus is usually made up of one video object (VOB) <highlight><bold>83</bold></highlight> and stores the data used to display a plurality of menu screens. In contrast, a video object set (VTSTT_VOBS) <highlight><bold>82</bold></highlight> for title sets is usually composed of a plurality of video objects (VOB) <highlight><bold>83</bold></highlight>. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> When the aforesaid video of a boxing match is taken as example, a video object (VOB) <highlight><bold>83</bold></highlight> corresponds to the video data of each match played by boxer X. Specifying a particular video object (VOB) <highlight><bold>83</bold></highlight> enables, for example., boxer X&apos;s eleventh match for a world championship to be reproduced on a video. The video object set (VTSM_VOBS) <highlight><bold>95</bold></highlight> for a menu of the video title sets <highlight><bold>72</bold></highlight> contains the menu data for the matches played by boxer X. According to the presentation of the menu, a particular match, for example, boxer X&apos;s eleventh match for a world championship, can be specified. In the case of a usual single story movie, one video object (VOB) <highlight><bold>83</bold></highlight> corresponds to one video object set (VOBS) <highlight><bold>82</bold></highlight>. One video stream is completed with one video object set (VOBS) <highlight><bold>82</bold></highlight>. In the case of a collection of animated cartoons or an omnibus movie, a plurality of video streams each corresponding to individual stories are provided in a single video object set (VOBS) <highlight><bold>82</bold></highlight>. Each video stream is stored in the corresponding video object <highlight><bold>83</bold></highlight>. Accordingly, the audio stream and sub-picture stream related to the video stream are also completed with each video object (VOB) <highlight><bold>83</bold></highlight>. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> An identification number (IDN&num;j) is assigned to a video object (VOB) <highlight><bold>83</bold></highlight>. By the identification number (ID&num;j), the video object (VOB) <highlight><bold>83</bold></highlight> can be identified. A video object (VOB) <highlight><bold>83</bold></highlight> further comprises one or more such cells <highlight><bold>84</bold></highlight>. Although a usual video stream is made up of a plurality of cells <highlight><bold>84</bold></highlight>, a menu video stream, or a video object (VOB) <highlight><bold>83</bold></highlight> may be composed of one cell <highlight><bold>84</bold></highlight>. A cell <highlight><bold>84</bold></highlight> is likewise assigned an identification number (C_IDN&num;j). By the identification number (C_IDN&num;j), the cell <highlight><bold>84</bold></highlight> is identified. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, each cell <highlight><bold>84</bold></highlight> is composed of one or more video object units (VOBU) <highlight><bold>85</bold></highlight>, normally a plurality of video object units (VOBU) <highlight><bold>85</bold></highlight>. Here, a video object unit (VOBU) <highlight><bold>85</bold></highlight> is defined as a pack train having a navigation pack (NAV pack) <highlight><bold>86</bold></highlight> at its head. Specifically, a video object unit (VOBU) <highlight><bold>85</bold></highlight> is defined as a set of all the packs recorded, starting at a navigation pack (NAV pack) <highlight><bold>86</bold></highlight> to immediately in front of the next navigation pack. The reproducing time of the video object unit (VOBU) <highlight><bold>85</bold></highlight> corresponds to the reproducing time of the video data made up of one or more GOP (Group of Pictures) contained in the video object unit (VOBU) <highlight><bold>85</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. The maximum reproducing time is determined to be 0.4 or more second and less than one second. In MPEG, one GOP is defined as compressed image data which corresponds to about 15 frames to be played back for, usually, 0.5 seconds. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> In the case where the video data includes a video object unit as illustrated in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, GOPs each composed of a video pack (V pack) <highlight><bold>87</bold></highlight>, a sub-picture pack (SP pack) <highlight><bold>90</bold></highlight>, an audio pack (A pack) <highlight><bold>91</bold></highlight> and a computer data pack (C pack) <highlight><bold>88</bold></highlight>, all complying to the MPEG standards, are arranged, producing a vide data stream. Regardless of the number of GOPs, a video object (VOBU) <highlight><bold>83</bold></highlight> is determined based on the time required for producing a GOP. In the video object (VOBU) <highlight><bold>83</bold></highlight> has a navigation pack (NV) pack <highlight><bold>86</bold></highlight> arranged at its head. Any reproduced data, whether audio data, sub-picture data, or audio/sub-picture data, consists of one more video object units. Thus, even if a video object unit is composed of only audio packs only, these audio packs <highlight><bold>91</bold></highlight> will be reproduced within the time for reproducing the video object unit. The procedure of reproducing these packs will be explained later in detail, along with the procedure of reproducing the navigation pack (NV pack) <highlight><bold>86</bold></highlight>. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The procedure for reproducing these packs, together with the navigation pack <highlight><bold>86</bold></highlight>, will be explained in detail later. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> The video manager <highlight><bold>71</bold></highlight> will be explained with reference to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. The video management information <highlight><bold>75</bold></highlight> placed at the head of the video manager <highlight><bold>71</bold></highlight> contains the information used to search for titles and the information used to manage the video title sets (VTS) <highlight><bold>72</bold></highlight> such as the information used for reproduction of a video manager menu. The video management information <highlight><bold>75</bold></highlight> contains at least three tables <highlight><bold>78</bold></highlight>, <highlight><bold>79</bold></highlight>, <highlight><bold>80</bold></highlight> in the order shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. Each of these tables <highlight><bold>78</bold></highlight>, <highlight><bold>79</bold></highlight>, <highlight><bold>80</bold></highlight> is aligned with the boundaries between logical sectors. A first table <highlight><bold>78</bold></highlight>, a video manger information management table (VMGI_MAT) <highlight><bold>78</bold></highlight> is a mandatory table, in which the size of the video manager <highlight><bold>71</bold></highlight>, the starting address of each piece of the information in the video manger <highlight><bold>71</bold></highlight>, and the attribute information about the video object set (VMGM_VOBS) <highlight><bold>76</bold></highlight> for a video manager menu are written. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> Written in a second table of the video manager <highlight><bold>71</bold></highlight>, a title search pointer table <highlight><bold>79</bold></highlight> (TT_SRPT), is an entry program chain (EPGC) of the video titles (VTS) <highlight><bold>72</bold></highlight> contained in the optical disk <highlight><bold>10</bold></highlight> that are selectable according to the entry of a title number from the key/display section <highlight><bold>4</bold></highlight> on the apparatus. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> Here, a program chain <highlight><bold>87</bold></highlight> is a set of programs <highlight><bold>89</bold></highlight> that reproduce the story of a title as shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. Continuous reproduction of a program chain <highlight><bold>87</bold></highlight> completes the movie of a title. Therefore, the user can start to see the movie from a particular scene of the movie by specifying the program <highlight><bold>89</bold></highlight>. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> In a third table of the video manager <highlight><bold>71</bold></highlight>, a video title set attribution table (VTS_ATRT) <highlight><bold>80</bold></highlight>, the attribute information determined in the video title set <highlight><bold>72</bold></highlight> in the volume of the optical disk <highlight><bold>10</bold></highlight> is written. Specifically, in this table <highlight><bold>72</bold></highlight>, the following items are written as attribute information: the number of video title sets, video title set numbers, video attributes, such as a video data compression scheme, audio stream attributes, such as an audio coding mode, and sub-picture attributes, such as the type of sup-picture display. The contents of the video manager information management table (VMGI_MAT) <highlight><bold>78</bold></highlight> and the title search pointer table (TT_SRPT) <highlight><bold>79</bold></highlight> will be explained in detail with reference to <cross-reference target="DRAWINGS">FIGS. 8, 9</cross-reference>, <highlight><bold>10</bold></highlight>, and <highlight><bold>11</bold></highlight>. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, written in the video manager information management table (VMGI_MAT) <highlight><bold>78</bold></highlight> are a video manager identifier (VMG_ID), the size of video manager information (VMGI_SZ) in logical blocks (one logical block contains 2048 bytes as mentioned above), the version number (VERN) of the optical disk <highlight><bold>10</bold></highlight> complying with the digital versatile disk video specification, and the category of video manager <highlight><bold>71</bold></highlight> (VMG_CAT). </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> In the category of video manager <highlight><bold>71</bold></highlight> (VMG_CAT), a flag indicating whether or not the DVD video directory prohibits copying is written. Further written in the table (VMGI_MAT) are a volume set identifier (VLMS_ID), the number of video title sets (VTS_Ns), the identifier for a person supplying the data to be recorded on the disk (Provider Unique ID: PVR_ID), a video manager menu video object set start address (VNGM_VOBS_SA), the end address (VMGI_MAT_EA) of a video manager information management table (VMGI-MAT) <highlight><bold>78</bold></highlight>, and the start address (TT_SRPT_SA) of a title search pointer table (TT_SRPT) <highlight><bold>79</bold></highlight>. The end address of VMG_MAT <highlight><bold>78</bold></highlight> (VMGI_MAT_EA) and the start address of TT_SRPT (TT_SRPT_SA) <highlight><bold>79</bold></highlight> are represented by the number of logical blocks, relative to the first logical block. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> Furthermore, in the table <highlight><bold>78</bold></highlight>, the start address (VTS_ATRT_SA) of the attribute table (VTS_ATRT) <highlight><bold>80</bold></highlight> of video title sets (VTS) <highlight><bold>72</bold></highlight> is represented by the number of bytes, relative to the first byte in the VMGI manager table (VMGI_MAT) <highlight><bold>71</bold></highlight>, and the video attribute (VMGM_V_AST) of the video manager menu (VMGM) is written. Further written in the table <highlight><bold>78</bold></highlight> are the number of audio streams (VMGM_AST_Ns) in the video manager menu (VMGM), the attributes of audio streams (VMGM_AST_ATR) in the video manager menu (VMGM), the number of sub-picture streams (VMGM_SPST_Ns) in the video manager menu (VMGM), and the attributes of sub-picture streams (VMGM_SPST_ATR) in the video manager menu (VMGM). </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> In the title search pointer table (TT_SRPT) <highlight><bold>79</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the title search pointer table information (TT_SRPTI) <highlight><bold>92</bold></highlight> is first written and then as many title search pointers for input numbers <highlight><bold>1</bold></highlight> to n (n&lE;99) as are needed are written consecutively. When only the reproducing data for one title, for example, only the video data for one title, is stored in the volume of the optical disk, only one title search pointer (TT_SRP) <highlight><bold>93</bold></highlight> is written in the table (TT_SRPT) <highlight><bold>79</bold></highlight>. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> The title search pointer table information (TT_SRPTI) <highlight><bold>92</bold></highlight> contains the number of entry program chains (EN_PGC_Ns) and the end address (TT_SRPT_EA) of the title search pointer <highlight><bold>93</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. The address (TT_SRPT_EA) is represented by the number of bytes, relative to the first byte in the title search pointer table (TT_SRPT) <highlight><bold>79</bold></highlight>. Furthermore, as shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, each title search pointer (TT_SRP) <highlight><bold>93</bold></highlight> contains the video title set number (VTSN), the program chain number (PGCN), and the start address (VTS_SA) of the video title set <highlight><bold>72</bold></highlight>. The contents of the title search pointer (TT_SRP) <highlight><bold>93</bold></highlight> specifies a video title set <highlight><bold>72</bold></highlight> to be reproduced and a program chain (PGC) <highlight><bold>87</bold></highlight> as well as a location in which the video title set <highlight><bold>72</bold></highlight> is to be stored. The start address (VTS_SA) of the video title set <highlight><bold>72</bold></highlight> is represented by the number of logical blocks in connection with the title set <highlight><bold>72</bold></highlight> specified by the video title set number (VTSN). </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> The structure of the logic format of the video title set <highlight><bold>72</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> will be described with reference to <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. In each video title set (VTS) <highlight><bold>72</bold></highlight>, four items are written in the order shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. Each video title set (VTS) <highlight><bold>72</bold></highlight> is made up of one or more video titles having common attributes. The video title set information (VTSI) <highlight><bold>94</bold></highlight> contains the management information on the video titles, including the information on entry search points, the information on playback of video object sets <highlight><bold>72</bold></highlight>, the information on playback of title set menus (VTSM), and the attribute information on video object sets <highlight><bold>72</bold></highlight>. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> Each video title set <highlight><bold>72</bold></highlight> is provided with the backup of the video title set information (VTSI_BUP) <highlight><bold>97</bold></highlight>. Between the video title set information (VTSI) and the backup of the information (VTSI_BUP) <highlight><bold>97</bold></highlight>, a video object set for video title set menus (VTSM_VOBS) <highlight><bold>95</bold></highlight> and a video object set for video title set titles (VTSTT_VOBS) <highlight><bold>96</bold></highlight> are arranged. Both of the video object sets (VTSM_VOBS and VTSTT_VOBS) <highlight><bold>95</bold></highlight>, <highlight><bold>96</bold></highlight> have the structure shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, as explained earlier. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> The video title set information (VTSI) <highlight><bold>94</bold></highlight>, the backup of the information (VTSI_BUP) <highlight><bold>97</bold></highlight>, and the video object set (VTSTT_VOBS) <highlight><bold>96</bold></highlight> for video title set titles are items indispensable to the video title set <highlight><bold>72</bold></highlight>. The video object set (VTSM_VOBS) <highlight><bold>96</bold></highlight> for video title set menus is an option provided as the need arises. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> The video title set information (VTSI) <highlight><bold>94</bold></highlight> consists of four tables as shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. The four tables are forced to align with the boundaries between logical sectors. The video title set information management table (VTSI_MAT) <highlight><bold>98</bold></highlight>, a first table, is a mandatory table, in which the size of the video title set (VTS) <highlight><bold>72</bold></highlight>, the start addresses of each piece of information in the video title set (VTS) <highlight><bold>72</bold></highlight>, and the attributes of the video object sets (VOBS) <highlight><bold>96</bold></highlight> in the video title set (VTS) <highlight><bold>72</bold></highlight> are written. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> The video title set direct access pointer table (VTS_DAPT) <highlight><bold>99</bold></highlight>, a second table, is an optional table provided as the need arises. Written in the table <highlight><bold>99</bold></highlight> are the program chains (PGC) <highlight><bold>87</bold></highlight> and/or programs (PG) <highlight><bold>89</bold></highlight> contained in the video title set <highlight><bold>72</bold></highlight> that are selectable according to the entry of a title number from the key/display section <highlight><bold>4</bold></highlight> of the apparatus. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The video title set program chain information table (VTS_PGCIT) <highlight><bold>100</bold></highlight>, a third table, is a mandatory table, in which the VTS program chain information (VTS_PGCI) <highlight><bold>104</bold></highlight> is written. The video title set time search map table (VTS_MAPT) <highlight><bold>101</bold></highlight>, a fourth table, is an optional table provided as the need arises, in which the information on the recording location, for a specific period of time of display, of the video data in each program chain (PGC) <highlight><bold>87</bold></highlight> in the title set <highlight><bold>72</bold></highlight> to which the map table (VTS_MAPT) <highlight><bold>101</bold></highlight> belongs is written. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Next, the video title information management table (VTSI_MAT) <highlight><bold>98</bold></highlight> and video title set program chain information table (VTSI_PGCIT) <highlight><bold>100</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> will be described with reference to FIGS. <highlight><bold>13</bold></highlight> to <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows the contents of the video title information management table (VTSI_MAT) <highlight><bold>98</bold></highlight>, in which the video title set identifier (VTS_ID), the size of the video title set <highlight><bold>72</bold></highlight> (VTS_SZ), the version number of the DVD video specification (VERN), and the video title set category (VTS_CAT) are written in that order. Furthermore, in the table (VTSI_MAT) <highlight><bold>98</bold></highlight>, the start address of the video object set (VTSM_VOBS) for VTS menus is expressed by a logical block relative to the first logical block in the video title set (VTS) <highlight><bold>72</bold></highlight>. The start address (VTSTT_VOB_SA) of the video object <highlight><bold>83</bold></highlight> for titles in the video title set (VTS) <highlight><bold>72</bold></highlight> is expressed by a logical block (RLBN) relative to the first logical block in the video title set (VTS) <highlight><bold>72</bold></highlight>. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> Furthermore, in the table (VTSI_MAT) <highlight><bold>98</bold></highlight>, the end address (VTI_MAT_EA) of the video title set information management table (VTI_MAT) <highlight><bold>98</bold></highlight> is represented by the number of blocks, relative to the first byte in the table (VTI_MAT), <highlight><bold>98</bold></highlight> and the start address of the video title set direct access pointer table (VTS_DAPT) <highlight><bold>99</bold></highlight> is represented by the number of blocks, relative to the first byte in the video title set information (VTSI) <highlight><bold>94</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> Still furthermore, in the table (VTSI_MAT) <highlight><bold>98</bold></highlight>, the start address (VTS_PGCIT_SA) of the video title set program chain information table (PGCIT) <highlight><bold>100</bold></highlight> is expressed by the number of blocks, relative to the first byte of the video title set information (VTSI) <highlight><bold>94</bold></highlight>, and the start address (VTS_MAPT_SA) of the time search map (VTS_MAPT) <highlight><bold>101</bold></highlight> in the video title set (VTS) <highlight><bold>72</bold></highlight> is expressed by a logical sector relative to the first logical sector in the video title set (VTS) <highlight><bold>72</bold></highlight>. Written in the table (VTSI_MAT) <highlight><bold>98</bold></highlight> are the video object set (VTSM_VOBS) <highlight><bold>95</bold></highlight> for the video title set menu (VTSM) in the video title set (VTS) <highlight><bold>72</bold></highlight>, the video attributes (VTS_V_ATR) of the video object set (VTST_VOBS) <highlight><bold>96</bold></highlight> for the titles (VTSTT) in the video title set <highlight><bold>72</bold></highlight>, and the number of audio streams (VTS_AST_Ns) in the video object set (VTSTT_VOBS) <highlight><bold>82</bold></highlight> for the titles (VTSTT) for the video title sets <highlight><bold>72</bold></highlight>. Here, the video attributes (VTS_V_ATR) include a video compression mode, a frame rate of the TV system, and an aspect ratio for displaying an image on a display unit. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> Written in the table (VTSI_MAT) <highlight><bold>98</bold></highlight> are the audio stream attributes (VTS_AST_ATR) of the video object set (VTST_VOBS) for the titles (VTSTT) in the video title set (VTS). The attributes (VTS_AST_ATR) include an audio encoding mode indicating how audio is encoded, the number of bits used to quantize audio, and the number of audio channels. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> Furthermore, written in the table (VTSI_MAT) <highlight><bold>98</bold></highlight> are the number (VTS_SPST_Ns) of sub-picture streams in the video object set <highlight><bold>82</bold></highlight> for the titles (VTSTT) in the video title set (VTS) <highlight><bold>72</bold></highlight> and the attributes (VTS_SPST_ATR) of each sub-picture stream. The attributes (VTR_SPST_ATR) for each sub-picture stream include a sub-picture coding mode and a sub-picture display type. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> Furthermore, in the table (VTSI_MAT) <highlight><bold>98</bold></highlight>, written are the number (VTSM_AST_Ns) of audio streams in the video title set menu (VTSM), the audio stream attributes (VTSM_AST_ATR), the number (VTSM_SPST_Ns) of sup-picture streams, and the sup-picture stream attributes (VISM_SPST_ATR). </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> The VTS program chain information table (VTS_PGCIT) <highlight><bold>100</bold></highlight> has a structure as shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. In the information table (VTS_PGCIT) <highlight><bold>100</bold></highlight>, information on the VTS program chain (VTS_PGC) is written, starting with information (VTS_PGCIT_I) <highlight><bold>102</bold></highlight> on the information table (VTS_PGCIT) <highlight><bold>100</bold></highlight> related to the VTS program chain (VTS_PGC). In the information table (VTS_PGCIT) <highlight><bold>100</bold></highlight>, the information (VTS_PGCIT_I) <highlight><bold>102</bold></highlight> is followed by as many VTS_PGCI search pointer (VTS_PGCIT_SRP) <highlight><bold>103</bold></highlight> used to search for VTS program chains (VTS_PGC) as the number (&num;<highlight><bold>1</bold></highlight> to &num;n) of VTS program chains in the information table (VTS_PGCIT). At the end of the table, there are provided as many pieces of information (VTS_PGCI) <highlight><bold>104</bold></highlight> on the respective VTS program chains (VTS_PGC) as the number (from &num;<highlight><bold>1</bold></highlight> to &num;n) of the VTS program chains (VTS_PGC). </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> The information (VTS_PGCIT_I) <highlight><bold>102</bold></highlight> in the VTS program chain information table (VTS_PGCIT) <highlight><bold>100</bold></highlight> contains the number (VTS_PGC_Ns) of VTS program chains (VTS_PGC) as shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. The end address (VTS_PGCIT_EA) of the table information (VTS_PGCIT_I) <highlight><bold>102</bold></highlight> is expressed by the number of bytes, relative to the first byte in the information table (VTS_PGCIT) <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> Furthermore, as shown in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>, the VTS_PGCIT search pointer (VTS_PGCIT_SRP) <highlight><bold>103</bold></highlight> contains the attributes (VTS_PGC_CAT) of the program chains (VTS_PGC) in the video title set (VTS) <highlight><bold>72</bold></highlight> and the start address (VTS_PGCI_SA) of the VTS_PGC information (VTS_PGCI) <highlight><bold>104</bold></highlight> expressed by the number of bytes, relative to the first byte in the VTS_PGC information table (VTS_PGCIT) <highlight><bold>100</bold></highlight>. Here, the VTS_PGC attribute (VTS_PGC_CAT) is, for example, an attribute indicating whether an entry program chain (Entry PGC) is the first one to be reproduced. Usually, an entry program chain (PGC) is written before program chains (PGC) that are not entry program chains (PGC). Generally, program chains (PGC) are reproduced in the description order of VTS_PGCIs as shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> The PGC information (VTS_PGCI) <highlight><bold>104</bold></highlight> in the video title set <highlight><bold>72</bold></highlight> contains four items as shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. In the PGC information (VTS_PGCI) <highlight><bold>104</bold></highlight>, the program chain general information (PGC_GI) <highlight><bold>105</bold></highlight> on a mandatory item is first arranged, followed by at least three items that are made mandatory only when there is an video object <highlight><bold>83</bold></highlight>. Specifically, contained as the three items in the PGC information (VTS_PGCI) <highlight><bold>104</bold></highlight> are a program chain program map (PGC_PGMAP) <highlight><bold>106</bold></highlight>, a cell playback information table (C_PBIT) <highlight><bold>107</bold></highlight>, and a cell position information table (C_POSIT) <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, the program chain general information (PGC_GI) <highlight><bold>105</bold></highlight> contains the category (PGCI_CAT) of the program chain <highlight><bold>87</bold></highlight>, the contents (PGC_CNT) of the program chain (PGC) <highlight><bold>87</bold></highlight>, and the playback time of the program chain (PGC). <highlight><bold>87</bold></highlight> Written in the category of PGC (PGCI_CAT) are whether the PGC can be copied or not and whether the programs <highlight><bold>89</bold></highlight> in the PGC are played back continuously or at random. The contents of PGC (PGC_CNT) contains the description of the program chain structure, that is, the number of programs <highlight><bold>89</bold></highlight>, the number of cells <highlight><bold>84</bold></highlight>, and the number of angles in the program chain <highlight><bold>87</bold></highlight>. The playback time of PGC (PGC_PB_TIME) contains the total playback time of the programs <highlight><bold>89</bold></highlight> in the PGC. The playback time is the time required to continuously play back the programs <highlight><bold>89</bold></highlight> in the PGC, regardless of the playback procedure. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> Furthermore, the program chain general information (PGC_GI) <highlight><bold>105</bold></highlight> contains PGC sub-picture stream control (PGC_SPST_CTL), PGC audio stream control (PGC_AST_CTL), and PGC sub-picture pallet (PGC_SP_PLT). The PGC sub-picture stream control (PGC_SPST_CTL) contains the number of sub-pictures usable in the PGC <highlight><bold>89</bold></highlight> and the PGC audio stream control (PGC_AST_CTL) likewise contains the number of audio streams usable in the PGC <highlight><bold>89</bold></highlight>. The PGC sub-picture palette (PGC_SP_PLT) contains a set of a specific number of color pallets used in all of the sub-picture streams in the PGC <highlight><bold>89</bold></highlight>. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> Furthermore, the PGC general information (PGC_GI) <highlight><bold>105</bold></highlight> contains the start address (C_PBIT_SA) of the cell playback information table (C_PBIT) and the start address (C_POSIT_SA) of the cell position information table (C_POSIT) <highlight><bold>108</bold></highlight>. Both of the start addresses (C_PBIT_SA and C_POSIT_SA) are represented by the number of logical blocks, relative to the first byte in he VTS_PGC information (VTS_PGCI) <highlight><bold>105</bold></highlight>. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> The program chain program map (PGC_PGMAP) <highlight><bold>108</bold></highlight> is a map showing the arrangement of the programs <highlight><bold>89</bold></highlight> in the PGC <highlight><bold>87</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 19</cross-reference>. In the map (PGC_PGMAP) <highlight><bold>106</bold></highlight>, the entry cell numbers (ECELLN), the start cell numbers of the individual programs <highlight><bold>89</bold></highlight>, are written in ascending order as shown in <cross-reference target="DRAWINGS">FIGS. 19 and 20</cross-reference>. In addition, program numbers are allocated, starting at 1, in the order in which the entry cell numbers are written. Consequently, the first entry number in the map (PGC_PGMAP) <highlight><bold>106</bold></highlight> must be &num;1. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> The cell playback information table (C_PBIT) defines the order in which the cells <highlight><bold>84</bold></highlight> in the PGC <highlight><bold>87</bold></highlight> are played back. In the cell playback information table (C_PBIT) <highlight><bold>107</bold></highlight>, pieces of the cell playback information (C_PBI) are written consecutively as shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>. Basically, cells <highlight><bold>84</bold></highlight> are played back in the order of cell number. The cell playback information (C_PBIT) <highlight><bold>108</bold></highlight> contains a cell category (C_CAT) as shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>. Written in the cell category (C_CAT) are a cell block mode indicating whether a cell is in the block and if it is in the block, whether the cell is the first one, a cell block type indicating whether a cell <highlight><bold>84</bold></highlight> is not part of the block or is in an angle block, and an STC discontinuity flag indicating whether the system time clock (STC) must be set again. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> Further written in the cell category (C_CAT) are a cell playback mode indicating whether the video object units (VOBU) <highlight><bold>85</bold></highlight> in the cell <highlight><bold>84</bold></highlight> are played pack continuously or a picture is made still at one video object unit (VOBU) <highlight><bold>85</bold></highlight> to another in the cell <highlight><bold>84</bold></highlight>, and cell navigation control indicating whether the picture is made still after the playback of the cell or indicating the rest time. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>, the cell playback information table (C_PBIT) <highlight><bold>107</bold></highlight> contains the cell playback time (C_PBTNM) representing the total playback time of the PGC <highlight><bold>87</bold></highlight>. When the PGC <highlight><bold>87</bold></highlight> has an angle cell block, the playback time of the angle cell number <highlight><bold>1</bold></highlight> represents the playback time of the angle block. Further written in the cell playback information table (C_PBIT) <highlight><bold>107</bold></highlight> are the start address (C_FVOBU_SA) of the first video object unit (VOBS) <highlight><bold>85</bold></highlight> in the cell <highlight><bold>84</bold></highlight> expressed by the number of logical sectors, relative to the first logical sector in the video object unit (VOBS) <highlight><bold>85</bold></highlight> in which the cell <highlight><bold>84</bold></highlight> is written and the start address (C_LVOBU_SA) of the end video object unit (VOBS) <highlight><bold>85</bold></highlight> in the cell <highlight><bold>84</bold></highlight> expressed by the number of logical sectors, relative to the first logical sector in the video object unit (VOBS) <highlight><bold>85</bold></highlight> in which the cell <highlight><bold>84</bold></highlight> is written. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> The cell position information table (C_POSI) <highlight><bold>108</bold></highlight> specifies the identification number (VOB_ID) of the video object (VOB) <highlight><bold>85</bold></highlight> in the cell used in the PGC <highlight><bold>87</bold></highlight> and the identification number (Cell_ID) of the cell <highlight><bold>84</bold></highlight>. In the cell position information table (C_PCSI) <highlight><bold>108</bold></highlight>, pieces of the cell position information (C_POSI) corresponding to the cell numbers written in the cell playback information table <highlight><bold>107</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 23</cross-reference> are written in the same order as in the cell playback information table (C_PBIT) <highlight><bold>107</bold></highlight>. The cell position information (C_POSI) contains the identification number (C_VOB_IDN) of the video object unit (VOBS) <highlight><bold>85</bold></highlight> in the cell <highlight><bold>84</bold></highlight> and the cell identification number (C_IDN) as shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> As explained with reference to <cross-reference target="DRAWINGS">FIG. 6, a</cross-reference> cell <highlight><bold>84</bold></highlight> is a set of video object units (VOBU) <highlight><bold>85</bold></highlight>. A video object unit <highlight><bold>85</bold></highlight> is defined as a pack train starting with a navigation (NAV) pack <highlight><bold>86</bold></highlight>. Therefore, the start address (C_FVOBU_SA) of the first video object unit (VOBU) <highlight><bold>85</bold></highlight> in a cell <highlight><bold>84</bold></highlight> is the start address of the NAV pack <highlight><bold>86</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, the NAV pack <highlight><bold>86</bold></highlight> consists of a pack header <highlight><bold>110</bold></highlight>, a system header <highlight><bold>111</bold></highlight>, and two packets <highlight><bold>116</bold></highlight>, <highlight><bold>117</bold></highlight> of navigation data; namely, a playback control information (PCI) packet <highlight><bold>116</bold></highlight> and a data search information (DSI) packet <highlight><bold>117</bold></highlight>. As many bytes as shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference> are allocated to the respective sections so that one pack may contain 2048 bytes corresponding to one logical sector. The NV pack is provided immediately before the video pack <highlight><bold>88</bold></highlight> which contains the first data item in the group of pictures (GOP). Even if the object unit <highlight><bold>85</bold></highlight> contains no video pack <highlight><bold>88</bold></highlight>, the NV pack <highlight><bold>86</bold></highlight> is positioned at the head of the object unit <highlight><bold>85</bold></highlight>, provided that the object unit <highlight><bold>85</bold></highlight> contains an audio pack <highlight><bold>91</bold></highlight> and/or a sub-picture pack <highlight><bold>90</bold></highlight>. Thus, even if object unit <highlight><bold>85</bold></highlight> contains no video pack, its playback time is determined on the basis of the time required for playing back a video pack <highlight><bold>88</bold></highlight>, exactly in the same way as in the case where the unit <highlight><bold>85</bold></highlight> contains a video pack <highlight><bold>88</bold></highlight>. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> Here, GOP is defined as a data train constituting a screen determined in the MPEG standards. In other words, GOP is equivalent to compressed data which may be expanded into image data representing a plurality of frames of a moving picture. The pack header <highlight><bold>110</bold></highlight> contains a pack starting code, a system clock reference (SCR), and a multiplex rate. The system header <highlight><bold>111</bold></highlight> contains a bit rate and a stream ID. The packet header <highlight><bold>112</bold></highlight>, <highlight><bold>114</bold></highlight> of each of the PCI packet <highlight><bold>116</bold></highlight> and DCI packet <highlight><bold>117</bold></highlight> contains a packet starting code, a packet length, and a stream ID as determined in the MPEG2. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>, another video pack <highlight><bold>87</bold></highlight>, audio pack <highlight><bold>91</bold></highlight> sub-picture pack <highlight><bold>90</bold></highlight> or computer data pack <highlight><bold>88</bold></highlight> consists of a pack header <highlight><bold>120</bold></highlight>, packet header <highlight><bold>121</bold></highlight>, and a packet <highlight><bold>122</bold></highlight> containing the corresponding data as in the system layer <highlight><bold>24</bold></highlight> MPEG 2. Its pack length is determined to be 2048 bytes. Each of these packs is aligned with the boundaries between logical blocks. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> The PCI data (PCI) <highlight><bold>113</bold></highlight> in the PCI packet <highlight><bold>116</bold></highlight> is navigation data used to make a presentation, or to change the contents of the display, in synchronization with the playback of the video data in the VOB unit (VOBU) <highlight><bold>85</bold></highlight>. Specifically, the PCI data (PCI) <highlight><bold>113</bold></highlight> contains PCI general information (PCI_GI) as information on the entire PCI data <highlight><bold>113</bold></highlight> change as shown in <cross-reference target="DRAWINGS">FIG. 27</cross-reference>. The PCI general information (PCI_GI) contains the address (NV_PCK_LBN) of the NV pack (NV_PCK) <highlight><bold>86</bold></highlight> in which the PCI data is recorded as shown in <cross-reference target="DRAWINGS">FIG. 28</cross-reference>, the address being expressed in the number of blocks, relative to the VOBU logical sector in which the PCI data is recorded. The PCI general information (PCI_GI) contains the category of VOBU (VOBU_CAT), the start PTS of VOBU <highlight><bold>85</bold></highlight> (VOBU_SPTS), and the end PTS of VOBU <highlight><bold>85</bold></highlight> (VOBU_EPTS). Here, the start PTS of VOBU <highlight><bold>85</bold></highlight> (VOBU_SPTS) indicates the playback start time (start presentation time stamp (SPTS)) of the video data in the VOBU <highlight><bold>85</bold></highlight> containing the PCI data. The playback start time is the playback start time of the first picture in the first GOP in the VOBU <highlight><bold>85</bold></highlight>. Normally, the first picture corresponds to I picture (intra-picture) data in the MPEG standards. The end PTS (VOBU_EPTS) in the VOBU <highlight><bold>85</bold></highlight> indicates the playback end time (end presentation time stamp (EPTS)) of the video data in the VOBU <highlight><bold>85</bold></highlight> containing the PCI data. The playback end time is the playback start time of the last picture in the last GOP in the VOBU <highlight><bold>85</bold></highlight>. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> The DSI data (DSI) <highlight><bold>115</bold></highlight> in the DSI packet <highlight><bold>117</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is the navigation data used to search for a VOB unit (VOBU) <highlight><bold>85</bold></highlight>. The DSI data (DSI) <highlight><bold>115</bold></highlight> contains the DSI general information (DSI_GI), VOBU search information (VOBU_SI), and the synchronizing playback information (SYNCI) as shown in <cross-reference target="DRAWINGS">FIG. 29</cross-reference>. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> The DSI information (DSI_GI) contains information about the entire DSI data <highlight><bold>115</bold></highlight>. Specifically, as shown in <cross-reference target="DRAWINGS">FIG. 30</cross-reference>, the DSI general information (DSI_GI) contains the system clock reference for the NV pack (NV_PCK_SCR) <highlight><bold>86</bold></highlight>. The system clock reference (NV_PCK_SCR) is stored in the system time clock (STC) <highlight><bold>54</bold></highlight>A, <highlight><bold>58</bold></highlight>A, <highlight><bold>60</bold></highlight>A or <highlight><bold>62</bold></highlight>A built in each section of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. On the basis of the STC <highlight><bold>54</bold></highlight>A, <highlight><bold>58</bold></highlight>A, <highlight><bold>60</bold></highlight>A, <highlight><bold>62</bold></highlight>A, video, audio, and sub-picture packs are decoded at the video, audio, and sub-picture decoders <highlight><bold>58</bold></highlight>, <highlight><bold>60</bold></highlight>, and <highlight><bold>62</bold></highlight> and the monitor <highlight><bold>6</bold></highlight> and the speaker <highlight><bold>8</bold></highlight> reproduce images and sound, respectively. The DSI general information (DSI_GI) contains the start address (NV_PCK_LBN) of the NV pack (NV_PCK) <highlight><bold>86</bold></highlight> containing the DSI data expressed by the number of logical sectors (RLSN), relative to the first logical sector in the VOB set (VOBS) <highlight><bold>82</bold></highlight> containing the DSI, and the address (VOBU_EA) of the last pack in the VOB unit (VOBU) <highlight><bold>85</bold></highlight> containing the DSI data expressed by the number of logical sectors (RLSN), relative to the first logical sector in the VOB unit (VOBU) <highlight><bold>85</bold></highlight>. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> Furthermore, the DSI general information (DSI_GI) contains the end address (VOBU_IP_EA) of the V pack (V_PCK) <highlight><bold>88</bold></highlight> containing the last data item for the first I picture in the VOB unit (VOBU) expressed by the number of logical sectors (RLSN), relative to the first logical sector in the VOB unit (VOBU) <highlight><bold>85</bold></highlight> containing the DSI data, and the identification number (VOBU_IP_EA) of the VOB <highlight><bold>83</bold></highlight> containing the DSI and the identification number (VOBU_C_IDN) of the cell <highlight><bold>84</bold></highlight> in which the DSI data is recorded. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> The search information (VOBU_SI) in VOBU <highlight><bold>85</bold></highlight> contains information used to identify the first address in a cell <highlight><bold>84</bold></highlight>. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> The synchronizing information (SYNCI) contains address information on the sub-pictures and audio data reproduced in synchronization with the playback start time of the video data in the VOB unit (VOBU) <highlight><bold>85</bold></highlight> containing the DSI data. Specifically, as shown in <cross-reference target="DRAWINGS">FIG. 31</cross-reference>, the start address (A_SYNCA) of the target audio pack (A_PCK) is expressed by the number of logical sectors (RLSN), relative to the NV pack (NV_PCK) <highlight><bold>86</bold></highlight> in which DSI data <highlight><bold>115</bold></highlight> is recorded. When there are more than one audio stream (8 audio streams maximum), as many pieces of the synchronizing: information (SYNCI) as there are audio streams are written. Furthermore, the synchronizing information (SYNCI) contains the address (SP_SYNCA) of the NV pack (NV_PCK) <highlight><bold>86</bold></highlight> of the VOB unit (VOBU) <highlight><bold>85</bold></highlight> containing the target audio pack (SP_PCK) <highlight><bold>91</bold></highlight>, the address being expressed by the number of logical sectors (RLSN), relative to the NV pack (NV_PCK) <highlight><bold>86</bold></highlight> in which DSI <highlight><bold>115</bold></highlight> is recorded. When there are more than one sub-picture stream (32 sub-picture streams maximum), as many pieces of the synchronizing information (SYNCI) as there are sub-picture streams are written. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> The pack length of the above pack is adjusted to 2048 bytes (one logical sector). If the pack length is less than 2048 bytes and when the number of bytes necessary for attaining the above value is six bytes or less, the pack length is adjusted by adding stuffing bytes in the pack header, and when the necessary number of bytes is seven bytes or more, the packet length is adjusted by adding one byte of stuffing byte and adding a padding packet corresponding to the necessary number of bytes to the packet. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> The pack header is constructed by a 4-byte pack start code (000001BAh), 6-byte SCR (System Clock Reference, system time standard reference value), 3-byte multiplexing rate (MUX rate; 0468A8h), and 1-byte to 7-byte stuffing bytes (00h). The packet is constructed by 2034 bytes as a reference and a padding packet (effective data 00h which has no significance as data is recorded in the unit of byte) for pack length adjustment is inserted into the packet as required. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> That is, as shown in <cross-reference target="DRAWINGS">FIG. 32</cross-reference>, in a case where the length of data constructing the packet is 2034 bytes to 2028 bytes, one or more stuffing bytes corresponding to a deficient number of byte or bytes are added to (inserted into) the pack header. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> Further, as shown in <cross-reference target="DRAWINGS">FIG. 33</cross-reference>, in a case where the length of data constructing the packet is 2027 bytes or less, a padding packet of bytes of a number corresponding to the deficient number is added. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> For example, a case wherein video data is formed in a pack form is explained. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> That is, as shown in <cross-reference target="DRAWINGS">FIG. 34</cross-reference>, in a case where video data having a data length of 2015 bytes is formed in a pack form, the reference byte number (2034 bytes) of one packet is compared with a byte number (2021 bytes) obtained by adding six bytes of the packet header to the number of bytes (2015 bytes) of the video data, and as the result of comparison, it is determined that a deficient number of bytes is 13 and it is necessary to add a padding packet of 13 bytes, and a pack of 2048 bytes is formed by a normal 14-byte pack header including a 1-byte stuffing byte and a packet of 2034 bytes constructed by adding a 13-byte padding packet to the video packet of 2021 bytes. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> Further, as shown in <cross-reference target="DRAWINGS">FIG. 35</cross-reference>, in a case where video data having a data length of 2025 bytes is formed in a pack form, the reference byte number (2034 bytes) of one packet is compared with a byte number (2031 bytes) obtained by adding six bytes of the packet header to the number of bytes (2025 bytes) of the video data, and as the result of comparison, it is determined that a deficient number of bytes is 3 and it is necessary to add 3-byte stuffing bytes, and a pack of 2048 bytes is formed by a 17-byte pack header including 3-byte stuffing bytes in addition to a 1-byte stuffing byte and a video packet of 2031 bytes. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> Next, the above pack is explained in detail. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, an NV pack <highlight><bold>86</bold></highlight> is arranged just before a video pack containing head data of one GOP and constructed by a 14-byte pack header <highlight><bold>110</bold></highlight>, 24-byte system header <highlight><bold>111</bold></highlight>, PCI packet <highlight><bold>116</bold></highlight> of 980 bytes or less, and DSI packet <highlight><bold>117</bold></highlight> of 1024 bytes or less. The PCI packet <highlight><bold>116</bold></highlight> is constructed by a 6-byte packet header <highlight><bold>112</bold></highlight>, 1-byte sub-stream ID <highlight><bold>118</bold></highlight>, and a data area <highlight><bold>113</bold></highlight> in which 979-byte PCI data can be stored, and the DSI packet <highlight><bold>117</bold></highlight> is constructed by a 6-byte packet header <highlight><bold>114</bold></highlight>, 1-byte sub-stream ID <highlight><bold>119</bold></highlight> and a data area <highlight><bold>115</bold></highlight> in which 1017-byte DSI data can be stored. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> As described before, the pack header <highlight><bold>110</bold></highlight> is constructed by a 4-byte pack start code (000001BAh), 6-byte SCR (System Clock Reference, system time standard reference value), 3-byte multiplexing rate (MUX rate; 0468A8h), and 1-byte to 7-byte stuffing bytes (00h). </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> The system header <highlight><bold>111</bold></highlight> is constructed by a 4-byte system header start code (000001BBh), 2-byte header length and the like. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> The packet headers <highlight><bold>112</bold></highlight>, <highlight><bold>114</bold></highlight> are each constructed by a 3-byte packet start code (000001h), 1-byte stream ID (1011111b: private stream <highlight><bold>2</bold></highlight>), 2-byte PES (Packetized Elementary Stream) packet length. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> A code (00000000b) indicating the PCI stream is given to the sub-stream ID <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> A code (00000001b) indicating the DSI stream is given to the sub-stream ID <highlight><bold>119</bold></highlight>. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIGS. 36A, 36B</cross-reference>, in a video pack <highlight><bold>87</bold></highlight>, one pack is constructed by a 14-byte pack header <highlight><bold>120</bold></highlight> and a video packet which is constructed by a 9-byte packet header <highlight><bold>121</bold></highlight> and a data area <highlight><bold>122</bold></highlight> in which video data of up to 2025 bytes can be stored or a video packet constructed by a 19-byte packet header <highlight><bold>121</bold></highlight> and a data area <highlight><bold>122</bold></highlight> in which video data of up to 2015 bytes can be stored. The pack header <highlight><bold>120</bold></highlight> has the same structure as that used in the case of the NV pack <highlight><bold>86</bold></highlight>. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> If the packet header <highlight><bold>121</bold></highlight> is a 9-byte packet header, it is constructed by a 3-byte packet start code (000001h), 1-byte stream ID (11100000b:MPEG video stream), 2-byte PES (Packetized Elementary Stream) packet length, and 3-byte data relating to PES. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> If the packet header <highlight><bold>121</bold></highlight> is a 19-byte packet header, it contains a 5-byte PTS (Presentation Time Stamp; time management information for reproduction output) and a 5-byte DTS (Decoding Time Stamp; time management information for decoding) in addition to the above 9 bytes. The PTS and DTS are described only in a video packet containing head data of I picture of the video stream. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> If an audio pack <highlight><bold>91</bold></highlight> is compressed coding data which conforms to the Dolby AC3, as shown in <cross-reference target="DRAWINGS">FIG. 37</cross-reference>A, one pack is constructed by a 14-byte pack header <highlight><bold>120</bold></highlight> and an audio packet which is constructed by a 14-byte packet header <highlight><bold>121</bold></highlight>, 1-byte sub-stream ID <highlight><bold>131</bold></highlight>, a frame number <highlight><bold>132</bold></highlight> of one-byte configuration indicating the number of audio frames in the packet data, a first access unit pointer <highlight><bold>133</bold></highlight> of two-byte configuration indicating the head position of the first audio frame in the packet data, and a data area <highlight><bold>134</bold></highlight> in which audio data of up to 2016 bytes can be stored. The pack header <highlight><bold>120</bold></highlight> has the same structure as that used in the case of the NV pack <highlight><bold>86</bold></highlight>. If no PTS is contained in the packet header <highlight><bold>121</bold></highlight>, the packet header <highlight><bold>121</bold></highlight> is constructed by 9 bytes and the capacity of the data area <highlight><bold>134</bold></highlight> in which audio data can be stored is expanded to 2021 bytes. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> If the audio pack <highlight><bold>91</bold></highlight> is linear PCM coding data, as shown in <cross-reference target="DRAWINGS">FIG. 37</cross-reference>B, one pack is constructed by a 14-byte pack header <highlight><bold>120</bold></highlight> and an audio packet which is constructed by a 14-byte packet header <highlight><bold>121</bold></highlight>, 1-byte sub-stream ID <highlight><bold>131</bold></highlight>, a frame number <highlight><bold>132</bold></highlight> of one-byte configuration indicating the number of audio frames in the packet data, a first access unit pointer <highlight><bold>133</bold></highlight> of two-byte configuration indicating the head position of the audio frame in the packet data, audio data information <highlight><bold>135</bold></highlight> of three-byte configuration in which information of audio data in the packet data is described, and a data area <highlight><bold>134</bold></highlight> in which audio data of up to 2013 bytes can be stored. The pack header <highlight><bold>120</bold></highlight> has the same structure as that used in the case of the NV pack <highlight><bold>86</bold></highlight>. If no PTS is contained in the packet header <highlight><bold>121</bold></highlight>, the packet header <highlight><bold>121</bold></highlight> is constructed by 9 bytes and the capacity of the data area <highlight><bold>134</bold></highlight> in which audio data can be stored is expanded to 2018 bytes. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> As information of audio data of the audio data information, a frame number, a processing unit indicating that one data length is 16-bit length, 20-bit length or 24-bit length, a sampling frequency and the like are described. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> The packet header <highlight><bold>121</bold></highlight> is constructed by a 3-byte packet start code (000001h), 1-byte stream ID (101110b: private stream <highlight><bold>1</bold></highlight>), 2-byte PES (Packetized Elementary Stream) packet length, 3-byte content of PES, and 5-byte PTS (Presentation Time Stamp; time management information for reproduction output). </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> In the sub-stream ID <highlight><bold>131</bold></highlight> given in a case where audio data is compressed coding data which conforms to the Dolby AC3, a code (10000xxxb:xxx is a stream number) indicating an AC3 stream is provided. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> In the sub-stream ID <highlight><bold>131</bold></highlight> given in a case where audio data is linear PCM, a code (10100xxxb:xxx is a stream number) indicating a linear PCM stream is provided. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> One frame off the audio data is constructed by, for example, 772-byte audio data containing a 4-byte frame header and four bytes on the right and left sides of &ldquo;0&rdquo; to &ldquo;191&rdquo;. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 38</cross-reference>, in a sub-picture pack <highlight><bold>90</bold></highlight>, one pack is constructed by a 14-byte pack header <highlight><bold>120</bold></highlight> and a sub-picture packet which is constructed by a 14-byte packet header <highlight><bold>121</bold></highlight>, 1-byte sub-stream ID <highlight><bold>141</bold></highlight> and a data area <highlight><bold>142</bold></highlight> in which sub-picture data of up to 2019 bytes can be stored. If no PTS is contained in the packet header <highlight><bold>121</bold></highlight>, the packet header <highlight><bold>121</bold></highlight> is constructed by 9 bytes and the capacity of the data area <highlight><bold>142</bold></highlight> in which sub-picture data can be stored is expanded to 2024 bytes. The pack header <highlight><bold>120</bold></highlight> has the same structure as that used in the case of the NV pack <highlight><bold>86</bold></highlight>. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> A code (001xxxxxb:xxxxx stream number) indicating a sub-picture stream-is given to the sub-stream ID <highlight><bold>141</bold></highlight>. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> The packet header <highlight><bold>121</bold></highlight> is constructed by a 3-byte packet start code (000001h), 1-byte stream ID (10111101b:private stream <highlight><bold>1</bold></highlight>), 2-byte PES (Packetized Elementary Stream) packet length, 3-byte data relating to PES, and 5-byte PTS (Presentation Time Stamp; time management information for reproduction output). The PTS is described only in a sub-picture packet containing head data of each sub-picture unit. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 39</cross-reference>, in a computer data pack <highlight><bold>88</bold></highlight>, one pack is constructed by a 14-byte pack header <highlight><bold>120</bold></highlight> and a packet which is constructed by a 14-byte packet header <highlight><bold>121</bold></highlight>, 1-byte sub-stream ID <highlight><bold>151</bold></highlight>, 2-byte computer environmental data <highlight><bold>152</bold></highlight> and a data area <highlight><bold>153</bold></highlight> in which computer data of up to 2017 bytes can be stored. If no PTS is contained in the packet header <highlight><bold>121</bold></highlight>, the packet header <highlight><bold>121</bold></highlight> is constructed by 9 bytes and the capacity of the data area <highlight><bold>153</bold></highlight> in which computer data can be stored is expanded to 2022 bytes. The pack header <highlight><bold>120</bold></highlight> has the same structure as that used in the case of the NV pack <highlight><bold>86</bold></highlight>. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> As the computer environmental data <highlight><bold>152</bold></highlight>, an application CPU and application OS are described. For example, as shown in <cross-reference target="DRAWINGS">FIG. 40</cross-reference>, four different classifications can be selected, and if the application CPU is &ldquo;CPU<highlight><bold>1</bold></highlight>&rdquo; and the application OS is &ldquo;OS1&rdquo;, &ldquo;0110(h)&rdquo; is described, if the application CPU is &ldquo;CPU1&rdquo; and the application OS is &ldquo;OS2&rdquo;, &ldquo;0111(h)&rdquo; is described, if the application CPU is &ldquo;CPU2&rdquo; and the application OS is &ldquo;OS3&rdquo;, &ldquo;1002(h)&rdquo; is described, and if the application CPU is &ldquo;CPU1&rdquo; and the application OS is &ldquo;OS3&rdquo;, &ldquo;0102(h)&rdquo; is described. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> A code (11000000b) indicating a computer stream is given to the sub-stream ID. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> The packet header <highlight><bold>121</bold></highlight> is constructed by a 3-byte packet start code (000001h), 1-byte stream ID (10111101b:private stream <highlight><bold>1</bold></highlight>), 2-byte PES (Packetized Elementary Stream) packet length, 3-byte data relating to PES, and 5-byte PTS (Presentation Time Stamp; time management information for reproduction output). The PTS is described only in a computer data packet containing head data of each computer data stream. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> In an SCR described in each of the above packs, the value of a head pack for each video title set is set to &ldquo;0&rdquo; and increased in an ascending order according to the order of recording of data into the optical disk <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 41</cross-reference>, the stream ID described in the packet header <highlight><bold>121</bold></highlight> of each pack indicates the program stream map in the case of &ldquo;10111100&rdquo;, the private stream <highlight><bold>1</bold></highlight> in the case of &ldquo;10111101&rdquo;, the padding stream (dummy data) in the case of &ldquo;10111110&rdquo;, the private stream <highlight><bold>2</bold></highlight> in the case of &ldquo;10111111&rdquo;, the MPEG audio stream (xxxxx; stream number) in the case of &ldquo;110xxxxx&rdquo;, the MPEG video stream (xxxx; stream number) in the case of &ldquo;1110xxxx&rdquo;, the entitlement (permission) control message in the case of &ldquo;11110000&rdquo;, the entitlement (permission) management message in the case of &ldquo;111110010&rdquo;, the DSM control command in the case of &ldquo;11110010&rdquo;, and the program stream directory in the case of &ldquo;11111111&rdquo;. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> The sub-stream IDs <highlight><bold>131</bold></highlight>, <highlight><bold>141</bold></highlight>, <highlight><bold>151</bold></highlight> respectively described in the packs of the audio pack <highlight><bold>91</bold></highlight>, sub-picture pack <highlight><bold>90</bold></highlight>, computer data pack <highlight><bold>88</bold></highlight> correspond to the private stream <highlight><bold>1</bold></highlight>, and as shown in <cross-reference target="DRAWINGS">FIG. 42</cross-reference>, the stream ID indicates the linear PCM audio stream in the case of &ldquo;101000xxx&rdquo; in which &ldquo;xxx&rdquo; indicates the stream number, indicates the sub-picture stream in the case of &ldquo;001xxxxx&rdquo; in which &ldquo;xxxxx&rdquo; indicates the stream number, indicates the computer data stream in the case of &ldquo;11000000&rdquo;, and indicates the Dolby AC3 audio stream in the case of &ldquo;10000xxx&rdquo; in which &ldquo;xxx&rdquo; indicates the stream number. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> The sub-stream IDs <highlight><bold>118</bold></highlight>, <highlight><bold>119</bold></highlight> respectively described in the PCI packet and DSI packet in the NV pack <highlight><bold>87</bold></highlight> correspond to the private stream <highlight><bold>2</bold></highlight>, and as shown in <cross-reference target="DRAWINGS">FIG. 43</cross-reference>, the sub-stream ID indicates the PCI stream in the case of &ldquo;00000000&rdquo;, and indicates the DSI stream in the case of &ldquo;00000001&rdquo;. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> Next, a concrete example of the structure of the pack <highlight><bold>91</bold></highlight> of linear audio data is explained with reference to <cross-reference target="DRAWINGS">FIG. 44</cross-reference>. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> As the stream ID in the packet header <highlight><bold>121</bold></highlight>, &ldquo;10111101&rdquo; indicating the private stream <highlight><bold>1</bold></highlight> is described, as the sub-stream ID <highlight><bold>131</bold></highlight> in the packet header <highlight><bold>121</bold></highlight>, &ldquo;10100011&rdquo; indicating the linear PCM audio stream is described and &ldquo;3&rdquo; is described as the stream number thereof, and as the first access unit pointer <highlight><bold>133</bold></highlight>, &ldquo;01DB(h)&rdquo; is described. In the data area <highlight><bold>134</bold></highlight> of the packet, remaining data (472 bytes) in the preceding frame and two frame data items (772-byte configuration for one frame) are stored. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> Next, a concrete example of the structure of the pack <highlight><bold>88</bold></highlight> of computer data is explained with reference to <cross-reference target="DRAWINGS">FIG. 45</cross-reference>. </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> As the stream ID in the packet header <highlight><bold>121</bold></highlight>, &ldquo;10111101&rdquo; indicating the private stream <highlight><bold>1</bold></highlight> is described, as the sub-stream ID <highlight><bold>151</bold></highlight>, &ldquo;11000000&rdquo; indicating the computer data stream is described, and as the computer environmental data <highlight><bold>152</bold></highlight>, &ldquo;0111(h)&rdquo; indicating that the application CPU is &ldquo;CPU<highlight><bold>1</bold></highlight>&rdquo; and the application OS is &ldquo;OS2&rdquo; is described. In the data area <highlight><bold>153</bold></highlight> of the packet, computer data is stored. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> Next, a concrete example of the structure of the pack <highlight><bold>90</bold></highlight> of sub-picture data is explained with reference to <cross-reference target="DRAWINGS">FIG. 46</cross-reference>. </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> As the stream ID in the packet header <highlight><bold>121</bold></highlight>, &ldquo;10111101&rdquo; indicating the private stream <highlight><bold>1</bold></highlight> is described, as the sub-stream ID <highlight><bold>141</bold></highlight>, &ldquo;00100101&rdquo; indicating the sub-picture stream is described and &ldquo;5&rdquo; is described as the stream number thereof. In the data area <highlight><bold>142</bold></highlight> of the packet, sub-picture data of up to 2019 bytes is stored. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> The system processor section <highlight><bold>54</bold></highlight> includes a packet transfer processing section <highlight><bold>200</bold></highlight> for determining the classification of the packet and transferring data in the packet to each decoder. As shown in <cross-reference target="DRAWINGS">FIG. 47</cross-reference>, the packet transfer processing section <highlight><bold>200</bold></highlight> includes a memory interface section (memory I/F section) <highlight><bold>201</bold></highlight>, stuffing length detecting section <highlight><bold>202</bold></highlight>, pack header end address calculating section <highlight><bold>203</bold></highlight>, pack classification judgment section <highlight><bold>204</bold></highlight>, packet data transfer control section <highlight><bold>205</bold></highlight> and decoder interface section (decoder I/F section) <highlight><bold>206</bold></highlight>. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> The memory I/F section <highlight><bold>201</bold></highlight> outputs pack data from the data RAM section <highlight><bold>56</bold></highlight> to the stuffing length detecting section <highlight><bold>202</bold></highlight>, pack classification judgment section <highlight><bold>204</bold></highlight>, packet data transfer control section <highlight><bold>205</bold></highlight> and decoder I/F section <highlight><bold>206</bold></highlight> via a data bus. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> The stuffing length detecting section <highlight><bold>202</bold></highlight> detects the number of bytes of the stuffing length in the pack header <highlight><bold>120</bold></highlight> in pack data supplied from the memory I/F section <highlight><bold>201</bold></highlight> and the result of detection is output to the pack header end address calculating section <highlight><bold>203</bold></highlight>. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> The pack header end address calculating section <highlight><bold>203</bold></highlight> calculates a pack header end address based on the stuffing length supplied from the stuffing length detecting section <highlight><bold>202</bold></highlight> and the result of calculation is output to the pack classification judgment section <highlight><bold>204</bold></highlight> and packet data transfer control section <highlight><bold>205</bold></highlight>. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> The pack classification judgment section <highlight><bold>204</bold></highlight> determines one of the video pack <highlight><bold>87</bold></highlight>, audio pack <highlight><bold>91</bold></highlight>, sub-picture pack <highlight><bold>90</bold></highlight>, NV pack <highlight><bold>86</bold></highlight> and computer data pack <highlight><bold>88</bold></highlight> based on the content of 4-byte data which comes after an address included in pack data supplied from the memory I/F section <highlight><bold>201</bold></highlight> according to the pack header end address supplied from the pack header end address calculating section <highlight><bold>203</bold></highlight> and the result of determination is output to the packet data transfer control section <highlight><bold>205</bold></highlight>. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> When a 1-byte stream ID indicating the private stream <highlight><bold>2</bold></highlight> is supplied, the NV pack <highlight><bold>86</bold></highlight> is identified. When a stream ID indicating a video stream is supplied, the video pack <highlight><bold>87</bold></highlight> is identified. When a 1-byte stream ID indicating a private stream <highlight><bold>1</bold></highlight> is supplied, the audio pack <highlight><bold>81</bold></highlight>, the sub-picture pack <highlight><bold>90</bold></highlight> or the computer data pack <highlight><bold>88</bold></highlight> is identified. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> When the audio pack <highlight><bold>91</bold></highlight>, sub-picture pack <highlight><bold>90</bold></highlight> or computer data pack <highlight><bold>88</bold></highlight> is determined, the Dolby AC3 audio stream, linear audio stream, sub-picture stream or computer data stream is determined according to the sub-stream ID <highlight><bold>131</bold></highlight>, <highlight><bold>141</bold></highlight>, or <highlight><bold>151</bold></highlight> which follows the packet header <highlight><bold>121</bold></highlight>. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> For example, as shown in <cross-reference target="DRAWINGS">FIG. 42</cross-reference>, the linear audio stream is determined in the case of &ldquo;10100xxx&rdquo; (xxx; stream number), the Dolby AC3 audio stream is determined in the case of &ldquo;10000xxx&rdquo; (xxx; stream number), the sub-picture stream is determined in the case of &ldquo;001xxxxx&rdquo; (xxxxx; stream number), and the computer data stream is determined in the case of &ldquo;11000000&rdquo;. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> The packet data transfer control section <highlight><bold>205</bold></highlight> determines the transfer destination and packet start address according to the pack header end address supplied from the pack header end address calculating section <highlight><bold>203</bold></highlight> and the result of judgment of pack classification supplied from the pack classification judgment section <highlight><bold>204</bold></highlight> and determines the packet length in the packet header <highlight><bold>121</bold></highlight> of the supplied pack data. Further, the packet data transfer control section <highlight><bold>205</bold></highlight> supplies a signal indicating the transfer destination as a transfer control signal to the decoder I/F section <highlight><bold>206</bold></highlight> and the packet end address based on the packet start address is supplied to the memory I/F section <highlight><bold>201</bold></highlight>. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> The decoder I/F section <highlight><bold>206</bold></highlight> outputs video data, audio data, sub-picture data to corresponding decoder sections <highlight><bold>58</bold></highlight>, <highlight><bold>60</bold></highlight>, <highlight><bold>62</bold></highlight> as packet data containing the packet header <highlight><bold>121</bold></highlight> supplied from the memory I/F section <highlight><bold>201</bold></highlight> to the packet data transfer control section <highlight><bold>205</bold></highlight> in response to a transfer control signal supplied from the packet data transfer control section <highlight><bold>205</bold></highlight> and outputs navigation data and computer data as packet data to the data RAM <highlight><bold>56</bold></highlight>. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> Next, the operation of reproducing movie data from the optical disk <highlight><bold>10</bold></highlight> having the logic format shown in FIGS. <highlight><bold>4</bold></highlight> to <highlight><bold>24</bold></highlight> is explained with reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, arrows indicated by solid lines between the blocks indicate data buses and arrows indicated by broken lines indicate control buses. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> In the optical disk device shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, when the power supply is turned ON, the system CPU section <highlight><bold>50</bold></highlight> reads out an initial operation program from the system ROM and RAM <highlight><bold>52</bold></highlight> and operates the disk drive section <highlight><bold>30</bold></highlight>. Therefore, the disk drive section <highlight><bold>30</bold></highlight> starts the readout operation for the lead-in area <highlight><bold>27</bold></highlight> and then the readout operation is effected for the volume and file structure area <highlight><bold>70</bold></highlight> which follows the lead-in area <highlight><bold>27</bold></highlight> and defines the volume and file structure in conformity to ISO-9660 or the like. The CPU section <highlight><bold>50</bold></highlight> supplies a read instruction to the disk drive section <highlight><bold>30</bold></highlight> to read out data from the volume and file structure area <highlight><bold>70</bold></highlight> recorded in a preset position of the optical disk <highlight><bold>10</bold></highlight> set in the disk drive section <highlight><bold>30</bold></highlight>, reads out the content of the volume and file structure area <highlight><bold>70</bold></highlight> and temporarily stores the readout content into the data RAM section <highlight><bold>56</bold></highlight> via the system processor section <highlight><bold>54</bold></highlight>. The system CPU section <highlight><bold>50</bold></highlight> extracts management information as information necessary for the management and information of the recording position, recording capacity, size and the like of each file by use of a pass table and directory record stored in the data RAM section <highlight><bold>56</bold></highlight>, transfers the same to a preset location of the system ROM &amp; RAM <highlight><bold>52</bold></highlight> and stores the same therein. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> Next, the system CPU section <highlight><bold>50</bold></highlight> acquires the video manager <highlight><bold>71</bold></highlight> constructed by a plurality of files starting from the file number &ldquo;0&rdquo; from the system ROM &amp; RAM section <highlight><bold>52</bold></highlight> by referring to information of the recording position and recording capacity of each file. That is, the system CPU section <highlight><bold>50</bold></highlight> supplies a read instruction to the disk drive section <highlight><bold>30</bold></highlight> by referring to information of the recording position and recording capacity of each file acquired from the system ROM &amp; RAM section <highlight><bold>52</bold></highlight>, acquires the position and size of a plurality of files constructing the video manager <highlight><bold>71</bold></highlight> lying on the route directory, reads out the video manager <highlight><bold>71</bold></highlight>, and stores the same into the data RAM section <highlight><bold>56</bold></highlight> via the system processor section <highlight><bold>54</bold></highlight>. The video manager information management table (VMGI_MAT) <highlight><bold>78</bold></highlight> which is the first table of the video manager <highlight><bold>71</bold></highlight> is searched. A start address (VMGM_VOBS_SA) of the video object set (VMGM_VOBS) <highlight><bold>76</bold></highlight> for the video manager menu (VMGM) is acquired by the searching operation and the video object-set (VMGM_VOBS) <highlight><bold>76</bold></highlight> is reproduced. The operation of reproducing the video object set (VMGM_VOBS) <highlight><bold>76</bold></highlight> is the same as the reproducing operation for the-video object set (VTSM_VOBS) for the title in the video title set (VTS), and therefore, explanation for the reproducing procedure is omitted. When the language is set by use of the video object set (VMGM_VOBS) <highlight><bold>76</bold></highlight> or when no video manager menu (VMGM) is present, the video manager information management table (VMGI_MAT) is searched to search for the start address (TT_SRPT_SA) of the title set search pointer table (TT_SRPT) <highlight><bold>79</bold></highlight>. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> By the searching operation, the title set search pointer table (TT_SRPT) <highlight><bold>79</bold></highlight> is transferred to a preset location of the system ROM &amp; RAM section <highlight><bold>52</bold></highlight> and stored therein. Next, the system CPU section <highlight><bold>50</bold></highlight> acquires a last address of the title search pointer table (TT_SRPT) <highlight><bold>79</bold></highlight> from the title search pointer table information (TSPTI) <highlight><bold>92</bold></highlight> and acquires a start address (VTS_SA) of the video title set, program chain number (PGCN) and video title set number (VTSN) corresponding to an entry number from the title search pointer (TT_SRP) <highlight><bold>93</bold></highlight> corresponding to the entry number from the key operation/display section <highlight><bold>4</bold></highlight>. When only one title set is present, one title search pointer (TT_SRP) <highlight><bold>93</bold></highlight> is searched irrespective whether the entry number from the key operation/display section <highlight><bold>4</bold></highlight> is present or not and the start address (VTS_SA) of the title set is acquired. The system CPU section <highlight><bold>50</bold></highlight> acquires an object title set based on the start address (VTS_SA) of the title set. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> The system CPU section <highlight><bold>50</bold></highlight> acquires the stream number of video, audio, sub-picture for video manager menu and attribute information items described in the information management table (VMGI_MAT) <highlight><bold>78</bold></highlight> of the video manager information (VMGI) <highlight><bold>75</bold></highlight> and sets parameters for reproduction of video manager menu in the video recorder section <highlight><bold>58</bold></highlight>, audio recorder section <highlight><bold>60</bold></highlight> and sub-picture decoder section <highlight><bold>62</bold></highlight> based on the attribute information. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> Next, as shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, the video title set information (VTSI) <highlight><bold>94</bold></highlight> of the title set is acquired from the start address (VTS_SA) of the video title set <highlight><bold>72</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. The end address (VTI_MAT_EA) of the video title set information management table (VTSI_MAT) <highlight><bold>98</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is acquired from the management table (VTSI_MAT) <highlight><bold>98</bold></highlight> of video title set information of the video title set information (VTSI) <highlight><bold>94</bold></highlight> and respective portions of the reproducing apparatus shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> are set according to the attributes thereof based on the numbers of streams (VTS_AST_Ns, VTS_SPST_Ns) of audio and sub-picture data items and attribute information items (VTS_V_ATR, VTS_A_ATR, VTS_SPST_ATR) of video, audio and sub-picture data items. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> When the menu (VTSM) for the video title set (VTS) is simple in structure, the start address (VTSM_VOB_SA) of the video object set (VTSM_VOB) <highlight><bold>95</bold></highlight> for mend in the video title set is acquired from the video title set information management table (VTSI_MAT) <highlight><bold>98</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> and the menu of the video title set is displayed by the video object set (VTSM_VOB) <highlight><bold>95</bold></highlight>. When the video object set (VTT_VOBS) <highlight><bold>96</bold></highlight> for the title (VTST) in the title set (VTS) is simply reproduced by referring to the menu without selecting the program chain (PGC), the video object set <highlight><bold>96</bold></highlight> is reproduced from the start address (VTSTT_VOB_SA) shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> When the program chain (PGC) is specified by the key operation/display section <highlight><bold>4</bold></highlight>, an object program chain is searched for in the following procedure. The procedure of searching for the program chain is not limited to the operation of searching for a program chain for the title in the video title set and the same procedure can be used for searching for a program chain for a relatively complicated menu constructed by program chains. The start address of the program chain information table (VTS_PGCIT) <highlight><bold>100</bold></highlight> in the video title set (VTS) shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> and described in the management table (VTSI_MAT) <highlight><bold>98</bold></highlight> of the video title set information (VTSI) <highlight><bold>94</bold></highlight> is acquired and information (VTS_PGCIT_I) <highlight><bold>102</bold></highlight> of the VTS program chain information table shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is fetched. The number of program chains (VTS_PGC_Ns) and the end address (VTS_PGCIT_EA) shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> are acquired from the information (VTS_PGCIT_I) <highlight><bold>102</bold></highlight>. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> When the program chain number is specified by the key operation/display section <highlight><bold>4</bold></highlight>, the category of the program chain shown in <cross-reference target="DRAWINGS">FIG. 16</cross-reference> from the VTS_PGCIT search pointer (VTS_PGCIT_SRP) <highlight><bold>103</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference> and corresponding to the specified number and the start address of VTS_PGC information <highlight><bold>104</bold></highlight> corresponding to the search pointer (VTS_PGCIT_SRP) <highlight><bold>103</bold></highlight> are acquired. The program chain general information (PGC_GI) shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is read out by use of the start address (VTS_PGCI_SA). The category of the program chain (PGC) and reproducing time (PGC_CAT, PGC_PB_TIME) are acquired by use of the general information (PGC_GI) and the start addresses (C_PBIT_SA, C_POSIT_SA) of the cell reproduction information table (C_PBIT) and cell position information table (C_POSIT) <highlight><bold>108</bold></highlight> described in the general information (PGC_GI) are acquired. The identifier (C_VOB_IDN) of the video object and the identifier (C_IDN) of the cell as shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference> are acquired as the cell position information (C_POSI) shown in <cross-reference target="DRAWINGS">FIG. 23</cross-reference> by use of the start address (C_PBIT_SA). </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> Further, cell reproduction information (C_PBI) shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is acquired by use of the start address (C_POSIT_SA), the start address (C_FVOBU_SA) of the first VOBU <highlight><bold>85</bold></highlight> in the cell shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference> and described in the reproduction information (C_PBI) and the start address (C_LVOBU_SA) of the last VOBU are acquired, and the target cell is searched for. The cell reproduction order is determined by referring to the map of the program shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference> in the PGC program map (PGC_PGMAP) <highlight><bold>106</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference> to sequentially determine the reproduction cell <highlight><bold>84</bold></highlight>. The thus determined data cells <highlight><bold>84</bold></highlight> of the program chain are sequentially read out from the video object <highlight><bold>144</bold></highlight> and input to the data RAM section <highlight><bold>56</bold></highlight> via the system processor section <highlight><bold>54</bold></highlight>. The data cell <highlight><bold>84</bold></highlight> is supplied to the video decoder section <highlight><bold>58</bold></highlight>, audio decoder section <highlight><bold>60</bold></highlight> and sub-picture decoder section <highlight><bold>62</bold></highlight> according to the reproduction time information and decoded, converted by the D/A and reproduction processing section <highlight><bold>64</bold></highlight>, and an image is reproduced on the monitor section <highlight><bold>6</bold></highlight> and a sound is reproduced from the speaker section <highlight><bold>8</bold></highlight>. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> Next, the normal operation of reproducing video data by using the navigation pack <highlight><bold>86</bold></highlight> is explained in detail with reference to the flowchart. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> In the normal reproduction of video data, when the normal reproduction is started as shown in <cross-reference target="DRAWINGS">FIG. 48</cross-reference>, the video manager information (VMGI) <highlight><bold>75</bold></highlight> is searched for by the system CPU section <highlight><bold>50</bold></highlight> as explained before after the starting step indicated by the step S<highlight><bold>11</bold></highlight> is effected and then it is stored into the system ROM/RAM section <highlight><bold>52</bold></highlight> by the steps S<highlight><bold>12</bold></highlight>. Likewise, the video title set information (VTSI) <highlight><bold>94</bold></highlight> of the video title set (VTS) <highlight><bold>72</bold></highlight> is fetched based on the video manager information (VMGI) <highlight><bold>75</bold></highlight> and the video title set menu is displayed on the monitor section <highlight><bold>6</bold></highlight> by use of the video object set (VTSM_VOBS) <highlight><bold>95</bold></highlight>. Based on the display, the user determines the title set <highlight><bold>72</bold></highlight> to be reproduced and the reproduction condition as indicated by the step S<highlight><bold>13</bold></highlight>. If the determined title set <highlight><bold>72</bold></highlight> is selected by the key operation/display section <highlight><bold>4</bold></highlight>, data of the cell reproducing information table (C_PBIT) <highlight><bold>107</bold></highlight> shown in <cross-reference target="DRAWINGS">FIGS. 17, 21</cross-reference>, <highlight><bold>22</bold></highlight> are fetched from the program chain information table (VTS_PGCIT) <highlight><bold>100</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> in the selected title set <highlight><bold>72</bold></highlight> by the system CPU section <highlight><bold>50</bold></highlight> as indicated by the step S<highlight><bold>14</bold></highlight> and stored into the system ROM/RAM section <highlight><bold>52</bold></highlight>. </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> The system CPU section <highlight><bold>50</bold></highlight> determines the program chain number (VTS_PGC_Ns), angle number (ANGNs), audio stream number and sub-picture stream number for starting the reproduction according to the reproducing condition input from the key operation/display section <highlight><bold>4</bold></highlight> by the step S<highlight><bold>15</bold></highlight>. For example, the program chain is determined such that the Eleventh World Champion Match of Boxing is selected as the title and the Japanese caption is used as the sub-picture under the English narration. Further, the user may determine a video image which can always provide favorable observation of the fight between the two boxers as the angle. The thus determined sub-picture number and audio stream number are set in the register <highlight><bold>54</bold></highlight>B of the processor section <highlight><bold>54</bold></highlight> in the step S<highlight><bold>16</bold></highlight>. Likewise, the reproduction start time is set in the system time clock (STC) <highlight><bold>54</bold></highlight>A, <highlight><bold>58</bold></highlight>A, <highlight><bold>60</bold></highlight>A, <highlight><bold>62</bold></highlight>A of the system processor section <highlight><bold>54</bold></highlight>, video decoder section <highlight><bold>58</bold></highlight>, audio decoder section <highlight><bold>60</bold></highlight> and sub-picture decoder section <highlight><bold>62</bold></highlight>. Further, the start address of first VOBU in the cell used as the start address and the PGC number, that is, cell number are stored in the system ROM/RAM section <highlight><bold>52</bold></highlight>. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> A read command is supplied from the system CPU section <highlight><bold>50</bold></highlight> to the disk drive section <highlight><bold>30</bold></highlight> when the preparation for reading the video title set is made as shown in the step S<highlight><bold>17</bold></highlight> and a seek process is effected for the optical disk <highlight><bold>10</bold></highlight> by the disk drive section <highlight><bold>30</bold></highlight> based on the received start address. Cells associated with the specified program chain (PGC) are sequentially read out from the optical disk <highlight><bold>10</bold></highlight> in response to the read command and supplied to the data RAM section <highlight><bold>56</bold></highlight> via the system CPU section <highlight><bold>50</bold></highlight> and system processing section <highlight><bold>54</bold></highlight>. The supplied cell data is stored as a pack into the data RAM section <highlight><bold>56</bold></highlight> from the navigation pack <highlight><bold>86</bold></highlight> which is the head pack of the video object unit (VOBU) <highlight><bold>85</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. After this, the video pack <highlight><bold>87</bold></highlight>, audio pack <highlight><bold>91</bold></highlight>, sub-picture pack <highlight><bold>90</bold></highlight> and computer data pack <highlight><bold>88</bold></highlight> of the video object unit (VOBU) <highlight><bold>85</bold></highlight> are respectively supplied to the video decoder section <highlight><bold>58</bold></highlight>, audio decoder section <highlight><bold>60</bold></highlight>, sub-picture decoder section <highlight><bold>62</bold></highlight> and data RAM section <highlight><bold>56</bold></highlight>, decoded by the respective decoders and then supplied to the D/A and data reproducing section <highlight><bold>64</bold></highlight>. As a result, a video signal is supplied to the monitor section <highlight><bold>6</bold></highlight>, an audio signal is supplied to the speaker section <highlight><bold>8</bold></highlight>, and display of the video image with the sub-picture is started and voice reproduction is started. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> The content of the computer data pack <highlight><bold>88</bold></highlight> is stored into the work area of the data RAM section <highlight><bold>56</bold></highlight> for the system CPU section <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> Then, the system CPU section <highlight><bold>50</bold></highlight> executes another process by using program data as the computer data or starts another program in the system ROM/RAM section <highlight><bold>52</bold></highlight>. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> For example, when Japanese pachisi game is played in the course of video operation, the simple program for the Japanese pachisi game is not recorded in the system ROM/RAM section <highlight><bold>52</bold></highlight> and is read out as the computer data as described above. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> Further, by causing the program to be read out as the computer data, a preset program stored in the system ROM/RAM section <highlight><bold>52</bold></highlight> is started. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> If an interruption from the key operation/display section <highlight><bold>4</bold></highlight> occurs during the reproduction of video and audio signals, key data obtained at this time is stored into the system RAM/ROM section <highlight><bold>52</bold></highlight>. If no key data is obtained, whether an interruption of the end of reproduction from the drive section is present or not is checked. If the interruption of the end of reproduction is not present, a standby state for transfer of the navigation pack <highlight><bold>86</bold></highlight> is set. If transfer of the navigation pack <highlight><bold>86</bold></highlight> is completed, the logical sector number (NV_PCK_LSN) in the navigation pack <highlight><bold>86</bold></highlight> is stored into the system RAM/ROM section <highlight><bold>52</bold></highlight> as the present logical block number (NOWLBN). </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> When transfer of the NV pack <highlight><bold>86</bold></highlight> is completed, whether it is the last NV pack <highlight><bold>86</bold></highlight> in the cell or not is checked. That is, whether it is the last navigation pack <highlight><bold>86</bold></highlight> in the cell <highlight><bold>84</bold></highlight> or not is checked. The checking operation is effected by comparing the start address (C_LVOBU_SA) of C_LVOBU of the cell reproduction information table (C_PBI) <highlight><bold>107</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference> with the address (V_PCK_LBN) of the navigation pack <highlight><bold>86</bold></highlight>. If the NV pack <highlight><bold>86</bold></highlight> is the last one in the cell, whether a change of the angle is made or not is checked. The change of angle is determined based on whether or not a change of angle is entered from the key operation/display section <highlight><bold>4</bold></highlight> to the system CPU section <highlight><bold>50</bold></highlight>. If no change of angle is made, whether or not the cell is the last cell of the program chain (PGC) to which the cell <highlight><bold>84</bold></highlight> belongs is checked. The checking operation is effected based on whether or not the cell <highlight><bold>84</bold></highlight> shown in <cross-reference target="DRAWINGS">FIGS. 17 and 2</cross-reference>: is the last cell of the cell reproduction information table (C_PBIT) <highlight><bold>107</bold></highlight>. That is, the checking operation is effected based on the number of cells constituting the program chain and the identification number of the reproduced cell. If the end of playback has been specified, or if there is no program chain, the end PTS (VOBU_EPTS) contained in the PCI general information (PCI_GI) is referred to in step S<highlight><bold>18</bold></highlight>. When the end PTS (VOBU_EPTS) coincides with the system time clock (STC), the monitor <highlight><bold>6</bold></highlight> will stop displaying on the screen as shown in step S<highlight><bold>19</bold></highlight>, then the system CPU will supply a data transfer stop command to the disk drive section <highlight><bold>30</bold></highlight>, which thereby stops the data transfer, terminating the playback operation (step S<highlight><bold>20</bold></highlight>). </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> Next, the pack transfer process is explained with reference to the flowchart shown in <cross-reference target="DRAWINGS">FIG. 49</cross-reference>. </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> The system CPU section <highlight><bold>50</bold></highlight> transfers a read command and the logical sector address of a to-be-reproduced pack to the disk drive section <highlight><bold>30</bold></highlight> (step S<highlight><bold>31</bold></highlight>). </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> Then, the disk drive section <highlight><bold>30</bold></highlight> seeks a target address (step S<highlight><bold>32</bold></highlight>). </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> The disk drive section <highlight><bold>30</bold></highlight> corrects an error of data of the target address and transfers main data portion of the logical sector data to the system processor section <highlight><bold>54</bold></highlight> (step S<highlight><bold>33</bold></highlight>). </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> The system processor section <highlight><bold>54</bold></highlight> stores data of the readout logical sector in the data RAM section <highlight><bold>56</bold></highlight> (step S<highlight><bold>34</bold></highlight>). </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> The system processor section <highlight><bold>54</bold></highlight> reads out pack headers <highlight><bold>110</bold></highlight>, <highlight><bold>120</bold></highlight> from the head portion of data of the logical sector stored in the data RAM section <highlight><bold>56</bold></highlight> and stores the SCR (system time standard reference value) thereof (step S<highlight><bold>35</bold></highlight>). </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> At this time, since the head of the logical sector coincides with the head of the pack data, data can be easily fetched. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> Then, the system processor section <highlight><bold>54</bold></highlight> compares the PTS thereof with the SCR of the stored pack, determines a pack corresponding to the SCR which has reached the PTS, that is, a to-be-reproduced pack, reads out the determined pack data from the data RAM section <highlight><bold>56</bold></highlight>, determines the classification of data by the packet transfer processing section <highlight><bold>200</bold></highlight>, and transfers data to the decoder section <highlight><bold>58</bold></highlight>, <highlight><bold>60</bold></highlight>, <highlight><bold>62</bold></highlight> or data RAM section <highlight><bold>56</bold></highlight> according to the determined classification (step S<highlight><bold>36</bold></highlight>). </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> The decoder sections <highlight><bold>58</bold></highlight>, <highlight><bold>60</bold></highlight>, <highlight><bold>62</bold></highlight> decode data according to the respective data formats and the set coding system and supplies the decoded data to the D/A &amp; reproduction processing section <highlight><bold>64</bold></highlight>. After a digital signal obtained as the result of decoding of video data is converted into an analog signal by the D/A &amp; reproduction processing section <highlight><bold>64</bold></highlight>, the signal is subjected to the frame rate processing, aspect process, pan-scan process and the like according to the set condition and then output to the monitor section <highlight><bold>6</bold></highlight>. After a digital signal obtained as the result of decoding of audio data is converted into an analog signal by the D/A &amp; reproduction processing section <highlight><bold>64</bold></highlight>, the signal is subjected to the mixing process according to the set condition by the D/A &amp; reproduction processing section <highlight><bold>64</bold></highlight> and then output to the speaker section <highlight><bold>8</bold></highlight>. After the D/A &amp; reproduction processing section <highlight><bold>64</bold></highlight> converts a digital signal obtained as the result of decoding of sub-picture data into an analog signal, the signal is output to the monitor section <highlight><bold>6</bold></highlight> (step S<highlight><bold>37</bold></highlight>). </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> When the data RAM section <highlight><bold>56</bold></highlight> is supplied with program data as computer data, it stores the data together with the computer environmental classification indicating the application OS and the CPU classification and outputs the computer environmental classification and data thereof to the system CPU section <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> The above steps S<highlight><bold>33</bold></highlight> to S<highlight><bold>37</bold></highlight> are repeatedly effected until reproduction is completed. </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> Next, the operation of the packet transfer processing section <highlight><bold>200</bold></highlight> is explained. </paragraph>
<paragraph id="P-0228" lvl="0"><number>&lsqb;0228&rsqb;</number> Pack data read out from the data RAM section <highlight><bold>56</bold></highlight> is supplied to the stuffing length detecting section <highlight><bold>202</bold></highlight>, pack classification judgment section <highlight><bold>204</bold></highlight>, packet data transfer control section <highlight><bold>205</bold></highlight> and decoder I/F section <highlight><bold>206</bold></highlight> via the memory I/F section <highlight><bold>201</bold></highlight> (step S<highlight><bold>41</bold></highlight>). </paragraph>
<paragraph id="P-0229" lvl="0"><number>&lsqb;0229&rsqb;</number> Then, the stuffing length is detected by the stuffing length detecting section <highlight><bold>202</bold></highlight> and data indicating the stuffing length is output to the pack header end address calculating section <highlight><bold>203</bold></highlight> (step S<highlight><bold>42</bold></highlight>). </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> The pack header end address calculating section <highlight><bold>203</bold></highlight> calculates the pack header end address based on the supplied stuffing length and the pack header end address is supplied to the pack classification judgment section <highlight><bold>204</bold></highlight> and packet data transfer control section <highlight><bold>205</bold></highlight> (step S<highlight><bold>43</bold></highlight>). </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> The pack classification judgment section <highlight><bold>204</bold></highlight> determines the NV pack <highlight><bold>86</bold></highlight>, video pack <highlight><bold>87</bold></highlight>, Dolby AC3 audio pack <highlight><bold>91</bold></highlight>, linear PCM audio pack <highlight><bold>91</bold></highlight>, sub-picture pack <highlight><bold>90</bold></highlight>, or computer data pack <highlight><bold>88</bold></highlight> based on the content of 4-byte to 6-byte data supplied after the pack header end address according to the pack header end address and the result of determination is supplied to the packet data transfer control section <highlight><bold>205</bold></highlight> (step S<highlight><bold>44</bold></highlight>). </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> That is, when a 1-byte stream ID indicating the private stream <highlight><bold>2</bold></highlight> is supplied, the NV pack <highlight><bold>786</bold></highlight> is identified; when a stream ID indicating a video stream is supplied, the video pack <highlight><bold>87</bold></highlight> is identified; and when a 1-byte stream ID indicating a private stream <highlight><bold>1</bold></highlight> is supplied, the audio pack <highlight><bold>81</bold></highlight> of the Dobly AC3, the audio pack <highlight><bold>91</bold></highlight> of the linear PCM, the audio pack <highlight><bold>91</bold></highlight>, the sub-picture pack <highlight><bold>90</bold></highlight>, or the computer data pack <highlight><bold>88</bold></highlight> is identified. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> In a case where the stream ID is the private stream <highlight><bold>1</bold></highlight>, the linear PCM audio pack is determined if the sub-stream ID (<highlight><bold>131</bold></highlight>, <highlight><bold>141</bold></highlight>, <highlight><bold>151</bold></highlight>) following the packet header <highlight><bold>121</bold></highlight> is &ldquo;10100xxx&rdquo;, and the stream number is determined by &ldquo;xxx&rdquo;. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> In a case where the stream ID is the private stream <highlight><bold>1</bold></highlight>, the Dolby AC3 audio pack is determined if the sub-stream ID (<highlight><bold>131</bold></highlight>, <highlight><bold>141</bold></highlight>, <highlight><bold>151</bold></highlight>) following the packet header <highlight><bold>121</bold></highlight> is &ldquo;10000xxx&rdquo;, and the stream number is determined by &ldquo;xxx&rdquo;. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> In a case where the stream ID is the private stream <highlight><bold>1</bold></highlight>, the sub-picture stream is determined if the sub-stream ID (<highlight><bold>131</bold></highlight>, <highlight><bold>141</bold></highlight>, <highlight><bold>151</bold></highlight>) following the packet header <highlight><bold>121</bold></highlight> is &ldquo;001xxxxx&rdquo;, and the stream number is determined by &ldquo;xxxxx&rdquo;. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> In a case where the stream ID is the private stream <highlight><bold>1</bold></highlight>, the computer data stream is determined if the sub-stream ID (<highlight><bold>131</bold></highlight>, <highlight><bold>141</bold></highlight>, <highlight><bold>151</bold></highlight>) following the packet header <highlight><bold>121</bold></highlight> is &ldquo;11000000&rdquo;. </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> When the linear PCM audio pack <highlight><bold>91</bold></highlight> or Dolby AC3 audio pack <highlight><bold>91</bold></highlight> is determined, an offset byte number indicating the head position of the first frame is determined by the 2-byte first access unit pointer <highlight><bold>133</bold></highlight> following the frame header number <highlight><bold>132</bold></highlight> which is set after the sub-stream ID <highlight><bold>131</bold></highlight>. </paragraph>
<paragraph id="P-0238" lvl="0"><number>&lsqb;0238&rsqb;</number> Then, the packet data transfer control section <highlight><bold>205</bold></highlight> determines the transfer destination and packet start address according to the supplied result of determination of the pack classification, pack header end address and first access unit pointer <highlight><bold>133</bold></highlight> and determines the packet length in the packet header <highlight><bold>121</bold></highlight> of the supplied pack data. As a result, the packet data transfer control section <highlight><bold>205</bold></highlight> supplies a signal indicating the transfer destination as a transfer control signal to the decoder I/F section <highlight><bold>206</bold></highlight> and the packet end address based on the packet start address is supplied to the memory I/F section <highlight><bold>201</bold></highlight> (step S<highlight><bold>45</bold></highlight>). </paragraph>
<paragraph id="P-0239" lvl="0"><number>&lsqb;0239&rsqb;</number> Thus, substantially effective data is supplied from the memory I/F section <highlight><bold>201</bold></highlight> to the decoder I/F section <highlight><bold>206</bold></highlight> via the data bus, and then, transferred to the decoder <highlight><bold>58</bold></highlight>, <highlight><bold>60</bold></highlight>, <highlight><bold>62</bold></highlight> or data RAM section <highlight><bold>56</bold></highlight> as the transfer destination corresponding to the classification (step S<highlight><bold>46</bold></highlight>). </paragraph>
<paragraph id="P-0240" lvl="0"><number>&lsqb;0240&rsqb;</number> That is, the packet data of video data is transferred to the decoder <highlight><bold>58</bold></highlight>, the packet data of audio data is transferred to the decoder <highlight><bold>60</bold></highlight>, the packet data of sub-picture data is transferred to the decoder <highlight><bold>62</bold></highlight>, and the packet data of computer data is transferred to the date RAM section <highlight><bold>56</bold></highlight>. </paragraph>
<paragraph id="P-0241" lvl="0"><number>&lsqb;0241&rsqb;</number> In this case, since the pack data has a constant length and the storage state in the data RAM section <highlight><bold>56</bold></highlight> is made uniform, that is, the start addresses are set at regular intervals, the heads of the pack data items in the data RAM section <highlight><bold>56</bold></highlight> are always stored at the addresses set at regular intervals, and therefore, the management of the pack data can be attained only by managing the pack number without managing the address. </paragraph>
<paragraph id="P-0242" lvl="0"><number>&lsqb;0242&rsqb;</number> In a case where data is DSI data and PCI data as NV data indicating the reproduction position of video data, the NV data is not transferred to the decoder in the process of determination of the classification of data, and the NV data is stored in the data RAM section <highlight><bold>56</bold></highlight>. The NV data is referred to by the system CPU section <highlight><bold>50</bold></highlight> when required and used to reproduce video data in a special way. At this time, the PCI data and DSI data are identified by the sub-stream ID attached thereto. </paragraph>
<paragraph id="P-0243" lvl="0"><number>&lsqb;0243&rsqb;</number> Further, when reproduction of one cell is completed, cell information to be next reproduced is acquired from cell reproduction order information in the program chain data and the reproducing process is effected in the same manner as described above. </paragraph>
<paragraph id="P-0244" lvl="0"><number>&lsqb;0244&rsqb;</number> Next, the video data in the logic formats shown in FIGS. <highlight><bold>4</bold></highlight> to <highlight><bold>31</bold></highlight>, a method of recording data on the optical disk <highlight><bold>10</bold></highlight> to reproduce the video data, and a recording system to which the recording method is applied will be explained with reference to FIGS. <highlight><bold>50</bold></highlight> to <highlight><bold>55</bold></highlight>. </paragraph>
<paragraph id="P-0245" lvl="0"><number>&lsqb;0245&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 50</cross-reference> shows an encoder system that creates a video file of a title set <highlight><bold>84</bold></highlight> in which the video data is encoded. In the system of <cross-reference target="DRAWINGS">FIG. 50</cross-reference>, for example, a videotape recorder (VTR) <highlight><bold>201</bold></highlight>, an audiotape recorder (ATR) <highlight><bold>202</bold></highlight>, a sub-picture-source <highlight><bold>203</bold></highlight> and a computer data source <highlight><bold>204</bold></highlight> are used as sources of the main video data, the audio data, the sup-picture data and computer data. Under the control of a system controller (Sys con) <highlight><bold>205</bold></highlight>, they create the main video data, audio data, and sup-picture data, which are supplied to a video encoder (VENC) <highlight><bold>206</bold></highlight>, an audio encoder (AENC) <highlight><bold>207</bold></highlight>, a sub-picture encoder (SPENC) <highlight><bold>208</bold></highlight>, and a computer data encoder (CENC) <highlight><bold>209</bold></highlight>, respectively. Under the control of the system controller (Sys con) <highlight><bold>205</bold></highlight>, these encoders <highlight><bold>206</bold></highlight>, <highlight><bold>207</bold></highlight>, <highlight><bold>208</bold></highlight>, and <highlight><bold>209</bold></highlight> perform A/D conversion of the main video data, audio data, and sup-picture data and encode them by the respective compression schemes. The encoded main video data, audio data, and sub-picture data (Comp Video, Comp Audio, Comp Sub-pict, Comp Computer) are stored in memories <highlight><bold>210</bold></highlight>, <highlight><bold>211</bold></highlight>, <highlight><bold>212</bold></highlight>, and <highlight><bold>213</bold></highlight>. The main video data, audio data, and sub-picture data (Comp Video, Comp Audio, Comp Sub-pict) are outputted to a file formatter (FFMT) <highlight><bold>214</bold></highlight> under the control of the system controller (Sys con) <highlight><bold>205</bold></highlight>, which converts them so that they may have a file structure of video data for the system as explained earlier. Then, under the control of the system controller (Sys con) <highlight><bold>205</bold></highlight>, the setting conditions for each data item and the management information including attributes are stored in a memory <highlight><bold>216</bold></highlight> in the form of files. </paragraph>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> Explained next will be a standard flow of an encoding process in the system controller (Sys con) <highlight><bold>205</bold></highlight> that creates a file from video data. </paragraph>
<paragraph id="P-0247" lvl="0"><number>&lsqb;0247&rsqb;</number> According to the flow of <cross-reference target="DRAWINGS">FIG. 51</cross-reference>, the main video data and the audio data are encoded and the encoded main video data and audio data (Comp Video, Comp Audio) are supplied. Specifically, when the encoding process is started, as shown in step S<highlight><bold>50</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 51</cross-reference>, the parameters necessary for encoding the main video data and audio data are set. Part of the set parameters are stored in the system controller (Sys con) <highlight><bold>205</bold></highlight> and at the same time, are used at the file formatter (FFMT) <highlight><bold>214</bold></highlight>. As shown in step S<highlight><bold>51</bold></highlight>, the main video data is pre-encoded using the parameters and the optimum distribution of the amount of codes is calculated. Then, on the basis of the code amount distribution obtained in the pre-encoding, the main video data is encoded as shown in step S<highlight><bold>52</bold></highlight>. At the same time, the audio data is also encoded at step S<highlight><bold>52</bold></highlight>. As shown in step in S<highlight><bold>53</bold></highlight>, if necessary, the main video data is partially encoded again and the reencoded portion of the main video data is replaced with the old one. Through the series of steps, the main video data and audio data are encoded. Furthermore, as shown in steps S<highlight><bold>54</bold></highlight> and S<highlight><bold>55</bold></highlight>, the sub-picture data is encoded and the encoded sub-picture data (Comp Sub-pict) is supplied. Namely, the parameters necessary for encoding the sub-picture data is set. As shown in step S<highlight><bold>54</bold></highlight>, part of the parameters are stored in the system controller (Sys con) <highlight><bold>205</bold></highlight> and used in the file formatter (FFMT) <highlight><bold>214</bold></highlight>. On the basis of the parameters, the sub-picture data is encoded. By the process, the sup-picture data is encoded. </paragraph>
<paragraph id="P-0248" lvl="0"><number>&lsqb;0248&rsqb;</number> Furthermore, as shown in steps S<highlight><bold>56</bold></highlight> and S<highlight><bold>57</bold></highlight>, the computer data is encoded and the encoded computer data (Comp Computer) is supplied. Namely, the parameters necessary for encoding the computer data is set. As shown in step S<highlight><bold>56</bold></highlight>, part of the parameters are stored in the system controller (Sys con) <highlight><bold>205</bold></highlight> and used in the file formatter (FFMT) <highlight><bold>214</bold></highlight>. On the basis of the parameters, the computer data is encoded. By the process, the computer data is encoded. </paragraph>
<paragraph id="P-0249" lvl="0"><number>&lsqb;0249&rsqb;</number> According to the flow of <cross-reference target="DRAWINGS">FIG. 52</cross-reference>, the encoded main video data, audio data, sup-picture data, and computer data (Com Video, Com Audio, Comp Sub-pict, Comp Computer) are combined and converted so as to form a video data title set structure as explained in <cross-reference target="DRAWINGS">FIGS. 4 and 12</cross-reference>. Specifically, as shown in step S<highlight><bold>61</bold></highlight>, a cell is set as the smallest unit of the video data and cell playback information on a cell (C_PBI) is created. Then, as shown in step S<highlight><bold>62</bold></highlight>, the structure of the cells constituting a program chain and the main video, sub-picture, and audio attributes (the information obtained in encoding the respective data items are used part of these attributes) are set and the video title set information management table information (VTSI_MAT) <highlight><bold>98</bold></highlight> containing information on a program chain and a video title set time search map table (VTS_MAPT) <highlight><bold>101</bold></highlight> are created. At this time, as the need arises, a video title set direct access pointer table (VTS_DAPT) is also created. Then, as shown in step S<highlight><bold>63</bold></highlight>, the encoded main video data, audio data, sup-picture data, and computer data (Com Video, Comp Audio, Comp Sup-pict, Comp Computer) are subdivided into specific packs. An NV pack <highlight><bold>86</bold></highlight> is placed at the head of each VOBU unit so that playback can be effected in the order of time code of each data item. With the NV packs <highlight><bold>86</bold></highlight> arranged this way, each data cell is positioned so that a video object (VOB) may be composed of a plurality of cells as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. A set of such video objects is formatted into the title set structure. </paragraph>
<paragraph id="P-0250" lvl="0"><number>&lsqb;0250&rsqb;</number> In the flow of <cross-reference target="DRAWINGS">FIG. 52</cross-reference>, the program chain information (PGI) is obtained in the process of step S<highlight><bold>62</bold></highlight> by using the database in the system controller (Sys con) <highlight><bold>205</bold></highlight> or entering data again as the need arises. </paragraph>
<paragraph id="P-0251" lvl="0"><number>&lsqb;0251&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 53</cross-reference> shows a disk formatter system that records on an optical disk the title set formatted as described above. In the disk formatter system of <cross-reference target="DRAWINGS">FIG. 53</cross-reference>, the memories <highlight><bold>220</bold></highlight>, <highlight><bold>222</bold></highlight> in which the created title set is stored supply these file data items to a volume formatter (VFMT) <highlight><bold>226</bold></highlight>. In the volume formatter (VFMT) <highlight><bold>226</bold></highlight> extracts the management information from the title sets <highlight><bold>84</bold></highlight>, <highlight><bold>86</bold></highlight>, produces a video manager <highlight><bold>71</bold></highlight>, and create the logic data to be recorded on the disk <highlight><bold>10</bold></highlight> in the arrangement of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. A disk formatter (DFMT) <highlight><bold>228</bold></highlight> adds error correction data to the logic data created at the volume formatter (VFMT) <highlight><bold>226</bold></highlight>, thereby reconverting the logic data into physical data to be recorded on the disk. A modulator <highlight><bold>230</bold></highlight> converts the physical data created at the disk formatter (DFMT) <highlight><bold>228</bold></highlight> into the recording data to be recorded actually on the disk. Then, a recorder <highlight><bold>232</bold></highlight> records the modulated recording data on the disk <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0252" lvl="0"><number>&lsqb;0252&rsqb;</number> A standard flow for creating the aforementioned disk will be described with reference to <cross-reference target="DRAWINGS">FIGS. 54 and 55</cross-reference>. <cross-reference target="DRAWINGS">FIG. 54</cross-reference> shows the flow for creating the logic data to be recorded on the disk <highlight><bold>10</bold></highlight>. Specifically, as shown in step S<highlight><bold>80</bold></highlight>, parameter data items, including the number of video data files, their arrangement, and the size of each video data file, are set first. Next, in step S<highlight><bold>81</bold></highlight> video manger <highlight><bold>71</bold></highlight> is generated from the parameters set and the video title set information <highlight><bold>94</bold></highlight> of each video title set <highlight><bold>72</bold></highlight>. In step S<highlight><bold>82</bold></highlight>, the video manager <highlight><bold>71</bold></highlight> and the video tile set <highlight><bold>71</bold></highlight> are arranged in the order mentioned, according to their logic block numbers, thereby generating logic data which is to be recorded on the disk <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0253" lvl="0"><number>&lsqb;0253&rsqb;</number> Thereafter, the flow for creating the physical data to be recorded on the disk as shown in <cross-reference target="DRAWINGS">FIG. 55</cross-reference> is executed. Specifically, as shown in step S<highlight><bold>83</bold></highlight> the logic data is divided into units of a specific number of bytes, thereby forming error correction data. Next, as shown in step S<highlight><bold>84</bold></highlight>, the logic data divided into units of a specific number of bytes are combined with the created error correction data to form physical sectors. Thereafter, as shown in step S<highlight><bold>85</bold></highlight>, physical data is created by combining physical sectors. In this way, the modulating process based on certain rules is performed on the physical data created in the flow of <cross-reference target="DRAWINGS">FIG. 55</cross-reference>, thereby forming the recording data. Thereafter, the recording data is recorded on the disk <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0254" lvl="0"><number>&lsqb;0254&rsqb;</number> The above-described data structure can be applied not only to a case where the data is recorded on recording mediums, such as optical disks, and then the disks are distributed to the users, but also to a communication system as shown in <cross-reference target="DRAWINGS">FIG. 56</cross-reference>. Specifically, according to the procedure shown in FIGS. <highlight><bold>50</bold></highlight> to <highlight><bold>53</bold></highlight>, an optical disk <highlight><bold>10</bold></highlight> in which a video manager <highlight><bold>71</bold></highlight> and video title set <highlight><bold>72</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> may be loaded into a reproducing unit <highlight><bold>300</bold></highlight>, from whose system CPU section <highlight><bold>50</bold></highlight> the encoded data is taken out digitally and transmitted by a modulator/transmitter <highlight><bold>310</bold></highlight> to the users or the cable subscribers by radio or via a cable. Furthermore, the encoding system <highlight><bold>320</bold></highlight> shown in <cross-reference target="DRAWINGS">FIGS. 50 and 53</cross-reference> may create the data encoded on the provider side, such as a broadcasting station and the encoded data may be transmitted by the modulator/transmitter <highlight><bold>310</bold></highlight> to the users or the cable subscribers by radio or via a cable. In such a communication system, the information in the video manager <highlight><bold>71</bold></highlight> is modulated at the modulator/transmitter <highlight><bold>310</bold></highlight> and then supplied to or is directly supplied to the users free of charge. When a user is interested in the title, the modulator/transmitter <highlight><bold>310</bold></highlight> transmits the title set <highlight><bold>72</bold></highlight> at the user&apos;s or subscriber&apos;s request by radio or via a cable. Under the control of the video manager <highlight><bold>71</bold></highlight>, the video title set information <highlight><bold>94</bold></highlight> is first transferred and then the title video object <highlight><bold>95</bold></highlight> in the video title set reproduced according to the title set information <highlight><bold>94</bold></highlight> is transferred. At this time, if necessary, the video title set menu video object <highlight><bold>95</bold></highlight> is also transmitted. The transferred data is received by a receiver/demodulator <highlight><bold>400</bold></highlight> on the user side and is processed as encoded data at the system CPU section <highlight><bold>50</bold></highlight> of the reproducing unit on the user or subscriber side of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> in the same manner as in the above-described reproducing process, whereby the video data is reproduced. </paragraph>
<paragraph id="P-0255" lvl="0"><number>&lsqb;0255&rsqb;</number> In transferring the video title set <highlight><bold>72</bold></highlight>, the video object sets <highlight><bold>95</bold></highlight>, <highlight><bold>96</bold></highlight> are transferred using the video object unit <highlight><bold>85</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> as a unit. At the head of the video object unit <highlight><bold>85</bold></highlight>, an NV pack <highlight><bold>86</bold></highlight> containing video playback and search information is arranged. Furthermore, because the NV pack contains the addresses of the video object units to be reproduced immediately before and after the video object unit <highlight><bold>85</bold></highlight> to which the NV pack <highlight><bold>86</bold></highlight> belongs, even if the video object unit <highlight><bold>85</bold></highlight> is lost during transfer for some reason, the video object can be reproduced reliably on the user side by requesting the lost video object unit <highlight><bold>85</bold></highlight> to be transmitted again. Furthermore, even if transfer is not carried out in the order of playback of video object units, because the system ROM/RAM section <highlight><bold>52</bold></highlight> on the user side holds the accurate playback information on program chains, the system CPU section <highlight><bold>50</bold></highlight> can specify the order of playback referring to the address data in its NV pack. </paragraph>
<paragraph id="P-0256" lvl="0"><number>&lsqb;0256&rsqb;</number> While in the above explanation, the video object unit is a data train containing video data, audio data, and sub-picture data, the video object unit may be composed of audio packs only or sup-picture packs only, because the video object unit has only to contain any one of video data, audio data, sub picture data, and computer data. </paragraph>
<paragraph id="P-0257" lvl="0"><number>&lsqb;0257&rsqb;</number> As described above, data is stored in the data area of the disk in the hierarchical structure of program chains, programs, cells and packs, each pack is constructed by a pack header for identifying the pack and a packet having a data stream recorded therein, and the packet is constructed by a packet header having data indicating at least a private stream, data indicating the classification of the private stream, and packet data corresponding to the classification. </paragraph>
<paragraph id="P-0258" lvl="0"><number>&lsqb;0258&rsqb;</number> Thus, a plurality of various classification data items can be dealt with. </paragraph>
<paragraph id="P-0259" lvl="0"><number>&lsqb;0259&rsqb;</number> Further, when data to be dealt with is Dolby AC3 audio data or linear PCM audio data, reproduction started halfway can be smoothly effected, and when the data is computer data, the environment in which the data can be used can be easily detected. </paragraph>
<paragraph id="P-0260" lvl="0"><number>&lsqb;0260&rsqb;</number> In the above embodiment, a case wherein the optical disk of high-density recording type is used as the recording medium is explained, but this invention can be applied to another recording medium other than the optical disk, for example, a magnetic disk or another recording medium physically recordable with high density. </paragraph>
<paragraph id="P-0261" lvl="0"><number>&lsqb;0261&rsqb;</number> Additional advantages and modifications will readily occur to those skilled in the art, Therefore, the invention in its broader aspects is not limited to the specific details, representative devices, and illustrated examples shown and described herein. Accordingly, various modifications may be made without departing from the spirit or scope of the general inventive concept as defined by the appended claims and their equivalents. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A recording medium comprising: 
<claim-text>a management area formed in part of an area; and </claim-text>
<claim-text>a data area formed in another area; </claim-text>
<claim-text>wherein data is divided into a plurality of program chains and recorded in said data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack is constructed by a pack header for identifying the pack and a packet having a data stream recorded therein, and the packet is constructed by a packet header having data indicating at least a private stream, data indicating the classification of the private stream, and packet data corresponding to the classification; and management data for managing the connection between the program chains, programs, cells and packs in said data area is recorded in said management area. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A recording medium according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein data indicating the classification of the private stream indicates the classifications of data to be reproduced in a special way, Dolby AC3 audio data, linear audio data, sub-picture data, computer data, JPEG data, TIFF data, PICT data, photo CD data, bit map data, and XA audio data. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A recording medium according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein data indicating the access position of a head frame in a pack is recorded the data indicating the classification of the private stream indicates at least one of linear audio data and Dolby AC3 audio data having data of frame unit recorded therein. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A recording medium according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein data indicating the access position of a head frame in a pack is recorded after the data indicating the classification of the private stream when the data indicating the classification of the private stream indicates at least one of linear audio data and Dolby AC3 audio data having data of frame unit recorded therein. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A recording medium according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein data indicating an application operation system and the classification of a computer in which pack data can be used is recorded after the data indicating the classification of the private stream when the data indicating the classification of the private stream indicates computer data. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A recording medium comprising: 
<claim-text>a management area formed in part of an area; and </claim-text>
<claim-text>a data area formed in another area; </claim-text>
<claim-text>wherein a plurality of programs are recorded in said data area in a hierarchical structure in which one program is constructed by a plurality of packs, each pack is constructed by a pack header for identifying the pack and a packet having a data stream recorded therein, and the packet is constructed by a packet header having data indicating at least a private stream, data indicating the classification of the private stream, and packet data corresponding to the classification; and management data for managing the connection between the programs and packs in said data area is recorded in said management area. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A recording medium according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein data indicating the classification of the private stream indicates the classifications of data to be reproduced in a special way, Dolby AC3 audio data, linear audio data, sub-picture data, computer data, JPEG data, TIFF data, PICT data, photo CD data, bit map data, and XA audio data. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A recording medium according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein data indicating the access position of a head frame is recorded the data indicating the classification of the private stream indicates at least one of linear audio data and Dolby Ac3 audio data having data of frame unit recorded therein. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A recording medium according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein data indicating the access position of a head frame is recorded after the data indicating the classification of the private stream when the data indicating the classification of the private stream indicates at least one of linear audio data and Dolby Ac3 audio data having data of frame unit recorded therein. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A recording medium according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein data indicating an application operation system and the classification of a computer in which pack data can be used is recorded after the data indicating the classification of the private stream when the data indicating the classification of the private stream indicates computer data. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A recording method using a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in said data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, and each pack is constructed by a pack header for identifying the pack and a packet having data recorded therein; comprising the steps of: 
<claim-text>receiving audio data or sub-picture data; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of audio data received, a start address of the frame data, a stream number of the audio data and data indicating the audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of sub-picture data received, a stream number of the sub-picture data and data indicating the sub-picture data, and a packet header having a packet length and data indicating that the packet data is a private stream; and </claim-text>
<claim-text>recording the created pack on the recording medium. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A recording method using a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in said data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, and each pack is constructed by a pack header for identifying the pack and a packet having data recorded therein; comprising the steps of: 
<claim-text>receiving Dolby AC3 audio data, linear audio data, computer data or sub-picture data; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of Dolby AC3 audio data received, a start address of the frame data, a stream number of the Dolby AC3 audio data and data indicating the Dolby AC3 audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of linear audio data received, a start address of the frame data, a stream number of the linear audio data and data indicating the linear audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of computer data received, environmental data of application CPU and application OS of the computer data and data indicating the computer data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of sub-picture data received, a stream number of the sub-picture data and data indicating the sub-picture data, and a packet header having a packet length and data indicating that the packet data is a private stream; and </claim-text>
<claim-text>recording the created pack on the recording medium. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A recording method using a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in said data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, and each pack is constructed by a pack header for identifying the pack and a packet having data recorded therein; comprising the steps of: 
<claim-text>receiving data to be reproduced in a special way, Dolby AC3 audio data, linear audio data, computer data or sub-picture data; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of data to be reproduced in a special way received, a stream number of the data to be reproduced in a special way and data indicating the data to be reproduced in a special way, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of Dolby AC3 audio data received, a start address of the frame data, a stream number of the Dolby AC3 audio data and data indicating the Dolby AC3 audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of linear audio data received, a start address of the frame data, a stream number of the linear audio data and data indicating the linear audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of computer data received, environmental data of application CPU and application OS of the computer data and data indicating the computer data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of sub-picture data received, a stream number of the sub-picture data and data indicating the sub-picture data, and a packet header having a packet length and data indicating that the packet data is a private stream; and </claim-text>
<claim-text>recording the created pack on the recording medium. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. An apparatus for recording data on a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising: 
<claim-text>reception means for receiving audio data or sub-picture data; </claim-text>
<claim-text>first creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of audio data received by said reception means, a start address of the frame data, a stream number of the audio data and data indicating the audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>second creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of sub-picture data received by said reception means, a stream number of the sub-picture data and data indicating the sub-picture data, and a packet header having a packet length and data indicating that the packet data is a private stream; and </claim-text>
<claim-text>recording means for recording the pack created by said first and second creating means on the recording medium. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. An apparatus for recording data on a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising: 
<claim-text>reception means for receiving Dolby AC3 audio data, linear audio data, computer data or sub-picture data; </claim-text>
<claim-text>first creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of Dolby AC3 audio data received by said reception means, a start address of the frame data, a stream number of the Dolby AC3 audio data and data indicating the Dolby AC3 audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>second creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of linear audio data received by said reception means, a start address of the frame data, a stream number of the linear audio data and data indicating the linear audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>third creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of computer data received by said reception means, environmental data of an application CPU and application OS of the computer data and data indicating the computer data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>fourth creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of sub-picture data received by said reception means, a stream number of the sub-picture data and data indicating the sub-picture data, and a packet header having a packet length and data indicating that the packet data is a private stream; and </claim-text>
<claim-text>recording means for recording the pack created by said first to fourth creating means on the recording medium. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. An apparatus for recording data on a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising: 
<claim-text>reception means for receiving data to be reproduced in a special way, Dolby AC3 audio data, linear audio data, computer data or sub-picture data; </claim-text>
<claim-text>first creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of data to be reproduced in a special way received by said reception means, a stream number of the data to be reproduced in a special way, and data indicating the data to be reproduced in a special way, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>second creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of Dolby AC3 audio data received by said reception means, a start address of the frame data, a stream number of the Dolby AC3 audio data and data indicating the Dolby AC3 audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>third creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by frame data of part of linear audio data received by said reception means, a start address of the frame data, a stream number of the linear audio data and data indicating the linear audio data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>fourth creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of computer data received by said reception means, environmental data of an application CPU and application OS of the computer data and data indicating the computer data, and a packet header having a packet length and data indicating that the packet data is a private stream; </claim-text>
<claim-text>fifth creating means for creating a pack by adding a pack header for identifying the pack to a packet which includes packet data constructed by part of sub-picture data received by said reception means, a stream number of the sub-picture data and data indicating the sub-picture data, and a packet header having a packet length and data indicating that the packet data is a private stream; and </claim-text>
<claim-text>recording means for recording the pack created by said first to fifth creating means on the recording medium. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method of reproducing recorded data for each pack from a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising the steps of: 
<claim-text>reading data for each pack on the recording medium; </claim-text>
<claim-text>determining whether or not data indicating a private stream is present in a packet header of a pack read and determining data length; </claim-text>
<claim-text>determining whether data is audio data or sub-picture data according to classification data of a stream which is successively read when the private stream is determined; </claim-text>
<claim-text>extracting data in the readout pack data by an amount corresponding to the determined data length according to a start address of frame data which is successively read after the classification data of the stream when the audio data is determined; </claim-text>
<claim-text>extracting data in the pack data successively read after the classification data of the stream by an amount corresponding to the determined data length when the sub-picture data is determined; </claim-text>
<claim-text>subjecting the extracted audio data or sub-picture data to a demodulation process corresponding to the classification of the determined data; and </claim-text>
<claim-text>outputting the demodulated data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A reproducing method of reproducing recorded data for each pack from a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising the steps of: 
<claim-text>reading data for each pack on the recording medium; </claim-text>
<claim-text>determining whether or not data indicating a private stream is present in a packet header of a readout pack and determining data length; </claim-text>
<claim-text>determining whether data is Dolby AC3 audio data, linear audio data, computer data or sub-picture data according to classification data of a stream which is successively read when the private stream is determined; </claim-text>
<claim-text>extracting data in the readout pack data by an amount corresponding to the determined data length according to a start address of frame data which is successively read after the classification data of the stream when the Dolby AC3 audio data or linear audio data is determined; </claim-text>
<claim-text>extracting environmental data of application CPU and application OS successively read after the classification data of the stream and extracting data in the pack data successively read after the environmental data by an amount corresponding to the determined data length when the computer data is determined; </claim-text>
<claim-text>extracting data in the pack data successively read after the classification data of the stream by an amount corresponding to the determined data length when the sub-picture data is determined; </claim-text>
<claim-text>subjecting the extracted Dolby AC3 audio data, linear audio data or sub-picture data to a demodulation process corresponding to the classification of determined data; </claim-text>
<claim-text>outputting the demodulated data; and </claim-text>
<claim-text>outputting the extracted program data and environmental data thereof. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A reproducing method of reproducing recorded data for each pack from a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising the steps of: 
<claim-text>reading data for each pack on the recording medium; </claim-text>
<claim-text>determining whether or not data indicating a private stream is present in a packet header of a readout pack and determining data length; </claim-text>
<claim-text>determining whether data is data to be reproduced in a special way, Dolby AC3 audio data, linear audio data, computer data or sub-picture data according to classification data of a stream which is successively read when the private stream is determined; </claim-text>
<claim-text>extracting data in the pack data successively read after the classification data of the stream by an amount corresponding to the determined data length when the data to be reproduced in a special way is determined; </claim-text>
<claim-text>extracting data in the readout pack data by an amount corresponding to the determined data length according to a start address of frame data which is successively read after the classification data of the stream when the Dolby AC3 audio data or linear audio data is determined; </claim-text>
<claim-text>extracting environmental data of application CPU and application OS successively read after the classification data of the stream and extracting data in the pack data successively read after the environmental data by an amount corresponding to the determined data length when the computer data is determined; </claim-text>
<claim-text>extracting data in the pack data successively read after the classification data of the stream by an amount corresponding to the determined data length when the sub-picture data is determined; </claim-text>
<claim-text>subjecting the extracted Dolby AC3 audio data, linear audio data or sub-picture data to a demodulation process which corresponds to the classification of determined data, and operator in accordance with data to be reproduced in a special way; </claim-text>
<claim-text>outputting the demodulated data; and </claim-text>
<claim-text>outputting the extracted program data and environmental data thereof. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. An apparatus for reproducing recorded data for each pack from a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein; comprising: 
<claim-text>reading means for reading data for each pack on the recording medium; </claim-text>
<claim-text>first determining means for determining whether or not data indicating a private stream is present in a packet header of a pack read by said reading means and determining data length; </claim-text>
<claim-text>second determining means for determining whether data is audio data or sub-picture data according to classification data of a stream which is successively read when said first determining means has determined the private stream; </claim-text>
<claim-text>first extraction means for extracting audio data in the pack data read by said reading means by an amount corresponding to the data length determined by said first determining means according to a start address of frame data which is successively read after the classification data of the stream when said second determining means has determined the audio data; </claim-text>
<claim-text>second extraction means for extracting data in the pack data successively read by said reading means after the classification data of the stream by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the sub-picture data; </claim-text>
<claim-text>demodulating means for subjecting data extracted by said first or second extraction means to a demodulation process corresponding to classification of data determined by said second determining means; and </claim-text>
<claim-text>output means for outputting data demodulated by said demodulating means. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. An apparatus for reproducing recorded data for each pack from a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein, comprising: 
<claim-text>reading means for reading data for each pack on the recording medium; </claim-text>
<claim-text>first determining means for determining whether or not data indicating a private stream is present in a packet header of a pack read by said reading means and determining data length; </claim-text>
<claim-text>second determining means for determining whether data is Dolby AC3 audio data, linear audio data, computer data or sub-picture data according to classification data of a stream which is successively read when said first determining means has determined the private stream; </claim-text>
<claim-text>first extraction means for extracting Dolby AC3 audio data or linear audio data in the pack data read by said reading means by an amount corresponding to the data length determined by said first determining means according to a start address of frame data which is successively read after the classification data of the stream when said second determining means has determined the Dolby AC3 audio data or linear audio data; </claim-text>
<claim-text>second extraction means for extracting environmental data of application CPU and application OS successively read after the classification data of the stream and extracting data in the pack data successively read by said reading means after the environmental data by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the computer data; </claim-text>
<claim-text>third extraction means for extracting data in the pack data successively read by said reading means after the classification data of the stream by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the sub-picture data; </claim-text>
<claim-text>demodulating means for subjecting data extracted by said first or third extraction means to a demodulation process corresponding to the classification of data determined by said second determining means; </claim-text>
<claim-text>first output means for outputting data demodulated by said demodulating means; and </claim-text>
<claim-text>second output means for outputting program data extracted by said second extraction means and environmental data thereof. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. An apparatus for reproducing recorded data for each pack from a recording medium which includes a management area formed in part of an area, and a data area formed in another area and in which data is divided into a plurality of program chains and recorded in the data area in a hierarchical structure in which each of the program chains is constructed by a plurality of programs, one program is constructed by a plurality of cells, and one cell is constructed by a plurality of packs, each pack includes a pack header for identifying the pack and a packet having data recorded therein, comprising: 
<claim-text>reading means for reading data for each pack on the recording medium; </claim-text>
<claim-text>first determining means for determining whether or not data indicating a private stream is present in a packet header of a pack read by said reading means and determining data length; </claim-text>
<claim-text>second determining means for determining whether data is data to be reproduced in a special way Dolby AC3 audio data, linear audio data, computer data or sub-picture data according to classification data of a stream which is successively read when said first determining means has determined the private stream; </claim-text>
<claim-text>first extrication means for extracting data in the pack data successively read by said reading means after the classification data of the stream by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the data to be reproduced in a special way; </claim-text>
<claim-text>second extraction means for extracting Dolby AC3 audio data or linear audio data in the pack data read by said reading means by an amount corresponding to the data length determined by said first determining means according to a start address of frame data which is successively read after the classification data of the stream when said second determining means has determined the Dolby AC3 audio data or linear audio data; </claim-text>
<claim-text>third extraction means for extracting environmental data of application CPU and application OS successively read after the classification data of the stream and extracting data in the pack data successively read by said reading means after the environmental data by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the computer data; </claim-text>
<claim-text>fourth extraction means for extracting data in the pack data successively read by said reading means after the classification data of the stream by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the sub-picture data; </claim-text>
<claim-text>demodulating means for subjecting data extracted by said first or fourth extraction means to a demodulation process which corresponds to the classification of data determined by said second determining means, and operator in accordance with data to be reproduced in a special way; </claim-text>
<claim-text>first output means for outputting data demodulated by said demodulating means; and </claim-text>
<claim-text>second output means for outputting program data extracted by said second extraction means and environmental data thereof. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A method of reproducing data, comprising the steps of: 
<claim-text>receiving data transferred from a device, said data consisting of a plurality of data units representing objects to be reproduced sequentially, each data unit being a stream of compressed data packs each including at least one of audio data, video data and sub-picture data; </claim-text>
<claim-text>determining whether or not data indicating a private stream is present in a packet header of each pack received, and determining a length of each pack; </claim-text>
<claim-text>determining whether data is audio data or sub-picture data according to classification data of a stream which is successively received when the private stream is determined; </claim-text>
<claim-text>extracting data in the readout pack data by an amount corresponding to the determined data length according to a start address of frame data which is successively received after the classification data of the stream when the audio data is determined; </claim-text>
<claim-text>extracting data in the pack data successively received after the classification data of the stream by an amount corresponding to the determined data length when the sub-picture data is determined; </claim-text>
<claim-text>subjecting the extracted audio data or sub-picture data to a demodulation process corresponding to the classification of the determined data; and </claim-text>
<claim-text>outputting the demodulated data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A method of reproducing data, comprising the steps of: 
<claim-text>receiving data transferred from a device, said data consisting of a plurality of data units representing objects to be reproduced sequentially, each data unit being a stream of compressed data packs each including at least one of audio data, video data and sub-picture data; </claim-text>
<claim-text>determining whether or not data indicating a private stream is present in a packet header of each pack received, and determining a length of each pack; </claim-text>
<claim-text>determining whether data is data to be reproduced in a special way, Dolby AC3 audio data, linear audio data, computer data or sub-picture data according to classification data of a stream which is successively received when the private stream is determined; </claim-text>
<claim-text>extracting data in the received pack data by an amount corresponding to the determined data length according to a start address of frame data which is successively received after the classification data of the stream when the Dolby AC3 audio data or linear audio data is determined; </claim-text>
<claim-text>extracting environmental data of application CPU and application OS successively received after the classification data of the stream and extracting data in the pack data successively received after the environmental data by an amount corresponding to the determined data length when the computer data is determined; </claim-text>
<claim-text>extracting data in the pack data successively received after the classification data of the stream by an amount corresponding to the determined data length when the sub-picture data is determined; </claim-text>
<claim-text>subjecting the extracted Dolby AC3 audio data, linear audio data or sub-picture data to a demodulation process which corresponds to the classification of determined data and operator in accordance with data to be reproduced in a special way; </claim-text>
<claim-text>outputting the demodulated data; and </claim-text>
<claim-text>outputting the extracted program data and environmental data thereof. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A method of reproducing data, comprising the steps of: 
<claim-text>receiving data transferred from a device, said data consisting of a plurality of data units representing objects to be reproduced sequentially, each data unit being a stream of compressed data packs each including at least one of audio data, video data and sub-picture data; </claim-text>
<claim-text>determining whether or not data indicating a private stream is present in a packet header of each pack received, and determining a length of each pack; </claim-text>
<claim-text>determining whether data is data to be reproduced in a special way Dolby AC3 audio data, linear audio data, computer data or sub-picture data according to classification data of a stream which is successively received when the private stream is determined; </claim-text>
<claim-text>extracting data in the pack data by an amount corresponding to the determined data length according to a start address of frame data which is successively received after the classification data of the stream when the Dolby AC3 audio data linear audio data is determined; </claim-text>
<claim-text>extracting environmental data of application CPU and application OS successively received after the classification data of the stream and extracting data in the pack data successively read after the environmental data by an amount corresponding to the determined data length when the computer data is determined; </claim-text>
<claim-text>extracting data in the pack data successively received after the classification data of the stream by an amount corresponding to the determined data length when the sub-picture data is determined; </claim-text>
<claim-text>subjecting the extracted data to be reproduced in a special way Dolby AC3 audio data, linear audio data or sub-picture data to a demodulation process corresponding to the classification of the determined data; </claim-text>
<claim-text>outputting the demodulated data; and </claim-text>
<claim-text>outputting the extracted program data and environmental data thereof. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. An apparatus for reproducing data comprising: 
<claim-text>receiving means for receiving data transferred from a device, said data consisting of a plurality of data units representing objects to be reproduced sequentially, each data unit being a stream of compressed data packs each including at least one of audio data, video data and sub-picture data; </claim-text>
<claim-text>first determining means for determining whether or not data indicating a private stream is present in a packet header of each pack received by said receiving means, and determining a length of each pack; </claim-text>
<claim-text>second determining means for determining whether data is audio data or sub-picture data according to classification data of a stream which is successively received when said first determining means has determined the private stream; </claim-text>
<claim-text>first extraction means for extracting audio data in the pack data received by an amount corresponding to the data length determined by said first determining means according to a start address of frame data which is successively received after the classification data of the stream when said second determining means has determined the audio data; </claim-text>
<claim-text>second extraction means for extracting data in the pack data successively received after the classification data of the stream by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the sub-picture data; </claim-text>
<claim-text>demodulating means for subjecting data extracted by said first or second extraction means to a demodulation process corresponding to classification of data determined by said second determining means; and </claim-text>
<claim-text>output means for outputting data demodulated by said demodulating means. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. An apparatus for reproducing data comprising: 
<claim-text>receiving means for receiving data transferred from a device, said data consisting of a plurality of data units representing objects to be reproduced sequentially, each data unit being a stream of compressed data packs each including at least one of audio data, video data and sub-picture data; </claim-text>
<claim-text>first determining means for determining whether or not data indicating a private stream is present in a packet header of each pack received by said receiving means, and determining a length of each pack; </claim-text>
<claim-text>second determining means for determining whether data is Dolby AC3 audio data, linear audio data, computer data or sub-picture data according to classification data of a stream which is successively received when said first determining means has determined the private stream; </claim-text>
<claim-text>first extraction means for extracting Dolby AC3 audio data or linear audio data in the pack data read by said reading means by an amount corresponding to the data length determined by said first determining means according to a start address of frame data which is successively received after the classification data of the stream when said second determining means has determined the Dolby AC3 audio data or linear audio data; </claim-text>
<claim-text>second extraction means for extracting environmental data of application CPU and application OS successively received after the classification data of the stream and extracting data in the pack data successively read by said reading means after the environmental data by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the computer data; </claim-text>
<claim-text>third extraction means for extracting data in the pack data successively received after the classification data of the stream by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the sub-picture data; </claim-text>
<claim-text>demodulating means for subjecting data extracted by said first or third extraction means to a demodulation process corresponding to the classification of data determined by said second determining means; </claim-text>
<claim-text>first output means for outputting data demodulated by said demodulating means; and </claim-text>
<claim-text>second output means for outputting program data extracted by said second extraction means and environmental data thereof. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. An apparatus for reproducing data comprising: 
<claim-text>receiving means for receiving data transferred from a device, said data consisting of a plurality of data units representing objects to be reproduced sequentially, each data unit being a stream of compressed data packs each including at least one of audio data, video data and sub-picture data; </claim-text>
<claim-text>first determining means for determining whether or not data indicating a private stream is present in a packet header of each pack received by said receiving means, and determining a length of each pack; </claim-text>
<claim-text>second determining means for determining whether data is data to be reproduced in a special way Dolby AC3 audio data, linear audio data, computer data or sub-picture data according to classification data of a stream which is successively read when said first determining means has determined the private stream; </claim-text>
<claim-text>first extraction means for extracting data in the pack data successively received after the classification data of the stream by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the data to be reproduced in a special way; </claim-text>
<claim-text>second extraction means for extracting Dolby AC3 audio data or linear audio data in the pack data received by said by an amount corresponding to the data length determined by said first determining means according to a start address of frame data which is successively received after the classification data of the stream when said second determining means has determined the Dolby AC3 audio data and linear audio data; </claim-text>
<claim-text>third extraction means for extracting environmental data of application CPU and application OS successively received after the classification data of the stream and extracting data in the pack data successively received after the environmental data by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the computer data; </claim-text>
<claim-text>fourth extraction means for extracting data in the pack data successively received after the classification data of the stream by an amount corresponding to the data length determined by said first determining means when said second determining means has determined the sub-picture data; </claim-text>
<claim-text>demodulating means for subjecting data extracted by said first or fourth extraction means to a demodulation process which corresponds to the classification of data determined by said second determining means, and operator in accordance with data to be reproduced in a special way; </claim-text>
<claim-text>first output means for outputting data demodulated by said demodulating means; and </claim-text>
<claim-text>second output means for outputting program data extracted by said second extraction means and environmental data thereof.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002858A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002858A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002858A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002858A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002858A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002858A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002858A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002858A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002858A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002858A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002858A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002858A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002858A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002858A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002858A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002858A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002858A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030002858A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030002858A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030002858A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030002858A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030002858A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030002858A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030002858A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030002858A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030002858A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030002858A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030002858A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030002858A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030002858A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030002858A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030002858A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00032">
<image id="EMI-D00032" file="US20030002858A1-20030102-D00032.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
