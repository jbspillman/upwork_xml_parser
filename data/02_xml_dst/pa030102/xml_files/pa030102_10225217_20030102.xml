<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002338A1-20030102-D00000.TIF SYSTEM "US20030002338A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002338A1-20030102-D00001.TIF SYSTEM "US20030002338A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002338A1-20030102-D00002.TIF SYSTEM "US20030002338A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002338A1-20030102-D00003.TIF SYSTEM "US20030002338A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002338A1-20030102-D00004.TIF SYSTEM "US20030002338A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002338A1-20030102-D00005.TIF SYSTEM "US20030002338A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002338A1-20030102-D00006.TIF SYSTEM "US20030002338A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002338</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10225217</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020820</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G11C011/34</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G11C017/06</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>365</class>
<subclass>185110</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>365</class>
<subclass>185260</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>365</class>
<subclass>203000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Biasing scheme of floating unselected wordlines and bitlines of a diode-based memory array</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10225217</doc-number>
<kind-code>A1</kind-code>
<document-date>20020820</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09895599</doc-number>
<document-date>20010629</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6462984</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Daniel</given-name>
<family-name>Xu</family-name>
</name>
<residence>
<residence-us>
<city>Mountain View</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Tyler</given-name>
<middle-name>A.</middle-name>
<family-name>Lowrey</family-name>
</name>
<residence>
<residence-us>
<city>San Jose</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>David</given-name>
<middle-name>L.</middle-name>
<family-name>Kencke</family-name>
</name>
<residence>
<residence-us>
<city>Portland</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>BLAKELY SOKOLOFF TAYLOR &amp; ZAFMAN</name-1>
<name-2></name-2>
<address>
<address-1>12400 WILSHIRE BOULEVARD, SEVENTH FLOOR</address-1>
<city>LOS ANGELES</city>
<state>CA</state>
<postalcode>90025</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An integrated circuit (IC) has a number of memory cells, each of which has a diode structure coupled between a bitline and a wordline that are selected when programming that cell. A target memory cell of the IC is programmed while simultaneously floating a number of unselected bitlines and wordlines in the IC. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention is generally related to techniques for programming an array of memory cells (in a solid state integrated circuit device) that have a diode structure within each cell, and particularly related to a scheme for biasing the unselected wordlines and bitlines of the array, while applying a programming pulse to the selected wordline and bitline, to reduce reverse leakage of the diode structures in the array. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> A diode structure can appear in a memory cell for a variety of reasons. For instance, in certain types of solid state memory devices that use a structural phase-change material as the programmable data storage mechanism, a parasitic diode is formed in series with the phase-change material. If the array is large and increased power consumption in the overall system is a concern, then the cumulative effect of reverse leakage in a large number of unselected cells becomes a problem whenever a small number of selected cells are being programmed. To help explain this problem, it is instructive to understand the circuitry in an exemplary memory cell and how a diode-based memory is programmed conventionally. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a schematic circuit of part of an array <highlight><bold>104</bold></highlight> of diode-based phase-change material memory cells. The array <highlight><bold>104</bold></highlight> has a number of vertically oriented conductive lines <highlight><bold>112</bold></highlight>_<highlight><bold>1</bold></highlight>, <highlight><bold>112</bold></highlight>_<highlight><bold>2</bold></highlight>, . . . <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&minus;</italic></highlight>1, <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n</italic></highlight>, <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&plus;</italic></highlight>1, . . . (<highlight><bold>112</bold></highlight>), sometimes called bitlines, and a number of horizontally oriented conductive lines <highlight><bold>108</bold></highlight>_<highlight><bold>1</bold></highlight>, <highlight><bold>108</bold></highlight>_<highlight><bold>2</bold></highlight>, . . . <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&minus;</italic></highlight>1, <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n</italic></highlight>, <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&plus;</italic></highlight>1, . . . (<highlight><bold>108</bold></highlight>), sometimes called wordlines. The cross-point matrix arrangement of the bitlines <highlight><bold>112</bold></highlight> and the wordlines <highlight><bold>108</bold></highlight> allows each crossing of a bitline-wordline pair to be associated with a separate memory cell <highlight><bold>114</bold></highlight> having an index (i, j). To make it easier to explain the programming technique, only a 3&times;3 matrix of cells <highlight><bold>114</bold></highlight>, immediately surrounding the <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>) cell, is shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. This description, however, is applicable to virtually any size of memory array. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> To achieve low manufacturing costs in large volumes, every memory cell <highlight><bold>114</bold></highlight> in the array <highlight><bold>104</bold></highlight> may be designed to have the same structure. Thus, the cells are described using only one representative cell <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>), where it is clear that the following description is applicable to all other cells in the array. The memory cell <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>) has a diode structure <highlight><bold>124</bold></highlight> coupled between a separate bitline-wordline pair <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n</italic></highlight>-<highlight><bold>108</bold></highlight>_n that is selected when programming the cell <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>). The diode structure <highlight><bold>124</bold></highlight> is oriented such that its forward current is in the bitline-to-wordline direction. In addition, the memory cell <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>) has a volume of phase-change material <highlight><bold>118</bold></highlight> in series with the diode structure <highlight><bold>124</bold></highlight> and coupled between the bitline-wordline pair <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n</italic></highlight>-<highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n. </italic></highlight>A fixed value matching resistor <highlight><bold>120</bold></highlight> is also in series with the diode structure <highlight><bold>124</bold></highlight>, coupled between the phase-change material <highlight><bold>118</bold></highlight> and the diode structure <highlight><bold>124</bold></highlight>. The material <highlight><bold>118</bold></highlight> acts as a programmable resistor and changes from one resistivity state to another, corresponding to a change from one type of structure to another, when the cell has been programmed. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Programming the memory cell <highlight><bold>114</bold></highlight> involves passing a current pulse through the phase-change material in that cell. This can be done by subjecting the bitline-wordline pair <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n</italic></highlight>-<highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n </italic></highlight>of a target memory cell <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>) to V<highlight><subscript>hi </subscript></highlight>and V<highlight><subscript>lo</subscript></highlight>, respectively. The difference V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo </subscript></highlight>is sufficiently large so as induce the required programming current in the phase-change material. For instance, in a typical phase-change memory, a V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo </subscript></highlight>of 2.5 Volts is sufficient to &lsquo;reset&rsquo; the cell. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> When one or more target memory cells are being programmed, the states of other cells in the array <highlight><bold>104</bold></highlight> should not be affected. In a conventional programming scheme applied to the array <highlight><bold>104</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, this is achieved by first applying and maintaining V<highlight><subscript>hi </subscript></highlight>on all wordlines <highlight><bold>108</bold></highlight> and V<highlight><subscript>lo </subscript></highlight>on all bitlines <highlight><bold>112</bold></highlight>. This biasing scheme will strongly reverse-bias each diode structure <highlight><bold>124</bold></highlight> in every cell <highlight><bold>114</bold></highlight> of the array <highlight><bold>104</bold></highlight>, thereby causing a diode reverse leakage current through the phase-change material. Even at a relatively strong reverse-bias voltage of 2.5 Volts, the reverse leakage current is so small that the state of the phase-change material (and hence the cell) does not change. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> While the diode structures in all cells are kept strongly reverse-biased as described in the previous paragraph, those bitline-wordline pairs that correspond to target memory cells are selected to be programmed. This is done by applying a pulse of V<highlight><subscript>lo </subscript></highlight>on the selected wordlines and V<highlight><subscript>hi </subscript></highlight>on the selected bitlines, while simultaneously keeping the unselected wordlines and bitlines at V<highlight><subscript>hi </subscript></highlight>and V<highlight><subscript>lo</subscript></highlight>, respectively. This condition of the array <highlight><bold>104</bold></highlight> which happens during the programming pulse is depicted <cross-reference target="DRAWINGS">FIG. 1</cross-reference> where wordline <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n </italic></highlight>and bitline <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n </italic></highlight>are the selected bitline-wordline pair (corresponding to the target cell being cell <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>)). Except for the target cell <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>), it can be seen that the diodes in the other cells that are coupled to the selected bitline-wordline pair are zero voltage biased, and hence the state of these cells is not affected. All other cells of the array <highlight><bold>104</bold></highlight> that are coupled to the unselected wordlines and bitlines, however, remain strongly reverse-biased. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> A problem with the conventional programming scheme described above is that biasing the unselected wordlines and bitlines at V<highlight><subscript>hi </subscript></highlight>and V<highlight><subscript>lo</subscript></highlight>, respectively, causes a relatively large, cumulative leakage current in a large array. For instance, consider a memory device having 1,000,000 cells arranged in a 1000&times;1000 array. Each time a cell in the device is programmed, the cells that are coupled to the 999 unselected wordlines and the 999 unselected bitlines are strongly reverse-biased at V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo</subscript></highlight>. This means that the cumulative leakage current immediately before and during the programming of a single cell in such a device is on the order of 999&times;999 times the reverse leakage of one cell. This relatively high, cumulative leakage current in a memory device is not acceptable in many low power applications such as portable computing devices. Although a reduction in V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo </subscript></highlight>will lower the leakage current, such a flexibility in the programming voltage may generally not be available due to the programming requirements of the cells. As an alternative, the diode structure in the cell may be specially designed to have extremely low leakage, even while strongly reverse biased. That solution, however, will increase the cost of manufacturing the device, due to special fabrication process steps or large cell area needed to form the diode structure separate from the rest of the circuitry in the device.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. It should be noted that references to &ldquo;an&rdquo; embodiment in this disclosure are not necessarily to the same embodiment, and they mean at least one. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a circuit schematic of part of an array of phase-change material memory cells while they are subjected to a conventional programming scheme. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a circuit schematic of part of a memory cell array while the array is subjected to a programming scheme according to an embodiment of the invention. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> depicts a circuit schematic of the memory cell array when the unselected bitlines and wordlines are floating, showing expected voltage levels for the floating nodes. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows a flow diagram of operations for programming a memory cell array according to an embodiment of the invention. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates a block diagram of part of an integrated circuit device designed to program its memory cell array according to an embodiment of the invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> depicts a block diagram of an embodiment of a portable application of a phase-change memory that incorporates the programming process.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> According to an embodiment of the invention, the unselected bitlines and unselected wordlines of a memory cell array in an integrated circuit (IC) are floated while simultaneously programming a target memory cell of the IC. Such a technique allows arrays in which the cells each have a diode structure coupled between a bitline and a wordline to exhibit reduced reverse leakage current in the diodes, without having to lower the programming voltages that are applied to the cells. Although leaving an electrical node floating is conventionally considered to be undesirable because of the possibility of the node floating to an undetermined voltage during operation, floating the unselected bitlines and wordlines of the diode-based memory cell array does not appear to create a risk of malfunction in the array. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> circuit schematic of part of a memory cell array that is undergoing a biasing scheme of floating unselected wordlines and bitlines while programming a target memory cell is illustrated. The memory cell array <highlight><bold>204</bold></highlight> features a number of bitlines <highlight><bold>112</bold></highlight> and wordlines <highlight><bold>108</bold></highlight> arranged in a cross-point matrix, similar to that described above in connection with <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. It should be noted that the terms &lsquo;bitlines&rsquo; and &lsquo;wordlines&rsquo; originated with dynamic random access memory (DRAM) technology in which the bitline carried the stored information signal while the wordline carried the control signal. Here, however, they are used in a general sense to refer to conductive lines that are arranged in a cross-point matrix, for any type of solid state integrated circuit device that has the memory array <highlight><bold>204</bold></highlight>. For the purposes of this description, the structure of the memory cell array <highlight><bold>204</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> may be identical to the conventional array <highlight><bold>104</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The memory cell array <highlight><bold>204</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is as mentioned above undergoing a biasing scheme in which the unselected bitlines <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&minus;</italic></highlight>1 and <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&plus;</italic></highlight>1, and unselected wordlines <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&plus;</italic></highlight>1 and <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&minus;</italic></highlight>1 are floating, while simultaneously the selected bitline-wordline pair <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n </italic></highlight>and <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n </italic></highlight>is subjected to a current pulse so as to cause the diode structure in the target memory cell <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>) to be pulsed in a forward bias direction. The direction of the forward bias current in the target memory cell is consistent with the difference V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo </subscript></highlight>being sufficiently large so as to induce the required programming current in the phase change material of the cell <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>). This current pulse may be induced by a conventional voltage pulse having a magnitude of 2.5 volts being sufficient to reset a phase-change memory cell. The invention is, of course, not limited to the use of any particular type of pulse or phase-change material in the memory cell. This material may be, for instance, a chalcogenide alloy that exhibits a reversible structural phase change from amorphous to crystalline. A small volume of the chalcogenide alloy is integrated into a circuit that allows the cell to act as a fast switching programmable resistor between a crystalline state (low resistivity) and the amorphous state (high resistivity), and is also capable of exhibiting multiple, intermediate states that allow multi-bit storage in each cell. The data stored in the cell is read by measuring the cell&apos;s resistance. The chalcogenide alloy cell is also non-volatile. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> It is believed that a reduction in the cumulative leakage current of the memory array may be achieved by using the biasing scheme of floating the unselected wordlines and bitlines while programming the target memory cell. <cross-reference target="DRAWINGS">FIG. 3</cross-reference> helps explain this effect by illustrating a circuit schematic of the array <highlight><bold>204</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, redrawn so that the reverse biased diode structures that are coupled to the unselected bitlines and wordlines are more readily apparent. This drawing allows an analysis of the possible voltage levels that the floating bitlines and wordlines may assume during programming of the target cell <highlight><bold>114</bold></highlight>_(<highlight><italic>n,n</italic></highlight>). Continuing to refer to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, two horizontal dotted lines are drawn, where the upper one crosses the floating/unselected wordlines <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&minus;</italic></highlight>1, <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&minus;</italic></highlight>2, . . . and <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&plus;</italic></highlight>1, <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&plus;</italic></highlight>2, . . . . The lower dotted line crosses the floating/unselected bitlines <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&minus;</italic></highlight>1, <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&minus;</italic></highlight>2, . . . and <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&plus;</italic></highlight>1, <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&plus;</italic></highlight>2 . . . . The selected bitline <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n </italic></highlight>is at V<highlight><subscript>hi </subscript></highlight>while the selected wordline <highlight><bold>108</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n </italic></highlight>is at V<highlight><subscript>lo</subscript></highlight>. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Since V<highlight><subscript>hi </subscript></highlight>is larger than V<highlight><subscript>lo</subscript></highlight>, it is assumed that all of the diodes that are coupled between the unselected bitlines and unselected wordlines, shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> as positioned between the two horizontal dotted lines, are reverse biased. However, rather than receiving the maximum reverse bias of V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo</subscript></highlight>, these diodes receive a reverse bias of only up to V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo</subscript></highlight>&minus;2*V<highlight><subscript>diode</subscript></highlight>. In other words, no cell that is coupled to an unselected bitline or an unselected wordline has its diode structure reverse-biased by more than essentially V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo</subscript></highlight>&minus;2*V<highlight><subscript>diode</subscript></highlight>, where V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo </subscript></highlight>is the maximum programming voltage applied to a selected bitline and a selected wordline, and V<highlight><subscript>diode </subscript></highlight>is a forward voltage drop of the diode structure. In practice, the actual reverse bias may be substantially less for certain type of memory arrays, due to the voltage drops caused by any series coupled limiting resistors and memory cell storage media (e.g. phase-change material). By reducing the maximum reverse bias that is subjected to the unselected cells of the memory array, the cumulative leakage current of the array during programming is substantially reduced. With reduced leakage current, the array can be used in a wider range of applications, including as part of a dedicated memory device used in applications in which power consumption is a concern such as portable computing devices. This greater acceptance of the memory array is obtained without having to redesign the diode structure or other circuitry in each cell of the array. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The reduced reverse bias as mentioned above can be obtained by floating the unselected bitlines and wordlines of the memory array. Floating a node may be viewed as causing that node to have a high impedance to a power supply node and a power return node which are used to derive the programming voltages in the memory array. Such high impedance may be obtained by placing in the cutoff mode all transistors that directly drive the unselected bitlines and unselected wordlines. This is depicted by the example in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> in which the unselected bitline <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&plus;</italic></highlight>1 is coupled so as to be directly driven by a stacked p-channel and n-channel metal oxide semiconductor field effect transistor (MOSFET) pair <highlight><bold>220</bold></highlight> and <highlight><bold>224</bold></highlight>, coupled between a power supply node <highlight><bold>222</bold></highlight> (at Vcc) and a power return node <highlight><bold>226</bold></highlight> (at ground). The programming voltage V<highlight><subscript>hi </subscript></highlight>can appear on the bitline <highlight><bold>112</bold></highlight><highlight><subscript>&mdash;</subscript></highlight><highlight><italic>n&plus;</italic></highlight>1 when the MOSFET pair <highlight><bold>220</bold></highlight>,<highlight><bold>224</bold></highlight> is actively driven during the programming pulse. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, what&apos;s shown is a flow diagram of a method for programming a target memory cell according to an embodiment of the invention. This particular embodiment begins with precharging a number of unselected bitlines and wordlines in the memory array (operation <highlight><bold>404</bold></highlight>) and then floating the precharged, unselected bitlines and wordlines (operation <highlight><bold>408</bold></highlight>) prior to applying a programming pulse to a selected bitline and a selected wordline (operation <highlight><bold>412</bold></highlight>). The precharge operation <highlight><bold>404</bold></highlight> should not change the existing stored states in the memory array. It may charge the unselected bitlines to, for instance, V<highlight><subscript>diode</subscript></highlight>&plus;V<highlight><subscript>lo</subscript></highlight>, and charge the unselected wordlines to, for instance, V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>diode</subscript></highlight>; these are the voltages to which the unselected bitlines and wordlines are expected to float. It should be noted that although the precharge operation <highlight><bold>404</bold></highlight> is optional, its use may help minimize any spikes on the supply and return nodes caused by the application of the programming pulse in operation <highlight><bold>412</bold></highlight>. As mentioned above, the floating of the unselected bitlines and wordlines may be performed by causing each of these unselected bitlines and wordlines to have a high impedance to a power supply node and a power return node of the integrated circuit, where these power supply and power return nodes are used to derive the programming voltage that will be applied in operation <highlight><bold>412</bold></highlight>. This high impedance may be obtained by placing in cutoff all transistors (not shown) that directly drive the unselected bitlines and wordlines of the memory array. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, what&apos;s shown is a block diagram of part of an IC device <highlight><bold>504</bold></highlight> that uses a diode-based memory cell array <highlight><bold>204</bold></highlight>. The IC device <highlight><bold>504</bold></highlight> includes timing logic pulse generation and drive circuitry <highlight><bold>508</bold></highlight> having a number of outputs each of which is coupled to a respective bitline <highlight><bold>112</bold></highlight> of the array <highlight><bold>204</bold></highlight>. The circuitry <highlight><bold>508</bold></highlight> also has a number of outputs each of which is coupled to a respective wordline <highlight><bold>108</bold></highlight> of the array <highlight><bold>204</bold></highlight>. These outputs of the circuitry <highlight><bold>508</bold></highlight> allow it to program target memory cell in the array <highlight><bold>204</bold></highlight> while simultaneously floating unselected ones of the bitlines and wordlines in the array <highlight><bold>204</bold></highlight>. Conventional analog or digital circuit design techniques may be used to implement the pulse generation circuitry that is able to generate the required programming pulse voltage and current levels needed to program each cell. The circuitry <highlight><bold>508</bold></highlight> also includes timing logic to insure that the target memory cell is distinguished from the unselected cells, to avoid the loss of previously stored data in the cells of the array <highlight><bold>204</bold></highlight>. The drive circuitry will insure that the generated pulses can be properly fanned out to more than one target cell simultaneously. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In addition to circuitry needed for the programming and floating operations described above in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the circuitry <highlight><bold>508</bold></highlight> may further include precharge circuitry to assist in performing the operation <highlight><bold>404</bold></highlight>. This precharge circuitry can be implemented using conventional analog techniques that bring the unselected wordlines to the desired precharge levels, such as V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>diode</subscript></highlight>, and the unselected bitlines to the desired precharge level, e.g. V<highlight><subscript>lo</subscript></highlight>&plus;V<highlight><subscript>diode</subscript></highlight>. The circuitry <highlight><bold>508</bold></highlight> could then immediately thereafter float these unselected bitlines and wordlines, followed by application of the programming pulse to the selected bitline-wordline pair. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The circuitry <highlight><bold>508</bold></highlight> in the IC device <highlight><bold>504</bold></highlight> responds to input requests via address lines <highlight><bold>512</bold></highlight> and data lines <highlight><bold>516</bold></highlight> to write a single-bit or multi-bit data value to a given location in the array <highlight><bold>204</bold></highlight>. Thus, the circuitry <highlight><bold>508</bold></highlight> includes the necessary decoding logic that translates the address information received on the address lines <highlight><bold>512</bold></highlight> into the appropriate bitline-wordline pairs in the array <highlight><bold>204</bold></highlight> that correspond to that location. Thus, it should be noted that although the above description refers to a single target memory cell being programmed, while unselected bitlines and wordlines in the memory device are floating, the concepts are also applicable to simultaneously program a number of target memory cells. For instance, depending upon the particular write request that has been received by the circuitry <highlight><bold>508</bold></highlight>, a number of target memory cells that are coupled to the same wordline, and where each target cell is coupled to a different bitline, are to be programmed simultaneously. This means that there can be multiple bitline-wordline pairs which are selected simultaneously to be programmed. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The timing logic, pulse generation and drive circuitry <highlight><bold>508</bold></highlight> may be formed on the same IC die as the memory cell array <highlight><bold>204</bold></highlight>, if doing so can take advantage of lower manufacturing costs and higher performance of on-chip integration techniques. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates a block diagram of a portable application <highlight><bold>604</bold></highlight> of the phase-change memory programming process described above. A phase-change memory <highlight><bold>608</bold></highlight> is operated according to an embodiment of the programming process described above. The phase-change memory <highlight><bold>608</bold></highlight> may include one or more integrated circuit dies where each die has a memory array that is programmed according to the various embodiments of the programming techniques described above in FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>5</bold></highlight>. These IC dies may be separate, stand alone memory devices that are arranged in modules such as conventional dynamic random access memory (DRAM) modules, or they may be integrated with other on-chip functionalities. In the latter embodiments, the phase-change memory <highlight><bold>608</bold></highlight> may be part of an I/O processor or a microcontroller. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The application <highlight><bold>604</bold></highlight> may be for instance a portable notebook computer, a digital still and/or video camera, a personal digital assistant, or a mobile (cellular) hand-held telephone unit. In all of these applications, an electronic system includes a processor <highlight><bold>610</bold></highlight> that uses the phase-change memory <highlight><bold>608</bold></highlight> as program memory to store code and data for its execution. Alternatively, the phase-change memory <highlight><bold>608</bold></highlight> may be used as a mass storage device for nonvolatile storage of code and data. The portable application <highlight><bold>604</bold></highlight> communicates with other devices, such as a personal computer or a network of computers via an I/O interface <highlight><bold>614</bold></highlight>. This I/O interface <highlight><bold>614</bold></highlight> may provide access to a computer peripheral bus, a high speed digital communication transmission line, or an antenna for unguided transmissions. Communications between the processor and the phase-change memory <highlight><bold>608</bold></highlight> and between the processor and the I/O interface <highlight><bold>614</bold></highlight> may be accomplished using conventional computer bus architectures. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The above-described components of the portable application <highlight><bold>604</bold></highlight> are powered by a battery <highlight><bold>618</bold></highlight> via a power supply bus <highlight><bold>616</bold></highlight>. Since the application <highlight><bold>604</bold></highlight> is normally battery powered, its functional components including the phase-change memory <highlight><bold>608</bold></highlight> should be designed to provide the desired performance at low power consumption levels. In addition, due to the restricted size of portable applications, the various components shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> including the phase-change memory <highlight><bold>608</bold></highlight> should provide a relatively high density of functionality. Of course, there are other non-portable applications for the phase-change memory <highlight><bold>608</bold></highlight> that are not shown. These include, for instance, large network servers or other computing devices which may benefit from a non-volatile memory device such as the phase-change memory. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> To summarize, various embodiments of a biasing scheme of floating unselected wordlines and bitlines of a diode-based memory array have been described. In the foregoing specification, the invention has been described with reference to specific exemplary embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. For instance, the invention is also applicable to memory arrays in which the diodes are oriented in the opposite direction than that shown in the figures, so that their forward current is in the wordline-to-bitline direction. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method comprising: 
<claim-text>floating a plurality of unselected bitlines and a plurality of unselected wordlines of an integrated circuit (IC), the IC having a plurality of memory cells each of which has a diode structure coupled between a bitline and a wordline that are selected when programming that cell; and </claim-text>
<claim-text>programming a target memory cell of the IC while simultaneously floating said plurality of unselected bitlines and said plurality of unselected wordlines. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the programming includes applying a pulse to a selected bitline and a selected wordline of the IC so as to cause the diode structure in the target memory cell to be pulsed in a forward bias direction, wherein the unselected bitlines and wordlines remain floating during the pulse. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> further comprising: 
<claim-text>precharging the plurality of unselected bitlines and wordlines and then floating them, before applying the pulse to the selected bitline and wordline. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method comprising: 
<claim-text>providing each of a plurality of unselected bitlines and a plurality of unselected wordlines of an integrated circuit (IC) with high impedance to a power supply mode and a power return mode of the IC, the IC having a plurality of memory cells each of which has a diode structure coupled between a bitline and a wordline that are selected when programming that cell; and </claim-text>
<claim-text>programming a target memory cell of the IC while simultaneously providing said high impedance to said plurality of unselected bitlines and said plurality of unselected wordlines. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> wherein the programming includes applying a pulse to a selected bitline and a selected wordline of the memory IC so as to cause the diode structure in the target memory cell to be pulsed in a forward bias direction, wherein the unselected bitlines and wordlines continue to have said high impedance during the pulse. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> further comprising: 
<claim-text>precharging the plurality of unselected bitlines and wordlines and then causing them to have said high impedance, before applying the pulse to the selected bitline and wordline. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> wherein said high impedance is sufficiently high so that essentially no cell connected to an unselected bitline or an unselected wordline has its diode structure reverse-biased by more than essentially V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo</subscript></highlight>&minus;2*V<highlight><subscript>diode </subscript></highlight>where V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>l0 </subscript></highlight>is the maximum programming voltage between a selected bitline and a selected wordline and V<highlight><subscript>diode </subscript></highlight>is a forward voltage drop of its diode structure. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> wherein said high impedance is obtained by placing in cutoff all transistors that directly drive the plurality of unselected wordlines and the plurality of unselected bitlines. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. An integrated circuit device comprising: 
<claim-text>a plurality of bitlines and a plurality of wordlines; </claim-text>
<claim-text>a plurality of memory cells each of which has a diode structure coupled between a separate bitline-wordline pair of the plurality of bitlines and of the plurality of wordlines, the pair to be selected when programming that cell; and </claim-text>
<claim-text>timing logic, pulse generation and drive circuitry coupled to the plurality of bitlines and wordlines, to program a target memory cell of the plurality of memory cells while simultaneously floating unselected ones of said plurality of bitlines and unselected ones of said plurality of wordlines. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The integrated circuit device of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein the timing logic, pulse generation and drive circuitry is to program the target memory cell by applying a pulse to a selected bitline-wordline pair so as to cause the diode structure in the target memory cell to be pulsed in a forward bias direction, wherein the unselected bitlines and the unselected wordlines remain floating during the pulse. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The integrated circuit device of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the timing logic, pulse generation and drive circuitry further includes precharge circuitry coupled to precharge the unselected bitlines and the unselected wordlines and then float them, before applying the pulse to the selected bitline-wordline pair. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The integrated circuit device of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein the timing logic, pulse generation and drive circuitry is to simultaneously program a plurality of target memory cells, of the plurality of memory cells, while simultaneously floating unselected ones of said plurality of bitlines and unselected ones of said plurality of wordlines. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The integrated circuit device of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein each of the plurality of target memory cells is coupled to the same wordline and a different bitline. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The integrated circuit device of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein each of the plurality of memory cells further includes a structural phase-change material in series with the diode structure and coupled between the bitline-wordline pair of that cell, the material of that cell is to change into a predetermined phase when that cell has been programmed. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The integrated circuit device of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein the plurality of bitlines, the plurality of wordlines, the plurality of memory cells, and the timing logic, pulse generation and drive circuitry are all formed on the same integrated circuit die. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. An integrated circuit device comprising: 
<claim-text>a plurality of bitlines and a plurality of wordlines; </claim-text>
<claim-text>a plurality of memory cells each of which has a diode structure coupled between a separate bitline-wordline pair of the plurality of bitlines and of the plurality of wordlines, the pair to be selected when programming that cell; and </claim-text>
<claim-text>timing logic, pulse generation and drive circuitry coupled to the plurality of bitlines and wordlines, to program a target memory cell of the plurality of memory cells while simultaneously causing unselected ones of said plurality of bitlines and unselected ones of said plurality of wordlines to have high impedance to a power supply node and a power return node of the device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The integrated circuit device of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein the timing logic, pulse generation and drive circuitry is to program the target memory cell by applying a pulse to a selected bitline-wordline pair so as to cause the diode structure in the target memory cell to be pulsed in a forward bias direction, wherein the unselected bitlines and the unselected wordlines continue to have said high impedance during the pulse. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The integrated circuit device of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein the timing logic, pulse generation and drive circuitry further includes precharge circuitry coupled to precharge the unselected bitlines and the unselected wordlines and then cause them to have said high impedance, before applying the pulse to the selected bitline-wordline pair. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The integrated circuit device of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein the high impedance is sufficiently high so that essentially no cell connected to an unselected bitline or an unselected wordline has its diode structure reverse-biased by more than essentially V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo</subscript></highlight>&minus;2*V<highlight><subscript>diode </subscript></highlight>where V<highlight><subscript>hi</subscript></highlight>&minus;V<highlight><subscript>lo </subscript></highlight>is the maximum programming voltage between a selected bitline-wordline pair and V<highlight><subscript>diode </subscript></highlight>is a forward voltage drop of its diode structure. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The integrated circuit device of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein said high impedance is obtained by placing in cutoff all transistors that directly drive the plurality of unselected wordlines and the plurality of unselected bitlines.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002338A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002338A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002338A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002338A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002338A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002338A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002338A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
