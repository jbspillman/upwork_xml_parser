<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004987A1-20030102-D00000.TIF SYSTEM "US20030004987A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004987A1-20030102-D00001.TIF SYSTEM "US20030004987A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004987A1-20030102-D00002.TIF SYSTEM "US20030004987A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004987A1-20030102-D00003.TIF SYSTEM "US20030004987A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004987A1-20030102-D00004.TIF SYSTEM "US20030004987A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004987A1-20030102-D00005.TIF SYSTEM "US20030004987A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004987A1-20030102-D00006.TIF SYSTEM "US20030004987A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004987A1-20030102-D00007.TIF SYSTEM "US20030004987A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004987A1-20030102-D00008.TIF SYSTEM "US20030004987A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004987</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10226282</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020823</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>500000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Integrated fieldbus data server architecture</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>10226282</doc-number>
<kind-code>A1</kind-code>
<document-date>20020823</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>10160094</doc-number>
<document-date>20020604</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-in-part-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10160094</doc-number>
<document-date>20020604</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08916178</doc-number>
<document-date>19970821</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6424872</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>10226282</doc-number>
<kind-code>A1</kind-code>
<document-date>20020823</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09598697</doc-number>
<document-date>20000621</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-in-part-of>
</continuations>
<non-provisional-of-provisional>
<document-id>
<doc-number>60024346</doc-number>
<document-date>19960823</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
<non-provisional-of-provisional>
<document-id>
<doc-number>60139814</doc-number>
<document-date>19990621</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
<non-provisional-of-provisional>
<document-id>
<doc-number>60314093</doc-number>
<document-date>20010823</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
<non-provisional-of-provisional>
<document-id>
<doc-number>60315067</doc-number>
<document-date>20010828</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>David</given-name>
<middle-name>A.</middle-name>
<family-name>Glanzer</family-name>
</name>
<residence>
<residence-us>
<city>Georgetown</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Lee</given-name>
<middle-name>A.</middle-name>
<family-name>Neitzel</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Donald</given-name>
<middle-name>B.</middle-name>
<family-name>Goff</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>DORSEY &amp; WHITNEY</name-1>
<name-2>INTELLECTUAL PROPERTY DEPARTMENT</name-2>
<address>
<address-1>1001 PENNSYLVANIA AVE., N.W.</address-1>
<address-2>SUITE 300 SOUTH</address-2>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20004</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A new and improved control system architecture with a single server interface for application software that eliminates manual intervention by providing online, immediate access to information needed for plant/enterprise optimization, operation, configuration, maintenance and diagnostic application software. The control system architecture provides a method of dynamically creating a server directory to enable automatic access in an integrated control system. The method includes accessing a live list of fieldbus devices, building/updating a browse tree structure, the browse tree structure defining a branch and leaf node organization and naming for and data from the fieldbus devices, copying AP directories and FF objects from active fieldbus devices into a FF directory and mapping the FF Directory into the server directory. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS-REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation-in-part (CIP) application of U.S. patent application Ser. No. 10/160,094, entitled &ldquo;A Block-Oriented Control System&rdquo; and filed Jun. 4, 2002, which is a continuation of U.S. Pat. No. 6,424,892 (hereinafter the &ldquo;&apos;892 patent&rdquo;), also entitled &ldquo;A Block-Oriented Control System&rdquo; and filed Aug. 21, 1997, which claims the priority of U.S. Provisional Application No. 60/024,346, filed Aug. 23, 1996. This application is also a CIP of U.S. patent application Ser. No. 09/598,697 (hereinafter the &ldquo;&apos;697 application&rdquo;), entitled &ldquo;Block-Oriented Control System On High Speed Ethernet&rdquo; and filed Jun. 21, 2000, which claims the priority of U.S. Provisional Application No. 60/139,814, filed Jun. 21, 1998. This application also claims priority of U.S. Provisional Application No. 60/314,093, filed Aug. 23, 2001, and U.S. Provisional Application No. 60/315,067 filed Aug. 28, 2001. All of the above-mentioned applications and patent are hereby incorporated by reference in their entirety.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to automatic control system architecture. More particularly, the present invention relates to how plant and enterprise application software accesses control system data including fieldbus data, needed for plant and enterprise management, operation, configuration, maintenance, and diagnostic functions of the control system. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Automatic control systems are critical to all sectors of industry such as process control, discrete control, batch control (process and discrete combined), machine tool control, motion control, and robotics. One of the strongest needs in modern control systems is development and use of &ldquo;open&rdquo; and &ldquo;interoperable&rdquo; systems. Open, interoperable systems allow control devices made by different manufacturers to communicate and work together in the same system without the need for custom programming. </paragraph>
<paragraph id="P-0004" lvl="7"><number>&lsqb;0004&rsqb;</number> The movement toward open, interoperable control systems is driven by plant and enterprise management, application software suppliers, control device manufacturers, and end users. Plant and enterprise management want open, interoperable control systems because they need access to all of the control system information in order to provide the analysis needed to optimize the operation of the plant and enterprise. Client Application Software suppliers want open, interoperable control systems so that their software can access the control system data using standard computer platforms running standard operating systems, and interconnected by standard communication systems. Control device manufacturers want open, interoperable control systems because such systems allow them to sell their products to more end users while reducing development costs. End users want open, interoperable control systems so that they can select the best application software and control devices for their system regardless of the manufacturer. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In order for control systems to be truly open and interoperable, communications systems between devices, the user layer (above the communication system layers) in the devices, and the computer/application software integration architecture must be specified and made open. &ldquo;Fieldbus&rdquo; is the common term used to describe these types of automatic control systems. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> One of the truly open and interoperable fieldbus control systems is the FOUNDATION&trade; fieldbus (&ldquo;FF&rdquo;) system provided by the Fieldbus Foundation (Austin, Tex.). The FF user layer and a lower speed 31.25 kilobits/second fieldbus (H1) is described in the above-mentioned &apos;892 patent. A High Speed Ethernet (HSE) fieldbus, running at 100 megabit/second or higher speeds, is described in the above-mentioned &apos;697 application. The &apos;892 patent and the &apos;697 application are assigned to the assignee of the present application. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> H1 provides the open and interoperable solution for field level control capability and integration, and HSE provides the open and interoperable solution for distributed control on a very high performance communication system typically called a fieldbus control &ldquo;backbone&rdquo; network. The HSE control backbone aggregates information from lower speed control devices, e.g., the H1 devices and other control devices, which is used in supervisory and advanced control applications. The HSE control backbone aggregates data from high-speed control devices, e.g., HSE devices and other subsystems, and provides access/change of H1 and HSE control information by control system computers. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The plant/enterprise application software operates at the &ldquo;client&rdquo; and &ldquo;server&rdquo; levels in the control system hierarchy. An open and interoperable integrated fieldbus data server architecture (meaning client and server) is needed that will provide a framework and common specification for the &ldquo;semantics&rdquo; (how the application software understands the control system data) of fieldbus data, whether it is H1 or HSE data, or other control data. Prior to the present invention, client application software on the plant/enterprise computers had to be manually customize and adapt data received from each server that provided access to fieldbus or other control device data because each server identified and represented the same semantic information differently. A requirement for modem servers is to eliminate the need to manually customize or adapt client application software; the present application addresses this requirement. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Existing server specifications provide for automatic adaptation of very limited subsets of runtime data because this data can be understood through syntax only, e.g. message structure. For example, the OLE for Process Control (OPC) Specification from the OPC Foundation (Boca Raton, Fla.) provides for the limited adaptation through standardization of the basic access mechanism and syntax for runtime data, e.g. simple process variables (PV) and setpoints (SP). The OPC Specifications are general enough to allow extra information, called &ldquo;properties&rdquo; to define &ldquo;class&rdquo; attributes of the runtime data. Class attributes include &ldquo;Device Description&rdquo; (DD) information for the runtime data, e.g. help strings, engineering units, and parameter labels. Some DD information is complex, for example containing conditionals, menus, and methods (which are C programs). Additional class attributes are provided by &ldquo;Capability Files&rdquo; (CF) that describe the range of capability of the fieldbus device or other control device, e.g. maximum number of parameters, initial values of parameters, and maximum number of communication sessions. However, although OPC allow servers to define class attributes, there is no standardized definition for class attributes, thus limiting interoperability with, and automatic adaptation by, client application software </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Further, even if class attributes could be standardized for server data, the client application software also needs to know which &ldquo;instance&rdquo; of the runtime data is being described by the class attributes. That is, the class attributes can tell the client application software what type of runtime data is being accessed, but they cannot identify the specific data that is being accessed. Instance information can be provided by accessing application directories (which locate the runtime data) in the fieldbus devices, but like class attributes, there is no standardized definition of the application directory information making interoperability and automatic adaptation of the client application software impossible. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Advanced Human/Machine Interface (&ldquo;HMI&rdquo;), trending, asset management, configuration, maintenance, diagnostic and plant/enterprise management application software must have access to runtime data and the class attributes and application directory semantic information that allows the software to automatically identify, interpret, and process the runtime data without manual intervention. Finally, to be efficient, the client application software must be able to access the runtime data and the semantic information through a single interface. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The OPC Specification is unable to automatically and efficiently support these advanced applications because there is no open and interoperable framework or specification for providing the above described semantic information to the client software applications through the same interface that is currently used to access runtime data. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> What is needed is a framework and a common specification for an integrated fieldbus data server architecture that can provide semantics of runtime data, both simple and complex, to the client application software. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> What is needed is a framework and a common specification for an integrated fieldbus data server architecture that migrates support for existing plant/enterprise client application software, e.g., HMI and other OPC software applications, while standardizing and integrating the semantics needed for automatic identification, interpretation, and processing of runtime data by advanced client application software, e.g., plant/enterprise management, configuration, maintenance, and diagnostics application software. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> What is needed is an integrated fieldbus data server architecture that complements H1, HSE and other fieldbus architectures so the plant/enterprise application software can automatically interpret the runtime data using corresponding semantic information. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> What is needed is an integrated fieldbus data server architecture provides a single interface for access of the runtime data and corresponding semantic information by the plant/enterprise application software. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Embodiments of the present invention overcome the shortcomings described above and otherwise. Embodiments of the present invention satisfy the above-described needs. Embodiments of the present invention provide a new and improved control system architecture with a single server interface for Client Application Software that eliminates manual intervention by providing online, immediate electronic access to the runtime data and semantic information by advanced plant/enterprise management, operation, configuration, maintenance and diagnostic application software. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The embodiments of the present invention are collectively referred to herein as the &ldquo;Integrated Fieldbus Data Server Architecture&rdquo; (IFDSA). IFDSA provides the framework and specification for mapping the semantic information of runtime data such as H1 and HSE fieldbus device data described in the &apos;892 patent and &apos;697 application, respectively, and further defines a single interface for client application software. The IFDSA framework enables automatic adaptation to FF and other control device types. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The elimination of manual intervention for setup of advanced application packages is achieved by providing a method and apparatus for accessing the runtime &ldquo;live list&rdquo; of active FF devices and building/updating a Standardized Browse Tree Structure formatted to be compatible OPC Specifications available from the OPC Foundation and mapping FF Directory information (which provides the semantic information for all FF fieldbus and other control device runtime data) into a new Server Directory. The Server Directory contains the same semantic information as the FF Directory, but is formatted to be compatible OPC Specifications available from the OPC Foundation. The OPC-compatible browse tree and semantic information is then provided to the client application software transparently by the servers. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The IFSDA achieves a single interface because the Client Application Software at the client no longer has to use separate interfaces to access semantic information and runtime data. Since the mapping of FF semantic and runtime data to OPC Specifications is above the communication layers, this solution remains valid as implementations evolve to newer technologies, e.g., web services.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Features and advantages of the present invention will become apparent to those skilled in the art from the following description with reference to the drawings, in which like numerals refer to like items and: </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram showing an exemplary embodiment of an integrated open and interoperable control system in accordance with the principles of the present invention; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram showing an exemplary embodiment of an integrated fieldbus data server architecture with FF Directory Mapping in accordance with the principles of the present invention; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> is a flowchart illustrating an exemplary method of creating a Server Directory to enable automatic access in an exemplary embodiment of an integrated fieldbus data server architecture in accordance with the principles of the present invention; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> is a diagram illustrating an exemplary Standardized Browse Tree Structure in the Server Directory and graphically illustrating a step of building/updating the Standardized Browse Tree Structure with exemplary Live List and Device Directories, from the method of creating a Server Directory to enable automatic access; </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram illustrating an exemplary device in a FF Directory and exemplary OPC Items, mapped from the device, in the Server Directory, and graphically illustrating alternative steps of mapping the device into the OPC Item in the Server Directory as part of a step of mapping the FF directory into the Server Directory from the method of creating a Server Directory to enable automatic access; </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram illustrating an exemplary Application Process (AP) Directory in the FF Directory and exemplary OPC Items, mapped from the FF Directory, in the Server Directory, and graphically illustrating alternative steps of mapping the AP Directory into the Server Directory OPC Items as part of the step of mapping the FF directory into the Server Directory from the method of creating a Server Directory to enable automatic access; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram illustrating an exemplary FF Object in the FF Directory and exemplary OPC Items, mapped from the FF Object, in the Server Directory, and graphically illustrating alternative steps of mapping the FF Objects into the Server Directory OPC Items as part of the step of mapping the FF Directory into the Server Directory from the method of creating a Server Directory to enable automatic access; and </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram illustrating an exemplary method of Client Application Software accessing mapped FF semantic information using the Server Browse Function, and accessing runtime data, corresponding to the semantic information, using the Server Data Access Function, in an OPC server in an exemplary server directory of an exemplary embodiment of an integrated fieldbus data server architecture in accordance with the principles of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> For simplicity and illustrative purposes, the present invention is described by referring mainly to exemplary embodiments, particularly, with a specific exemplary implementation of a control system using H1, HSE, OPC (meaning both client and server operations), and Client Application Software. However, one of ordinary skill in the art would readily recognize that the same principles are equally applicable to, and can be implemented in, other implementations and designs using any other integrated architecture, and that any such variation would be within such modifications that do not depart from the true spirit and scope of the present invention. Specifically, one of ordinary skill in the art would readily recognize that principles applying to OPC in the exemplary implantation are equally applicable to non-OPC implementations. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> I IFDSA Overview </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, an example of an integrated control system architecture <highlight><bold>100</bold></highlight> is shown where standard Ethernet equipment <highlight><bold>130</bold></highlight> is used to interconnect HSE Linking Devices <highlight><bold>110</bold></highlight>, HSE Devices <highlight><bold>120</bold></highlight>, and Plant/Enterprise Computers <highlight><bold>190</bold></highlight> to Ethernet Network <highlight><bold>140</bold></highlight>. The HSE Linking Devices <highlight><bold>110</bold></highlight> in turn connect to H1 Devices <highlight><bold>170</bold></highlight> using H1 Networks <highlight><bold>150</bold></highlight>. Client Application Software <highlight><bold>180</bold></highlight> runs on the Plant/Enterprise Computers <highlight><bold>190</bold></highlight>. Server software may run on Plant/Enterprise Computers <highlight><bold>190</bold></highlight>, HSE Linking Device <highlight><bold>110</bold></highlight> or HSE Device <highlight><bold>120</bold></highlight>. Client Application Software <highlight><bold>190</bold></highlight> may also run on HSE Linking Device <highlight><bold>110</bold></highlight> or HSE Device <highlight><bold>120</bold></highlight>. The actual hardware and software configuration will depend on the particular application needs. However, network topology, devices or configuration other than the exemplary topology shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> may be used, and such variations would be within such modifications that do not depart from the true spirit and scope of the present invention. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> IFDSA components in accordance with an embodiment of the principles of the present invention are shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. IFDSA is designed to meet the functional needs of the integrated, high performance distributed manufacturing and process control environments, e.g., utilizing H1, HSE, OPC and Client Application Software. IFDSA permits distributed automation systems to be constructed from various H1, HSE, and other control and measurement devices, client application software and server software manufactured by different vendors. IFDSA is described by architecture components that have been adapted to the specifics of H1, HSE and OPC environments. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The various protocols and standards referenced in the following disclosure are described in detail in the manuals and specifications listed in Appendix I herein, which are publicly available from the Fieldbus Foundation, a not-for-profit organization headquartered in Austin, Tex. The specifications and manuals may be ordered by calling 512-794-8890 or online at www.fieldbus.org. The respective current versions of each of these manuals and specifications are hereby incorporated by reference in their entirety. Each of the architecture components of IFDSA (shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) are described in more detail below. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> II. IFDSA Components </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an exemplary embodiment of the IFDSA <highlight><bold>50</bold></highlight>. As shown, the IFDSA <highlight><bold>50</bold></highlight> preferably comprises OPC <highlight><bold>160</bold></highlight> and Fieldbus Devices <highlight><bold>280</bold></highlight> (e.g., H1 Devices <highlight><bold>170</bold></highlight> and HSE Devices <highlight><bold>120</bold></highlight>&mdash;See <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). The functions and components of OPC <highlight><bold>160</bold></highlight> may be combined into a single OPC <highlight><bold>160</bold></highlight> computer or spread among multiple OPC <highlight><bold>160</bold></highlight> computers. OPC <highlight><bold>160</bold></highlight> preferably communicates with the Fieldbus Devices <highlight><bold>280</bold></highlight> via Fieldbus Networks <highlight><bold>290</bold></highlight> (e.g., H1 Networks <highlight><bold>150</bold></highlight> and Ethernet Networks <highlight><bold>140</bold></highlight>&mdash;see <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In the embodiment shown, OPC <highlight><bold>160</bold></highlight> preferably includes Client Application Software <highlight><bold>180</bold></highlight> and an OPC Client <highlight><bold>210</bold></highlight>. Client Application Software <highlight><bold>180</bold></highlight> uses OPC Client <highlight><bold>210</bold></highlight> to access information in an OPC Server <highlight><bold>220</bold></highlight>. OPC Client <highlight><bold>210</bold></highlight> and OPC Server <highlight><bold>220</bold></highlight> can reside in a single computer or they may be in separate computers on a communication network (the communication network between the client and server is not shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The Client Application Software <highlight><bold>180</bold></highlight> running in OPC <highlight><bold>160</bold></highlight> may include a variety of software (e.g., as separate programs or separate modules of the same software). For example, the Client Application Software <highlight><bold>180</bold></highlight> may include Human/Machine Interface Application Software <highlight><bold>181</bold></highlight>, Maintenance/Diagnostics Application Software <highlight><bold>182</bold></highlight>, Configuration Application Software <highlight><bold>183</bold></highlight>, and Other Plant/Enterprise Application Software <highlight><bold>184</bold></highlight>. The preferred embodiment defines existing client application software to be included in Other Plant/Enterprise Application Software <highlight><bold>184</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Referring again to the embodiment shown in <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> second OPC <highlight><bold>160</bold></highlight> computer preferably includes an OPC Server <highlight><bold>220</bold></highlight> and a FF Server Module <highlight><bold>230</bold></highlight>. The OPC Server <highlight><bold>220</bold></highlight> may be a virtual server, for example, and preferably includes a Server Browse Function <highlight><bold>270</bold></highlight>. Communications are preferably enabled and maintained between the OPC Server <highlight><bold>220</bold></highlight>, specifically the Server Browse Function <highlight><bold>270</bold></highlight>, and the OPC Client <highlight><bold>210</bold></highlight>. The FF Server Module <highlight><bold>230</bold></highlight> preferably includes a FF directory <highlight><bold>240</bold></highlight>, a Mapping Function <highlight><bold>250</bold></highlight>, and Server Directory <highlight><bold>260</bold></highlight>. Communications are also preferably enabled and maintained between the OPC Server <highlight><bold>220</bold></highlight>, specifically the Server Browse Function <highlight><bold>270</bold></highlight>, and the FF Server Module <highlight><bold>230</bold></highlight>, specifically the Server Directory. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> III. IFDSA Directory Mapping </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> With continued reference to the embodiment illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the FF Server Module <highlight><bold>230</bold></highlight> preferably monitors a Live List <highlight><bold>400</bold></highlight> that represents the active fieldbus devices in Fieldbus Devices <highlight><bold>280</bold></highlight>. In the preferred embodiment, Live List <highlight><bold>400</bold></highlight> is created in accordance with the FF Specifications in Appendix I and available from the Fieldbus Foundation. Live List <highlight><bold>400</bold></highlight> identifies Fieldbus Devices <highlight><bold>280</bold></highlight> available to FF Server Module <highlight><bold>230</bold></highlight>. For each device listed in the Live List <highlight><bold>400</bold></highlight>, there is a corresponding list of vendor specific identifiers called Object Dictionary (OD) Indexes (OD Indexes not shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). OD Indexes have corresponding runtime objects in the Fieldbus Devices <highlight><bold>280</bold></highlight>. Exemplary runtime objects in a device are described the &apos;892 application and include a resource block object, transducer block objects, function block objects, trend objects, view objects, link objects, alert objects, system time objects, function block schedule objects, and network traffic objects. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The runtime objects are preferably defined as FF Objects by the FF Specifications referenced in Appendix I, although a vendor can define additional runtime objects. In either case, DD and CF technology mentioned above and described in the &apos;892 application (and the FF Specifications listed in Appendix I) are preferably used to describe the runtime objects. DD and CF files extend the descriptions of each object in a device that is needed for a control system to interpret the meaning of the data in the fieldbus device, including the human interface functions, such as calibration and diagnostics. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The DD/CF files can be written in ASCII text or any standardized programming language, such as C, C&plus;&plus;, or SmallTalk. In the preferred embodiment, DD files are written in the DD Language (DDL) and CF files are ASCII text files as described by the FF Specification listed in Appendix I and available from the Fieldbus Foundation. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The FF Directory <highlight><bold>240</bold></highlight> is preferably composed of the list of all Fieldbus Devices <highlight><bold>280</bold></highlight>, called the Live List, and the AP directories contained in each FF device. The Live List may be constructed by listening to FF network traffic, or it may be read from Fieldbus Devices <highlight><bold>280</bold></highlight> that contain it. AP directories are read by the FF Server Module <highlight><bold>230</bold></highlight> from the Fieldbus Devices Fieldbus Devices <highlight><bold>280</bold></highlight> via the Fieldbus Networks <highlight><bold>290</bold></highlight>, or the AP Directories can be obtained locally by reading the CF file (The DD and CF files are provided with every FF fieldbus device). </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The OD Index is used as a key attribute in FF protocol services to access the runtime objects. Consequently, Client Application Software <highlight><bold>180</bold></highlight> can access runtime data in the Fieldbus Devices <highlight><bold>280</bold></highlight> by obtaining their corresponding OD indexes from the FF Directory <highlight><bold>240</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> OPC <highlight><bold>160</bold></highlight> models runtime objects as &ldquo;OPC Items&rdquo;. OPC Items are identified by &ldquo;Item IDs&rdquo; that contain vendor-specific names. OPC Items in the OPC Server <highlight><bold>220</bold></highlight> are presented to the OPC Clients <highlight><bold>210</bold></highlight> via a Server Browse Function <highlight><bold>270</bold></highlight>. The Server Browse Function <highlight><bold>270</bold></highlight> allows the OPC Server <highlight><bold>220</bold></highlight> to locate OPC Items in a tree structure that is constructed per the OPC specifications. The OPC Client <highlight><bold>210</bold></highlight> uses the Server Browse Function <highlight><bold>270</bold></highlight> to locate items of interest. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Currently, there is no standardization of branch and leaf node organization or ID naming used in the Server Browse Function <highlight><bold>270</bold></highlight> and, therefore, the OPC Client <highlight><bold>210</bold></highlight> cannot locate OPC Items of interest without manual interpretation of the browse tree and each OPC Item in it. This precludes OPC Clients <highlight><bold>210</bold></highlight> from automatically accessing and processing OPC Items in the OPC Server <highlight><bold>220</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> To solve this problem, the IFDSA <highlight><bold>50</bold></highlight> provides a standard Server Directory <highlight><bold>260</bold></highlight> that is created to represent the FF Directory <highlight><bold>240</bold></highlight>. The Server Directory contains the same object semantic information as the FF Directory <highlight><bold>240</bold></highlight>, but is mapped to be compatible with OPC objects. The Standardized Browse Tree Structure <highlight><bold>261</bold></highlight> in the Server Directory <highlight><bold>260</bold></highlight> defines the branch and leaf node organization and naming for the Fieldbus Devices <highlight><bold>160</bold></highlight> so that the Server Browse Function <highlight><bold>270</bold></highlight> can locate its representation of Fieldbus Devices <highlight><bold>280</bold></highlight> and their data through the OPC compatible semantic information in Server Directory <highlight><bold>260</bold></highlight>. Once located, the OPC compatible semantic information and data values (if any) are provided to the Client Application Software <highlight><bold>180</bold></highlight> transparently using via the Server Browse Function <highlight><bold>270</bold></highlight> and related OPC <highlight><bold>160</bold></highlight> services. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The Mapping Function <highlight><bold>250</bold></highlight> maps the Fieldbus Devices <highlight><bold>280</bold></highlight> Live List <highlight><bold>400</bold></highlight> and Application Process (AP) Directory information to the Server Directory <highlight><bold>260</bold></highlight> with an automatically generated OPC Access Path Name and/or a Fully Qualified Item ID, referred to below as the OPC Item Reference. The AP Directory is written in accordance with the manuals or specifications listed in Appendix I and available from the Fieldbus Foundation. The OPC Access Path name defines the server-specific path through the Server Browse Function <highlight><bold>270</bold></highlight> to the FF Directory <highlight><bold>240</bold></highlight>. The OPC Fully Qualified Item ID is a handle to the item representing a corresponding Runtime Object in the FF Directory <highlight><bold>240</bold></highlight>. The OPC Access Path, OPC Fully Qualified Item ID and Server Browse Function are written in accordance with OPC Specifications and available from the OPC Foundation. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> illustrates an embodiment of a method <highlight><bold>300</bold></highlight> of creating a Server Directory <highlight><bold>260</bold></highlight> to enable automatic access. As seen, the method <highlight><bold>300</bold></highlight> starts when the integrated control system powers-up <highlight><bold>310</bold></highlight> and includes the steps of: Accessing the Live List <highlight><bold>400</bold></highlight> of Fieldbus Devices <highlight><bold>280</bold></highlight>, step <highlight><bold>320</bold></highlight>; Building/Updating the Standardized Browse Tree Structure <highlight><bold>261</bold></highlight>, step <highlight><bold>330</bold></highlight>; Copying AP Directories and FF Objects from active Fieldbus Devices <highlight><bold>280</bold></highlight> into the FF Directory <highlight><bold>240</bold></highlight>, step <highlight><bold>340</bold></highlight>; Mapping the FF Directory <highlight><bold>240</bold></highlight> into the Server Directory <highlight><bold>260</bold></highlight>, step <highlight><bold>350</bold></highlight>; determining if there is a Live List <highlight><bold>400</bold></highlight> change, step <highlight><bold>360</bold></highlight>; and, if yes, repeating steps <highlight><bold>330</bold></highlight>-<highlight><bold>360</bold></highlight>, and if no, repeating step <highlight><bold>360</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The access step <highlight><bold>320</bold></highlight> preferably is performed using protocol services defined in the FF Specifications in Appendix I and available from the Fieldbus Foundation. The building/updating step <highlight><bold>330</bold></highlight> initially builds the Standardized Browse Tree Structure <highlight><bold>261</bold></highlight> with Live List <highlight><bold>400</bold></highlight> Device Identification information read from Fieldbus Devices <highlight><bold>280</bold></highlight>. The reading of information in step <highlight><bold>330</bold></highlight> preferably is performed using protocol services defined in the FF Specifications in Appendix I and available from the Fieldbus Foundation. (Please see <cross-reference target="DRAWINGS">FIG. 3</cross-reference>B and its corresponding description below for a more detailed description of the data accessed by this step.) The copying step <highlight><bold>340</bold></highlight> is preferably performed by 1) reading the AP Directories and FF Objects of Fieldbus Devices <highlight><bold>280</bold></highlight> corresponding to active devices in the Live List <highlight><bold>400</bold></highlight> using protocol services defined in the FF Specifications in Appendix I and available from the Fieldbus Foundation and placing the data in a buffer, and 2) copying the data from the buffer to the FF Directory <highlight><bold>240</bold></highlight>. The mapping step <highlight><bold>350</bold></highlight> maps the data in FF Directory <highlight><bold>240</bold></highlight> to the Server Directory <highlight><bold>260</bold></highlight> by mapping, for each device, an AP Directory, and each FF Object contained in the FF Directory <highlight><bold>240</bold></highlight> to OPC Items in the Server Directory <highlight><bold>260</bold></highlight>. Please see FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>6</bold></highlight> and their corresponding description below for more detailed descriptions of this step and alternative steps of mapping these to OPC Items. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> With continued reference to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>A, the determining step <highlight><bold>360</bold></highlight> dynamically determines if there is a change in the Live List <highlight><bold>400</bold></highlight>. Step <highlight><bold>360</bold></highlight> uses the same protocol as Step <highlight><bold>320</bold></highlight> to access Live List <highlight><bold>400</bold></highlight> and then compares the new copy of the Live List just obtained with the previous copy and determines which fieldbus devices have been added or removed from Fieldbus Devices <highlight><bold>280</bold></highlight> since the last execution of Step <highlight><bold>360</bold></highlight>. The determining step <highlight><bold>360</bold></highlight>, therefore, enables the IFDSA <highlight><bold>50</bold></highlight> to dynamically map the FF Directory <highlight><bold>240</bold></highlight> to the Server Directory <highlight><bold>260</bold></highlight>. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> illustrates an exemplary Server Directory <highlight><bold>260</bold></highlight> with an exemplary Standardized Browse Tree Structure <highlight><bold>261</bold></highlight> and graphically illustrates an embodiment of the build/update step <highlight><bold>330</bold></highlight>. As shown, the Standardized Browse Tree Structure <highlight><bold>261</bold></highlight> includes a Live List Directory <highlight><bold>262</bold></highlight> entry and a Device Directory <highlight><bold>263</bold></highlight> entry for each active field device in Fieldbus Devices <highlight><bold>280</bold></highlight> referenced explicitly by a Live List Directory <highlight><bold>262</bold></highlight> entry as shown in the figure, or implicitly referenced as a child node or property of the Live List Directory <highlight><bold>262</bold></highlight> entry (not shown). </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>B, the Server Directory <highlight><bold>260</bold></highlight> structure preferably matches the organization of the FF Directory <highlight><bold>240</bold></highlight> Structure. Each AP Directory reference in the FF Directory <highlight><bold>240</bold></highlight> is composed of a Starting OD Index and a number of objects. In the preferred embodiment, the Device Identification information, e.g., DeviceID, Fieldbus Network Address, Physical Device Tag, and other related data, provides semantic information that allows clients to automatically identify Fieldbus Devices <highlight><bold>280</bold></highlight>. It is preferably read from Fieldbus Devices <highlight><bold>280</bold></highlight> using protocol services defined in the FF Specifications in Appendix I and available from the Fieldbus Foundation, and is preferably mapped into the Server Directory <highlight><bold>260</bold></highlight> using automatically generated Item ID/Path in one of two ways: </paragraph>
<paragraph id="P-0055" lvl="2"><number>&lsqb;0055&rsqb;</number> 1. Each AP Directory reference in the FF Directory <highlight><bold>240</bold></highlight> as mapped to Server Directory <highlight><bold>260</bold></highlight> is composed of a Starting OPC Item Reference that identifies the branch that contains the object and the sub-objects of the object are represented as item beneath this branch. The browses order of the items beneath the branch preserves the OD Index ordering as defined in the FF Specifications for the object represented in the AP Directory; or </paragraph>
<paragraph id="P-0056" lvl="2"><number>&lsqb;0056&rsqb;</number> 2. Each AP Directory entry in FF Directory <highlight><bold>240</bold></highlight> as mapped to Server Directory <highlight><bold>260</bold></highlight> can be composed of an OPC Item Reference of the corresponding OPC Item. In this case, FF sub-objects in the Server Directory <highlight><bold>260</bold></highlight> and are represented by their own OPC Item Reference of the OPC Item that corresponds to the sub-object. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the mapping step <highlight><bold>350</bold></highlight> of the preferred embodiment of the method <highlight><bold>300</bold></highlight> maps the Live List Entry <highlight><bold>242</bold></highlight> from the FF Directory <highlight><bold>240</bold></highlight> into the Server Directory <highlight><bold>260</bold></highlight>. Exemplary Live List Entry <highlight><bold>242</bold></highlight> in the FF Directory <highlight><bold>240</bold></highlight> and exemplary OPC Items <highlight><bold>262</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>262</bold></highlight><highlight><italic>b</italic></highlight>, and <highlight><bold>262</bold></highlight><highlight><italic>c</italic></highlight>, correspond to the alternative mapping options described below. For each mapping options, the OPC Item ID and Path (not shown on figure) are automatically generated. </paragraph>
<paragraph id="P-0058" lvl="2"><number>&lsqb;0058&rsqb;</number> Mapping Option 1, mapping the Live List Entry <highlight><bold>242</bold></highlight> to a tree structure of branches and leaf nodes accessed by the OPC Browse and Read service. The Live List Entry <highlight><bold>242</bold></highlight> preferably includes Device Identification information needed to identify and communicate with the device that is located in Fieldbus Devices <highlight><bold>280</bold></highlight>. OPC Item <highlight><bold>262</bold></highlight> includes the mapped Device Identification information formatted as an OPC Item per OPC Specifications, and the OPC Item <highlight><bold>262</bold></highlight><highlight><italic>a </italic></highlight>includes the device&apos;s mapped Device Directory information or a reference, formatted as an OPC Item per OPC Specifications; and </paragraph>
<paragraph id="P-0059" lvl="2"><number>&lsqb;0059&rsqb;</number> Mapping Option 2, mapping the Live List Entry <highlight><bold>242</bold></highlight> to a single structured OPC Item accessed by the OPC Value Read service. OPC Item <highlight><bold>262</bold></highlight><highlight><italic>b </italic></highlight>includes Device Identification information and the device&apos;s mapped Device Directory information or a reference to it, formatted and mapped to an OPC Value per OPC Specifications. Accordingly, the Device Directory or a reference to it is included in the value of the Browse Tree item that represents the device, and </paragraph>
<paragraph id="P-0060" lvl="2"><number>&lsqb;0060&rsqb;</number> Mapping Option 3, mapping the Live List Entry <highlight><bold>242</bold></highlight> to a single structured OPC Item Property accessed by the OPC Get Property service. OPC Item <highlight><bold>262</bold></highlight><highlight><italic>c </italic></highlight>includes Device Identification information and the device&apos;s mapped Device Directory information or a reference to it, formatted and mapped to OPC Properties per OPC Specifications. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates an exemplary AP Directory <highlight><bold>244</bold></highlight> in the FF Directory <highlight><bold>240</bold></highlight> and exemplary OPC Items <highlight><bold>264</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>264</bold></highlight><highlight><italic>b </italic></highlight>and <highlight><bold>264</bold></highlight><highlight><italic>c</italic></highlight>, mapped from the AP Directory <highlight><bold>244</bold></highlight>, in the Server Directory <highlight><bold>260</bold></highlight>. In a preferred embodiment, the AP Directory <highlight><bold>244</bold></highlight> can be any one of three AP Directories known as the Function Block Application Process (&ldquo;FBAP&rdquo;) Directory, the System Management Information Base (&ldquo;SMIB&rdquo;) Directory, the Network Management Information Base (&ldquo;NMIB&rdquo;) Directory or any other AP Directory that is written in accordance with the manuals or specifications listed in Appendix I and available from the Fieldbus Foundation. As shown, the AP Directory <highlight><bold>244</bold></highlight> preferably includes Header, Directory Entries (e.g., Composite Object References and, and Composite List References) as defined in the FF Specifications in Appendix I and available from the Fieldbus Foundation. The OPC Items <highlight><bold>264</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>264</bold></highlight><highlight><italic>b </italic></highlight>and <highlight><bold>264</bold></highlight><highlight><italic>c </italic></highlight>correspond to the alternative mapping options described below. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the mapping step <highlight><bold>350</bold></highlight> of the preferred embodiment of the method <highlight><bold>300</bold></highlight> maps the AP Directory <highlight><bold>244</bold></highlight> from the FF Directory <highlight><bold>240</bold></highlight> into the Server Directory <highlight><bold>260</bold></highlight> by three alternative mapping options or steps that structure the OPC Item References. For all mapping options, the OPC Item ID and Path (not shown on figure) are automatically generated. The AP Directory mapping options or steps are: </paragraph>
<paragraph id="P-0063" lvl="2"><number>&lsqb;0063&rsqb;</number> Mapping Option 1, mapping the AP Directory <highlight><bold>244</bold></highlight> to a tree structure of branches and leaf nodes accessed by the OPC Browse and Read service. OPC Item <highlight><bold>264</bold></highlight><highlight><italic>a </italic></highlight>includes AP Directory <highlight><bold>244</bold></highlight> Header information mapped to an OPC Item Header Array, and AP Directory <highlight><bold>244</bold></highlight> Entries mapped to OPC Item References formatted to OPC Specifications; </paragraph>
<paragraph id="P-0064" lvl="2"><number>&lsqb;0064&rsqb;</number> Mapping Option 2, mapping the AP Directory <highlight><bold>244</bold></highlight> to a single structured OPC Item accessed by the OPC Value Read service. OPC Item <highlight><bold>264</bold></highlight><highlight><italic>b </italic></highlight>includes the AP Directory Header and the Directory Entries formatted and mapped to an OPC Value per OPC Specifications; and </paragraph>
<paragraph id="P-0065" lvl="2"><number>&lsqb;0065&rsqb;</number> Mapping Option 3, mapping the AP Directory <highlight><bold>244</bold></highlight> to a single structured OPC Item Property accessed by the OPC Get Property service. OPC Item <highlight><bold>262</bold></highlight><highlight><italic>c </italic></highlight>includes AP Directory Header and the Directory Entries formatted and mapped to OPC Properties per OPC Specifications. The OCP Item Value is preferably set to &ldquo;null.&rdquo;</paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates an exemplary FF Object <highlight><bold>246</bold></highlight> in the FF Directory <highlight><bold>240</bold></highlight> and exemplary OPC Items <highlight><bold>266</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>266</bold></highlight><highlight><italic>b</italic></highlight>, corresponding to the alternative mapping options described below and mapped from the FF Object <highlight><bold>246</bold></highlight>, in the Server Directory <highlight><bold>260</bold></highlight>. In a preferred embodiment, the FF Objects <highlight><bold>246</bold></highlight> are any object written in accordance with the manuals or specifications listed in Appendix I and available from the Fieldbus Foundation. The FF Objects <highlight><bold>246</bold></highlight> preferably include an object value that can be runtime data, an Object DD that optionally contains the DD for the FF object, and an Object CF, that optionally contains the CF for the FF object. The OPC Items <highlight><bold>266</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>266</bold></highlight><highlight><italic>b </italic></highlight>correspond to the alternative mapping options described below. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the mapping step <highlight><bold>350</bold></highlight> of the preferred embodiment of the method <highlight><bold>300</bold></highlight> maps the FF Object <highlight><bold>246</bold></highlight> from the FF Directory <highlight><bold>240</bold></highlight> into the Server Directory <highlight><bold>260</bold></highlight> by two alternative mapping options or steps that structure the OPC Item References. For both mapping options, the OPC Item ID and Path (not shown on figure) are automatically generated. The FF Object mapping options or steps are: </paragraph>
<paragraph id="P-0068" lvl="2"><number>&lsqb;0068&rsqb;</number> Mapping Option 1, mapping the FF Object <highlight><bold>246</bold></highlight> to OPC Item <highlight><bold>266</bold></highlight><highlight><italic>a </italic></highlight>with a tree structure of branches and leaf nodes accessed by the OPC Browse and Read service. OPC Item <highlight><bold>266</bold></highlight><highlight><italic>a </italic></highlight>includes the runtime Object Value of FF Object <highlight><bold>246</bold></highlight> mapped to the OPC Item Value, and FF Object <highlight><bold>246</bold></highlight> DD and CF semantic information mapped to OPC Item reference structures formatted to OPC Specifications. Accordingly, the semantic information for each FF Object <highlight><bold>246</bold></highlight> is represented by sub items. Each of their components may be represented as their sub items in the tree; and </paragraph>
<paragraph id="P-0069" lvl="2"><number>&lsqb;0069&rsqb;</number> Mapping Option 2, mapping the FF Object <highlight><bold>246</bold></highlight> to single structured OPC Item <highlight><bold>266</bold></highlight><highlight><italic>b </italic></highlight>where the runtime Object Value of FF Object <highlight><bold>246</bold></highlight> is mapped to the OPC Item Value accessed by the OPC Value Read Service, and the DD/CF semantic information is mapped to OPC Item Properties accessed by the OPC Get Property service. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>A, and FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>6</bold></highlight>, it is apparent to anyone skilled in the art that an alternate embodiment of IFDSA <highlight><bold>50</bold></highlight> and method <highlight><bold>300</bold></highlight> is to eliminate the FF Directory <highlight><bold>240</bold></highlight> and modify step <highlight><bold>340</bold></highlight> to directly map AP Directories and FF Objects from Fieldbus Devices <highlight><bold>280</bold></highlight> in Server Directory <highlight><bold>261</bold></highlight>. It also apparent to anyone skilled in the art that the Object DD and Object CF in FF Object <highlight><bold>240</bold></highlight> does not need to be read from Fieldbus Devices <highlight><bold>280</bold></highlight> if a local copy of the DD/CF files are available (e.g., hard disk or CD-ROM) and that an alternate embodiment includes reading the Object DD and Object CF from such a local copy. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> IV. IFDSA Single Client Application Software Interface </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 7, a</cross-reference> preferred embodiment of the IFDSA <highlight><bold>50</bold></highlight> provides a single interface for Client Application Software <highlight><bold>180</bold></highlight> access to Fieldbus Devices <highlight><bold>280</bold></highlight> runtime data and semantic information through OPC Client <highlight><bold>210</bold></highlight>. The location of the H1, HSE and other control device semantic information in Server Directory is provided through the Server Browse Function <highlight><bold>270</bold></highlight> in OPC Server <highlight><bold>220</bold></highlight>. FF Server Module <highlight><bold>230</bold></highlight> supports the Server Browse Function <highlight><bold>270</bold></highlight> in OPC Server <highlight><bold>220</bold></highlight> as described in Sections I-III above. The Fieldbus Devices <highlight><bold>280</bold></highlight> runtime data can be provided to Client Application Software <highlight><bold>180</bold></highlight> though the same OPC Client <highlight><bold>210</bold></highlight> interface as the semantic information. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> OPC Client <highlight><bold>210</bold></highlight> can obtain the runtime value data from the Server Data Access Function <highlight><bold>271</bold></highlight> in OPC Server <highlight><bold>220</bold></highlight>. FF Server Module <highlight><bold>230</bold></highlight> accesses Fieldbus Devices <highlight><bold>280</bold></highlight> runtime value data using protocol services defined in the FF Specifications in Appendix I and available from the Fieldbus Foundation. The mapping of Fieldbus Devices <highlight><bold>280</bold></highlight> runtime value data accessed by FF Server Module <highlight><bold>230</bold></highlight> to the Server Data Access Function <highlight><bold>271</bold></highlight> is defined by OPC Specifications available from the OPC Foundation. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> A preferred embodiment of the new IFDSA <highlight><bold>50</bold></highlight> supports migration of existing application software, which is included in Other Plant/Enterprise Application Software <highlight><bold>184</bold></highlight> because existing application software only uses Server Data Access Function <highlight><bold>271</bold></highlight> and this function is unchanged by IFDSA <highlight><bold>50</bold></highlight>. This invention includes the migration and coexistence of existing application software with new Client Application Software <highlight><bold>180</bold></highlight> in the IFDSA <highlight><bold>50</bold></highlight>.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>APPENDIX I</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="70PT" align="left"/>
<colspec colname="2" colwidth="147PT" align="left"/>
<tbody valign="top">
<row>
<entry>FF Document Number</entry>
<entry>Title</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry>FF-103</entry>
<entry>Common File Format</entry>
</row>
<row>
<entry>FF-586</entry>
<entry>High Speed Ethernet Presence</entry>
</row>
<row>
<entry>FF-588</entry>
<entry>High Speed Ethernet Field Device Access (FDA)</entry>
</row>
<row>
<entry></entry>
<entry>Agent</entry>
</row>
<row>
<entry>FF-589</entry>
<entry>High Speed Ethernet System Management</entry>
</row>
<row>
<entry>FF-593</entry>
<entry>High Speed Ethernet Redundancy</entry>
</row>
<row>
<entry>FF-801</entry>
<entry>Network Management</entry>
</row>
<row>
<entry>FF-803</entry>
<entry>High Speed Ethernet Network Management</entry>
</row>
<row>
<entry>FF-804</entry>
<entry>Multivariable Optimization Addendum</entry>
</row>
<row>
<entry>FF-806</entry>
<entry>Data Link Protocol Specification Bridge</entry>
</row>
<row>
<entry></entry>
<entry>Operation Addendum</entry>
</row>
<row>
<entry>FF-821</entry>
<entry>Data Link Services Subset</entry>
</row>
<row>
<entry>FF-822</entry>
<entry>Data Link Protocol</entry>
</row>
<row>
<entry>FF-870</entry>
<entry>Fieldbus Message Specification</entry>
</row>
<row>
<entry>FF-875</entry>
<entry>Fieldbus Access Sublayer</entry>
</row>
<row>
<entry>FF-880</entry>
<entry>System Management</entry>
</row>
<row>
<entry>FF-890</entry>
<entry>Function Block Application Process Part 1</entry>
</row>
<row>
<entry>FF-891</entry>
<entry>Function Block Application Process Part 2</entry>
</row>
<row>
<entry>FF-892</entry>
<entry>Function Block Application Process Part 3</entry>
</row>
<row>
<entry>FF-893</entry>
<entry>Function Block Application Process Part 4</entry>
</row>
<row>
<entry>FF-894</entry>
<entry>Function Block Application Process Part 5</entry>
</row>
<row>
<entry>FF-940</entry>
<entry>Communication Profile</entry>
</row>
<row>
<entry>FF-900</entry>
<entry>Device Description Language</entry>
</row>
<row>
<entry>FF-941</entry>
<entry>High Speed Ethernet Profile</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of dynamically creating a server directory to enable automatic access in an integrated control system, comprising the steps of: 
<claim-text>(a) accessing a live list of fieldbus devices, wherein the live list represents active fieldbus devices in the integrated control system; </claim-text>
<claim-text>(b) building/updating a browse tree structure, wherein the browse tree structure defines a branch and leaf node organization, naming for the fieldbus devices and data from the fieldbus devices; </claim-text>
<claim-text>(c) copying Application Process (&ldquo;AP&rdquo;) directories and Foundation Fieldbus (&ldquo;FF&rdquo;) objects from active fieldbus devices into a FF directory so that the FF directory has object semantics corresponding to the active fieldbus devices; and </claim-text>
<claim-text>(d) mapping the FF Directory into the server directory, wherein the object semantics in the FF directory are mapped into the server directory in a standardized format that is automatically accessible by client application software running on a server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of: 
<claim-text>powering-up the integrated control system prior to executing the accessing step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of: 
<claim-text>(e) determining if there is a change in the live list, wherein a change is indicated when an active fieldbus device is removed or added to the integrated control system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, further comprising the steps of: 
<claim-text>if there is a change determined in the live list, repeating steps (a)-(d); and </claim-text>
<claim-text>if no change is determined in the live list, repeating step (e). </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the server is an OLE for Process Control (&ldquo;OPC&rdquo;) server and the mapping step maps the object semantics to OPC objects. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the mapping step maps, for each fieldbus device, an AP Directory and each FF object contained in the FF directory to OPC Items. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the mapping step maps device identification data, such as Link/Segment ID, Node ID, Device ID, and PD Tag data for each fieldbus device from the FF directory into the server directory. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the mapping step maps an AP Directory for each fieldbus device from the FF Directory into the server directory. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the mapping step maps FF Objects from the FF Directory into the server directory. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the building/updating step builds the browse tree structure with live list device identification information read from the fieldbus devices. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the copying step includes the steps of: 
<claim-text>reading the AP directories and FF objects of the active fieldbus devices in the live list; </claim-text>
<claim-text>placing data from the AP directories and FF objects in a buffer; and </claim-text>
<claim-text>copying the data from the buffer to the FF Directory. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. An integrated control system providing a single interface for client application software to semantic and run-time data for fieldbus devices, comprising: 
<claim-text>a plurality of active fieldbus devices; </claim-text>
<claim-text>a fieldbus network, wherein the fieldbus network connects the active fieldbus devices; and </claim-text>
<claim-text>a server application, in communication with and operatively connected to the active fieldbus devices via the fieldbus network, including: 
<claim-text>a FF server module, wherein the FF server module communicates with the active fieldbus devices through the fieldbus network; </claim-text>
<claim-text>a server browse function, wherein the server browse function is used to locate semantic information for the active fieldbus devices; and </claim-text>
<claim-text>a server data access function, wherein the server data access function provides access to runtime and semantic information for the active fieldbus devices. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The integrated control system of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, further comprising: 
<claim-text>a client application, in communication with and operatively connected to the server application, including: 
<claim-text>client application software; and </claim-text>
<claim-text>a client, in communication with and operatively connected to the client application software and in communication with the server browse function and the server data access function, wherein the client application software accesses the semantic information and the runtime data through the client. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The integrated control system of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the client application software includes one or more of the following: human/machine interface application software; maintenance/diagnostics application software; and configuration application software. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The integrated control system of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the active fieldbus devices include one or more of the following types of devices: H1 devices; HSE devices; or other fieldbus devices. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The integrated control system of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the server application is an OPC server. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The integrated control system of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the client application is an OPC client. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The integrated control system of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the FF server module includes: 
<claim-text>a FF directory, wherein the FF directory includes object semantics of the active fieldbus devices; </claim-text>
<claim-text>a mapping function, wherein the mapping function maps object semantics in the FF directory into a server directory; and </claim-text>
<claim-text>the server directory, wherein the server directory includes object semantics of the fieldbus devices from the FF directory mapped in a format compatible with the client application software and automatically accessible by the client application software through the client. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The integrated control system of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the server directory includes: 
<claim-text>a browse tree structure, wherein the browse tree structure defines a branch and leaf node organization and naming for the fieldbus devices and their objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A method of client application software, in an integrated control system, accessing semantic and runtime data for fieldbus devices through a single interface, comprising the steps of: 
<claim-text>providing a server browse function, wherein the server browse function provides access to semantic data for the active fieldbus devices; </claim-text>
<claim-text>providing a server data access function, wherein the server data access function provides access to runtime data for the active fieldbus devices; </claim-text>
<claim-text>providing a client in communication with the server browse function and the server data access function; and </claim-text>
<claim-text>the client application software accessing the semantic data and the run-time data through the client.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004987A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004987A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004987A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004987A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004987A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004987A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004987A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004987A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004987A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
