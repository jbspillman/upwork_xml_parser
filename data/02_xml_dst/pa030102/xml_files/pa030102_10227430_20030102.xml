<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002378A1-20030102-D00000.TIF SYSTEM "US20030002378A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00001.TIF SYSTEM "US20030002378A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00002.TIF SYSTEM "US20030002378A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00003.TIF SYSTEM "US20030002378A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00004.TIF SYSTEM "US20030002378A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00005.TIF SYSTEM "US20030002378A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00006.TIF SYSTEM "US20030002378A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00007.TIF SYSTEM "US20030002378A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00008.TIF SYSTEM "US20030002378A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00009.TIF SYSTEM "US20030002378A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00010.TIF SYSTEM "US20030002378A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00011.TIF SYSTEM "US20030002378A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00012.TIF SYSTEM "US20030002378A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00013.TIF SYSTEM "US20030002378A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00014.TIF SYSTEM "US20030002378A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00015.TIF SYSTEM "US20030002378A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00016.TIF SYSTEM "US20030002378A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00017.TIF SYSTEM "US20030002378A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00018.TIF SYSTEM "US20030002378A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00019.TIF SYSTEM "US20030002378A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00020.TIF SYSTEM "US20030002378A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00021.TIF SYSTEM "US20030002378A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00022.TIF SYSTEM "US20030002378A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00023.TIF SYSTEM "US20030002378A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00024.TIF SYSTEM "US20030002378A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00025.TIF SYSTEM "US20030002378A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030002378A1-20030102-D00026.TIF SYSTEM "US20030002378A1-20030102-D00026.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002378</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10227430</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020826</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-081898</doc-number>
</priority-application-number>
<filing-date>20010322</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-263029</doc-number>
</priority-application-number>
<filing-date>20010831</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2002-077608</doc-number>
</priority-application-number>
<filing-date>20020320</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G11C008/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>365</class>
<subclass>230030</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Semiconductor memory device and information processing system</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>10227430</doc-number>
<kind-code>A1</kind-code>
<document-date>20020826</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>10036470</doc-number>
<document-date>20020107</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-in-part-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Toshiya</given-name>
<family-name>Uchida</family-name>
</name>
<residence>
<residence-non-us>
<city>Kawasaki</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Hiroyuki</given-name>
<family-name>Kobayashi</family-name>
</name>
<residence>
<residence-non-us>
<city>Kawasaki</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>FUJITSU LIMITED</organization-name>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>ARENT FOX KINTNER PLOTKIN &amp; KAHN</name-1>
<name-2></name-2>
<address>
<address-1>1050 CONNECTICUT AVENUE, N.W.</address-1>
<address-2>SUITE 400</address-2>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20036</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A semiconductor memory device capable of shortening the command supply interval during random access and thus improving the transfer rate of input/output data. In response to a write command, identical data is written into multiple memory banks having identical addresses assigned thereto. At this time, a bank selection circuit sequentially selects the memory banks to initiate write operations in a staggered manner. Since the write operation can be started before all memory banks become idle, the interval between the supply of read command and the supply of write command can be shortened. Consequently, the number of commands supplied per given time can be increased, and since data signal can be input/output more frequently than in conventional devices, the data transfer rate (data bus occupancy) improves. As a result, the performance of a system to which the semiconductor memory device is mounted can be enhanced. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> (1) Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to a semiconductor memory device and an information processing system, and more particularly, to techniques of shortening the operation cycle time of a semiconductor memory device and an information processing system. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> (2) Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> A semiconductor memory device and a control device for controlling the memory device exchange data with each other in blocks of bits whose number is determined, for example, by an application such as an OS (Operating System). </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In the case of an application wherein the number of bits transferred as one block is small, increase in the quantity of read/write data entails a correspondingly large number of command entries. Accordingly, auto-precharge type DRAM (Dynamic Random Access Memory) which performs read operation and precharge operation at the same time in response to a single entry of command, SRAM (Static RAM) which requires no precharge operation, etc. are useful for the purpose. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> This will be explained with reference to <cross-reference target="DRAWINGS">FIGS. 22 and 23</cross-reference>. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> FIGS. <highlight><bold>22</bold></highlight>(A), <highlight><bold>22</bold></highlight>(B) and <highlight><bold>22</bold></highlight>(C) illustrate the operation of a DRAM with no auto-precharge function, that is, a non-auto-precharge type DRAM wherein the number of data bits read out at a time is two. In the case of the non-auto-precharge type DRAM, a precharge command (PRE<highlight><bold>1</bold></highlight>-PRE<highlight><bold>3</bold></highlight>) needs to be entered following the access in order to execute precharge operation, as shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>(B). In the illustrated example, read commands (RD<highlight><bold>1</bold></highlight>-RD<highlight><bold>3</bold></highlight>) are input respectively at the leading edges of the zeroth, second and fourth basic clock pulses (<cross-reference target="DRAWINGS">FIG. 22</cross-reference>(A)), and precharge commands (PRE<highlight><bold>1</bold></highlight>-PRE<highlight><bold>3</bold></highlight>) are input respectively at the leading edges of the first, third and fifth clock pulses. As a result of the entry of the read commands, 2-bit blocks of data (Q<highlight><bold>11</bold></highlight>, Q<highlight><bold>12</bold></highlight>; Q<highlight><bold>21</bold></highlight>, Q<highlight><bold>22</bold></highlight>; Q<highlight><bold>31</bold></highlight>, Q<highlight><bold>32</bold></highlight>) are output from a DATA output terminal at the leading edges of the first, third and fifth clock pulses, respectively, as shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>(C). </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> FIGS. <highlight><bold>23</bold></highlight>(A), <highlight><bold>23</bold></highlight>(B) and <highlight><bold>23</bold></highlight>(C) illustrate the operation of an auto-precharge type DRAM capable of automatic precharge operation wherein the number of data bits read out at a time is two. As shown in the figures, in the case of the auto-precharge type DRAM, no precharge command needs to be entered, so that the read commands (RD<highlight><bold>1</bold></highlight>-RD<highlight><bold>3</bold></highlight>) can be continuously input, as seen from <cross-reference target="DRAWINGS">FIG. 23</cross-reference>(B). Also, since the interval between commands can be shortened, the interval between data (Q<highlight><bold>11</bold></highlight>, Q<highlight><bold>12</bold></highlight>, Q<highlight><bold>21</bold></highlight>, Q<highlight><bold>22</bold></highlight>, Q<highlight><bold>31</bold></highlight>, Q<highlight><bold>32</bold></highlight>) output from the DATA output terminal is shorter than in the case of <cross-reference target="DRAWINGS">FIG. 22</cross-reference>, as seen from <cross-reference target="DRAWINGS">FIG. 23</cross-reference>(C). Compared with the case shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>, therefore, all data can be read out in a shorter period of time. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> As explained above, where the number of data bits exchanged between the semiconductor memory device and the control device therefor is small, a device capable of automatic precharge operation, like the auto-precharge type DRAM, is useful because it ensures relatively high density of commands and as a consequence, higher data access density. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The foregoing explains the case where the number of data bits exchanged between the semiconductor memory device and the control device therefor is small; in the following will be considered a case where the number of bits is large. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> FIGS. <highlight><bold>24</bold></highlight>(A), <highlight><bold>24</bold></highlight>(B) and <highlight><bold>24</bold></highlight>(C) illustrate the operation of an auto-precharge type DRAM wherein the number of data bits exchanged with the control device is eight. In the illustrated example, a read command RD<highlight><bold>1</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 24</cross-reference>(B)) is input at the leading edge of the zeroth basic clock pulse shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>(A), and as a result, readout data is output from the DATA output terminal, as shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>(C). </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> FIGS. <highlight><bold>25</bold></highlight>(A), <highlight><bold>25</bold></highlight>(B) and <highlight><bold>25</bold></highlight>(C) illustrate the operation of an auto-precharge type DRAM wherein the number of data bits exchanged with the control device is eight and the number of data bits read out at a time is two. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> As shown in the figures, in the case where a DRAM from which two bits of data can be read out at a time is applied to a system in which the number of data bits exchanged with the control device is eight, four RD commands (RD<highlight><bold>1</bold></highlight>-RD<highlight><bold>4</bold></highlight>) need to be input. Since, as a result, the interval between the RD commands becomes shorter, an inconvenience arises in that during the access other devices are unable to access the DRAM. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> There have also been proposed semiconductor memory devices in Unexamined Japanese Patent Publications (KOKAI) Nos. 2-94194 and 7-192458, wherein at the time of write operation, identical data is written into a plurality of memory banks and at the time of read operation, data is sequentially read out from different memory banks, to thereby shorten the random access time during the read operation. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> illustrates the operation of a clock synchronization type, among semiconductor memory devices of this type. The semiconductor memory device has four memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> for holding identical data. <cross-reference target="DRAWINGS">FIG. 26</cross-reference> exemplifies a case where a write cycle intervenes between read cycles. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Read commands RD<highlight><bold>1</bold></highlight> to RD<highlight><bold>6</bold></highlight> are sequentially supplied in synchronism with a clock signal CLK ((a) in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>). In response to the read commands RD<highlight><bold>1</bold></highlight> to RD<highlight><bold>6</bold></highlight>, the four memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> operate in turn ((b) in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>), so that readout data Q<highlight><bold>1</bold></highlight> to Q<highlight><bold>6</bold></highlight> are output in succession ((c) in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>). In the illustrated example, the read operation period of each of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> is four clock cycles, but since the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> operate in parallel, the read cycle corresponds to one clock cycle. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Following the read command RD<highlight><bold>6</bold></highlight>, a write command WR<highlight><bold>7</bold></highlight> is supplied ((d) in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>). In response to the write command WR<highlight><bold>7</bold></highlight>, all of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> perform write operation at the same time. Accordingly, the write command WR<highlight><bold>7</bold></highlight> is supplied after all of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> have become idle. In the illustrated example, the write command WR<highlight><bold>7</bold></highlight> needs to be supplied after completion of the operation of the memory bank BANK<highlight><bold>1</bold></highlight>. Consequently, a READ-WRITE interval (timing specification) from the supply of the read command RD<highlight><bold>6</bold></highlight> to the supply of the write command WR<highlight><bold>7</bold></highlight> is four clock cycles equal to the operation period of the memory bank BANK<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In response to the write command WR<highlight><bold>7</bold></highlight>, the four memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> perform the write operation at the same time, and as a result, identical write data D<highlight><bold>7</bold></highlight> is written into the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> ((e) in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>). Since the identical write data D<highlight><bold>7</bold></highlight> is written in the four memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> at the same time, the write cycle is equal to four clock cycles corresponding to the write operation period of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Subsequently, read commands RD<highlight><bold>8</bold></highlight> to RD<highlight><bold>11</bold></highlight> are sequentially supplied ((f) in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>). The four memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> operate in turn ((g) in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>) and readout data Q<highlight><bold>8</bold></highlight> to Q<highlight><bold>11</bold></highlight> are output in succession ((h) in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>) in the same manner as described above. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Conventionally, an optimum device must be selected in accordance with the number of data bits exchanged between the semiconductor memory device and the control device therefor, as seen from FIGS. <highlight><bold>22</bold></highlight> to <highlight><bold>25</bold></highlight>. In other words, there was no conventional device that can cope with all probable numbers of bits. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Also, as shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>, all of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> perform write operation at the same time. Accordingly, in cases where a write cycle intervenes between read cycles, the write command WR<highlight><bold>7</bold></highlight> needs to be supplied after the read operations of all memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> are completed. As a result, the supply of the write command WR<highlight><bold>7</bold></highlight> must be deferred for four clock cycles after the supply of the read command RD<highlight><bold>6</bold></highlight>. Further, the interval (READ-READ command interval) required from the read command RD<highlight><bold>6</bold></highlight> to the next read command RD<highlight><bold>8</bold></highlight> corresponds to the sum of the operation period of the memory bank BANK<highlight><bold>1</bold></highlight> which is the last to perform the read operation and the write operation period. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> As a consequence, especially in cases where read cycles and write cycles take place randomly, a problem arises in that the data transfer rate (data bus occupancy) lowers. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The present invention was created in view of the above circumstances, and an object thereof is to provide a semiconductor memory device which enables optimum operation regardless of the number of data bits exchanged with a control device for controlling the semiconductor memory device, and an information processing system including such a semiconductor memory device. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Another object of the present invention is to shorten the operation cycle time of the semiconductor memory device, in particular, to shorten a command supply interval during random access, thereby enhancing the transfer rate of input/output data. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> To achieve the above objects, there is provided an information processing system including a semiconductor memory device having n (n&gt;1) banks, and a control device for controlling the semiconductor memory device. The semiconductor memory device comprises an address input circuit for receiving an input address, a readout circuit for sequentially reading, from m (&lE;n) banks, data corresponding to one address input via the address input circuit, and a data output circuit for outputting the data read by the readout circuit from the m banks to outside as collective data. The control device comprises a control circuit for controlling the semiconductor memory device in accordance with a cycle time determined by a read cycle of the readout circuit, and an access inhibit circuit for inhibiting access to a predetermined bank in accordance with the bank from which data is being read by the readout circuit. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The above and other objects, features and advantages of the present invention will become apparent from the following description when taken in conjunction with the accompanying drawings which illustrate preferred embodiments of the present invention by way of example.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram illustrating the principle of operation according to the present invention; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> FIGS. <highlight><bold>2</bold></highlight>(A), <highlight><bold>2</bold></highlight>(B) and <highlight><bold>2</bold></highlight>(C) are a timing chart outlining the operation in accordance with the principle illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a diagram showing an exemplary configuration according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram showing in detail an exemplary configuration of a semiconductor memory device appearing in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>; </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram showing in detail an exemplary configuration of a control section appearing in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>; </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram showing in detail exemplary configurations of a bank activation control circuit, a timing circuit and an ADD latch, all appearing in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>; </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a circuit diagram showing in detail an exemplary configuration of a DFF element appearing in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a timing chart illustrating an operation according to the embodiment shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a timing chart also illustrating the operation according to the embodiment shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>; </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a block diagram showing a second embodiment; </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a block diagram showing details of a bank selection circuit appearing in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>; </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a timing chart illustrating an operation according to the second embodiment; </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a block diagram showing a third embodiment; </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a timing chart illustrating an operation according to the third embodiment; </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a block diagram illustrating a fourth embodiment; </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a block diagram showing details of write data registers appearing in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>; </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a diagram illustrating the relationship between address signals and memory blocks; </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a timing chart illustrating operation according to the fourth embodiment; </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a diagram illustrating the relationship between the address signal P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> and the blocks according to the fourth embodiment; </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a block diagram illustrating a fifth embodiment; </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> FIGS. <highlight><bold>21</bold></highlight>(A), <highlight><bold>21</bold></highlight>(B) is a diagram illustrating the relationship between the address signal P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> and the blocks according to the fifth embodiment; </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> FIGS. <highlight><bold>22</bold></highlight>(A), <highlight><bold>22</bold></highlight>(B) and <highlight><bold>22</bold></highlight>(C) are a timing chart illustrating an operation of a conventional semiconductor memory device; </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> FIGS. <highlight><bold>23</bold></highlight>(A), <highlight><bold>23</bold></highlight>(B) and <highlight><bold>23</bold></highlight>(C) are a timing chart illustrating an operation of another conventional semiconductor memory device; </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> FIGS. <highlight><bold>24</bold></highlight>(A), <highlight><bold>24</bold></highlight>(B) and <highlight><bold>24</bold></highlight>(C) are a timing chart illustrating an operation of still another conventional semiconductor memory device; </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> FIGS. <highlight><bold>25</bold></highlight>(A), <highlight><bold>25</bold></highlight>(B) and <highlight><bold>25</bold></highlight>(C) are a timing chart illustrating an operation of yet another conventional semiconductor memory device; and </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a timing chart illustrating an operation of a conventional semiconductor memory device.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Embodiments of the present invention will be hereinafter described with reference to the drawings. <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates the principle of operation according to the present invention. As shown in the figure, a semiconductor memory device according to the present invention comprises an address input circuit <highlight><bold>1</bold></highlight>, a readout circuit <highlight><bold>2</bold></highlight>, a data output circuit <highlight><bold>3</bold></highlight>, an output data quantity setting circuit <highlight><bold>4</bold></highlight>, and banks <highlight><bold>5</bold></highlight>-<highlight><bold>1</bold></highlight> to <highlight><bold>5</bold></highlight>-n. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The address input circuit <highlight><bold>1</bold></highlight> receives an address input thereto for access from outside. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The readout circuit <highlight><bold>2</bold></highlight> sequentially reads, from m (&lE;n) banks, data corresponding to one address input via the address input circuit <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The data output circuit <highlight><bold>3</bold></highlight> outputs the data read by the readout circuit <highlight><bold>2</bold></highlight> from the m banks to outside as collective data. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The output data quantity setting circuit <highlight><bold>4</bold></highlight> sets the quantity of data to be output from the data output circuit <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Operation in accordance with the illustrated principle will be now described. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> At the start of operation of the semiconductor memory device, for example, the output data quantity setting circuit <highlight><bold>4</bold></highlight> receives, as a control signal from a control device, not shown, information for specifying a quantity of data to be output from the data output circuit <highlight><bold>3</bold></highlight> as collective data, and sets the output data quantity in accordance with the received information. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> With the data quantity to be output from the data output circuit <highlight><bold>3</bold></highlight> as collective data set in this manner, an address is input to the address input circuit <highlight><bold>1</bold></highlight> from outside, whereupon the address input circuit <highlight><bold>1</bold></highlight> supplies the input address to the readout circuit <highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> If the data quantity set by the output data quantity setting circuit <highlight><bold>4</bold></highlight> is larger than a quantity of data that can be read at a time from a single bank, the readout circuit <highlight><bold>2</bold></highlight> first selects a bank corresponding to the address input from the address input circuit <highlight><bold>1</bold></highlight>, then reads data from the selected bank and outputs the data to the data output circuit <highlight><bold>3</bold></highlight>. Subsequently, the readout circuit <highlight><bold>2</bold></highlight> performs bank switching and acquires other data from the same address of a different bank newly switched to. Operation like this is repeated until the quantity of readout data reaches the output data quantity specified by the output data quantity setting circuit <highlight><bold>4</bold></highlight>. In this case, the readout circuit <highlight><bold>2</bold></highlight> reads data from the banks at predetermined intervals of time so that the data read from different banks may not be congested. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> The data output circuit <highlight><bold>3</bold></highlight> sequentially acquires the data read by the readout circuit <highlight><bold>2</bold></highlight> from the banks <highlight><bold>5</bold></highlight>-<highlight><bold>1</bold></highlight> to <highlight><bold>5</bold></highlight>-n, and outputs the data successively to outside. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Thus, if the data quantity to be output from the data output circuit <highlight><bold>3</bold></highlight> as collective data is equal to or smaller than the quantity of data that can be read at a time from a single bank, the readout circuit <highlight><bold>2</bold></highlight> reads data from one bank and then terminates the read operation; on the other hand, if the former is larger than the latter, the readout circuit <highlight><bold>2</bold></highlight> sequentially reads, from different banks, data corresponding to one address supplied from the address input circuit <highlight><bold>1</bold></highlight> while automatically switching the banks <highlight><bold>5</bold></highlight>-<highlight><bold>1</bold></highlight> to <highlight><bold>5</bold></highlight>-n. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Consequently, the quantity of data read out by a single addressing can be varied in accordance with the quantity of data (collective data) which is exchanged with the control device and which is determined by an application in use, making it possible to provide a semiconductor memory device which serves a diversity of uses. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> FIGS. <highlight><bold>2</bold></highlight>(A), <highlight><bold>2</bold></highlight>(B) and <highlight><bold>2</bold></highlight>(C) illustrate an example of operation in the case where the number of banks is four (n&equals;4), the number of data bits read from a single bank at a time is two, and the number of data bits output from the data output circuit <highlight><bold>3</bold></highlight> as collective data is set to eight. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> In the illustrated example, a read command RD<highlight><bold>1</bold></highlight> is input in synchronism with the leading edge of the zeroth basic clock pulse shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>(A). In this case, since the number of data bits read from a single bank at a time is two, the readout circuit <highlight><bold>2</bold></highlight> switches the four banks in turn, sequentially reads, from the individual banks, data corresponding to one address input from the address input circuit <highlight><bold>1</bold></highlight>, and supplies the readout data to the data output circuit <highlight><bold>3</bold></highlight>. The data output circuit <highlight><bold>3</bold></highlight> outputs the data (Q<highlight><bold>11</bold></highlight>, Q<highlight><bold>12</bold></highlight>, . . . , Q<highlight><bold>41</bold></highlight>, Q<highlight><bold>42</bold></highlight>), which the circuit <highlight><bold>3</bold></highlight> has received separately over four times from the readout circuit <highlight><bold>2</bold></highlight>, to outside as collective data, as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>(C). </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Thus, compared with the conventional semiconductor memory device in which the read command needs to be input four times as indicated by the broken lines in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>(B), a single entry of read command suffices. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> In the above example, the readout circuit <highlight><bold>2</bold></highlight> makes reference to the data output circuit <highlight><bold>3</bold></highlight> to detect the data quantity set by the output data quantity setting circuit <highlight><bold>4</bold></highlight>, but the readout circuit may alternatively detect the set data quantity by directly referring to the output data quantity setting circuit <highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> An embodiment of the present invention will be now described. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows an exemplary configuration of an information processing system according to the embodiment of the present invention, which embodiment corresponds to claims <highlight><bold>1</bold></highlight> to <highlight><bold>4</bold></highlight>. As shown in the figure, the information processing system of the present invention comprises a CPU (Central Processing Unit) <highlight><bold>10</bold></highlight>, a control device <highlight><bold>20</bold></highlight>, a semiconductor memory device <highlight><bold>30</bold></highlight>, and a bus <highlight><bold>40</bold></highlight>. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The CPU <highlight><bold>10</bold></highlight> executes various programs etc. stored in the semiconductor memory device <highlight><bold>30</bold></highlight>, to control the individual parts of the system and to perform various operations. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> The control device <highlight><bold>20</bold></highlight> performs control operation relating to the burst length setting, refreshing, etc. of the semiconductor memory device <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> The semiconductor memory device <highlight><bold>30</bold></highlight> operates under the control of the control device <highlight><bold>20</bold></highlight> to store data supplied from the CPU <highlight><bold>10</bold></highlight> and to supply the stored data read out therefrom to the CPU <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The bus <highlight><bold>40</bold></highlight> transmits data from the CPU <highlight><bold>10</bold></highlight> to the semiconductor memory device <highlight><bold>30</bold></highlight> and vice versa. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows in detail an exemplary configuration of the semiconductor memory device <highlight><bold>30</bold></highlight> appearing in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. As shown in the figure, the semiconductor memory device <highlight><bold>30</bold></highlight> comprises a control section <highlight><bold>50</bold></highlight>, a bank A <highlight><bold>60</bold></highlight>, and a bank B <highlight><bold>70</bold></highlight>. The bank A <highlight><bold>60</bold></highlight> is constituted by a cell <highlight><bold>61</bold></highlight>, a column decoder <highlight><bold>62</bold></highlight>, a row decoder <highlight><bold>63</bold></highlight>, an SA (Sense Amplifier) <highlight><bold>64</bold></highlight>, and an I/O (Input/Output) circuit <highlight><bold>65</bold></highlight>. Similarly, the bank B <highlight><bold>70</bold></highlight> is constituted by a cell <highlight><bold>71</bold></highlight>, a column decoder <highlight><bold>72</bold></highlight>, a row decoder <highlight><bold>73</bold></highlight>, an SA <highlight><bold>74</bold></highlight>, and an I/O circuit <highlight><bold>75</bold></highlight>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The control section <highlight><bold>50</bold></highlight> is input with a CLK signal, CMD signal, ADD signal, DATA signal, etc. and supplies the signals to the respective parts of the device. Also, when transferring data, the control section selects a predetermined bank to read or write data from or into the selected bank. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> The cell <highlight><bold>61</bold></highlight> of the bank A <highlight><bold>60</bold></highlight> comprises a group of memory elements arranged in matrix form and stores input data. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The row decoder <highlight><bold>63</bold></highlight> specifies a certain row of the cell <highlight><bold>61</bold></highlight> in accordance with a row address when inputting/outputting data. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> The column decoder <highlight><bold>62</bold></highlight> specifies a certain column of the cell <highlight><bold>61</bold></highlight> in accordance with a column address when inputting/outputting data. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> The SA <highlight><bold>64</bold></highlight> amplifies a signal read from the cell <highlight><bold>61</bold></highlight> with a predetermined gain, to convert the signal level to a digital signal level. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The I/O circuit <highlight><bold>65</bold></highlight> performs control operation relating to the input/output of data. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> The bank B <highlight><bold>70</bold></highlight> is configured in the same manner, and therefore, description thereof is omitted. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows in detail an exemplary configuration of the control section <highlight><bold>50</bold></highlight> appearing in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> A CLK input terminal <highlight><bold>80</bold></highlight> is input with the CLK signal from outside. A CMD input terminal <highlight><bold>81</bold></highlight> is input with the CMD signal from outside, and an ADD input terminal <highlight><bold>82</bold></highlight> is input with the ADD signal from outside. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> A CLK input circuit <highlight><bold>83</bold></highlight> shapes the waveform of the CLK signal input from the CLK input terminal <highlight><bold>80</bold></highlight>, and then supplies the shaped CLK signal to a CMD input circuit <highlight><bold>84</bold></highlight>, an ADD input circuit <highlight><bold>85</bold></highlight> and a bank activation control circuit <highlight><bold>88</bold></highlight>. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> The CMD input circuit <highlight><bold>84</bold></highlight> shapes the waveform of the CMD signal input from the CMD input terminal <highlight><bold>81</bold></highlight>, and then supplies the shaped CMD signal to a CMD decoder <highlight><bold>86</bold></highlight>. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> The ADD input circuit <highlight><bold>85</bold></highlight> shapes the waveform of the ADD signal input from the ADD input terminal <highlight><bold>82</bold></highlight>, and then supplies the shaped ADD signal to a burst length determination circuit <highlight><bold>87</bold></highlight>. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> The CMD decoder <highlight><bold>86</bold></highlight> decodes the CMD signal supplied from the CMD input circuit <highlight><bold>84</bold></highlight>, and supplies the obtained RD or WR command to the bank activation control circuit <highlight><bold>88</bold></highlight> and an ADD latch <highlight><bold>90</bold></highlight>. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> At the start of operation of the device, for example, the burst length determination circuit <highlight><bold>87</bold></highlight> is supplied with a command to set the burst length, whereupon the circuit <highlight><bold>87</bold></highlight> analyzes the command to determine the burst length requested to be set, and notifies the bank activation control circuit <highlight><bold>88</bold></highlight> of the determined burst length. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> The bank activation control circuit <highlight><bold>88</bold></highlight>, a timing circuit <highlight><bold>89</bold></highlight> and the ADD latch <highlight><bold>90</bold></highlight>, which are provided for each of the banks A <highlight><bold>60</bold></highlight> and B <highlight><bold>70</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, supply an internal address IADD to the bank associated therewith and control the data read operation. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> The bank activation control circuit <highlight><bold>88</bold></highlight> controls the timing circuit <highlight><bold>89</bold></highlight> in accordance with the set burst length, to control the operation of reading data from the corresponding bank. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> The ADD latch <highlight><bold>90</bold></highlight> latches the ADD signal output from the ADD input circuit <highlight><bold>85</bold></highlight>, in synchronism with the RD command output from the CMD decoder <highlight><bold>86</bold></highlight>. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> The timing circuit <highlight><bold>89</bold></highlight> supplies the ADD signal latched by the ADD latch <highlight><bold>90</bold></highlight>, to the corresponding bank as the internal address IADD at the timing as controlled by the bank activation control circuit <highlight><bold>88</bold></highlight>. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows in detail exemplary configurations of the bank activation control circuit <highlight><bold>88</bold></highlight>, the timing circuit <highlight><bold>89</bold></highlight> and the ADD latch <highlight><bold>90</bold></highlight>. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> As shown in the figure, the bank activation control circuit <highlight><bold>88</bold></highlight> comprises inverters <highlight><bold>100</bold></highlight> to <highlight><bold>102</bold></highlight>, NOR elements <highlight><bold>103</bold></highlight> and <highlight><bold>104</bold></highlight>, a NAND element <highlight><bold>105</bold></highlight>, DFF (Data Flip-Flop) elements <highlight><bold>106</bold></highlight> to <highlight><bold>109</bold></highlight>, and CMOS (Complementary Metal-Oxide Semiconductor) switches <highlight><bold>110</bold></highlight> and <highlight><bold>111</bold></highlight>. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> The inverter <highlight><bold>100</bold></highlight> inverts the RD/WR signal input from the CMD decoder <highlight><bold>86</bold></highlight>, and supplies the inverted signal to the NOR element <highlight><bold>103</bold></highlight>. The NOR element <highlight><bold>104</bold></highlight> supplies the NOR element <highlight><bold>103</bold></highlight> with the result of inversion of a logical sum of the ADD signal input from the ADD input circuit <highlight><bold>85</bold></highlight> for specifying a bank and a BL8 signal (signal which turns to the &ldquo;H&rdquo; state when the burst length is set to &ldquo;8&rdquo;) supplied from the burst length determination circuit <highlight><bold>87</bold></highlight>. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> The NOR element <highlight><bold>103</bold></highlight> supplies the DFF element <highlight><bold>106</bold></highlight> with the result of inversion of a logical sum of the outputs from the inverter <highlight><bold>100</bold></highlight> and the NOR element <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> The DFF elements <highlight><bold>106</bold></highlight> to <highlight><bold>108</bold></highlight> sequentially delay the output of the NOR element <highlight><bold>103</bold></highlight> in synchronism with the trailing edge of the CLK signal. The output of the DFF element <highlight><bold>108</bold></highlight> is supplied to the CMOS switch <highlight><bold>110</bold></highlight>. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> The DFF element <highlight><bold>109</bold></highlight> latches the output of the NOR element <highlight><bold>103</bold></highlight> in synchronism with the trailing edge of the CLK signal, and supplies the latched signal to the CMOS switch <highlight><bold>111</bold></highlight>. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> The inverter <highlight><bold>101</bold></highlight> inverts the ADD signal and outputs the inverted signal to the NAND element <highlight><bold>105</bold></highlight>, which then supplies the inverter <highlight><bold>102</bold></highlight> and the CMOS switches <highlight><bold>110</bold></highlight> and <highlight><bold>111</bold></highlight> with the result of inversion of a logical product of the output from the inverter <highlight><bold>101</bold></highlight> and the BL8 signal. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The CMOS switch <highlight><bold>110</bold></highlight> turns ON when the output of the NAND element <highlight><bold>105</bold></highlight> is in the &ldquo;L&rdquo; state, to supply the output of the DFF element <highlight><bold>108</bold></highlight> to the timing circuit <highlight><bold>89</bold></highlight> as a BACT signal, and turns OFF when the output of the NAND element <highlight><bold>105</bold></highlight> is in the &ldquo;H&rdquo; state. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> The CMOS switch <highlight><bold>111</bold></highlight> turns ON when the output of the NAND element <highlight><bold>105</bold></highlight> is in the &ldquo;H&rdquo; state, to supply the output of the DFF element <highlight><bold>109</bold></highlight> to the timing circuit <highlight><bold>89</bold></highlight> as the BACT signal, and turns OFF when the output of the NAND element <highlight><bold>105</bold></highlight> is in the &ldquo;L&rdquo; state. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> Accordingly, when the output of the NAND element <highlight><bold>105</bold></highlight> turns to &ldquo;H&rdquo;, the CMOS switch <highlight><bold>111</bold></highlight> turns ON and the output of the DFF element <highlight><bold>109</bold></highlight> is supplied to the timing circuit <highlight><bold>89</bold></highlight> as the BACT signal; when the output of the NAND element <highlight><bold>105</bold></highlight> turns to &ldquo;L&rdquo;, the CMOS switch <highlight><bold>110</bold></highlight> turns ON and the output of the DFF element <highlight><bold>108</bold></highlight> is supplied to the timing circuit <highlight><bold>89</bold></highlight> as the BACT signal. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> The ADD latch <highlight><bold>90</bold></highlight> is constituted by an inverter <highlight><bold>130</bold></highlight> and a DFF element <highlight><bold>131</bold></highlight>. The inverter <highlight><bold>130</bold></highlight> inverts the RD/WR signal and outputs the inverted signal to the DFF element <highlight><bold>131</bold></highlight>, which then latches the ADD signal in synchronism with the trailing edge of the output from the inverter <highlight><bold>130</bold></highlight>, that is, the leading edge of the RD/WR signal, and outputs the latched signal as a BADD signal. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> The timing circuit <highlight><bold>89</bold></highlight> comprises an inverter <highlight><bold>120</bold></highlight> and a DFF element <highlight><bold>121</bold></highlight>. The inverter <highlight><bold>120</bold></highlight> inverts the BACT signal which is the output of the CMOS switch <highlight><bold>110</bold></highlight>. The DFF element <highlight><bold>121</bold></highlight> latches the BADD signal in synchronism with the trailing edge of the output from the inverter <highlight><bold>120</bold></highlight>, that is, the leading edge of the BACT signal, and outputs the latched signal as the internal address IADD signal to the bank A <highlight><bold>60</bold></highlight> or the bank B <highlight><bold>70</bold></highlight>. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows in detail an exemplary configuration of the DFF elements <highlight><bold>106</bold></highlight> to <highlight><bold>109</bold></highlight> appearing in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. As shown in the figure, each DFF element comprises inverters <highlight><bold>140</bold></highlight> to <highlight><bold>144</bold></highlight>, and CMOS switches <highlight><bold>145</bold></highlight> and <highlight><bold>146</bold></highlight>. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> The inverter <highlight><bold>140</bold></highlight> inverts the CLK signal and supplies the inverted signal to the CMOS switches <highlight><bold>145</bold></highlight> and <highlight><bold>146</bold></highlight>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> When the clock signal turns to &ldquo;H&rdquo;, the CMOS switch <highlight><bold>145</bold></highlight> turns ON and supplies the input signal to the inverter <highlight><bold>141</bold></highlight>. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> When the clock signal turns to &ldquo;L&rdquo;, the CMOS switch <highlight><bold>146</bold></highlight> turns ON and supplies the output of the inverter <highlight><bold>141</bold></highlight> to the inverter <highlight><bold>143</bold></highlight>. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> The inverter <highlight><bold>141</bold></highlight> inverts the output of the CMOS switch <highlight><bold>145</bold></highlight> and supplies the inverted output to the CMOS switch <highlight><bold>146</bold></highlight>. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> The inverter <highlight><bold>142</bold></highlight> inverts the output of the inverter <highlight><bold>141</bold></highlight> and feeds the inverted output back to the input of the inverter <highlight><bold>141</bold></highlight>. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> The inverter <highlight><bold>143</bold></highlight> inverts the output of the CMOS switch <highlight><bold>146</bold></highlight> and outputs the resulting signal. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> The inverter <highlight><bold>144</bold></highlight> inverts the output of the inverter <highlight><bold>143</bold></highlight> and feeds the inverted output back to the input of the inverter <highlight><bold>143</bold></highlight>. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> Operation of the above embodiment will be now described. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> When the power supply to the information processing system shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is started, the CPU <highlight><bold>10</bold></highlight> notifies the control device <highlight><bold>20</bold></highlight> of the number of data bits to be exchanged with the semiconductor memory device <highlight><bold>30</bold></highlight> in accordance with an application to be executed. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> In accordance with the number of data bits notified from the CPU <highlight><bold>10</bold></highlight>, the control device <highlight><bold>20</bold></highlight> sets a burst length for the semiconductor memory device <highlight><bold>30</bold></highlight>. For example, in the case where the data bit length that can be read at a time from the bank A <highlight><bold>60</bold></highlight> or B <highlight><bold>70</bold></highlight> of the semiconductor memory device <highlight><bold>30</bold></highlight> is four and &ldquo;8 bits&rdquo; is set as the burst length, the control device <highlight><bold>20</bold></highlight> inputs a command for setting the burst length to the CMD input terminal <highlight><bold>81</bold></highlight> of the semiconductor memory device <highlight><bold>30</bold></highlight>, as well as data indicative of the burst length &ldquo;8&rdquo; to the ADD input terminal <highlight><bold>82</bold></highlight>. Although conventional semiconductor memory devices do not permit the burst length to be set to a length exceeding the number of data bits that can be read at a time from a bank thereof, such burst length setting can be performed in this embodiment. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> As a result, the CMD decoder <highlight><bold>86</bold></highlight> detects the input of the command for setting the burst length, and requests the burst length determination circuit <highlight><bold>87</bold></highlight> to set the burst length. The burst length determination circuit <highlight><bold>87</bold></highlight> decodes the data supplied from the ADD input circuit <highlight><bold>85</bold></highlight> and recognizes that the burst length should be set to &ldquo;8&rdquo;. Then, the circuit <highlight><bold>87</bold></highlight> turns the BL8 signal (signal which is set in the &ldquo;H&rdquo; state when the burst length is &ldquo;8&rdquo;) to the &ldquo;H&rdquo; state, the BL8 signal being supplied to the bank activation control circuits <highlight><bold>88</bold></highlight> associated with the respective banks A <highlight><bold>60</bold></highlight> and B <highlight><bold>70</bold></highlight>. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> While in this state, if a read command to read data from the bank A <highlight><bold>60</bold></highlight> is input, the bank activation control circuit <highlight><bold>88</bold></highlight> of the bank A <highlight><bold>60</bold></highlight> operates in the manner described below with reference to <cross-reference target="DRAWINGS">FIGS. 8 and 9</cross-reference>. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> Let it be assumed that an RD command is input in synchronism with the leading edge of the zeroth clock pulse, as shown in (B) of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, and that an address ((C) in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>) selecting the bank A <highlight><bold>60</bold></highlight> is supplied from the ADD input circuit <highlight><bold>85</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> The DFF elements <highlight><bold>106</bold></highlight> to <highlight><bold>108</bold></highlight> sequentially delay the output signal of the NOR element <highlight><bold>103</bold></highlight> in synchronism with the trailing edge of the CLK signal, and provide output signals N<highlight><bold>1</bold></highlight> to N<highlight><bold>3</bold></highlight>, respectively ((H)-(J) in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>). </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> The DFF element <highlight><bold>109</bold></highlight> latches the output signal of the NOR element <highlight><bold>103</bold></highlight> in synchronism with the trailing edge of the CLK signal, and provides an output signal N<highlight><bold>4</bold></highlight> ((K) in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>). </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> At this time, the output of the NAND element <highlight><bold>105</bold></highlight> in the bank activation control circuit <highlight><bold>88</bold></highlight> of the bank A <highlight><bold>60</bold></highlight> is in the &ldquo;H&rdquo; state, as shown in (F) of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, and an N<highlight><bold>5</bold></highlight> signal, which is the output of the inverter <highlight><bold>102</bold></highlight>, is in the &ldquo;L&rdquo; state, as shown in (E) of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, so that the CMOS switch <highlight><bold>111</bold></highlight> is in the ON state. Consequently, the N<highlight><bold>4</bold></highlight> signal ((K) in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>), which is the output of the DFF element <highlight><bold>109</bold></highlight>, is selected and supplied to the timing circuit <highlight><bold>89</bold></highlight> as the BACT signal ((L) in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>). </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> The ADD latch <highlight><bold>90</bold></highlight> latches the ADD signal in synchronism with the leading edge of the RD/WR signal, and supplies the latched signal to the timing circuit <highlight><bold>89</bold></highlight> as the BADD signal ((M) in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>). </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> The timing circuit <highlight><bold>89</bold></highlight> latches the BADD signal in synchronism with the leading edge of the BACT signal, and supplies the latched signal to the bank A <highlight><bold>60</bold></highlight> as the IADD signal ((N) in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>). </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> As a result, the bank A <highlight><bold>60</bold></highlight> reads data from the specified address and outputs the readout data from a DATA output terminal ((O) in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>), not shown. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> At this time, in the bank activation control circuit <highlight><bold>88</bold></highlight> of the bank B <highlight><bold>70</bold></highlight>, the N<highlight><bold>5</bold></highlight> signal ((E) in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>) is in the &ldquo;H&rdquo; state while the N<highlight><bold>6</bold></highlight> signal ((F) in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>) is in the &ldquo;L&rdquo; state, so that the output of the DFF element <highlight><bold>108</bold></highlight> is selected and supplied to the timing circuit <highlight><bold>89</bold></highlight>. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> The N<highlight><bold>3</bold></highlight> signal ((J) in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>), which is the output of the DFF element <highlight><bold>108</bold></highlight>, is derived by delaying the N<highlight><bold>1</bold></highlight> signal ((H) in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>) for two cycles of the CLK signal, and accordingly, the BADD signal ((M) in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>) latched by the ADD latch <highlight><bold>90</bold></highlight> is supplied to the bank B <highlight><bold>70</bold></highlight> as the IADD signal while being delayed for two cycles of the CLK signal with respect to the IADD signal supplied to the bank A <highlight><bold>60</bold></highlight>. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> The bank B <highlight><bold>70</bold></highlight> reads out data stored at the address specified by the IADD signal supplied from the timing circuit <highlight><bold>89</bold></highlight>, and outputs the readout data to outside from a DATA output terminal, not shown. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> As a consequence, where the burst length has been set to &ldquo;8&rdquo;, data is first read from one specified bank (in the above example, the bank A <highlight><bold>60</bold></highlight>), and then data is read from the other bank (in the above example, the bank B <highlight><bold>70</bold></highlight>) in an automatic manner (without the need for the reentry of address from outside) with a delay of two cycles of the CLK signal and is output to outside. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> In the case where the semiconductor memory device <highlight><bold>30</bold></highlight> is an auto-precharge type device, auto-precharge operation is carried out upon completion of the read operation of the other bank. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> In the aforementioned example, the bank A <highlight><bold>60</bold></highlight> is specified first and then the bank B <highlight><bold>70</bold></highlight> is specified. Also in the case where the bank B <highlight><bold>70</bold></highlight> is specified first and the bank A <highlight><bold>60</bold></highlight> is specified next, similar operation is executed and 8-bit data is output. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> The foregoing describes the operation wherein the burst length is set to &ldquo;8&rdquo;; in cases where the burst length is set to &ldquo;4&rdquo; or a smaller value, data is read from only one of the banks and is output, as in the conventional memory devices. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> Specifically, where the burst length is set to a value other than &ldquo;8&rdquo;, the BL8 signal is set in the &ldquo;L&rdquo; state. Accordingly, the outputs of the NAND elements <highlight><bold>105</bold></highlight> of the respective banks A <highlight><bold>60</bold></highlight> and B <highlight><bold>70</bold></highlight> are always in the &ldquo;H&rdquo; state, and as a consequence, the CMOS switches <highlight><bold>111</bold></highlight> remain in the ON state. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> In this case, the output of the NOR element <highlight><bold>104</bold></highlight> turns to &ldquo;L&rdquo; when the bank managed thereby is specified, and turns to &ldquo;H&rdquo; during the other period of time. Consequently, the NOR element <highlight><bold>103</bold></highlight> passes the RD/WR signal therethrough only while the bank associated therewith is selected, and shuts off the signal while the other bank is specified. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> As a result, while the bank is specified, the signal output from the corresponding DFF element <highlight><bold>109</bold></highlight> is supplied to the timing circuit <highlight><bold>89</bold></highlight> as the BACT signal, and the BADD signal latched by the ADD latch <highlight><bold>90</bold></highlight> is supplied to the bank as the IADD signal in synchronism with the leading edge of the BACT signal. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> Accordingly, where the burst length is set to &ldquo;4&rdquo;, for example, IADD is supplied only to the bank specified by the bank-specifying address, and data stored in the corresponding address is read and is output to outside from the DATA output terminal, not shown, whereupon the operation is completed. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> In the case where the burst length is set to &ldquo;8&rdquo;, while one of the banks is accessed, the other bank cannot be accessed. If an interrupt request is made with respect to a bank other than the bank being accessed, therefore, the control device <highlight><bold>20</bold></highlight> performs a process for inhibiting execution of such an interrupt request. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> Also, where the burst length is set to &ldquo;8&rdquo;, a total of the time periods required to read data from the two banks constitutes a cycle time. Accordingly, the control device <highlight><bold>20</bold></highlight> determines the cycle time in accordance with the burst length, and performs control operation suited for the determined cycle time. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> In the above description of the embodiment, the banks used are two in number, but the present invention can of course be applied to memory configuration including three or more banks. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> Also, it is to be noted that the circuitry explained and illustrated in conjunction with the above embodiment is given by way of example only, and that the present invention is of course not limited to the illustrated circuitry. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows a semiconductor memory device according to a second embodiment of the present invention, the second embodiment corresponding to claims <highlight><bold>6</bold></highlight> to <highlight><bold>8</bold></highlight>. In the figure, each thick line signifies that the line comprises a plurality of signal lines. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> The semiconductor memory device is formed using a CMOS process on a silicon substrate as a clock synchronization type DRAM. The DRAM comprises a clock buffer <highlight><bold>210</bold></highlight>, a command decoder <highlight><bold>212</bold></highlight>, an address buffer <highlight><bold>214</bold></highlight>, a data buffer <highlight><bold>216</bold></highlight>, a write timing generator circuit <highlight><bold>218</bold></highlight>, a bank selection circuit <highlight><bold>220</bold></highlight>, a write data register <highlight><bold>222</bold></highlight>, and four memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> The clock buffer <highlight><bold>210</bold></highlight> receives a clock signal CLK from outside through a clock terminal, and outputs the received signal as an internal clock signal ICLK. The internal clock signal ICLK is supplied also to other circuits than those illustrated. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> The command decoder <highlight><bold>212</bold></highlight> receives a command signal CMD from outside through a command terminal, decodes the received signal, and outputs the decoded signal as a read command signal READ<highlight><bold>1</bold></highlight> and a write command signal WRITE<highlight><bold>1</bold></highlight>. The command decoder <highlight><bold>212</bold></highlight> outputs a refresh command signal etc., besides the illustrated signals. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> The address buffer <highlight><bold>214</bold></highlight> receives an address signal ADD from outside through an address terminal, and outputs the received signal as an internal address signal IADD. The data buffer <highlight><bold>216</bold></highlight> receives a data signal (write data) DQ from outside through a data terminal, and outputs the received signal to the write data register <highlight><bold>222</bold></highlight>. Also, the data buffer <highlight><bold>216</bold></highlight> receives an internal data signal (readout data) IDQ from the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>, and outputs the received signal via the data terminal as the data signal DQ. The write data register <highlight><bold>222</bold></highlight> latches the write data and outputs the latched data as the internal data signal IDQ (latched data signal LDATA). </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> The write timing generator circuit <highlight><bold>218</bold></highlight> receives the write command signal WRITE<highlight><bold>1</bold></highlight> and the internal clock signal ICLK, and outputs a write command signal (write timing signal) WRITE<highlight><bold>2</bold></highlight> in synchronism with the internal clock signal ICLK. The write command signal WRITE<highlight><bold>2</bold></highlight> is generated four times consecutively in response to one write command signal WRITE<highlight><bold>1</bold></highlight>, as described later. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> The bank selection circuit <highlight><bold>220</bold></highlight> activates one of bank selection signals BKSEL<highlight><bold>0</bold></highlight> to BKSEL<highlight><bold>3</bold></highlight> synchronously with activation of the read command signal READ<highlight><bold>1</bold></highlight> and the write command signal WRITE<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> The memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> have identical addresses assigned thereto and each have a storage capacity of 16 Megabits, for example. Thus, the write data DQ supplied in response to the write command is written into all of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>, as described later. Namely, this DRAM is used as a 16-Megabit memory, though it has a total storage capacity of 64 Megabits. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> Also, although not illustrated in detail, the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> each have a plurality of memory cells connected to word lines and bit lines, sense amplifiers for amplifying data transmitted onto the bit lines, column switches connecting the bit lines and a data bus line, a row decoder, and a column decoder. The row decoder activates a sense amplifier and selects a word line in accordance with a high-order address signal ADD. The column decoder selects a column switch in accordance with a low-order address signal ADD. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> In this embodiment, the high-order and low-order address signals ADD are input to the DRAM collectively along with the read command and the write command. Namely, the DRAM is an address non-multiplex type semiconductor memory. The memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> operate independently of one another and, after the operation, automatically precharge the bit lines under their own control. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows details of the bank selection circuit <highlight><bold>220</bold></highlight> appearing in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. The bank selection circuit <highlight><bold>220</bold></highlight> includes an OR element <highlight><bold>220</bold></highlight><highlight><italic>a </italic></highlight>and a shift register <highlight><bold>220</bold></highlight><highlight><italic>b</italic></highlight>. The OR element <highlight><bold>220</bold></highlight><highlight><italic>a </italic></highlight>derives an OR of the read command signal READ<highlight><bold>1</bold></highlight> and the write command signal WRITE<highlight><bold>2</bold></highlight>, and outputs the result as a shift signal SFT. The shift register <highlight><bold>220</bold></highlight><highlight><italic>b </italic></highlight>has four storage stages S<highlight><bold>0</bold></highlight> to S<highlight><bold>3</bold></highlight> connected in series. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> The storage stages S<highlight><bold>0</bold></highlight> to S<highlight><bold>3</bold></highlight> output the bank selection signals BKSEL<highlight><bold>0</bold></highlight> to BKSEL<highlight><bold>3</bold></highlight>, respectively. The output (BKSEL<highlight><bold>3</bold></highlight>) of the storage stage S<highlight><bold>3</bold></highlight> is fed back to the input of the storage stage SO. Each of the storage stages S<highlight><bold>0</bold></highlight> to S<highlight><bold>3</bold></highlight> operates in synchronism with the shift signal SFT, to output the value retained thereby to the succeeding stage. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> The shift register <highlight><bold>220</bold></highlight><highlight><italic>b </italic></highlight>is initialized after the start of power supply such that only the bank selection signal BKSEL<highlight><bold>0</bold></highlight> has a high-level output. Subsequently, each time the read command signal READ<highlight><bold>1</bold></highlight> or the write command signal WRITE<highlight><bold>2</bold></highlight> is activated, the shift register <highlight><bold>220</bold></highlight><highlight><italic>b </italic></highlight>performs a shift operation to sequentially turn the bank selection signals BKSEL<highlight><bold>1</bold></highlight>, BKSEL<highlight><bold>2</bold></highlight>, BKSEL<highlight><bold>3</bold></highlight>, BKSEL<highlight><bold>0</bold></highlight>, . . . to high level. When one of the bank selection signals BKSEL<highlight><bold>0</bold></highlight> to BKSEL<highlight><bold>3</bold></highlight> is activated, a corresponding one of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> is set operable. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> illustrates operation of the DRAM described above. In the example shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, first, read commands RD<highlight><bold>1</bold></highlight> to RD<highlight><bold>6</bold></highlight> are sequentially supplied, and then a write command WR<highlight><bold>7</bold></highlight> is supplied, followed by the supply of read commands RD<highlight><bold>8</bold></highlight> to RD<highlight><bold>11</bold></highlight>. Each command is supplied in synchronism with the leading edge of the clock signal CLK. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> First, the command decoder <highlight><bold>212</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference> receives the read command RD<highlight><bold>1</bold></highlight> and activates the read command signal READ<highlight><bold>1</bold></highlight> ((a) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). In synchronism with the read command signal READ<highlight><bold>1</bold></highlight>, the bank selection circuit <highlight><bold>220</bold></highlight> activates the bank selection signal BKSEL<highlight><bold>0</bold></highlight> ((b) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). The memory bank BANK<highlight><bold>0</bold></highlight> is thereafter activated in response to the bank selection signal BKSEL<highlight><bold>0</bold></highlight> ((c) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> In accordance with the high-order address signal ADD (not shown), the memory bank BANK<highlight><bold>0</bold></highlight> selects a word line and activates a sense amplifier. The selection of a word line permits data to be read from a corresponding memory cell to the bit line, and the readout data is amplified by the sense amplifier. Further, in accordance with the low-order address signal ADD, the memory bank BANK<highlight><bold>0</bold></highlight> selects a column switch to transmit the readout data, amplified by the sense amplifier, to the data bus line. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> The readout data Q<highlight><bold>1</bold></highlight> read from the memory cell is output in synchronism with the leading edge of a clock signal CLK pulse two cycles later than the supply of the read command RD<highlight><bold>1</bold></highlight> ((d) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). Namely, a read latency, which is expressed as the number of clock pulses from the supply of the read command RD<highlight><bold>1</bold></highlight> to the output of the readout data Q<highlight><bold>1</bold></highlight>, is &ldquo;2&rdquo;. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> Subsequently, the memory bank BANK<highlight><bold>0</bold></highlight> inactivates the sense amplifier and the row and column decoders, executes a precharge operation in which the bit line is set to a reference voltage, and completes the read operation four clock cycles after the reception of the read command RD<highlight><bold>1</bold></highlight> ((e) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> Then, in response to the read command RD<highlight><bold>2</bold></highlight>, the read command signal READ<highlight><bold>1</bold></highlight> is activated again ((f) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). The shift register <highlight><bold>220</bold></highlight><highlight><italic>b </italic></highlight>of the bank selection circuit <highlight><bold>220</bold></highlight> performs a shift operation synchronously with the read command signal READ<highlight><bold>1</bold></highlight>, thereby inactivating the bank selection signal BKSEL<highlight><bold>0</bold></highlight> and activating the bank selection signal BKSEL<highlight><bold>1</bold></highlight> ((g) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). Subsequently, in response to the bank selection signal BKSEL<highlight><bold>1</bold></highlight>, the memory bank BANK<highlight><bold>1</bold></highlight> is activated. The memory bank BANK<highlight><bold>1</bold></highlight> performs a read operation in the same manner as performed by the memory bank BANK<highlight><bold>0</bold></highlight>, and outputs readout data Q<highlight><bold>2</bold></highlight> ((h) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> Subsequently, in response to the read commands RD<highlight><bold>3</bold></highlight> to RD<highlight><bold>6</bold></highlight>, the bank selection signals BKSEL<highlight><bold>2</bold></highlight>, BKSEL<highlight><bold>3</bold></highlight>, BKSEL<highlight><bold>0</bold></highlight> and BKSEL<highlight><bold>1</bold></highlight> are sequentially activated ((i) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>), and the memory banks BANK<highlight><bold>2</bold></highlight>, BANK<highlight><bold>3</bold></highlight>, BANK<highlight><bold>0</bold></highlight> and BANK<highlight><bold>1</bold></highlight> successively carry out read operation in the same manner as described above ((j) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> Thus, the read operations of the four memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> are carried out in a manner such that one read operation overlaps with another while being staggered therefrom by one clock cycle. The operation period of one memory bank is four clock cycles, but since the four memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> operate independently of each other, the read cycle, which is a read operation time (read command RD supply interval) required for one read command RD, corresponds to one clock cycle. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> The write command WR<highlight><bold>7</bold></highlight> is supplied two clock cycles after the supply of the read command RD<highlight><bold>6</bold></highlight> ((k) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). As distinct from the conventional device, some of the memory banks BANK (in this example, BANK<highlight><bold>0</bold></highlight> and BANK<highlight><bold>1</bold></highlight>) are executing read operation when the write command WR<highlight><bold>7</bold></highlight> is supplied. In this manner, write operation for writing data in an idle memory bank BANK is started while some of the memory banks BANK are still in operation, whereby the READ-WRITE interval (timing specification) from the supply of the read command RD<highlight><bold>6</bold></highlight> to the supply of the write command WR<highlight><bold>7</bold></highlight> can be set to two clock cycles. This interval is shorter by two clock cycles than in the case of the conventional device shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>. More specifically, the READ-WRITE interval is set to a timing such that contention between the data bus line and the data terminal can be avoided when a write latency is &ldquo;2&rdquo; (mentioned later). </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> The command decoder <highlight><bold>212</bold></highlight> receives the write command WR<highlight><bold>7</bold></highlight> and activates the write command signal WRITE<highlight><bold>1</bold></highlight> for four clock cycles ((1) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). During the period in which the write command signal WRITE<highlight><bold>1</bold></highlight> remains activated, the write timing generator circuit <highlight><bold>218</bold></highlight> generates the write command signal (write timing signal) WRITE<highlight><bold>2</bold></highlight> in synchronism with the clock signal CLK (internal clock signal ICLK) ((m) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). Specifically, the write command signal WRITE<highlight><bold>2</bold></highlight> is activated four times consecutively, corresponding to the number of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>. In synchronism with the write command signal WRITE<highlight><bold>2</bold></highlight>, the bank selection circuit <highlight><bold>220</bold></highlight> sequentially activates the bank selection signals BKSEL<highlight><bold>2</bold></highlight>, BKSEL<highlight><bold>3</bold></highlight>, BKSEL<highlight><bold>0</bold></highlight> and BKSEL<highlight><bold>1</bold></highlight> ((n) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). In response to the bank selection signals BKSEL<highlight><bold>2</bold></highlight>, BKSEL<highlight><bold>3</bold></highlight>, BKSEL<highlight><bold>0</bold></highlight> and BKSEL<highlight><bold>1</bold></highlight>, the memory banks BANK<highlight><bold>2</bold></highlight>, BANK<highlight><bold>3</bold></highlight>, BANK<highlight><bold>0</bold></highlight> and BANK<highlight><bold>1</bold></highlight> are sequentially activated ((o) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> The OR element <highlight><bold>220</bold></highlight><highlight><italic>a </italic></highlight>of the bank selection circuit <highlight><bold>220</bold></highlight> outputs the shift signal SFT synchronously with the read command signal READ<highlight><bold>1</bold></highlight> and the write command signal WRITE<highlight><bold>2</bold></highlight>. The shift register <highlight><bold>220</bold></highlight><highlight><italic>b </italic></highlight>performs a shift operation in synchronism with the shift signal SFT, thereby sequentially activating the bank selection signals BKSEL<highlight><bold>0</bold></highlight> to BKSEL<highlight><bold>3</bold></highlight>. In other words, the shift register <highlight><bold>220</bold></highlight><highlight><italic>b </italic></highlight>performs shift operation regardless of whether the input command is the read or write command, to sequentially activate the bank selection signals BKSEL<highlight><bold>0</bold></highlight> to BKSEL<highlight><bold>3</bold></highlight>, whereby a memory bank for performing read or write operation is sequentially switched among the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>. Thus, the bank selection circuit <highlight><bold>220</bold></highlight> is constructed simply by using the OR element <highlight><bold>220</bold></highlight><highlight><italic>a </italic></highlight>and the shift register <highlight><bold>220</bold></highlight><highlight><italic>b</italic></highlight>, and this makes it possible to greatly shorten the READ-WRITE interval, compared with the conventional device. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> Write data D<highlight><bold>7</bold></highlight> is supplied two clock cycles after the supply of the write command WR<highlight><bold>7</bold></highlight> ((p) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). Namely, the write latency, which is the number of clock cycles from the supply of the write command WR<highlight><bold>7</bold></highlight> to the supply of the write data D<highlight><bold>7</bold></highlight>, is &ldquo;2&rdquo;. The write data register <highlight><bold>222</bold></highlight> fetches the write data D<highlight><bold>7</bold></highlight> through the data buffer <highlight><bold>216</bold></highlight> and holds the fetched data as the latched data signal LDATA ((q) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> The memory banks BANK<highlight><bold>2</bold></highlight>, BANK<highlight><bold>3</bold></highlight>, BANK<highlight><bold>0</bold></highlight> and BANK<highlight><bold>1</bold></highlight> then operate sequentially, so that the latched data signal LDATA held by the write data register <highlight><bold>222</bold></highlight> is written into the memory cells. That is, identical write data D<highlight><bold>7</bold></highlight> is written into all memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> The memory bank BANK<highlight><bold>2</bold></highlight>, which is the first to perform the write operation, becomes idle four clock cycles after the supply of the write command WR<highlight><bold>7</bold></highlight>. Accordingly, even though the write operations performed by the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> are staggered, the read command RD<highlight><bold>8</bold></highlight> can be supplied four clock cycles after the supply of the write command WR<highlight><bold>7</bold></highlight> ((r) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). Namely, the write cycle required for one write command WR is four clock cycles, equal to that in the case of the conventional device. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> In response to the read command RD<highlight><bold>8</bold></highlight>, the memory bank BANK<highlight><bold>2</bold></highlight> operates and outputs readout data Q<highlight><bold>8</bold></highlight> ((s) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). Subsequently, the read commands RD<highlight><bold>9</bold></highlight> to RD<highlight><bold>11</bold></highlight> are sequentially supplied, so that the memory banks BANK<highlight><bold>3</bold></highlight>, BANK<highlight><bold>0</bold></highlight> and BANK<highlight><bold>1</bold></highlight> sequentially perform read operation and output readout data Q<highlight><bold>8</bold></highlight> to Q<highlight><bold>11</bold></highlight> in the same manner as described above ((t) in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> As explained above, in this embodiment, the write timing generator circuit <highlight><bold>218</bold></highlight> consecutively generates, in response to one write command WR, the write command signal (write timing signal) WRITE<highlight><bold>2</bold></highlight> a number of times corresponding to the number of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>. During write operation, the bank selection circuit <highlight><bold>220</bold></highlight> sequentially activates the bank selection signals BKSEL<highlight><bold>0</bold></highlight> to BKSEL<highlight><bold>3</bold></highlight> in synchronism with the write timing signal WRITE<highlight><bold>2</bold></highlight>. Consequently, the write operations of all memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> can be easily carried out in response to one write command WR with their start timings staggered. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> Also, write operation can be started before all of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> become idle, so that the interval from the supply of the read command RD to the supply of the write command WR can be shortened. Further, in cases where read commands RD are supplied with a write command WR intervening therebetween, the read command RD supply interval can be shortened as compared with the conventional device, making it possible to increase the number of commands supplied per given time. Thus, since the data signal can be input/output more frequently than in the conventional device, the data transfer rate (data bus occupancy) improves, and as a result, the performance of the system to which the DRAM is mounted can be enhanced. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> Further, the bank selection circuit <highlight><bold>220</bold></highlight> comprises the shift register <highlight><bold>220</bold></highlight><highlight><italic>b </italic></highlight>which is simple in construction, and this permits the data transfer rate to be improved without increasing the chip size of the DRAM. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows a semiconductor memory device according to a third embodiment of the present invention, the third embodiment corresponding to claims <highlight><bold>6</bold></highlight> to <highlight><bold>10</bold></highlight>. Identical reference numerals and symbols are used to denote circuits and signals identical with those explained above in relation to the second embodiment, and detailed description of such circuits and signals is omitted. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> Compared with the second embodiment, the third embodiment is additionally provided with a late write function. The late write function is a function whereby write data supplied in association with a write command is written into the memory cells when the succeeding write command is supplied. The late write function serves to narrow down the timing of contention between readout data and write data, thus improving the efficiency of use of the data bus. In order to perform the late write function, the third embodiment is additionally provided with a delay circuit <highlight><bold>224</bold></highlight>, a write register <highlight><bold>226</bold></highlight>, an address switching circuit <highlight><bold>228</bold></highlight>, an address comparator circuit <highlight><bold>230</bold></highlight>, a data switching circuit <highlight><bold>232</bold></highlight> and a transfer gate <highlight><bold>234</bold></highlight>, compared with the second embodiment. In other respects, the third embodiment is configured in almost the same manner as the second embodiment. Namely, the semiconductor memory device is fabricated as a clock synchronization type DRAM. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> The delay circuit <highlight><bold>224</bold></highlight> delays the write command signal WRITE<highlight><bold>1</bold></highlight> for a time period corresponding to the write latency (in this embodiment, &ldquo;3&rdquo;), and outputs the delayed signal to the write register <highlight><bold>226</bold></highlight>. The write register <highlight><bold>226</bold></highlight> includes an address register <highlight><bold>226</bold></highlight><highlight><italic>a </italic></highlight>and a data register <highlight><bold>226</bold></highlight><highlight><italic>b </italic></highlight>which operate in synchronism with the delayed write command signal WRITE<highlight><bold>1</bold></highlight>. The address register <highlight><bold>226</bold></highlight><highlight><italic>a </italic></highlight>holds the address signal ADD (internal address signal IADD) and outputs the signal held thereby as a latched address signal LADD. The data register <highlight><bold>226</bold></highlight><highlight><italic>b </italic></highlight>holds the data signal DQ (write data) and outputs the signal held thereby as a latched data signal LDATA. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> The address switching circuit <highlight><bold>228</bold></highlight> selects the internal address signal IADD when the level of the write command signal WRITE<highlight><bold>1</bold></highlight> is low, and selects the latched address signal LADD when the level of the write command signal WRITE<highlight><bold>1</bold></highlight> is high. Consequently, the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> operate in accordance with the latched address signal LADD during write operation, and operate in accordance with the external address signal ADD during read operation. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> The address comparator circuit <highlight><bold>230</bold></highlight> activates (raises the level of) a coincidence signal COIN when the internal address signal IADD coincides with the latched address signal LADD. The address comparator circuit <highlight><bold>230</bold></highlight> determines whether or not the write address is for a memory cell that has not performed the write operation yet. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> The data switching circuit <highlight><bold>232</bold></highlight> selects the latched data signal LDATA when the level of the coincidence signal COIN is high, and outputs the selected signal as the readout data. When the level of the coincidence signal COIN is low, the data switching circuit selects the internal data signal DQ (readout data) read from the memory banks BANK and outputs the selected signal as the readout data. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> The transfer gate <highlight><bold>234</bold></highlight> transfers the latched data signal LDATA to the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> as the internal data signal (write data) DQ when the level of the write command signal WRITE<highlight><bold>1</bold></highlight> is high. Namely, the write operation is performed using the latched data signal LDATA held by the data register <highlight><bold>226</bold></highlight><highlight><italic>b. </italic></highlight></paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates operation of the DRAM described above. <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows an example of operation wherein, as in the case of the second embodiment, after read commands RD<highlight><bold>1</bold></highlight> to RD<highlight><bold>6</bold></highlight> are sequentially supplied, a write command WR<highlight><bold>7</bold></highlight> is supplied, followed by the supply of read commands RD<highlight><bold>8</bold></highlight> to RD<highlight><bold>11</bold></highlight>. Read operations performed in response to the read commands RD<highlight><bold>1</bold></highlight> to RD<highlight><bold>6</bold></highlight> are identical with those explained above with reference to <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, and therefore, description thereof is omitted. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> The DRAM of this embodiment has the late write function as mentioned above. The timing for supplying the write command WR<highlight><bold>7</bold></highlight> can therefore be set independently of the timing for supplying the write data D<highlight><bold>7</bold></highlight>. This makes it possible to supply the write command WR<highlight><bold>7</bold></highlight> in synchronism with a clock signal CLK pulse immediately after the supply of the read command RD<highlight><bold>6</bold></highlight>. Namely, in this embodiment, the READ-WRITE interval (timing specification) from the supply of the read command RD<highlight><bold>6</bold></highlight> to the supply of the write command WR<highlight><bold>7</bold></highlight> can be shortened to one clock cycle. The read cycle and the write cycle are one clock cycle and four clock cycles, respectively, as in the second embodiment. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> In response to the write command WR<highlight><bold>7</bold></highlight>, the write command signal WRITE<highlight><bold>1</bold></highlight> is activated for four clock cycles ((a) in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>). Responsive to the activation of the write command signal WRITE<highlight><bold>1</bold></highlight>, the write command signal WRITE<highlight><bold>2</bold></highlight> is activated four times consecutively ((b) in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>). </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> During the period in which the write command signal WRITE<highlight><bold>1</bold></highlight> remains activated, the transfer gate <highlight><bold>234</bold></highlight> transfers the latched data signal LDATA to the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>. In the illustrated example, write data D<highlight><bold>0</bold></highlight> which has been supplied in association with the preceding write command is sequentially written into all of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> synchronously with the write command WR<highlight><bold>7</bold></highlight> ((c) in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>). </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> The write data D<highlight><bold>7</bold></highlight> is supplied three clock cycles after the supply of the write command WR<highlight><bold>7</bold></highlight> ((d) in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>). Namely, the write latency is set to &ldquo;3&rdquo;. The write register <highlight><bold>226</bold></highlight> latches the address signal and the write data D<highlight><bold>7</bold></highlight> in synchronism with the delayed write command signal WRITE<highlight><bold>1</bold></highlight> ((e) in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>). The write data D<highlight><bold>7</bold></highlight> latched by the write register <highlight><bold>226</bold></highlight> is written into the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> in response to the succeeding write command (not shown). </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> After a lapse of four clock cycles from the supply of the write command WR<highlight><bold>7</bold></highlight>, the read commands RD<highlight><bold>8</bold></highlight> to RD<highlight><bold>11</bold></highlight> are sequentially supplied ((f) in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>). In response to the read commands RD<highlight><bold>8</bold></highlight> to RD<highlight><bold>11</bold></highlight>, the memory banks BANK<highlight><bold>2</bold></highlight>, BANK<highlight><bold>3</bold></highlight>, BANK<highlight><bold>0</bold></highlight> and BANK<highlight><bold>1</bold></highlight> sequentially perform read operation. It is assumed here that the address signal ADD (not shown) supplied along with the read command RD<highlight><bold>9</bold></highlight> coincides with the latched address signal LADD held by the address register <highlight><bold>226</bold></highlight><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> In this case, the address comparator circuit <highlight><bold>230</bold></highlight> judges that the address signal ADD supplied along with the read command RD<highlight><bold>9</bold></highlight> coincides with the latched address signal LADD, and accordingly, activates the coincidence signal COIN ((g) in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>). Namely, it is judged that data to be read out in response to the read command RD<highlight><bold>9</bold></highlight> is not yet written in the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>. Thus, on detecting the activation of the coincidence signal COIN, the data switching circuit <highlight><bold>232</bold></highlight> outputs, as the readout data, the latched data signal LDATA (write data D<highlight><bold>7</bold></highlight>) held by the data register <highlight><bold>226</bold></highlight><highlight><italic>b </italic></highlight>((h) in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>). The read operations in response to the read commands RD<highlight><bold>8</bold></highlight>, RD<highlight><bold>10</bold></highlight> and RD<highlight><bold>11</bold></highlight> are performed in the same manner as in the second embodiment. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> This embodiment also provides advantages similar to those achieved by the second embodiment described above. Further, since this embodiment is provided with the write register <highlight><bold>226</bold></highlight> for holding the write address and write data supplied in association with the write command WR, as well as with the address switching circuit <highlight><bold>228</bold></highlight> and the transfer gate <highlight><bold>234</bold></highlight>, the write data supplied in association with the write command can be written into the memory cells when the succeeding write command is supplied (late write function). The late write function serves to reduce the combinations of contention between readout data and write data, whereby the efficiency of use of the data bus can be further improved. It is also possible to set the write command WR supply timing independently of the write data supply timing. As a result, the data transfer rate can be further increased. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> The address comparator circuit <highlight><bold>230</bold></highlight> and the data switching circuit <highlight><bold>232</bold></highlight> permit correct readout data to be output without fail even in the event that data to be read out in response to the read command RD is not yet written in the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows a semiconductor memory device according to a fourth embodiment of the present invention, the fourth embodiment corresponding to claims 11 to 13. Identical reference numerals and symbols are used to denote circuits and signals identical with those explained above in relation to the second embodiment, and detailed description of such circuits and signals is omitted. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> Compared with the second embodiment, the fourth embodiment does not include the write timing generator circuit <highlight><bold>218</bold></highlight> and is additionally provided with an address buffer <highlight><bold>340</bold></highlight>, a block selection decoder <highlight><bold>342</bold></highlight>, address comparator-registers <highlight><bold>344</bold></highlight>, and write data registers <highlight><bold>346</bold></highlight>. Also, the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> are each divided into blocks A to D and the bank selection circuit <highlight><bold>220</bold></highlight> partly differs in construction from that of the second embodiment. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> The bank selection circuit <highlight><bold>220</bold></highlight> includes read and write shift registers (similar to the shift register <highlight><bold>220</bold></highlight><highlight><italic>b </italic></highlight>of the aforementioned bank selection circuit <highlight><bold>220</bold></highlight>). The read register is input with signals (which are set to &ldquo;H&rdquo; state during write operation and associated with the respective banks) indicating whether or not data is being written into the respective banks. When supplied with the read command, the read register performs a shift operation to shift the target memory bank, and if the target memory bank after the shift operation is then performing write operation, the read register again performs a shift operation. The shift operation is repeated until the target memory bank is shifted to an active memory bank which is not performing write operation. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> On the other hand, when supplied with the write command, the write shift register similarly performs a shift operation, and if the target bank after the shift operation is then performing read operation, the write operation is carried out on completion of the read operation. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> The address buffer <highlight><bold>340</bold></highlight> receives an address signal ADD from outside through an address terminal, and outputs the received signal to the block selection decoder <highlight><bold>342</bold></highlight>. The address buffer <highlight><bold>214</bold></highlight> is supplied with an address signal A<highlight><bold>0</bold></highlight>-An for selecting the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>, while the address buffer <highlight><bold>340</bold></highlight> is supplied with an address signal PO-Pn for selecting the memory blocks A to D. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> In accordance with the signal output from the address buffer <highlight><bold>340</bold></highlight>, the block selection decoder <highlight><bold>342</bold></highlight> selects a specified one of the memory blocks A to D of the individual memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> The address comparator-registers <highlight><bold>344</bold></highlight>, which are equal in number to the write data registers <highlight><bold>346</bold></highlight>, hold addresses to which data is being or about to be written. On receiving a read request, the address comparator-registers compare the address from which data is to be read out with the addresses stored in their registers and, if coincidence of addresses is found, output address coincidence information to the write data registers <highlight><bold>346</bold></highlight>. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> The write data registers <highlight><bold>346</bold></highlight> are provided so as to correspond to the blocks and latch and temporarily store write data to be written into the respective blocks. When the quantity of stored data has reached a given quantity, the write data registers output the stored data to the corresponding banks. Also, when a read command to read out data that is not yet written into the memory cells is received, the write data registers <highlight><bold>346</bold></highlight> read out corresponding data and supply same to the data buffer <highlight><bold>216</bold></highlight>. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows details of the write data registers <highlight><bold>346</bold></highlight>. As shown in the figure, the write data registers <highlight><bold>346</bold></highlight> comprise three write data register groups each including four write data registers associated with the respective blocks A to D, namely, write data register groups <highlight><bold>360</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>360</bold></highlight><highlight><italic>d</italic></highlight>, <highlight><bold>361</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>361</bold></highlight><highlight><italic>d </italic></highlight>and <highlight><bold>362</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>362</bold></highlight><highlight><italic>d</italic></highlight>, and a latency counter <highlight><bold>363</bold></highlight>. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> In accordance with a pointer signal from the latency counter <highlight><bold>363</bold></highlight>, the block A-associated write data register <highlight><bold>360</bold></highlight><highlight><italic>a </italic></highlight>latches the write data supplied from the data buffer <highlight><bold>216</bold></highlight> and outputs the latched write data to the block A-associated write data register <highlight><bold>361</bold></highlight><highlight><italic>a</italic></highlight>. The write data registers <highlight><bold>360</bold></highlight><highlight><italic>b </italic></highlight>to <highlight><bold>360</bold></highlight><highlight><italic>d </italic></highlight>associated with the blocks B to D, respectively, also perform similar operation. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> The block A-associated write data register <highlight><bold>361</bold></highlight><highlight><italic>a </italic></highlight>latches the write data output from the block A-associated write data register <highlight><bold>360</bold></highlight><highlight><italic>a</italic></highlight>, and outputs the latched write data to the block A-associated write data register <highlight><bold>362</bold></highlight><highlight><italic>a</italic></highlight>. The write data registers <highlight><bold>361</bold></highlight><highlight><italic>b </italic></highlight>to <highlight><bold>361</bold></highlight><highlight><italic>d </italic></highlight>associated with the blocks B to D, respectively, also perform similar operation. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> The block A-associated write data register <highlight><bold>362</bold></highlight><highlight><italic>a </italic></highlight>latches the write data output from the block A-associated write data register <highlight><bold>361</bold></highlight><highlight><italic>a</italic></highlight>, and outputs the latched write data to the individual banks. The write data registers <highlight><bold>362</bold></highlight><highlight><italic>b </italic></highlight>to <highlight><bold>362</bold></highlight><highlight><italic>d </italic></highlight>associated with the blocks B to D, respectively, also perform similar operation. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> In the following description, the expression &ldquo;block x-associated&rdquo; is omitted unless expressly specified and reference is made simply to the write data registers <highlight><bold>360</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>360</bold></highlight><highlight><italic>d</italic></highlight>, <highlight><bold>361</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>361</bold></highlight><highlight><italic>d</italic></highlight>, etc. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> The latency counter <highlight><bold>363</bold></highlight> delays the address signals input from the address buffers <highlight><bold>214</bold></highlight> and <highlight><bold>340</bold></highlight> for the number of clock cycles corresponding to the write latency. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> Operation of the above embodiment will be now described. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows the relationship between the address signals A<highlight><bold>0</bold></highlight>-An, P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> and the blocks A to D. As shown in the figure, in the fourth embodiment, each of the memory banks BANK<highlight><bold>0</bold></highlight> to BANK<highlight><bold>3</bold></highlight> is divided into four blocks A to D having identical addresses assigned thereto. The address signal A<highlight><bold>0</bold></highlight>-An specifies a predetermined storage area of the individual blocks, while the address signal P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> is used to select one of the blocks A to D, as shown in the upper part of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. If P<highlight><bold>0</bold></highlight> and P<highlight><bold>1</bold></highlight> are both &ldquo;L&rdquo;, for example, the block A is selected. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a timing chart illustrating operation according to the fourth embodiment of the present invention. Referring to the figure, the operation according to this embodiment will be described. <cross-reference target="DRAWINGS">FIG. 18</cross-reference> illustrates an exemplary operation wherein read and write commands are sequentially supplied in order of read commands RD<highlight><bold>1</bold></highlight> to RD<highlight><bold>4</bold></highlight>, write commands WRi and WRj, read commands RD<highlight><bold>5</bold></highlight> and RD<highlight><bold>6</bold></highlight>, a write command WRk, read commands RD<highlight><bold>7</bold></highlight> to RD<highlight><bold>9</bold></highlight>, and write commands WRl and WRm. It is also assumed that prior to the input of the read commands RD<highlight><bold>1</bold></highlight> to RD<highlight><bold>4</bold></highlight>, eight write commands were input and data Da to Dd and De to Dh, corresponding to the respective write commands, have been stored in the registers <highlight><bold>361</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>361</bold></highlight><highlight><italic>d </italic></highlight>and <highlight><bold>360</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>360</bold></highlight><highlight><italic>d</italic></highlight>, respectively. In <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, the write data registers <highlight><bold>362</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>362</bold></highlight><highlight><italic>d </italic></highlight>are indicated as registers <highlight><bold>1</bold></highlight>(A) to <highlight><bold>1</bold></highlight>(D), the write data registers <highlight><bold>361</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>361</bold></highlight><highlight><italic>d </italic></highlight>as registers <highlight><bold>2</bold></highlight>(A) to <highlight><bold>2</bold></highlight>(D), and the write data registers <highlight><bold>360</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>360</bold></highlight><highlight><italic>d </italic></highlight>as registers <highlight><bold>3</bold></highlight>(A) to <highlight><bold>3</bold></highlight>(D), respectively. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> Read operations performed in response to the read commands RD<highlight><bold>1</bold></highlight> to RD<highlight><bold>4</bold></highlight> are identical with those explained above with reference to <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, and therefore, description thereof is omitted. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> The DRAM of this embodiment has the late write function like the device shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. It is therefore possible to set the timing for supplying the write command WRi independently of the timing for supplying write data Di. Thus, the write command WRi can be supplied in synchronism with a clock signal CLK pulse immediately after the supply of the read command RD<highlight><bold>4</bold></highlight> ((a) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). Namely, in this embodiment, the READ-WRITE command interval (timing specification) from the supply of the read command RD<highlight><bold>4</bold></highlight> to the supply of the write command WRi is one clock cycle. The read cycle also is one clock cycle, as in the second and third embodiments. The following description is based on the assumption that at the time when the read command RD<highlight><bold>4</bold></highlight> is input, the read and write shift registers of the bank selection circuit <highlight><bold>220</bold></highlight> are both selecting the memory bank BANK<highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> Upon input of the write command WRi, the bank selection circuit <highlight><bold>220</bold></highlight> increments the write shift register therein, so that the memory bank BANK<highlight><bold>0</bold></highlight> is selected. At this time, all of the registers <highlight><bold>361</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>361</bold></highlight><highlight><italic>d </italic></highlight>have data stored therein; accordingly, the data stored in the registers <highlight><bold>361</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>361</bold></highlight><highlight><italic>d </italic></highlight>are moved to the registers <highlight><bold>362</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>362</bold></highlight><highlight><italic>d</italic></highlight>, respectively ((b) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> Also, the data stored in the data registers <highlight><bold>360</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>360</bold></highlight><highlight><italic>d </italic></highlight>are similarly moved to the data registers <highlight><bold>361</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>361</bold></highlight><highlight><italic>d</italic></highlight>, respectively. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> The data moved to the registers <highlight><bold>362</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>362</bold></highlight><highlight><italic>d </italic></highlight>are written into the respective blocks A to D of the memory bank BANK<highlight><bold>0</bold></highlight> ((d) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). Also, the write data Di associated with the write command WRi is stored in the register <highlight><bold>360</bold></highlight><highlight><italic>b </italic></highlight>((e) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> Subsequently, the write command WRj is input ((f) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>), whereupon the bank selection circuit <highlight><bold>220</bold></highlight> increments the write shift register, so that the memory bank BANK<highlight><bold>1</bold></highlight> is selected and the data stored in the registers <highlight><bold>362</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>362</bold></highlight><highlight><italic>d </italic></highlight>are written into the blocks A to D, respectively ((g) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). Also, the write data Dj associated with the write command WRj is stored in the register <highlight><bold>360</bold></highlight><highlight><italic>c </italic></highlight>((h) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> Then, the read command RD<highlight><bold>5</bold></highlight> is input ((i) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>), and thus the value of the read shift register of the bank selection circuit <highlight><bold>220</bold></highlight> is incremented and becomes &ldquo;0&rdquo;. However, since the memory bank BANK<highlight><bold>0</bold></highlight> is then performing write operation, the value of the read shift register is again incremented and becomes &ldquo;1&rdquo;. Since the memory bank BANK<highlight><bold>1</bold></highlight> also is then performing write operation, however, the read shift register is again incremented and data is read from the memory bank BANK<highlight><bold>2</bold></highlight> which is then not performing write operation ((j) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> Subsequently, the read command RD<highlight><bold>6</bold></highlight> is input ((k) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>), whereupon the value of the read shift register in the bank selection circuit <highlight><bold>220</bold></highlight> is incremented and becomes &ldquo;3&rdquo;, so that data is read from the memory bank BANK<highlight><bold>3</bold></highlight> ((1) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> Then, the write command WRk is input ((m) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>), and thus the value of the write shift register in the bank selection circuit <highlight><bold>220</bold></highlight> is incremented and becomes &ldquo;2&rdquo;. However, since the memory bank BANK<highlight><bold>2</bold></highlight> is then performing read operation in response to the read command RD<highlight><bold>5</bold></highlight>, write operation is executed on completion of the read operation ((n) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> Subsequently, the read command RD<highlight><bold>7</bold></highlight> is input ((o) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>), and thus the value of the read shift register in the bank selection circuit <highlight><bold>220</bold></highlight> is incremented and becomes &ldquo;0&rdquo;, so that data is read from the memory bank BANK<highlight><bold>0</bold></highlight> ((p) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> The read command RD<highlight><bold>8</bold></highlight> is then input ((q) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>), whereupon the value of the read shift register in the bank selection circuit <highlight><bold>220</bold></highlight> is incremented and becomes &ldquo;1&rdquo;, and accordingly, data is read from the memory bank BANK<highlight><bold>1</bold></highlight> ((r) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> Then, the read command RD<highlight><bold>9</bold></highlight> is input ((s) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>), and thus the value of the read shift register in the bank selection circuit <highlight><bold>220</bold></highlight> is incremented and becomes &ldquo;2&rdquo;. However, since the memory bank BANK<highlight><bold>2</bold></highlight> is then performing write operation in response to WRk, the value of the read shift register is again incremented and data is read from the memory bank BANK<highlight><bold>3</bold></highlight> ((t) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> Subsequently, the write command WRl is input ((u) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>), whereupon the value of the write shift register in the bank selection circuit <highlight><bold>220</bold></highlight> is incremented and becomes &ldquo;3&rdquo;. However, the memory bank BANK<highlight><bold>3</bold></highlight> is then performing read operation in response to the read command RD<highlight><bold>9</bold></highlight>, and accordingly, write operation is executed on completion of the read operation ((v) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> The write command WRm is then input ((w) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>), whereupon the data stored in the registers <highlight><bold>361</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>361</bold></highlight><highlight><italic>d </italic></highlight>are moved to the registers <highlight><bold>62</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>62</bold></highlight><highlight><italic>d</italic></highlight>, respectively ((x) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> Similarly, the data stored in the data registers <highlight><bold>360</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>360</bold></highlight><highlight><italic>d </italic></highlight>are moved to the data registers <highlight><bold>361</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>361</bold></highlight><highlight><italic>d</italic></highlight>, respectively ((y) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> The data moved to the registers <highlight><bold>362</bold></highlight><highlight><italic>a </italic></highlight>to <highlight><bold>362</bold></highlight><highlight><italic>d </italic></highlight>are written into the respective blocks A to D of the memory bank BANK<highlight><bold>0</bold></highlight> ((z) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>). </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> shows the relationship between the address signals P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> and the blocks in the fourth embodiment, wherein <cross-reference target="DRAWINGS">FIG. 19</cross-reference>(A) illustrates the case where addresses (A<highlight><bold>0</bold></highlight>-An) input four times along with write commands are the same (&num;&compfn;&compfn;&compfn;). Thus, where the addresses input four times are the same, respective data are stored in corresponding regions of the individual blocks, and the stored data can be read out or written as separate data independently of one another. </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference>(B) illustrates the case where the addresses input four times are not the same (&num;&compfn;&compfn;&compfn;, &num;&compfn;&times;&Dgr;, &num;&square;&Dgr;&compfn;, &num;&compfn;&times;&square;). In this case, data are stored in respective different locations of the individual blocks. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> As described above, this embodiment also provides advantages similar to those achieved by the second embodiment. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> Further, in this embodiment, the registers hold the write data until the write data is written into all memory cells (for a period corresponding to four write commands), and comparison of addresses is made so that write data which is not yet written into the memory cells may be read from the registers and that already written data may be read from the memory cells, whereby the WRITE-READ command interval can be shortened. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> With this method, however, a problem arises in that the write data keeps accumulating in the registers. Accordingly, multiple address data (in this embodiment, data corresponding to four commands) are written collectively, thereby solving the problem. Specifically, the fourth embodiment is configured such that data which have been stored in association with the four write commands up to the immediately preceding one can be written in response to one write command. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> An exemplary configuration according to a fifth embodiment of the present invention will be now described. <cross-reference target="DRAWINGS">FIG. 20</cross-reference> illustrates an example of configuration of the fifth embodiment, the fifth embodiment corresponding to claims <highlight><bold>11</bold></highlight>, <highlight><bold>12</bold></highlight> and <highlight><bold>14</bold></highlight>. Identical reference numerals and symbols are used to denote circuits and signals identical with those explained above in relation to the fourth embodiment, and detailed description of such circuits and signals is omitted. </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> In the fourth embodiment, the address buffer <highlight><bold>340</bold></highlight> and the block selection decoder <highlight><bold>342</bold></highlight> of the fourth embodiment are replaced respectively by a pointer buffer <highlight><bold>350</bold></highlight> and a block selection decoder <highlight><bold>352</bold></highlight>. In other respects, the fourth embodiment is configured in the same manner as the fourth embodiment. </paragraph>
<paragraph id="P-0228" lvl="0"><number>&lsqb;0228&rsqb;</number> The pointer buffer <highlight><bold>350</bold></highlight> receives the address signal P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> as a pointer, and not as an address, and outputs the received address signal to the block selection decoder <highlight><bold>352</bold></highlight>. The block selection decoder <highlight><bold>352</bold></highlight> decodes the address signal P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> supplied from the pointer buffer <highlight><bold>350</bold></highlight>, then generates a signal for selecting a corresponding block, and supplies the generated signal to the individual memory banks. </paragraph>
<paragraph id="P-0229" lvl="0"><number>&lsqb;0229&rsqb;</number> Operation of the above embodiment will be now described. <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows the pointer-address relationship according to the fifth embodiment. </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> In the fifth embodiment of the present invention, the pointer specifies a writing block, and as shown in the upper part of <cross-reference target="DRAWINGS">FIG. 21</cross-reference>, one of the blocks A to D is selected in accordance with the state of the address signal P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight>. In this embodiment, the pointer specifies a writing block and does not specify an address, unlike the fourth embodiment. </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> Accordingly, in the case where addresses input four times are the same as shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>(A), data are stored in the same address of the individual blocks. Namely, the blocks are used as if there are four storage locations with the same address. </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> On the other hand, where the addresses input four times are different from one another, data are stored at respective different addresses of the individual blocks, as shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>(B). </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> At the time of read operation, the pointer need not be incremented and a randomly generated address signal may be input, thus enabling random access. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> In other respects, the operation of the fifth embodiment is identical with that of the fourth embodiment, and therefore, description thereof is omitted. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> The fifth embodiment also provides advantages similar to those achieved by the second embodiment described above. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> Also, the fifth embodiment provides the advantage that the WRITE-READ command interval as well as the WRITE-WRITE command interval can be shortened, as in the fourth embodiment. </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> Further, since the address signals P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> are used as the pointer, random access is available, unlike the fouth embodiment. Specifically, in the fifth embodiment, at the time of writing data into a memory bank, the address signals P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> need to be incremented to write the data into all of the blocks A to D. Thus, if P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> also are included in the address space, data cannot be written without incrementing P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight>. However, in the fifth embodiment, P<highlight><bold>0</bold></highlight>, P<highlight><bold>1</bold></highlight> are not included in the address space but is used as the pointer, and accordingly, the above restriction does not exist, making it possible to write data randomly. </paragraph>
<paragraph id="P-0238" lvl="0"><number>&lsqb;0238&rsqb;</number> In the above embodiments, the present invention is applied to clock synchronization type DRAM, by way of example. The application of the present invention is, however, not limited to such DRAM alone, and the invention may be applied to clock synchronization type SRAM, for example. SRAM originally has good random accessibility, but by applying the present invention, it is possible to further enhance the data transfer rate. </paragraph>
<paragraph id="P-0239" lvl="0"><number>&lsqb;0239&rsqb;</number> In the foregoing description of the embodiments, the present invention is applied, by way of example, to DRAM in which read operation and write operation are performed in response to read and write commands, respectively, but the application of the present invention is not limited to such DRAM alone. For example, the present invention may be applied to DRAM in which a memory bank is activated by an active command and read/write operation is performed in response to a read/write command supplied thereafter. </paragraph>
<paragraph id="P-0240" lvl="0"><number>&lsqb;0240&rsqb;</number> Although the fourth and fifth embodiments are described on the assumption that the number of data items to be written at a time is four, the present invention is not limited to such application alone and the number of data items to be written at a time may be two, three, or more than four. </paragraph>
<paragraph id="P-0241" lvl="0"><number>&lsqb;0241&rsqb;</number> While the present invention has been described in detail, it is to be noted that the above embodiments and their modifications are only illustrative of the present invention and that the invention is not limited to those alone. Obviously the present invention may be modified in various ways without departing from the scope and spirit thereof. </paragraph>
<paragraph id="P-0242" lvl="0"><number>&lsqb;0242&rsqb;</number> The foregoing is considered as illustrative only of the principles of the present invention. Further, since numerous modifications and changes will readily occur to those skilled in the art, it is not desired to limit the invention to the exact construction and applications shown and described, and accordingly, all suitable modifications and equivalents may be regarded as falling within the scope of the invention in the appended claims and their equivalents. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A semiconductor memory device having n (n&gt;1) banks, comprising: 
<claim-text>an address input circuit for receiving an input address; </claim-text>
<claim-text>a readout circuit for sequentially reading, from m (&lE;n) banks, data corresponding to one address input via the address input circuit; and </claim-text>
<claim-text>a data output circuit for outputting the data read by the readout circuit from the m banks to outside as collective data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the readout circuit reads data from the m banks sequentially at predetermined intervals of time such that congestion of data does not occur. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising an output data quantity setting circuit for setting a quantity of data to be output from the data output circuit, and 
<claim-text>wherein the readout circuit sequentially reads data from a number of banks corresponding to the data quantity set by the output data quantity setting circuit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising an auto-precharge circuit for automatically precharging each of the banks after access to the each bank is ended. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. An information processing system including a semiconductor memory device having n (n&gt;1) banks, and a control device for controlling the semiconductor memory device, wherein 
<claim-text>the semiconductor memory device comprises: 
<claim-text>an address input circuit for receiving an input address; </claim-text>
<claim-text>a readout circuit for sequentially reading, from m (&lE;n) banks, data corresponding to one address input via the address input circuit; and </claim-text>
<claim-text>a data output circuit for outputting the data read by the readout circuit from the m banks to outside as collective data, and </claim-text>
</claim-text>
<claim-text>the control device comprises: 
<claim-text>a control circuit for controlling the semiconductor memory device in accordance with a cycle time determined by a read cycle of the readout circuit; and </claim-text>
<claim-text>an access inhibit circuit for inhibiting access to a predetermined bank in accordance with the bank from which data is being read by the readout circuit. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A semiconductor memory device comprising: 
<claim-text>a plurality of memory banks having identical addresses assigned thereto, identical data being written into the memory banks in response to a write command; and </claim-text>
<claim-text>a bank selection circuit for selecting one of the memory banks in response to a read command, and for sequentially selecting the memory banks in response to the write command such that the memory banks individually start a write operation in a staggered manner. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the bank selection circuit includes a shift register for sequentially activating bank selection signals for selecting the respective memory banks, in synchronism with the read command and the write command. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, further comprising a write timing generator circuit for generating a write timing signal for executing the write operation, in response to the write command a number of times corresponding to the number of the memory banks, and 
<claim-text>wherein during the write operation, the bank selection circuit sequentially activates the bank selection signals in synchronism with the write timing signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, further comprising a data register for holding write data supplied in association with the write command, and 
<claim-text>wherein the write data associated with a preceding write command and held by the data register is written into the memory banks in response to the write command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, further comprising: 
<claim-text>an address register for holding a write address supplied in association with the write command; </claim-text>
<claim-text>an address comparator circuit for comparing, during the read operation, a read address supplied in association with the read command with the write address held by the address register, and outputting a coincidence signal if the read address coincides with the write address; and </claim-text>
<claim-text>a data switching circuit, responsive to reception of the coincidence signal, for outputting, as readout data, the write data held by the data register. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the data register and the address register respectively store a plurality of write data and write addresses corresponding to a plurality of write commands, and 
<claim-text>the plurality of write data held by the data register are written into the memory banks in response to the write command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the memory banks are each divided into a plurality of blocks, and the data corresponding to the plurality of write commands are written into the respective blocks in response to the write command. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein when the data are written by a write circuit, the blocks are specified by address data or a pointer. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein, if one of the memory banks from which data is to be read out is performing write operation, the data is read from a different one of the memory banks. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The semiconductor memory device according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein, if one of the memory banks into which data is to be written is performing read operation, the data is written after completion of the read operation.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002378A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002378A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002378A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002378A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002378A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002378A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002378A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002378A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002378A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002378A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002378A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002378A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002378A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002378A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002378A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002378A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002378A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030002378A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030002378A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030002378A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030002378A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030002378A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030002378A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030002378A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030002378A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030002378A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030002378A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
