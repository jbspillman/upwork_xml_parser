<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005387A1-20030102-D00000.TIF SYSTEM "US20030005387A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00001.TIF SYSTEM "US20030005387A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00002.TIF SYSTEM "US20030005387A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00003.TIF SYSTEM "US20030005387A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00004.TIF SYSTEM "US20030005387A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00005.TIF SYSTEM "US20030005387A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00006.TIF SYSTEM "US20030005387A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00007.TIF SYSTEM "US20030005387A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00008.TIF SYSTEM "US20030005387A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00009.TIF SYSTEM "US20030005387A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00010.TIF SYSTEM "US20030005387A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00011.TIF SYSTEM "US20030005387A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00012.TIF SYSTEM "US20030005387A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00013.TIF SYSTEM "US20030005387A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00014.TIF SYSTEM "US20030005387A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00015.TIF SYSTEM "US20030005387A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00016.TIF SYSTEM "US20030005387A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00017.TIF SYSTEM "US20030005387A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030005387A1-20030102-D00018.TIF SYSTEM "US20030005387A1-20030102-D00018.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005387</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10230991</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020830</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>09-146934</doc-number>
</priority-application-number>
<filing-date>19970604</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>09-233170</doc-number>
</priority-application-number>
<filing-date>19970829</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H03M013/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>714</class>
<subclass>785000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Code transmission scheme for communication system using error correcting codes</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10230991</doc-number>
<kind-code>A1</kind-code>
<document-date>20020830</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09089450</doc-number>
<document-date>19980603</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Keiji</given-name>
<family-name>Tsunoda</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>KABUSHIKI KAISHA TOSHIBA</organization-name>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>FOLEY AND LARDNER</name-1>
<name-2>SUITE 500</name-2>
<address>
<address-1>3000 K STREET NW</address-1>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20007</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">In a code transmission scheme for a communication system using error correcting codes, the transmitting side generates at least one transmitting side syndrome value by carrying out a syndrome calculation for the information to be transmitted, and transmits to a receiving side at least one information packet containing the information to be transmitted and at least one redundant packet containing the transmitting side syndrome value. Then, upon receiving at least a part of the information packet and the redundant packet, the receiving side obtains at least one receiving side syndrome value by carrying out a syndrome calculation for an information contained in the information packet as received, and performs error correction, if required, by calculating a difference between the transmitting side syndrome value contained in the received redundant packet and the receiving side syndrome value, so that a circuit size and an amount of software programs can be reduced without affecting the error correction performance. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to a code transmission scheme to be used for the purpose of realizing reliable end-to-end communications between networks, especially computers. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Background Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The computer communication conventionally adopts a scheme in which data are sequentially transferred between small sized networks called subnets via devices such as bridges and routers. Here, a data unit for transfer is called an IP (Internet Protocol) packet. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The IP packet transfer has been realized on the best effort basis historically, where it is assumed that data can be discarded or lost at network devices such as switches and routers provided within the network. Then, when an IP packet transmitted from a transmitting side fails to reach a receiving side, in general, either an end-to-end re-transmission has been carried out (by TCP (Transmission Control Protocol), for example), or no action has been taken (by UDP (User Datagram Protocol), for example) even if this communication fails. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Also, conventionally, communications using computers have been predominantly of point-to-point type. However, recently, there is an increasing need for communications using multicast. Conventionally, in the case of realizing multicast, it has been common to adopt a scheme in which UDP and the like is used as the upper level protocol and no request for high quality is allowed. The reason for this is that, if the end-to-end re-transmission control is carried out by utilizing the multicast, a number of ACK (Acknowledgement)/NACK (Negative Acknowledgement) signals for indicating whether the receiving has been successful or not from the receiving side increases in proportion to a number of receiving terminals, so that the processing load at a transmitting terminal can be increased. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In view of such a background, there have been propositions for a scheme using end-to-end error correction as a scheme for realizing both a multicast system and reliable communications. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> As a first example, a communication scheme that secures the end-to-end reliability by adding error correction cells using Reed-Solomon (RS) codes to a plurality of ATM cells has been disclosed in Japanese Patent Application Laid Open No. 8-186570 (1996). According to this scheme, the usual Reed-Solomon code is separated into the information section used as ATM cells for data and the redundant section used as ATM cells for codes, so that when m cells for data and one cell for codes are provided, it is possible to recover discarded cells up to one cell among (m&plus;1) cells using the error correction. By such an application of the error correcting codes, it is possible to realize high quality end-to-end communications. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> However, this scheme is associated with the following problem. In general, it is preferable to be able to set the level of redundancy individually by a communication network. However, because the usual code words are used currently, it is necessary to carry out different coding calculating processing when the number of redundant cells to be attached is changed. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> More specifically, the RS code has the redundant section which is a residue obtained by dividing the information section by a polynomial called G(X). For instance, in the case of using one cell redundancy, G(X) can be expressed as: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>G</italic></highlight>(<highlight><italic>X</italic></highlight>)&equals;<highlight><italic>X&minus;&agr;</italic></highlight><highlight><superscript>b</superscript></highlight>&emsp;&emsp;(1) </in-line-formula></paragraph>
<paragraph id="P-0011" lvl="7"><number>&lsqb;0011&rsqb;</number> where &agr; is a root of a primitive polynomial used as a base of this code production, and b is an integer whose value is predetermined between the transmitting side and the receiving side. In other words, G(X) must be shared at the transmitting side and the receiving side. However, in the cases of two cells redundancy and three cells redundancy, G(X) can be expressed respectively as: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>G</italic></highlight>(<highlight><italic>X</italic></highlight>)&equals;(<highlight><italic>X&minus;&agr;</italic></highlight><highlight><superscript>b</superscript></highlight>)(<highlight><italic>X&minus;&agr;</italic></highlight><highlight><superscript>(b&plus;1)</superscript></highlight>)&emsp;&emsp;(2) </in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>G</italic></highlight>(<highlight><italic>X</italic></highlight>)&equals;(<highlight><italic>X&minus;&agr;</italic></highlight><highlight><superscript>b</superscript></highlight>)(<highlight><italic>X&minus;&agr;</italic></highlight><highlight><superscript>(b&plus;1)</superscript></highlight>)(<highlight><italic>X&minus;&agr;</italic></highlight><highlight><superscript>(b&plus;2)</superscript></highlight>)&emsp;&emsp;(3) </in-line-formula></paragraph>
<paragraph id="P-0012" lvl="7"><number>&lsqb;0012&rsqb;</number> In these cases, the-respective polynomials have different degrees so that it is necessary to carry out a division calculation separately for each of them. This implies in terms of the hardware implementation that there is a need to provide completely separate calculation circuit for each of them so that it can cause an increase in the circuit size. Also, in terms of the software program, this implies that a separate program must be produced for each of them, so that it can cause an increase in the amount of software programs. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Next, as a second example of a proposition for a scheme using end-to-end error correction, a scheme which is conceived as a technique for combining the error correction and the re-transmission will be described. This scheme is considered particularly effective in the case of multicast. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> First, a sender sends m information packets and l redundant packets that are associated with these information packets to a receiver, where l is a 0 or a positive integer. When the receiver detects that l or less packets among (m&plus;l) packets fails to arrive, the correction using the redundant packets is carried out. However, when discarding of l&prime; packets (l&prime;&gt;l) occurs in the middle, the receiver requests the re-transmission of (l&prime;&minus;l) packets to the sender. In response, the sender newly produces (l&prime;&minus;l) redundant packets and sends them to the receiver. As a result, the receiver obtains l&prime; redundant packets so that it becomes possible to recover the original information packets by carrying out the error correction with respect to discarding of l&prime; packets. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In this scheme, the sender is initially capable of producing l redundant packets using the method as explained in the first example, but there is a problem as to how (l&prime;&minus;l) redundant packets are to be produced subsequently. For instance, suppose that the transmission using two packets redundancy with l&equals;2 is carried out initially as in the first example, using G(X) given by: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>G</italic></highlight>(<highlight><italic>X</italic></highlight>)&equals;(<highlight><italic>X&minus;&agr;</italic></highlight><highlight><superscript>b</superscript></highlight>)(<highlight><italic>X&minus;&agr;</italic></highlight><highlight><superscript>(b&plus;1)</superscript></highlight>)&emsp;&emsp;(4) </in-line-formula></paragraph>
<paragraph id="P-0016" lvl="7"><number>&lsqb;0016&rsqb;</number> and suppose that four packets fail to arrive at the receiving side due to discarding. In such a case, the re-transmission request for remaining two packets will be issued from the receiving side to the transmitting side. In response, the transmitting side is required to produce the redundant packets using, for example, a polynomial given by: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>G</italic></highlight>(<highlight><italic>X</italic></highlight>)&equals;(<highlight><italic>X&minus;&agr;</italic></highlight><highlight><superscript>(b&plus;2)</superscript></highlight>)(<highlight><italic>X&minus;&agr;</italic></highlight><highlight><superscript>(b&plus;3)</superscript></highlight>)&emsp;&emsp;(5) </in-line-formula></paragraph>
<paragraph id="P-0017" lvl="7"><number>&lsqb;0017&rsqb;</number> At this point, it is meaningless to use the equation (4) because that would result in the transmission of the same redundant packets, so that it is necessary to use the polynomial like that of the equation (5) which uses different powers of &agr;. Consequently, there is a need to newly produce G&prime;(X) according to the number of re-transmission packets requested from the receiving side, and therefore there are problems of an increase in the circuit size and an increase in the amount of software programs similarly as in the first example. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Thus, conventionally, the re-transmission control using a protocol such as TCP has been carried out for data that requires the reliability, but a scheme using the error correction for the purpose of dealing with multicast has appeared. However, in the conventional scheme that transmits the redundant section of the usual error correcting codes as it is, there is a problem that the number of redundant packets cannot be changed flexibly. In addition, even in the case of combining that with the re-transmission control, there is also a problem that the redundant packets cannot be provided flexibly at a time of re-transmission. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> It is therefore an object of the present invention to provide a code transmission scheme for a communication system using error correcting codes, which is capable of reducing a circuit size and an amount of software programs without affecting the error correction performance. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> It is another object of the present invention to provide a flexible error correction scheme according to a state of communication network. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> It is another object of the present invention to provide an error correction scheme which can produce redundant packets easily even in the case of using the re-transmission in combination. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> It is another object of the present invention to provide a reliable communication system realizing the multicast, using the error correction scheme of the present invention. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> According to one aspect of the present invention there is provided a method for transmitting an error correcting code corresponding to an information to be transmitted in a communication system, comprising the steps of: generating at least one transmitting side syndrome value by carrying out a syndrome calculation for the information to be transmitted at a transmitting side; and transmitting, from the transmitting side to a receiving side, at least one information packet containing the information to be transmitted and at least one redundant packet containing the transmitting side syndrome value generated by the generating step as a redundant part of the error correcting code. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In this aspect of the present invention, the generating step can generate as many transmitting side syndrome values as a number corresponding to a desired error correction capability using said number of mutually different polynomials of degree one. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Conventionally, one redundant part is generated using a polynomial of-degree corresponding to the desired error correction capability, but the present invention generates said number of redundant parts using said number of polynomials of degree one, so that when it is desired to increase the error correction capability, it suffices to simply increase the number of mutually different polynomials of degree one and repeat the coding calculation as many times as that number using the common calculation method or circuit configuration, rather than calculating the redundant part using the polynomial of increased degree (which makes the circuit larger and complicated as the different circuit configuration is required for the coding calculation when the degree is changed). </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Also, in this aspect of the present invention, the method can further comprise the step of: transmitting another redundant packet containing another transmitting side syndrome value, as re-transmission from the transmitting side to the receiving side, when the receiving side cannot recover the information from the information packet and the redundant packet received by the receiving step. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> In the case of re-transmission, it suffices to generate and transmit as many redundant parts as necessary for the recovery of the information (or more) using that many of the polynomials of degree one (which are different from those used at a time of initial transmission), so that the coding calculation can be carried out using the common calculation method or circuit configuration both at a time of initial transmission and at a time of re-transmission. Here, the number of redundant parts to be transmitted at a time of re-transmission may be the number requested from the receiving side. Alternatively, it is also possible to use a scheme in which the transmitting side transmits a prescribed number of redundant parts and each receiving side selectively receives as many as necessary or can be processed at each receiving side. Also, in the case of using multicast, even when the number of redundant parts necessary for the recovery of the information at some receiving side differs from the number of redundant parts necessary for the recovery of the information at another receiving side, there is no need to carry out totally different calculations (using polynomials of different degrees) with respect to these receiving sides as has been required conventionally, and it suffices to generate and transmit the largest number of redundant parts necessary such that some receiving side can recover the information using all of these redundant parts while another receiving side can recover the information using only part of these redundant parts. Here, it is also possible to send all of the plurality of generated redundant parts to some receiving side and only a part of the plurality of generated redundant parts to another receiving side. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Also, in this aspect of the present invention, the transmitting step can transmit the information packet and the redundant packet by multicast with respect to a plurality of receiving sides. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> In the case of multicast, even when the error correction capability desired by some receiving side differs from the error correction capability desired by another receiving side, there is no need to carry out totally different calculations (using polynomials of different degrees) with respect to these receiving sides as has been required conventionally, and it suffices to generate some number of redundant parts of the error correcting code using the common calculation method or circuit configuration, transmit them to the receiving sides, and receive and use only as many redundant parts as necessary or can be processed at each receiving side. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> According to another aspect of the present invention there is provided a method for transmitting an error correcting code corresponding to an information to be transmitted in a communication system, comprising the steps of: transmitting, from a transmitting side to a receiving side, packets generated by applying an error correction coding processing with respect to the information to be transmitted at the transmitting side; and generating at least one transmitting side syndrome value by carrying out a syndrome calculation for the information to be transmitted at the transmitting side, and transmitting, from the transmitting side to the receiving side, at least one redundant packet containing the transmitting side syndrome value as a redundant part of the error correcting code, when the receiving side cannot recover the information to be transmitted from the packets received from the transmitting side and requests a re-transmission. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> It is possible to realize the significant effect by carrying out the transmission using arbitrary error correction coding scheme (which can be even the conventional coding scheme) at a time of transmitting the information first, and then carry out the transmission using the error correction coding scheme of the present invention when a re-transmission is requested. For example, in the case of multicast communication, even when the amount of information necessary for the recovery of the information at some receiving side differs from the amount of information necessary for the recovery of the information at another receiving side, there is no need to carry out totally different calculations (using polynomials of different degrees) with respect to these receiving sides as has been required conventionally, and it suffices to generate some number of redundant parts using the common calculation method or circuit configuration, and retransmit them to the plurality of receiving sides, such that some receiving side can recover the information using all of these redundant parts while another receiving side can recover the information using only part of these redundant parts. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> According to another aspect of the present invention there is provided a transmission device for transmitting an error correcting code corresponding to an information to be transmitted in a communication system, comprising: a generation unit for generating at least one transmitting side syndrome value by carrying out a syndrome calculation for the information to be transmitted at a transmitting side; and a transmission unit for transmitting, from the transmitting side to a receiving side, at least one information packet containing the information to be transmitted and at least one redundant packet containing the transmitting side syndrome value generated by the generation unit as a redundant part of the error correcting code. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> According to another aspect of the present invention there is provided a reception device for receiving an error correcting code corresponding to an information to be transmitted in a communication system, comprising: a reception unit for receiving at least a part of at least one information packet containing the information to be transmitted and at least one redundant packet containing at least one transmitting side syndrome value for the information to be transmitted as calculated by a transmitting side; a calculation unit for obtaining at least one receiving side syndrome value by carrying out a syndrome calculation for an information contained in the information packet as received by the reception unit; and a correction unit for performing error correction, if required, by calculating a difference between the transmitting side syndrome value contained in the redundant packet as received by the reception unit and the receiving side syndrome value obtained by the calculation unit. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> According to another aspect of the present invention there is provided a communication system for transmitting an error correcting code corresponding to an information to be transmitted, comprising: a generation unit for generating at least one transmitting side syndrome value by carrying out a syndrome calculation for the information to be transmitted at a transmitting side; a transmission unit for transmitting, from the transmitting side to a receiving side, at least one information packet containing the information to be transmitted and at least one redundant packet containing the transmitting side syndrome value generated by the generation unit as a redundant part of the error correcting code; a reception unit for receiving at least a part of the information packet and the redundant packet transmitted by the transmission unit; a calculation unit for obtaining at least one receiving side syndrome value by carrying out a syndrome calculation for an information contained in the information packet as received by the reception unit; and a correction unit for performing error correction, if required, by calculating a difference between the transmitting side syndrome value contained in the redundant packet as received by the reception unit and the receiving side syndrome value obtained by the calculation unit. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Other features and advantages of the present invention will become apparent from the following description taken in conjunction with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram for explaining a method for producing redundant packets corresponding to information packets using fixed packet length. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram for explaining a method for producing redundant packets corresponding to information packets using variable packet length. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic diagram showing a circuit configuration on a transmitting side according to a conventional error correction scheme. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a schematic diagram showing a circuit configuration on a transmitting side according to the first embodiment of the present invention. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram showing a layer image in an IP packet communication system according to the first embodiment of the present invention. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a schematic diagram showing an operation state of an IP packet communication system according to the first embodiment of the present invention. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram showing an operation on a transmitting side in the IP packet communication system of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a diagram showing a configuration of an FEC header within an IP packet used in the IP packet communication system of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram showing an operation on a receiving side in the IP packet communication system of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a block diagram showing a configuration of a transmission device in the IP packet communication system of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a block diagram showing a configuration of a reception device in the IP packet communication system of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a schematic diagram showing a circuit configuration on a transmitting side according to a conventional error correction and re-transmission control scheme. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a schematic diagram showing a circuit configuration on a transmitting side according to an error correction and re-transmission control scheme of the second embodiment of the present invention. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a diagram showing an error correction scheme in a multicast communication system according to the third embodiment of the present invention. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a diagram showing an error correction and re-transmission control scheme in a multicast communication system according to the fourth embodiment of the present invention. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a sequence chart for a re-transmission processing according to a conventional scheme. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a sequence chart for a re-transmission processing according to the fourth embodiment of the present invention. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a diagram showing a case where routers have a function for merging a plurality of NACK signals in the fourth embodiment of the present invention. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a diagram showing a case of carrying out re-transmission processing in group units in the fourth embodiment of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 1</cross-reference> to <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the first embodiment of a code transmission scheme according to the present invention will be described in detail. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> First, the conventional general coding scheme using the error correction will be described. As an example, the case of using systematic cyclic codes will be described. Here the systematic implies that the result of the error correction coding is in a state in which the original information is left unchanged as an information section while a redundant section is formed separately from the information section so that the redundant section can be clearly separated from the information section. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In the cyclic symbols, an information series I of m symbols given by: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>I</italic></highlight>&equals;(<highlight><italic>i&lsqb;m&minus;</italic></highlight>1&rsqb;,<highlight><italic>i&lsqb;m&minus;</italic></highlight>2&rsqb;, . . . ,<highlight><italic>i&lsqb;</italic></highlight>0&rsqb;)&emsp;&emsp;(6) </in-line-formula></paragraph>
<paragraph id="P-0058" lvl="7"><number>&lsqb;0058&rsqb;</number> can be expressed as I(X). Then, a polynomial R(X) of degree less than k is obtained with respect to the generator polynomial G(X) of degree k as follows. </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>I</italic></highlight>(<highlight><italic>X</italic></highlight>)&middot;<highlight><italic>X</italic></highlight><highlight><superscript>k</superscript></highlight><highlight><italic>&equals;Q</italic></highlight>(<highlight><italic>X</italic></highlight>)<highlight><italic>G</italic></highlight>(<highlight><italic>X</italic></highlight>)&minus;<highlight><italic>R</italic></highlight>(<highlight><italic>X</italic></highlight>)&emsp;&emsp;(7) </in-line-formula></paragraph>
<paragraph id="P-0059" lvl="7"><number>&lsqb;0059&rsqb;</number> where Q(X) is a quotient polynomial, and k is a prescribed constant. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The code word C is expressed in a form of polynomial C(X) as follows. </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>C</italic></highlight>(<highlight><italic>X</italic></highlight>)&equals;<highlight><italic>I</italic></highlight>(<highlight><italic>X</italic></highlight>)&middot;<highlight><italic>X</italic></highlight><highlight><superscript>k</superscript></highlight><highlight><italic>&plus;R</italic></highlight>(<highlight><italic>X</italic></highlight>)&emsp;&emsp;(8) </in-line-formula></paragraph>
<paragraph id="P-0061" lvl="7"><number>&lsqb;0061&rsqb;</number> In the vector expression, this code word C can be expressed as: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>C</italic></highlight>&equals;(<highlight><italic>i&lsqb;m&minus;</italic></highlight>1&rsqb;,<highlight><italic>i&lsqb;m&minus;</italic></highlight>2&rsqb;, . . . ,<highlight><italic>i&lsqb;</italic></highlight>0&rsqb;, <highlight><italic>r&lsqb;k&minus;</italic></highlight>1&rsqb;,<highlight><italic>r&lsqb;k&minus;</italic></highlight>2&rsqb;, . . . ,<highlight><italic>r&lsqb;</italic></highlight>0&rsqb;)&emsp;&emsp;(9) </in-line-formula></paragraph>
<paragraph id="P-0062" lvl="7"><number>&lsqb;0062&rsqb;</number> which is in a form of C&equals;(I&verbar;R). </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Suppose that this code word C is transmitted by a sender toward a receiver. Here it is assumed that communications are carried out in packet units and no bit error occurs but a dropping in symbol units occurs at an intermediate communication path. Now, the form of communications in which the dropping in symbol units can occur will be described. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a relationship between the packet communication and the code word. As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the code word is divided in such a manner that one symbol enters into one packet. Then, the information symbols are entered into the first packet to the m-th packet while the redundant symbols are entered into the (m&plus;1)-th packet to the (m&plus;k)-th packet. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Looking at the first packet, it appears as if its payload is formed by the first information symbols of a plurality of code words. Similarly, the (m&plus;1)-th packet appears as if its payload is formed by the (m&plus;1)-th symbols of a plurality of code words that are redundant symbols. In this manner, packets are completely divided into information packets that entirely comprises information symbols and redundant packets that entirely comprises redundant symbols. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> Packets may be discarded at the router and the like and when one packet is discarded, it appears as if one symbol has been discarded from a viewpoint of each code word of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Note that <cross-reference target="DRAWINGS">FIG. 1</cross-reference> has been described for the case where all the packets have the same length, but in the case where packets with different lengths exist as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the redundant packets are produced in alignment to the longest one (the second packet in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) among the information packets. In this case, there can be a code word for which effectively no data are contained in symbols of the information packet part so that no information loss occurs for that code word even when some information packets are discarded. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> As described, the information to be transmitted is entered distributedly into a plurality of information packets in symbols units first. Also, the redundant part to be transmitted is entered distributedly into a plurality of redundant packets in symbol units as well. By inserting this so called code word in a form of being interleaved with respect to a plurality of packets, the discarding of one packet is going to imply the dropping of one symbol for each one of a plurality (n pieces for example) of code words that are contained in that one packet.-Note that, in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, positions of symbols of a code word are neatly aligned along one column, but there is no need to align them along one column provided that the way of arranging them is determined in advance. Also, usually, one symbol from each one of a plurality of code words is entered into the payload of one packet for the sake of simplicity, but it is also possible to set the number of symbols to be inserted to two or more. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The receiving side receives a code word C&prime; from which some symbols are dropped in this manner. The symbol dropping can be considered as equivalent to the receiving of a symbol with a value <highlight><bold>0</bold></highlight>, so that it can be expressed as follows. </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>C</italic></highlight>&prime;&equals;(<highlight><italic>i&lsqb;m&minus;</italic></highlight>1&rsqb;, . . . ,0, . . . ,<highlight><italic>i&lsqb;</italic></highlight>0&rsqb;, <highlight><italic>r&lsqb;k&minus;</italic></highlight>1&rsqb;, . . . ,0, . . . ,<highlight><italic>r&lsqb;</italic></highlight>0&rsqb;)&emsp;&emsp;(10) </in-line-formula></paragraph>
<paragraph id="P-0070" lvl="7"><number>&lsqb;0070&rsqb;</number> On the other hand, C&prime; can be considered as C plus an error E called dropping, where E can be expressed as: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>E</italic></highlight>&equals;(0, . . . ,<highlight><italic>i&lsqb;*&rsqb;, . . . ,</italic></highlight>0,0, . . . ,<highlight><italic>r&lsqb;**&rsqb;, . . . ,</italic></highlight>0)&emsp;&emsp;(11) </in-line-formula></paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The receiver carries out the division by G(X) with respect to C&prime;(X), and obtains the residue of that division. This residue is called a syndrome. That the syndrome value is 0 implies that there is no error. When the syndrome value becomes 0 despite of the fact that there are some dropping in packets, it implies that a symbol value of the corresponding packet section is equal to the assumed value corresponding to the symbol dropping, that is 0. If is also possible to assume a value other than 0 for the symbol dropping, but it is simplest to assume 0 for-the symbol dropping. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> When the syndrome value becomes a value other than 0, a value of the dropped symbol is obtained from the dropped symbol position and the syndrome value. In the case where it is possible to correct the dropping of two or more symbols, the syndrome is often expressed in a vector form in general. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> In the following, the case using the RS codes on GF(2<highlight><superscript>h</superscript></highlight>) will be described as a representative example. The RS codes are very efficient codes that can correct the dropping of up to k symbols when there is k symbols redundancy, among many codes. Here, however, the similar method also applies to the block codes other than the RS codes so that the following description has the sufficient generality. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> In the RS codes, the syndrome calculation and the correction of dropped symbols are carried out as follows. First, the generator polynomial G(X) is expressed as a polynomial of degree k in terms of a root a of the irreducible polynomial on GF(2<highlight><superscript>h</superscript></highlight>) as: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>G</italic></highlight>(<highlight><italic>X</italic></highlight>)&equals;(<highlight><italic>X&plus;&agr;</italic></highlight><highlight><superscript>b</superscript></highlight>)(<highlight><italic>X&plus;&agr;</italic></highlight><highlight><superscript>(b&plus;1)</superscript></highlight>)(<highlight><italic>X&plus;&agr;</italic></highlight><highlight><superscript>(b&plus;k&minus;1)</superscript></highlight>)&emsp;&emsp;(12) </in-line-formula></paragraph>
<paragraph id="P-0075" lvl="7"><number>&lsqb;0075&rsqb;</number> where b is a prescribed constant (integer). On the other hand, the received code word C&prime; is expressed in a form of a polynomial as: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>C</italic></highlight>&prime;(<highlight><italic>X</italic></highlight>)&equals;<highlight><italic>i&lsqb;m&minus;</italic></highlight>1&rsqb;<highlight><italic>X</italic></highlight><highlight><superscript>(m&plus;k&minus;1)</superscript></highlight>&plus; . . . &plus;0<highlight><italic>X</italic></highlight><highlight><superscript>(*)</superscript></highlight><highlight><italic>&plus; . . . &plus;i&lsqb;</italic></highlight>0&rsqb;<highlight><italic>X</italic></highlight><highlight><superscript>k</superscript></highlight><highlight><italic>&plus;r&lsqb;k&minus;</italic></highlight>1&rsqb;<highlight><italic>X</italic></highlight><highlight><superscript>(k&minus;1)</superscript></highlight>&plus; . . . &plus;0<highlight><italic>X</italic></highlight><highlight><superscript>(**)</superscript></highlight><highlight><italic>&plus; . . . &plus;r&lsqb;</italic></highlight>0&rsqb;&emsp;&emsp;(13) </in-line-formula></paragraph>
<paragraph id="P-0076" lvl="7"><number>&lsqb;0076&rsqb;</number> Using this expression, k pieces of the syndrome S&lsqb;i&rsqb; (i&equals;0 to k&minus;1) are calculated as follows. </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>S&lsqb;i&rsqb;&equals;C</italic></highlight>&prime;(&agr;<highlight><superscript>(b&plus;i)</superscript></highlight>)&emsp;&emsp;(14) </in-line-formula></paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Now, suppose that there is dropping of l symbols due to discarding of l packets, where 0&lt;l&lE;k. Here, the dropped symbol positions will be denoted sequentially as a&lsqb;l&minus;1&rsqb;, a&lsqb;l&minus;2&rsqb;, . . . , a&lsqb;0&rsqb;, and their respective values will be denoted as e&lsqb;l&minus;1&rsqb;, e&lsqb;l&minus;2&rsqb;, . . . , e&lsqb;0&rsqb;. The symbol positions are assumed to be arranged from (m&plus;k&minus;1)-th one at the top and 0-th one at the end. If there is no dropping, all S&lsqb;i&rsqb; will become 0, so that in terms of the values of the dropped section that remains, S&lsqb;i&rsqb; becomes: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>S&lsqb;i&rsqb;&equals;e&lsqb;l&minus;</italic></highlight>1&rsqb;(&agr;<highlight><superscript>(b&plus;i)</superscript></highlight>)<highlight><superscript>a &lsqb;l&minus;1&rsqb;</superscript></highlight><highlight><italic>&plus;e&lsqb;l&minus;</italic></highlight>2&rsqb;(&agr;<highlight><superscript>(b&plus;i)</superscript></highlight>)<highlight><superscript>a&lsqb;l&minus;2&rsqb;</superscript></highlight><highlight><italic>&plus; . . . &plus;e&lsqb;</italic></highlight>0&rsqb;(&agr;<highlight><superscript>(b&plus;i)</superscript></highlight>)<highlight><superscript>a&lsqb;0&rsqb;</superscript></highlight>&emsp;&emsp;(15) </in-line-formula></paragraph>
<paragraph id="P-0078" lvl="7"><number>&lsqb;0078&rsqb;</number> Since the values at a&lsqb;l&minus;1&rsqb; to a&lsqb;0&rsqb; are known, each symbol value can be obtained by solving simultaneous equations for l values from e&lsqb;l&minus;1&rsqb; to e&lsqb;0&rsqb; using arbitrary l syndromes among k syndromes of S&lsqb;0&rsqb; to S&lsqb;k&minus;1&rsqb;, or by using any other solution method that has the equivalent function. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Now, as already mentioned in the description of the background art section, the conventional scheme requires the operation to divide I(X) by G(X) at the transmitting side, and there is a problem that the degree of G(X) becomes different depending on how many redundant packets are to be attached in this operation, so that the calculation method also becomes different. This does not present any problem if the number of redundant packets is always fixed but usually it is required to make the number of redundant packets variable depending on the network characteristics so that a plurality of G(X) must be prepared in correspondence to the variable number of redundant packets. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> In the case of realizing this operation by hardware, in particular, the circuit size increases roughly in proportion to the degree of G(X), so that when it is required to make the number of redundant packets variable between 1 to k, for example, the required circuit size becomes: </paragraph>
<paragraph lvl="0"><in-line-formula>1&plus;2&plus; . . . &plus;<highlight><italic>k&equals;k</italic></highlight>(<highlight><italic>k&plus;</italic></highlight>1)/2&emsp;&emsp;(16) </in-line-formula></paragraph>
<paragraph id="P-0081" lvl="7"><number>&lsqb;0081&rsqb;</number> in units of a circuit size in the case of using one redundant packet. Similarly, in the case of realizing this operation by software, the required amount of software programs will increase in proportion to this circuit size of the equation (16). </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> In view of the above, the error correction scheme used in this first embodiment will now be described in detail. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> In order to realize the error correction, it suffices to ascertain the error positions and the syndrome values as indicated in the equation (15). Consequently, if it is possible to calculate the syndrome values at the transmitting side or the receiving side without using the division calculations based on G(X) of different degrees, this calculation will be sufficient to yield the desired result. For this reason, this first embodiment uses a syndrome calculation method which does not use the division calculations based on G(X) of different degrees. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> In the following, an exemplary case of using the systematic RS codes on GF(2<highlight><superscript>h</superscript></highlight>) will be described, but this method has a sufficient generality so that it is equally applicable to the other block codes as well. In fact, in this case the RS codes themselves are not transmitted and the information section and the redundant section are treated separately. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> At the transmitting side, the same generator polynomial as that of the equation (12) is used. First, each root of G(X) is substituted into the information series I(X), to calculate a syndrome T&lsqb;i&rsqb; (i&equals;0 to k&minus;1), which will be referred to as a transmitting side syndrome value. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> In other words, T&lsqb;i&rsqb; can be defined as remainders obtained by dividing I(X) by each one of k pieces of different polynomials of degree 1 in forms of X&minus;&agr;<highlight><superscript>(b&plus;i) </superscript></highlight>(i&equals;0 to k&minus;1). Alternatively, T&lsqb;i&rsqb; can be described as quantities obtained by substituting each one of k pieces of different powers of &agr; in a form of &agr;<highlight><superscript>(b&plus;i) </superscript></highlight>into I(X). This substitution procedure resembles the syndrome calculation in the decoding procedure for the conventional RS codes. Note however that, in the case of the conventional RS codes, the powers of a are substituted into C(X) which is the polynomial expression of the code word C, but the present invention differs from this in that the substitution is carried out with respect to the polynomial I(X) of the information part rather than the code word. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Then, the transmitting side attaches this T to the information series I, and sends D&equals;(I&verbar;T) of a format different from the code word C, to the receiving side, as follows. </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>T&lsqb;i&rsqb;&equals;I</italic></highlight>(&agr;<highlight><superscript>(b&plus;i)</superscript></highlight>)&emsp;&emsp;(17) </in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>D</italic></highlight>&equals;(<highlight><italic>i&lsqb;m&minus;</italic></highlight>1&rsqb;,<highlight><italic>i&lsqb;m&minus;</italic></highlight>2&rsqb;, . . . ,<highlight><italic>i&lsqb;</italic></highlight>0&rsqb;, <highlight><italic>T&lsqb;k&minus;</italic></highlight>1&rsqb;,<highlight><italic>T&lsqb;k&minus;</italic></highlight>2&rsqb;, . . . ,<highlight><italic>T&lsqb;</italic></highlight>0&rsqb;)&emsp;&emsp;(18) </in-line-formula></paragraph>
<paragraph id="P-0088" lvl="7"><number>&lsqb;0088&rsqb;</number> Here, the order for transmitting T&lsqb;i&rsqb; may be opposite to that indicated in the equation (18) instead. The method for transmitting D can be the same as that of the conventional scheme. Namely, the transmission is carried out in forms of the information packets and the redundant packets as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, and the discarding occurs in packet units. Consequently, the symbol dropping in D occurs in the middle and the receiving side receives D&prime; resulting from the symbol dropping which is given by: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>D</italic></highlight>&prime;&equals;(<highlight><italic>i&lsqb;m&minus;</italic></highlight>1&rsqb;, . . . ,0, . . . ,<highlight><italic>i&lsqb;</italic></highlight>0&rsqb;, <highlight><italic>T&lsqb;k&minus;</italic></highlight>1&rsqb;, . . . ,<highlight><italic>T&lsqb;</italic></highlight>0&rsqb;)&emsp;&emsp;(19) </in-line-formula></paragraph>
<paragraph id="P-0089" lvl="7"><number>&lsqb;0089&rsqb;</number> On the other hand, D&prime; can be considered as D plus an error E&prime; called dropping, where E&prime; can be expressed as: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>E</italic></highlight>&prime;&equals;(0, . . . ,<highlight><italic>i&lsqb;*&rsqb;, . . . ,</italic></highlight>0,0, . . . ,<highlight><italic>T&lsqb;**&rsqb;, . . . ,</italic></highlight>0)&emsp;&emsp;(20) </in-line-formula></paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> Now, if the first m elements of E&prime; are all 0, that is, if there is no dropping for the information symbols, the entire information is normally received so that there is no need for further processing. Consequently, the redundant symbols are discarded and the information part is taken out. Also, when the number of non-zero elements in E&prime; exceeds k, the error correction cannot be carried out by this code word in general so that no further processing is carried out. However, in the case of carrying out the re-transmission processing as will be described below, these information will be utilized later so that they should be maintained. When E&prime; is not in these forms, that is, when there is an information symbol dropping within a range of the correction capability of the error correcting codes, the receiver carries out the error correction processing by the following procedure. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Namely, the receiver calculates the syndrome values for the first m symbols, which will be referred to as receiving side syndrome values. Namely, when D&prime; is expressed as D&prime;&equals;(I&prime;&verbar;T&prime;), the receiver calculates: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>T&prime;&lsqb;i&rsqb;&equals;I</italic></highlight>&prime;(&agr;<highlight><superscript>(b&plus;i)</superscript></highlight>)&emsp;&emsp;(21) </in-line-formula></paragraph>
<paragraph id="P-0092" lvl="7"><number>&lsqb;0092&rsqb;</number> and then calculates a difference of T&prime; with respect to T&lsqb;i&rsqb;. Here, however, when the corresponding T&lsqb;i&rsqb; is dropping in the transmitted D&prime;, the difference will not be calculated. In this manner, it is possible to obtain each syndrome of the received error correcting code given by: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>S&prime;&lsqb;i&rsqb;&equals;T&lsqb;i&rsqb;&minus;T&prime;&lsqb;i&rsqb;</italic></highlight>&emsp;&emsp;(22) </in-line-formula></paragraph>
<paragraph id="P-0093" lvl="7"><number>&lsqb;0093&rsqb;</number> except when T&lsqb;i&rsqb; is unknown. When J pieces (0&lE;J&lt;k) of T&lsqb;i&rsqb; are dropping out of all T&lsqb;i&rsqb; (i&equals;0 to k&minus;1), (k&minus;j) pieces of syndrome values can be obtained, while there are no syndrome values for the dropped j pieces. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> Then, suppose that there is discarding of l pieces of information packets (0&lt;l&lE;k&minus;j) that do not exceed the number of obtained syndrome values. Here, the dropped symbol positions will be denoted sequentially as a&lsqb;l&minus;1&rsqb;, a&lsqb;k&minus;2&rsqb;, . . . , a&lsqb;0&rsqb;, and their respective values will be denoted as e&lsqb;l&minus;1&rsqb;, e&lsqb;l&minus;2&rsqb;, . . . , e&lsqb;0&rsqb;. The symbol positions are assumed to be arranged from (m&minus;1)-th one at the top and 0-th one at the end. If there is no dropping, all S&prime;&lsqb;i&rsqb; will become 0, so that in terms of the values of the dropped section that remains, S&prime;&lsqb;i&rsqb; becomes: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>S&prime;&lsqb;i&rsqb;&equals;e&lsqb;l&minus;</italic></highlight>1&rsqb;(&agr;<highlight><superscript>(b&plus;i)</superscript></highlight>)<highlight><superscript>a&lsqb;l&minus;1&rsqb;</superscript></highlight><highlight><italic>&plus;e&lsqb;l&minus;</italic></highlight>2&rsqb;(&agr;<highlight><superscript>(b&plus;i)</superscript></highlight>)<highlight><superscript>a&lsqb;l&minus;2&rsqb;</superscript></highlight><highlight><italic>&plus; . . . &plus;e&lsqb;</italic></highlight>0&rsqb;(&agr;<highlight><superscript>(b&plus;i)</superscript></highlight>)<highlight><superscript>a&lsqb;0&rsqb;</superscript></highlight>&emsp;&emsp;(23) </in-line-formula></paragraph>
<paragraph id="P-0095" lvl="7"><number>&lsqb;0095&rsqb;</number> Since the values at a&lsqb;l&minus;1&rsqb; to a&lsqb;0&rsqb; are known, each symbol value can be obtained by solving simultaneous equations for l values from e&lsqb;l&minus;1&rsqb; to e&lsqb;0&rsqb; using arbitrary l syndromes among (k&minus;j) syndromes S&prime;&lsqb;i&rsqb;, or by using any other solution method that has the equivalent function. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> Now, this error correction scheme of the first embodiment will be compared with the conventional scheme. The amount of information to be transmitted is given by k symbols redundancy with respect to the m symbols information, which is the same for both cases. Moreover, the error correction performance is that capable of correcting dropping of up to k symbols among the information symbols and the redundancy symbols in total, which is also the same for both cases. In this situation, the circuit size required by the conventional scheme is as given by the equation (16), whereas the circuit size required by the scheme of this first embodiment is k in units of a circuit size for calculating one syndrome. Namely, the error correction scheme of this first embodiment can reduce the circuit size. Similarly, in the case of realizing this operation by software, the required amount of software programs can be reduced in proportion to this circuit size reduction. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> and <cross-reference target="DRAWINGS">FIG. 4</cross-reference> conceptually show the required circuit sizes in the conventional scheme and the scheme of this first embodiment, respectively. The transmission side circuit in the conventional scheme as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> has a large total circuit size because the totally different circuits are required for different numbers of redundant packets to be used. On the other hand, the required circuit size in the error correction scheme of the first embodiment as shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> can share the same circuit even when the number of redundant packets is varied so that the required circuit size becomes considerably smaller. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Thus by calculating the syndrome values only with respect to the same symbol section at the transmitting side and the receiving side and using these syndrome values, it is possible to realize the communication system that requires a smaller circuit size or amount of software programs. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> In particular, when the method used for decoding of the RS codes is used for the syndrome calculation to calculate each T&lsqb;i&rsqb; or T&prime;&lsqb;i&rsqb;, it is possible to realize the maximum error correction performance. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> Next, an exemplary communication system incorporating the above described code transmission scheme of the first embodiment will be described in detail. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> This communication system is a system which carries out end-to-end error correction using IP packets with error correction function (IP-FEC packets). </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows a layer structure of this system, in which a layer called IP/FEC is provided around the IP layer such that the error correction can be carried out independently with respect to various transport layers (TCP, UDP, etc.) at this IP/FEC layer. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a manner of actual operation in this communication system. In the world of Internet and the like, computers (a transmission terminal (FEC sender) <highlight><bold>1201</bold></highlight> and reception terminals (FEC receivers) <highlight><bold>1202</bold></highlight>) are connected end-to-end through routers <highlight><bold>1203</bold></highlight> around the globe, as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. It is also expected that communications using multicast in particular will increase in future. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> However, in the current state of the art, even for errors such as packet discarding that occurs within the network, it is required to carry out the error correction using a method based on re-transmission similar to that used between terminals within LAN. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> Originally the error correction based on re-transmission is designed to be effective in media for which real time communications are not required, in the case where a distance between terminals is short. However, in the case where it is difficult to predict a change of data traffic as the network becomes huge, it is expected that the error correction based on FEC is more appropriate. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> In the method based on FEC, the actual data are transmitted by attaching error correcting codes thereto in advance, and when the errors occur during the transfer, the receiving side voluntarily makes corrections using the correcting codes. Consequently, it is possible to prevent an increase of network traffic due to re-transmission, and it is also possible to save memory as there is no need to store data for a certain period of time at the transmitting side in anticipation of a re-transmission request. The re-transmission scheme is particularly not suitable for the multicast in the huge network because of the factors associated with it such as an increase in delay, an increase in traffic, a complication of connection management, etc. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> Now, the processing at the transmitting side in this communication system will be described with reference to the diagram of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> First, the FEC layer receives an IP packet from the IP layer (network layer). Here, this received IP packet will be referred to as an original IP packet <highlight><bold>1301</bold></highlight>. Then, this original IP packet <highlight><bold>1301</bold></highlight> including its header is written into a memory buffer region called interleave matrix <highlight><bold>1302</bold></highlight>. This writing is carried out by sequentially writing data in the vertical direction of the interleave matrix <highlight><bold>1302</bold></highlight>. One vertical column often has a fixed size such as 128 bytes, 512 bytes, or 1024 bytes, but it is set to be variable in this embodiment. Since the original IP packet <highlight><bold>1301</bold></highlight> is of a variable length, there can be a case in which the data ends in a middle of the last column. In such a case, the padding (PAD) is attached to the last column. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> Next, the error correction coding calculation is carried out for each horizontal row, and the coded data obtains as a result of this calculation is written into a portion corresponding to the the same row in a code part provided at the right side of the interleave matrix <highlight><bold>1302</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. The horizontal size has the maximum length determined according to a size of symbol used for the error correction, and more specifically becomes 2<highlight><superscript>8</superscript></highlight>&minus;1 when the number of bits for one symbol is B. This size corresponds to the maximum total number for vertical columns for data and vertical columns for codes. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Actually, the above described interleave matrix can be set in correspondence to <cross-reference target="DRAWINGS">FIG. 1</cross-reference> or <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Here, the case of setting it in correspondence to <cross-reference target="DRAWINGS">FIG. 1</cross-reference> will be described. The payload section in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> corresponds to the vertical column of the matrix. Consequently, in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the original IP packet is segmented from the top into m pieces each containing the same number of symbols (assumed to be n symbols here), and these pieces are entered distributedly into the payloads of the first packet to the m-th packet. Then, the J-th symbols (j&equals;1 to n) of the first packet to the m-th packet are used to produce k pieces of the redundant symbols. The method for production is as already described above. Then, these k redundant symbols are written into the J-th symbol positions of the (m&plus;1)-th packet to the (m&plus;k)-th packet respectively. When the similar operation is carried out for n symbols, the payloads of the (m&plus;1)-th packet to the (m&plus;k)-th packet will be filled by the redundant symbols. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> produces k pieces of J-th symbols from m pieces of J-th symbols, but when the correspondence is clearly established, the calculation may be carried out by changing the symbol orders. Namely, the J&lsqb;i&rsqb;-th symbols (j&lsqb;i&rsqb;&equals;1 to n) of the i-th packets (i&equals;1 to m) can be taken out and set as m pieces of information symbols, and each one of k pieces of redundant symbols obtained from these m pieces of information symbols can be written into one of arbitrary symbol positions in the (m&plus;1)-th packet to the (m&plus;k)-th packet. At this point, when m pieces of information symbols to be selected are selected without any overlap and the positions to write the redundant symbols are chosen without any overlap, the redundant packets having the similar correction capability can be produced. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> The error correction coding method is the same as already described above, and the calculation is carried out in symbol units along horizontal direction. Here, an empty portion on the left side of the matrix will be ignored. It is also possible to change the level of coding for each matrix. For example, the coding parameters can be changed according to the length of the original IP packet <highlight><bold>1301</bold></highlight> and the connection type. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> Next, an FEC header is attached to each vertical column in which data are stored. One vertical column becomes one IP packet when it is in a state of having this FEC header and an IP-FEC header attached thereto. Here, an IP packet with a short fixed length will be referred to as an IP-FEC packet <highlight><bold>1303</bold></highlight>. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows an exemplary data contained in the FEC header. As shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the FEC header <highlight><bold>1401</bold></highlight> comprises four bytes and has the following fields. </paragraph>
<paragraph id="P-0115" lvl="2"><number>&lsqb;0115&rsqb;</number> &num;parity: </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> This indicates how many correction symbols are attached with respect to each horizontal row of the matrix. A number of correction symbols attached may be different for different matrices. </paragraph>
<paragraph id="P-0117" lvl="2"><number>&lsqb;0117&rsqb;</number> data/code: </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> This indicates whether a payload to which this FEC header is attached contains data or correcting codes. </paragraph>
<paragraph id="P-0119" lvl="2"><number>&lsqb;0119&rsqb;</number> &num;data pkt: </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> This indicates a number of vertical columns for data that are contained in this matrix. </paragraph>
<paragraph id="P-0121" lvl="2"><number>&lsqb;0121&rsqb;</number> Frame ID: </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> This is an ID number which is to be sequentially incremented at the transmitting side in units of matrices. The IP layer carries out the connection-less communications so that there can be a case in which the arrival orders of packets at the receiving side may be interchanged. For this reason, the information for identifying a packet order is entered by the transmitting side in advance, so as to make it possible to judge the interleave matrix to which the arrived packet belongs. </paragraph>
<paragraph id="P-0123" lvl="2"><number>&lsqb;0123&rsqb;</number> SN: </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> This is a sequence number to be initialized and attached for each matrix. Namely, this SN is used for identifying the packet within some interleave matrix. No packet with the same SN exists within the same matrix. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> Next, the IP-FEC header <highlight><bold>1402</bold></highlight> is attached, This is basically a copy of the header of the original IP packet <highlight><bold>1301</bold></highlight> as attached thereto when the original IP packet <highlight><bold>1301</bold></highlight> is given from the upper layer. The differences are that a protocol field is set up in the FEC, that a total length of a packet is set to be a sum of the IP-FEC header length (20 bytes&plus;option), the FEC header length (four bytes in the example of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>), and a vertical length of the interleave matrix (128 bytes, 512 bytes, etc.), and that a checksum is to be re-calculated. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> When the IP-FEC header <highlight><bold>1402</bold></highlight> is attached, the completed IP-FEC packets <highlight><bold>1303</bold></highlight> are sequentially given to the datalink layer. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> Next, the processing on the receiving side in this communication system will be described with reference to the diagram of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> When the IP-FEC packet <highlight><bold>1503</bold></highlight> is brought up from the datalink layer, it is first received by the IP layer. At the IP layer, the IP-FEC packet <highlight><bold>1503</bold></highlight> is handled similarly as the usual IP packet, and then given to the FEC layer according to a content (FEC) of the protocol field of the header. The IP-FEC header can be interpreted at the IP layer. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> At the FEC layer, the IP-FEC header is-taken out from the IP-FEC packet <highlight><bold>1503</bold></highlight> to carry out the FEC header check, and the payload portion is vertically written into an appropriate column of an appropriate interleave matrix <highlight><bold>1502</bold></highlight> according to the information of frame ID and SN shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. Here the correct arrival order is not guaranteed in the IP transfer so that it is made possible to maintain a plurality of frames simultaneously as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> When the portions corresponding to the data part are filled as in the leftmost interleave matrix of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the assembling of the original IP packet <highlight><bold>1501</bold></highlight> is completed so that the IP-FEC packet of the code part are discarded as unnecessary. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> Also, in the case of a matrix shown in a middle of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, all portions of the code part have arrived but not all portions of the data part have arrived yet so that it is regarded that a packet loss may have occurred. For this reason, it is set in a standby state for an opportunity to carry out the error (loss) correction. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> When the original IP packet is assembled without any packet loss or the original IP packet is recovered by the error correction despite of the packet loss, this original IP packet is given to the IP layer again. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> The interleave matrices have a predetermined maximum number of data that can be maintained simultaneously, so that when the number of data exceeds that maximum number, the matrix that is maintaining data for the longest period of time is searched out and the correction processing for data written in this matrix is started. It is also possible to provide a timer and start the correction processing even in the case where data are not filled in the matrix after a prescribed period of time has elapsed. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> The correction method is the same as already described above, When there are too many packet losses in excess of the correction capability in the interleave matrix for which the correction processing is attempted, the correction is abandoned and data of the entire matrix are discarded. When the correction succeeds, the completed original IP packet is taken out and given to the IP layer. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> In this manner, by making it possible to carry out the error correction of the present scheme, it is possible to realize the end-to-end data delivery through routers, etc., and it is possible to realize the reliable communications as the receiving side carries out the error correction whenever necessary according to the information from the transmitting side. In particular, this scheme does not depend on the number of receivers so that it is also suitable for a large scale multicast transmission scheme. Moreover, this scheme does not depend on the transport protocol, so that it is applicable to a plurality of transport protocols such as TCP, UDP, and ICMP. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> Next, exemplary configurations of a transmission device and a reception device for realizing communications in the above described communication system will be described. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> First, the transmission device will be described. <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows an exemplary configuration of a transmission device according to this embodiment. This transmission device <highlight><bold>1601</bold></highlight> comprises an application transmitting module <highlight><bold>1602</bold></highlight>, an original IP packet receiving module <highlight><bold>1603</bold></highlight>, an original IP packet dividing module <highlight><bold>1604</bold></highlight>, an FEC code generation module <highlight><bold>1605</bold></highlight>, an IP-FEC/FEC header attaching module <highlight><bold>1606</bold></highlight>, and a lower layer transmission processing module <highlight><bold>1607</bold></highlight>. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> The application transmitting module <highlight><bold>1602</bold></highlight> divides the application data to be transmitted in IP packet units, and give them to the original IP packet receiving module <highlight><bold>1603</bold></highlight>. Thus the original IP packet receiving module <highlight><bold>1603</bold></highlight> is going to receive data that are already set completely in IP packet forms. More specifically, the functions of the application transmitting module <highlight><bold>1602</bold></highlight> include all the processing above the IP layer such as a processing of division into IP packet sizes, an IP packet attaching processing, a transport layer processing, etc. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> The original IP packet that arrived at the original IP packet receiving module <highlight><bold>1603</bold></highlight> is then divided into appropriate lengths by the original IP packet dividing module <highlight><bold>1604</bold></highlight>. The division size used here can be an arbitrary length within a range of the predetermined maximum value as described above, but it is preferable to set a fixed length in order to simplify the processing at the IP-FEC/FEC header attaching module <highlight><bold>1606</bold></highlight> to be described below. Namely, the original IP packet Including the IP header is segmented in units such as 128 bytes or 512 bytes, and any fragment that is left at the end will be turned into the same size by attaching a padding. The data segmented into fixed length units are then given to the IPFEC/FEC header attaching module <highlight><bold>1606</bold></highlight>. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> At the same tine, the -information on divided data of the original IP packet is given to the FEC code generation module <highlight><bold>1605</bold></highlight>. The FEC code generation module <highlight><bold>1605</bold></highlight> divides the divided data in symbol units from the top, and generates the error correcting codes using the order and values of the obtained symbols. The use of this information in the present coding scheme is the same as in the case of RS codes. A concrete method for generating codes is as already described above. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> The redundant symbols generated at the FEC code generation module <highlight><bold>1605</bold></highlight> are arranged among the divided symbols according to a prescribed rule. For example, as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the j-th symbols of the divided data can be used as information symbols, and corresponding redundant symbols are generated for these information symbols and then these redundant symbols are inserted also as j-th symbols in forms of divided data. In this manner, the redundant data and the information data in the same size can be obtained. The obtained redundant data are given to the IP-FEC/FEC header attaching module <highlight><bold>1606</bold></highlight>. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> Note that it is also possible to carry out the coding processing by dividing one original IP packet. For example, suppose that the original IP packet is divided into m data parts by the original IP packet dividing module <highlight><bold>1604</bold></highlight>. In this case, these m pieces can be divided into groups of ma pieces, mb pieces and mc pieces, or groups of md pieces each, and a corresponding FEC is generated for each of them. In such a case, the coding processing is going to be carried out twice or sore for one original IP packet. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> The actual original IP packet has the maximum length of about 64 kbytes so that a value of m becomes quite large when a unit of division is 128 bytes, for example. In such a case, it is effective to adopt the above described method for carrying out the coding processing by dividing the original IP packet. Also, it is necessary to change a unit of coding according to the network characteristic, and the above described method for carrying out the coding processing by dividing the original IP packet can be utilized in such a case. Note that in such a case an information as to which code within the original IP packet corresponds to this IP-FEC packet is to be added to the FEC header shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> As for an amount of redundant data to be generated at the FEC code generation module <highlight><bold>1605</bold></highlight>, it can be judged according to the header information of the original IP packet when it can be determined in IP packet header units. Also, when it can be determined according to the number of packets for data, the length of the entire packet can be Judged from a length indication contained in the header of the original IP packet, a length of division at the original IP packet dividing module <highlight><bold>1604</bold></highlight>, etc., and the number of redundant packet can be determined according to the Judged length of the entire packet. In this manner, the FEC code generation module <highlight><bold>1605</bold></highlight> carries out exchange of such information with respect to the original IP packet receiving module <highlight><bold>1603</bold></highlight>. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> Now, the IP-FEC/FEC header attaching module <highlight><bold>1606</bold></highlight> attaches the FEC header as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> to the information data and the redundant data given to it, and further attaches an IP-FEC header, and then give them to the lower layer transmission processing module <highlight><bold>1607</bold></highlight>. The lower layer transmission processing module <highlight><bold>1607</bold></highlight> then transmits the IP-FEC packets given to it by setting them into format of a transmission path capable of transmitting them, toward Internet, public network, LAN, etc. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> Note that this transmission device can carry out the pipeline processing for the IP-FEC packets of data. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> Upon receiving the data in fixed length (such as 512 bytes) from the original IP packet receiving module <highlight><bold>1603</bold></highlight>, the original IP packet dividing module <highlight><bold>1604</bold></highlight> can carry out the series of operations by which that information is sent to the FEC code generation module <highlight><bold>1605</bold></highlight> while it is given to the IP-FEC/FEC header attaching module <highlight><bold>1606</bold></highlight> so that it is attached with various headers there and then transmitted from the lower layer. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> In this manner, it is possible to omit a step for sequentially storing the entire original IP packet in the original IP packet transmission processing, so that it is possible to reduce the required buffer/memory amount. Namely, in the data processing that takes place beyond the original IP packet dividing module <highlight><bold>1604</bold></highlight>, it suffices to provide a storage amount for one IP-FEC packet at most. In addition, as there is no need to spend time for sequential storing, it is possible to make the processing faster. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> Moreover, even at the FEC code generation module <highlight><bold>1605</bold></highlight>, in the case of generating codes, it is necessary to provide as large memory region as the number of redundant IP-FEC packets to be generated and sequentially store the intermediate calculation results there, but after the calculation is completed, data are given in units of a payload of one redundant packet to the IP-FEC/FEC header attaching module <highlight><bold>1606</bold></highlight> so that it suffices to secure a storage amount for one IP-FEC packet in the subsequent processing again. In addition, it is also possible to save the memory further by sharing the memory among data packets and redundant packets in the processing subsequent to the IP-FEC/FEC header attaching module <highlight><bold>1606</bold></highlight>. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> Also, with respect to the IP-FEC/FEC header attaching module <highlight><bold>1606</bold></highlight>, after the payloads of as many data packets as should be transmitted from the original IP packet dividing module <highlight><bold>1604</bold></highlight> are given, the payloads of redundant packets corresponding to these data packets should preferably be given from the FEC code generation module <highlight><bold>1605</bold></highlight> immediately. This is because the FEC header is attached with the sequence number as indicated in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> and it is cumbersome to manage a plurality of such sequence numbers in connection units or original IP packet units. For this reason, by optimizing the order for giving the packet payloads, it becomes possible to carry out the continuous processing at least for one coding unit. In this manner, the sequence number management can be simplified into just one type. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> Next, the reception device will be described. <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows an exemplary configuration of a reception device according to this embodiment. This reception device <highlight><bold>1701</bold></highlight> comprises an application receiving module <highlight><bold>1702</bold></highlight>, an original IP packet producing module <highlight><bold>1703</bold></highlight>, an error correction module <highlight><bold>1704</bold></highlight>, an IP-FEC/FEC packet processing module <highlight><bold>1705</bold></highlight>, an IP packet receiving module <highlight><bold>1706</bold></highlight>, and a lower layer reception processing module <highlight><bold>1707</bold></highlight>. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> The information arrived from the transmission device via Internet, public network, LAN, etc., is first processed at the lower layer reception processing module <highlight><bold>1707</bold></highlight>, and IP packets are extracted that information and given to the IP packet receiving module <highlight><bold>1706</bold></highlight>. The lower layer processing includes the error correction/re-transmission, the data discarding, etc., at the lower layer. When data is discarded, the normal reception of the IP packet corresponding to that data is going to be impossible. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> The IP packet receiving module <highlight><bold>1706</bold></highlight> carries out almost the same processing as the IP layer processing in the usual communication processing. Namely, the IP address check (as to whether it is destined to this device or not), the length check, etc., are carried out and the IP packet that cannot be received will be discarded. Then, an address to which this IP packet should be given from this device as written in the IP header is checked. If the name of the layer above the IP layer such as TCP for example is written there, it implies the application receiving module <highlight><bold>1702</bold></highlight> so that the IP packet is directly given to the application receiving module <highlight><bold>1702</bold></highlight>. When a code indicating the IP-FEC processing is written in the IP header, it implies that this IP packet is actually an IP-FEC packet. In this case, the IP packet receiving module <highlight><bold>1706</bold></highlight> removes the IP-FEC header from the IP packet and gives it to the IP-FEC packet processing module <highlight><bold>1705</bold></highlight>. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> The IP-FEC packet processing module <highlight><bold>1705</bold></highlight> is provided with a plurality of interleave matrices for payloads of arrived IP-FEC packets. The IP-FEC packet processing module <highlight><bold>1705</bold></highlight> writes the payload of the IP-FEC packet into an appropriate position of the corresponding interleave matrix according to the information of the IP-FEC header from the IP packet receiving module <highlight><bold>1706</bold></highlight> and the information of the FEC header given to it. The interleave matrix is formed for each unit that is coded at the transmission device <highlight><bold>1601</bold></highlight>. In the concrete procedure for the reception device <highlight><bold>1701</bold></highlight>, those having the same frame ID in the FEC header will be entered into the same interleave matrix in principle-. However, even among those having the same frame ID, if the FEC header contains an identifier for indicating an order in addition, the interleave matrix for each identifier is formed. This identifier is an identifier used in the case of carrying out the coding processing for twice or more with respect to one original IP packet at the transmission device <highlight><bold>1601</bold></highlight>. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> In such plural interleave matrices, the states are managed by using a timer, the number of matrices, etc. For example, when the data part is filled before the timer becomes time out, there is no need to carry out the error correction at that interleave matrix, so that only data of the data part are concatenated in an order of the sequence numbers and sent to the original IP packet producing module <highlight><bold>1703</bold></highlight>. Then, the remaining redundant part is discarded. In this case, the error correction module <highlight><bold>1704</bold></highlight> will not be used and its processing is skipped. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> On the other hand, when the data part of the interleave matrix is not filled even after the timer becomes time out, the number of IP-FEC packet payloads that are short in that matrix is counted, and if the counted number is not greater than the maximum number of packets that can be error corrected, data are given to the error correction module <highlight><bold>1704</bold></highlight> in order to carry out the error correction, If the counted number exceeds the maximum number of packets that can be error corrected, the error correction is impossible so that the entire matrix is discarded at this point. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> Here, for some payload, an interleave matrix into which it should be entered may not exist in the following two cases. The first case is the case where this payload is the first one to arrive for some coded packet. In this case, a new interleave matrix is generated and this payload is stored at an appropriate position therein. The necessary interleave matrix size can be obtained from the information of the FEC header. The second case is the case where this IP-FEC packet arrived too late so that the processing of the corresponding interleave matrix has already been finished. In this case, either this packet payload is simply discarded by storing the frame IDs that are used recently, or a new interleave matrix is generated similarly as in the case of new arrival such that the content of this matrix will be discarded as a result of the time out because it will not be filled before the time out. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> Next, the processing of the error correction module <highlight><bold>1704</bold></highlight> will be described for an exemplary case where the packet has a fixed length as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> The error correction is carried out over a plurality of packet payloads, and obtains the code word by counting the symbols from the top of each payload and arranging symbols at the same position (the third one, the tenth one, etc.) according to the sequence numbers of the packets. The data symbols at some position are set as symbol-1 to symbol-m as in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, and the syndrome corresponding to them is calculated. The method for calculating the syndrome is as already described above, and the calculation is carried out by regarding a symbol value of a data dropping portion as 0, for example. In the present invention, the syndrome obtained by this calculation is called the receiving side syndrome or the second syndrome, while the syndrome corresponding to the symbols of the redundant part is called the transmitting side syndrome or the first syndrome. By comparing these two syndrome values, it is possible to recover the lost symbols corresponding to the data part from their difference. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> As a result of recovering each symbol, the payload of the data packet is recovered. Then, only data of the data part are concatenated in an order of the sequence numbers and given to the IP packet producing module <highlight><bold>1703</bold></highlight>. The redundant part is no longer necessary at this point so that it is discarded. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> The original IP packet producing module <highlight><bold>1703</bold></highlight> recovers the original IP packet by using data series without error as given from the IP-FEC packet processing module <highlight><bold>1705</bold></highlight> and data series with error corrected as given from the error correction module <highlight><bold>1704</bold></highlight>. Here, the processing becomes different depending on whether identifiers for indicating an order within the same frame ID exist or not, and each case will now be described. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> In the case where the above described identifiers do not exist, the data series should be having an IP header at the top, so that the length of the padding attached at the end of that data series is ascertained from the length indication given in that IP header, and the padding is removed. In this manner, the original IP packet can be recovered. This original IP packet is then given to the application receiving module <highlight><bold>1702</bold></highlight> for the upper level processing. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> In the case where the above described identifiers exist, the identifier and the frame ID of each data are notified from the IP-FEC packet processing module <highlight><bold>1705</bold></highlight>, and the processing waits until the data series with all the identifiers corresponding to that frame ID arrive. When the data series with all the identifiers arrive, they are concatenated in an order of the identifiers. The subsequent processing with respect to this concatenated data series is the same as in the case where the above described identifiers do not exist. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> Also, a timer is provided and when the entire data series does not arrive before a prescribed time, the entire data series belonging to the corresponding frame ID is discarded. Alternatively, as a more active method, if there are data which are discarded as complete data were not available at the IP-FEC packet processing module <highlight><bold>1705</bold></highlight>, their frame ID and identifiers are notified to the original IP packet processing module <highlight><bold>1703</bold></highlight> so that the discarding processing can be carried out quickly and the memory buffer amount required for the purpose of waiting can be reduced. In practice, the IP packets transmitted from the same transmission device to the same reception device do not change their routing path so often so that the IP packets arrive in order, and therefore it is often more effective to use the more active latter method in view of the memory reduction. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> Finally, the application receiving module <highlight><bold>1702</bold></highlight> carries out all the reception processing of the layer above the IP layer. The communication processing on the transport layer, etc., is also included in this processing. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 12</cross-reference> and <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, the second embodiment of a code transmission scheme according to the present invention will be described in detail. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> In the communication system, there are many applications which require reliable communications, and there are two methods for realizing the reliable communications including a method for carrying out the error correction and a method for carrying out re-transmission control. It is also possible to secure the reliability efficiently by combining these two methods. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> This second embodiment differs from the first embodiment in that, instead of simply adding the error correction function, the recovery by the re-transmission control is also carried out for those packets which cannot be corrected by the error correction function. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> The basic procedure in this second embodiment is as follows. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> (1) From the transmitting side, m pieces of the information packets are sent to the receiving side by attaching k pieces of redundant packets, where k is an integer greater than or equal to 0. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> (2) At the receiving side, when more than k packets out of m&plus;k packets do not arrive, a re-transmission request is sent to the transmitting side. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> (3) In response to the re-transmission request from the receiving side, the transmitting side re-transmits the necessary information. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> Here, the conventionally known methods of re-transmission includes a method for re-transmitting all of m&plus;k packets, a method for re-transmitting all of m information packets, and a method for receiving a notification on packet numbers of those packets which did not arrive from the receiving side and re-transmitting only those packets having the notified packet numbers. However, as a method that can reduce an amount of transmission compared with any of these methods, the following method is also available. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> (1) The same as above. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> (2) At the receiving side, when y pieces of packets out of m&plus;k packets do not arrive where y is greater than k, a re-transmission request is sent to the transmitting side by attaching a value of y&minus;k. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> (3) In response, the transmission side produces y&minus;k pieces of re-transmission packets and send them to the receiving side. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> When this method is adopted, the number of packets to be re-transmitted can be limited to just y&minus;k pieces. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> In the above described procedure, at the step (1), it is possible to use either the conventional coding scheme or the coding scheme of the first embodiment. In either case, the correction capability of the code words contained in the packet transmitted first is the same. Also, in the case of carrying out the transmission using the conventional coding scheme in (1) and then carrying out the transmission of the redundant packets produced according to the present invention as the re-transmission processing of (2) and (3) is required, it is possible for the receiving side to carry out the correction processing using the packets of the conventional code words and the additionally received redundant packets, although the calculation becomes somewhat complicated. Note however that, in the case of system in which the number k of the redundant packets varies in (1), it is preferable to use the coding scheme of the first embodiment even for the packet to be transmitted first. This is because the conventional scheme requires many circuits or program codes for generator polynomials at the transmitting side when k varies, as already mentioned above. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> What is more problematic is the step (3). When the conventional coding scheme is used, from a standpoint of the transmitting side, it is necessary to carry out the division using a polynomial of (y&minus;k)-th degree which is totally unrelated to G(X) of k-th degree that is used before. The value of y&minus;k can be at most up to a smaller one of m&minus;k and 2<highlight><superscript>h</superscript></highlight>&minus;1&minus;m&minus;k, so that it is necessary to provide m&minus;k types or 2<highlight><superscript>h</superscript></highlight>&minus;1&minus;m&minus;k types of different calculation circuits or programs. Usually, it is designed such that m&minus;k is smaller than 2<highlight><superscript>h</superscript></highlight>&minus;1&minus;m&minus;k. Thus the conventional scheme requires a considerably large circuit size. In contrast, when the coding scheme of the present invention is used, y&minus;k types of re-transmission packets can be easily produced by the identical method. In the following, this aspect of the present invention will be described in further detail. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> First, similarly as in the first embodiment, D as expressed by the equation (18) is transmitted from the transmitting side to the receiving side. D given by the equation (18) contains m information symbols I along with k redundant symbols in forms of T&lsqb;i&rsqb; (i&equals;0 to k&minus;1) as expressed by the equation (17). </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> The receiving side then receives D&prime; with some symbol dropping. When the number of dropped symbols in D&prime; is less than or equal to k, it is possible to recover them by applying the error correction scheme of the first embodiment directly, but when the number of dropped symbols in D&prime; is y where m&plus;k&gE;y&gt;k, the receiving side requests a re-transmission of y&minus;k symbols to the transmitting side. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> Upon receiving this request, the transmitting side produces packets for re-transmission. In this case, because T&lsqb;0&rsqb; to T&lsqb;k&minus;1&rsqb; have already been transmitted, the transmitting side syndrome values for the subsequent T&lsqb;k&rsqb; to T&lsqb;y&minus;1&rsqb; are calculated, and only these transmitting side syndrome values are transmitted to the receiving side. Here, the transmitting side syndrome values are calculated by sequentially substituting k to y&minus;1 into the place of i in the equation (17). </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> As for the value i of the above described T&lsqb;i&rsqb; to be transmitted/re-transmitted, the case of using values sequentially starting from 0 has been described above for the sake of simplicity, but in practice, there is no need to use any specific order for the symbols T&lsqb;i&rsqb; contained in the redundant packets to be transmitted. Namely, for the first k pieces, the values of i are arbitrary as long as they are different values on CF(2<highlight><superscript>h</superscript></highlight>). The same is also true for y&minus;k pieces of T&lsqb;i&rsqb; to be transmitted at a time of re-transmission. Note however that the values of i to be used at a time of re-transmission must be also different from the values of i used for the k pieces transmitted first, for the following reason. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> Namely, at the receiving side, it becomes possible to recover the original information by the error correction processing when a total of the number of received information symbols and the number of non-overlapping redundant symbols reaches to m. When y&minus;k pieces of redundant symbols are required and if those redundant symbols which are apparently not transmitted before are transmitted, the recovery of the information becomes possible when all of these redundant symbols reach to the receiving side. However, if y&minus;k pieces of redundant symbols including those transmitted before are transmitted, and the receiving side receives the same redundant symbols for a plurality of times, even when all of these y&minus;k pieces of redundant symbols properly reach to the receiving side, it is impossible to carry out the correction because the number of symbols necessary for the correction will not be available. In order to prevent such a situation, the packets containing the redundant symbols different from those transmitted before are to be transmitted in the case of transmitting redundant packets as a re-transmission. </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> When y pieces of the redundant symbols reach to the receiving side in this manner, the receiving can recover the original information symbols by carrying out the error correction similarly as in the first embodiment. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> As a variation to the above described procedure, it is also possible to use a procedure in which the necessary number y&minus;k of re-transmission symbols as well as the identification numbers of the dropped syndrome values are indicated at a time of re-transmission request from the receiving side. In this case, the transmission side can carry out the re-transmission in such a manner than the sum of the syndrome values that reached the receiving side without being dropped and the newly produced syndrome values becomes y&minus;k. In such a case, by storing the once transmitted syndrome value and utilizing that information actively at a time of re-transmission, it is possible to reduce the amount of calculations for re-transmission symbols that must be newly produced so that the procedure can be made more efficient. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> Also, as another variation, it is also possible to use a procedure in which the number of re-transmission symbols are not notified from the receiving side. For example, it is possible to use the following procedure. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> (1) The same as above. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> (2) At the receiving side, when y pieces of packets out of m&plus;k packets do not arrive where y is greater than k, only a NACK signal is returned to the transmitting side. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> (3) In response, the transmission side produces a prescribed number (z pieces) of re-transmission packets and send them to the receiving side. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> In this case, if z&gE;y&minus;k, it is possible for the receiving side carry out the correction processing by using these redundant packets. At this point, the unnecessary z(y&minus;k) pieces of redundant packets can be discarded without utilizing them at the receiving side. On the other hand, if z&lt;y&minus;k, the receiving side returns a NACK signal to the transmitting side again, and the transmitting side transmits the further z pieces of re-transmission packets. As should be obvious, there are cases in which the z pieces of re-transmission packets are discarded, and in such a case, the above operation is to be repeated until the packets necessary in carrying out the correction at the receiving side become all available. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> Now, the required circuit size in this second embodiment will be compared with the conventional case similarly as done in the first embodiment. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, when the conventional coding scheme is used, a division circuit of the degree k is needed initially, and then division circuits of degrees ranging from the degree 1 to the degree m&minus;k are necessary for re-transmission, so that the required division circuit size is given by: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>k&plus;</italic></highlight>1&plus;2&plus; . . . &plus;(<highlight><italic>m&minus;k</italic></highlight>)&equals;<highlight><italic>k</italic></highlight>&plus;(<highlight><italic>m&minus;k</italic></highlight>)(<highlight><italic>m&minus;k&minus;</italic></highlight>1)/2&emsp;&emsp;(24) </in-line-formula></paragraph>
<paragraph id="P-0194" lvl="7"><number>&lsqb;0194&rsqb;</number> by taking a circuit for a calculation of a particular degree as one unit. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> On the other hand, as shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, according to the coding scheme of this second embodiment, k pieces of division circuits of degree 1 are needed initially and then at most m&minus;k pieces of division circuits of degree 1 are necessary, so that the total required circuit size can be only as much as m. The similar result can be also obtained in terms of the required amount of software programs in the case of realizing the above operation by software. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> Thus, even in the case of combining the error correction and the re-transmission, by adopting the coding scheme which calculates the syndrome values only for the information symbol section at the transmitting side, it is possible to realize the communication system that requires a smaller circuit size or amount of software programs. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, the third embodiment of a code transmission scheme according to the present invention will be described in detail. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> This third embodiment is directed to a case of applying the scheme of the first embodiment to the multicast communication. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> The multicast communication uses one transmission terminal and a plurality of reception terminals in general, and is designed such that, when the transmission terminal transmits data using a multicast address, the data are delivered to each reception terminal according to that multicast address at the network. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> As a re-transmission control scheme in the transport layer for the purpose of securing the reliability, TCP (Transmission Control Protocol) is known, but this is a point-to-point protocol which cannot handle the multicast. Consequently, in the case of realizing the multicast communication, UDP (User Datagram Protocol) is usually used instead of TCP. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> In order to realize the reliable communication in such a situation, it is possible to consider the use of a method in which the information packets and the redundant packets are transmitted as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> or <cross-reference target="DRAWINGS">FIG. 2</cross-reference> and the error correction is carried out at the receiving side. By using UDP at an upper level, it is possible to endow the reliability to the communication system which is originally operating in the best-effort basis. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows an outline of system operation in this third embodiment. The transmission terminal transmits m pieces of information packets by attaching k pieces of redundant packets, toward a plurality of reception terminals. At each reception terminal, the recovery using the error correcting codes can be made with respect to discarding of up to k packets among m&plus;k packets. From a viewpoint of securing the reliability, it is preferable to set up k as large as possible, but from a viewpoint of the capability of the reception terminal, there is a limit to a value of k that can be set up, and this limit is different for different terminals as it depends on the processing power of the terminal. In the case of multicast, in order to deal with an increase in the number of multicasts, it is preferable to restrict communications in view of the convenience at the individual terminal as much as possible, so that it is preferable not to carry out any negotiation regarding an upper bound for the value of k at the start of communication session. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> By applying the coding scheme of the first embodiment, it is possible to realize such a multicast communication without requiring this negotiation, as follows. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> First, the transmission terminal sends m information packets containing m information symbols respectively and k redundant packets containing k redundant packets respectively as expressed by the equation (18), toward a plurality of reception terminals, similarly as in the examples described above. Each reception terminal has the predetermined maximum number w for redundant packets that can be processed, and when w&gE;k, the processing is carried out by taking all the redundant packets without any problem, but when w&lt;k, only w pieces of redundant packets are taken in while the rest is discarded. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> In the case of using the conventional coding scheme, it has been impossible to carry out the syndrome calculation for the purpose of the error correction at the receiving side unless all the packets that can be received are received once. However, in the case of using the coding scheme of this third embodiment, by acquiring the redundant packets up to a range that can be processed by the reception terminal besides the data packets, it is possible to correct the dropping for as many as the number of acquired redundant packets, regardless of the number of transmitted redundant packets. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows this situation for an exemplary case of m&equals;3 and k&equals;2 in a simplified form. The receiver &num;1 is receiving all the information packets without error which is the case of normal reception. The receiver &num;2 has two information packets lost but two redundant packets have arrived and this terminal has the capability to correct two symbols so that it can recover the original information packets. The receiver &num;3 has lost one information packet but two redundant packets have arrived. This receiver &num;3 has a capability for correcting at most one symbol so that one of the redundant packets is ignored and discarded. However, there is only one information packet dropping so that it is possible to recover the original information packet. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> In contrast, the receiver &num;4 has lost two information packets. Two redundant packets have also arrived correctly but this terminal &num;4 has a capability for correcting at most one symbol so that one of the redundant packets is ignored and discarded. Consequently in this case it is impossible to recover the original information packets. </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> In this communication system, the delivery of the redundant packets incorporating the error correction function is used so that the multicast information that could have correctly received only by the receiver &num;1 otherwise can also be received by the receiver &num;2 and the receiver &num;3 as well, so as to improve the communication throughput. Here however there is a case like that of the receiver &num;4 which still cannot receive the multicast information. In other words, this system is not perfect but designed to be effective in improving the reliability of the multicast communication. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> By using the scheme for calculating the transmitting side syndrome value of this third embodiment in the case of realizing the reliable multicast communication using the the error correction function, it is possible to realize the communication without requiring a complicated negotiation processing regarding the number of redundant packets, even under an environment that involves reception terminals with not very high processing power. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> Note here that it suffices for the reception terminal to have a capability of carrying out the following operations: </paragraph>
<paragraph id="P-0211" lvl="2"><number>&lsqb;0211&rsqb;</number> It gives up the correction when packets in excess of the own correction capability are discarded. </paragraph>
<paragraph id="P-0212" lvl="2"><number>&lsqb;0212&rsqb;</number> It ignores the excessive redundant packets when more redundant packets than the necessary number arrive. </paragraph>
<paragraph id="P-0213" lvl="2"><number>&lsqb;0213&rsqb;</number> It executes the correction if necessary in any other cases. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 15</cross-reference> to <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, the fourth embodiment of a code transmission scheme according to the present invention will be described in detail. This fourth embodiment is directed to a case of realizing the multicast communication of a very high reliability, using reception terminals with relatively high processing power, unlike the third embodiment. </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> In order to secure the high reliability in the end-to-end communication, it is necessary not only to transmit the redundant packets having the error correction function in succession to the information packets but also to return a feedback as to whether packets have been received correctly or not from the reception terminal to the transmission terminal. More specifically, it is necessary to utilize functions called ACK and NACK. </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> In the case of the point-to-point communication, it suffices to simply carry out the re-transmission of packets according to such ACK/NACK, but in the case of the point-to-multipoint communication using a plurality of reception terminals, it is difficult for the transmission terminal to deal with ACK/NACK from a plurality of terminals in sophisticated manner because of the limited processing power. </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> For this reason, this problem is resolved in this fourth embodiment by applying the scheme used in the second embodiment, as follows. </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> (1) The transmission terminal sends m information packets containing m information symbols respectively and k redundant packets containing k redundant packets in forms of transmitting side syndrome values respectively as expressed by the equation (18), toward a plurality of reception terminals. </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> (2) At each reception terminal, when the number of lost packets is less than or equal to k among m&plus;k packets, the original information packets are recovered by carrying out the error correction. Also, when the number of lost packets y is greater than k, a request for re-transmission of y&minus;k packets is sent to the transmitting side along with a NACK signal. </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> (3) At the transmission terminal, NACK signals received from a plurality of terminals are checked and as many re-transmission packets as requested by-the re-transmission request that is requesting the largest number of re-transmission packets are produced and re-transmitted. </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> Even in the case of the multicast, it is also possible to use the conventional coding scheme at the step (1), similarly as in the case of unicast described above. However, as already mentioned above, it is preferable to use the constant number k of the redundant packets in the case of transmitting packets by the conventional coding scheme first. </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> The procedure of this fourth embodiment is characterized in that the step (2) is NACK based. In the case of ACK based operation, there is a need for the transmission terminal to comprehend the number of reception terminals and the state of individual terminal, so that it is impossible to deal with an increase in the number of multicasts. In contrast, in the case of NACK based operation, it is possible to carry out the multicast communication without comprehending the state of individual terminal in detail. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> Also, even in the case of NACK based operation, if it is required to specify the information packets to be retransmitted, there is a need to check and store the packets to be transmitted for each NACK signal, so that the processing load on the transmission terminal can be quite large. In this regard, according to the scheme of this fourth embodiment, it is only required to find the largest number of requested re-transmission packets among the NACK signals which can be realized easily, and in particular the production of the re-transmission packets can be started as soon as the first NACK signal arrives, so that it is possible to realize the efficient re-transmission control. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows this situation for an exemplary case of m&equals;3 and k&equals;2 for the sake of simplicity. The sender multicasts m&plus;k packets first. The receiver &num;1 is receiving all the information packets without error which is the case of normal reception. The receiver &num;2 has two information packets lost but two redundant packets have arrived and so that the original information packets can be recovered from them. These receivers are obtaining the information correctly so that they make no action with respect to the transmitting side. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> On the other hand, the receiver &num;3 received only two packets (one information packet and one redundant packet) for the information of three packets and one more packet is necessary for the purpose of recovery, so that it returns a NACK signal {circle over (<highlight><bold>1</bold></highlight>)} to the sender by attaching a re-transmission request for one packet. Also, the receiver &num;4 received only one packet (one information packet) for the information of three packets and two more packets are necessary for the purpose of recovery, so that it returns a NACK signal {circle over (<highlight><bold>2</bold></highlight>)} to the sender by attaching a re-transmission request for two packets. Upon receiving these NACK signals, the sender newly produces the redundant packets as many as the largest number of re-transmission packets requested (two packets in this example) and re-transmits them as the re-transmission packets. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> Also, the receiver &num;5 received two information packets so that it is possible to start the recovery processing as soon as one redundant packet arrives after that. The second redundant packet that arrives after that can be ignored and discarded. Thus, according to the scheme of this fourth embodiment, it is possible to start the recovery processing as soon as packets necessary for the recovery become available at the receiving side so that it is possible to realize the highly efficient processing. </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> In contrast, in the case of using the conventional scheme, when there is a lost information packet, it is customary to start the syndrome calculation for the purpose of correction only after all the redundant packets are received once. For this reason, it has been necessary to delay the start of the processing until all the redundant packets arrive, so that the efficiency has been poor. Moreover, when the last redundant packet has a large delay, its influence has been even larger. </paragraph>
<paragraph id="P-0228" lvl="0"><number>&lsqb;0228&rsqb;</number> Furthermore, there is a difference in the processing efficiency at the transmitting side as well. As already described above, when the conventional coding scheme is used in such a system, apart from the obvious increase of the circuit size, it has been necessary for the transmitting side to wait for the arrival of all of a plurality of NACK signals that can be expected to arrive because a circuit to be utilized is different depending on the number of re-transmission packets to be produced. In addition, the re-transmission packet production processing cannot be started until the largest number of re-transmission packets is determined. <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows this situation. </paragraph>
<paragraph id="P-0229" lvl="0"><number>&lsqb;0229&rsqb;</number> The sender awaits for the arrival of the NACK signal from the receiving side using the timer management for example. Now, suppose that NACK&num;1 to NACK&num;4 are to arrive, and re-transmission requests for one to three packets are to be made by them. In the transmitting side process, whenever one NACK signal arrives, the largest number of re-transmission packets requested among the already arrived NACK signals is stored. Then, only after the timer becomes time out, the three redundant packets are produced and retransmitted. </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> On the other hand, in the case of using the scheme of this fourth embodiment, the redundant packet production circuit is different for each redundant packet, so that as soon as the NACK signal arrives the redundant packet production process for the purpose of re-transmission can be started out accordingly. <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows an exemplary case of this situation. </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, the NACK&num;1 signal arrives first and it makes a re-transmission request for one packet, the production of one re-transmission packet (&num;1 packet) is started at this point. Next, when the NACK&num;2 signal arrives and it makes a re-transmission request for two packets, since the production of one packet has already started, the number of packets to be produced is increased by just one and the production of the &num;2 packet is started at this point. Then, when the NACK&num;3 signal arrives and it makes a re-transmission request for three packets, since the production of two packets has already started, the production of one more packet (&num;3 packet) is newly started at this point. After that, the NACK&num;4 signal arrives and it makes a re-transmission request for two packets, but three packets has already been produced so that this request is ignored. </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> Between arrivals of these NACK signals, each re-transmission packet is transmitted when its production is completed. When the timer becomes time out, the entire processing is effectively finished so that the processing time can be shortened and the efficiency can be improved compared with the conventional case. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> In this manner, by utilizing the coding scheme based on the transmitting side syndrome value of this fourth embodiment in realizing the reliable multicast communication, it becomes possible to deal with the multicast scale increase easily, while realizing the high efficiency of the processing and the reduction of the circuit size or the amount of software programs. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> In particular, in the case of carrying out the large scale multicast involving hundreds or thousands of receivers, there can be cases in which the NACK signals are to be merged at the relaying routers, etc., as shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. In such a case, when the coding scheme of the present invention is used, the merging can be made by taking the largest value for the re-transmission request among the NACK signals from a plurality of downstream sides, so that it becomes possible to realize the far more efficient transmission compared with the case of requesting the packet numbers to be re-transmitted individually. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> For example, in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, there are ten reception terminals with respect to one transmission terminal, and the NACK signals are sent from eight reception terminals among these ten reception terminals. If&prime; these NACK signals are sent to the sender as they are, the sender must process eight NACK signals. However, the router <highlight><bold>1801</bold></highlight> merges the NACK signal {circle over (<highlight><bold>1</bold></highlight>)} and the signal {circle over (<highlight><bold>2</bold></highlight>)} and sends only one NACK signal {circle over (<highlight><bold>2</bold></highlight>)} to the sender, while the router <highlight><bold>1802</bold></highlight> merges three NACK signals {circle over (<highlight><bold>1</bold></highlight>)} and sends only one NACK signal {circle over (<highlight><bold>1</bold></highlight>)} to the sender. Also, the router <highlight><bold>1804</bold></highlight> merges two NACK signals {circle over (<highlight><bold>2</bold></highlight>)} and sends only one NACK signal {circle over (<highlight><bold>2</bold></highlight>)} to the intermediate router <highlight><bold>1803</bold></highlight>, and the router <highlight><bold>1803</bold></highlight> merges the NACK signal {circle over (<highlight><bold>2</bold></highlight>)} from the router <highlight><bold>1804</bold></highlight> and the NACK signal {circle over (<highlight><bold>1</bold></highlight>)} and sends only one NACK signal {circle over (<highlight><bold>2</bold></highlight>)} to the sender. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> Here, the method for merging the NACK signals is a simple one in which the NACK signal with the largest re-transmission request packet number described therein is selected from a plurality of NACK signals. By using such a scheme for utilizing intermediate routers to carry out the NACK signal processing only three NACK signals reach to the sender in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, so that it is possible to reduce the processing load of the sender. </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> Here, as a variation, a model in which a specific group of receivers have different characteristics among the multicast group will be considered. For instance, it can be the case where a link is very thin at some location alone so that it is hard to pass packets therethrough, or the case where there is a relay router at which the congestion is very easily caused so that the packet loss rate characteristic is particularly poor there, or else the case where some link is a radio link so that the packet discarding at a relay node due to the bit error occurs. On the contrary, it can be the case where packets destined to some reception terminal are transmitted through a dedicated line so that they are hardly dropped and a particularly good characteristic is realized for that reception terminal. </paragraph>
<paragraph id="P-0238" lvl="0"><number>&lsqb;0238&rsqb;</number> In such a case where the groups of receivers having apparently different packet loss characteristics are involved in the multicast, even when they are the same multicast group, there are cases in which the re-transmission processing is separately carried out in units of reception terminals or groups of terminals. Namely, m pieces of information packets and the k pieces of redundant packets are transmitted with respect to the multicast group first similarly as in the above, and then the smaller multicast units are formed by the terminals having the similar packet loss characteristics and the re-transmission processing is carried out in these smaller multicast units. </paragraph>
<paragraph id="P-0239" lvl="0"><number>&lsqb;0239&rsqb;</number> In principle, it is important to be capable of carrying out the multicast regardless of the number of receiving sides, but in the case where there is a need to carry out many re-transmissions with respect to some specific group of receives alone, it is not very preferable to transmit these re-transmission packets to all the receivers from a viewpoint of the network utilization efficiency. Consequently, the number of re-transmission packets should be assigned separately to each receiver group. </paragraph>
<paragraph id="P-0240" lvl="0"><number>&lsqb;0240&rsqb;</number> A simple example is shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, where the sender carries out the multicast with respect to five receivers. The receivers &num;1 and &num;2 are radio terminals, for which the packet loss rate is high. On the other hand, the receivers &num;3, &num;4 and &num;5 are the wire terminals for which the packet loss hardly occurs. In this case, the sender classifies the receivers &num;1 and &num;2 as the first group and the receivers &num;3, &num;4 and &num;5 as the second group, in advance. Also, the NACK signals from these receivers are made such that it is possible to recognize a group from which each NACK signal originates. </paragraph>
<paragraph id="P-0241" lvl="0"><number>&lsqb;0241&rsqb;</number> Now, suppose m&equals;5 and k&equals;2 so that seven packets are transmitted. The first transmission is similarly transmitted to all five receivers. Then, suppose that the NACK signal {circle over (<highlight><bold>3</bold></highlight>)} from the receiver &num;1, the NACK signal {circle over (<highlight><bold>4</bold></highlight>)} from the receiver &num;2, and the NACK signal {circle over (<highlight><bold>1</bold></highlight>)} are returned to the sender while no NACK signals are returned from the receivers &num;3 and &num;4. In this case, the sender looks at the NACK signals from the receivers of the first group first and newly produces four packets in correspondence to the largest value of their requested packet numbers, and transmits them by setting only the first group as destination. On the other hand, the sender looks at the NACK signal from the receivers of the second group and notices the the requested packet number is just one, so that the sender selects one packet arbitrarily from the four redundant packets transmitted to the first group earlier, and transmits it only to the second group. </paragraph>
<paragraph id="P-0242" lvl="0"><number>&lsqb;0242&rsqb;</number> When the groups are formed in this manner, the number of redundant packets that have to be produced is four just as in the case of using no groups, and the number of NACK signals to be merged is three also Just as in the case of using no groups. The processing differs only in that the NACK signal merging processing is divided into two parts, and a plurality of transmission target groups are used at a time of re-transmission. Consequently, even when the re-transmission packet processing with respect to a plurality of groups is carried out in this manner, the processing load on the sender is not much different when the coding scheme of the present invention is used. </paragraph>
<paragraph id="P-0243" lvl="0"><number>&lsqb;0243&rsqb;</number> If the conventional coding scheme is used in transmitting the redundant packets at a time of re-transmission, it is necessary to produce the packets separately in forms of four redundant packets that can be produced by using the generator polynomial of degree four and one redundant packet that can be produced by using the generator polynomial of degree one, so that the processing load of the sender is going to be increased. </paragraph>
<paragraph id="P-0244" lvl="0"><number>&lsqb;0244&rsqb;</number> As described, when the coding scheme of the present invention is used in the case of realizing the reliable multicast, it suffices to carry out the processing equivalent to the case of using no groups even when the separate re-transmission processing with respect to a plurality of groups is to be carried out, and therefore it is possible to realize the reliable multicast without increasing the processing load of the sender. </paragraph>
<paragraph id="P-0245" lvl="0"><number>&lsqb;0245&rsqb;</number> As described, according to the present invention, the packet communications are carried out by applying the scheme using the transmitting side syndrome values as the redundant symbols, so that it is possible to realize the reduction of the circuit size and the larger flexibility compared with the case of using the conventional coding scheme. </paragraph>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> More specifically, in the first place, by calculating the syndrome value only for the same information section at the transmitting side and the receiving side and carrying out the error correction using this syndrome value, it becomes possible to reduce the circuit size or the amount of software programs compared with the case of using the conventional coding scheme. </paragraph>
<paragraph id="P-0247" lvl="0"><number>&lsqb;0247&rsqb;</number> In particular, the correction power becomes maximum when the method used in decoding the Reed-Solomon codes is utilized as a method for calculating the syndrome value. </paragraph>
<paragraph id="P-0248" lvl="0"><number>&lsqb;0248&rsqb;</number> Secondly, even in the communication scheme which combined the error correction function with the re-transmission control, by applying the coding-scheme in which the syndrome value is calculated only for the information section at the transmitting side, it becomes possible to reduce the circuit size or the amount of software programs required for the processing compared with the case of using the conventional coding scheme. </paragraph>
<paragraph id="P-0249" lvl="0"><number>&lsqb;0249&rsqb;</number> Thirdly, in the case of realizing the reliable multicast communication using the error correction function, by utilizing the coding scheme for calculating the transmitting side syndrome value, it becomes possible to realize the communication without requiring a complicated negotiation processing regarding the number of redundant packets, even under an environment that involves reception terminals with not very high processing power. </paragraph>
<paragraph id="P-0250" lvl="0"><number>&lsqb;0250&rsqb;</number> Fourthly, in the case of realizing the reliable multicast communication by combining the error correction function and the re-transmission control, by utilizing the coding scheme for calculating the transmitting side syndrome value, it becomes possible to deal with the further multicast scale increase, while realizing the high efficiency of the processing and the reduction of the circuit size or the amount of software programs. </paragraph>
<paragraph id="P-0251" lvl="0"><number>&lsqb;0251&rsqb;</number> It is to be noted that, besides those already mentioned above, many modifications and variations of the above embodiments may be made without departing from the novel and advantageous features of the present invention. Accordingly, all such modifications and variations are intended to be included within the scope of the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for transmitting an error correcting code corresponding to an information to be transmitted in a communication system, comprising the steps of: 
<claim-text>generating at least one transmitting side syndrome value by carrying out a syndrome calculation for the information to be transmitted at a transmitting side; and </claim-text>
<claim-text>transmitting, from the transmitting side to a receiving side, at least one information packet containing the information to be transmitted and at least one redundant packet containing the transmitting side syndrome value generated by the generating step as a redundant part of the error correcting code. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the generating step generates as many transmitting side syndrome values as a number corresponding to a desired error correction capability using said number of mutually different polynomials of degree one. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the transmitting step enters a plurality of information symbols obtained by dividing the information to be transmitted into a plurality of information packets distributedly. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the transmitting step enters a plurality of transmitting side syndrome values generated with respect to the information to be transmitted into a plurality of redundant packets distributedly. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the generating step generates the transmitting side syndrome value by using the syndrome calculation based on a calculation method used for decoding Reed-Solomon codes. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the generating step generates a plurality of transmitting side syndrome values based on mutually different powers of a root of a primitive polynomial used in defining a code word for the information. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the steps of: 
<claim-text>receiving at least a part of the information packet and the redundant packet transmitted by the transmitting step at the receiving side; </claim-text>
<claim-text>obtaining at least one receiving side syndrome value by carrying out a syndrome calculation for an information contained in the information packet as received by the receiving step at the receiving side; and </claim-text>
<claim-text>performing error correcting, if required, by calculating a difference between the transmitting side syndrome value contained in the redundant packet as received by the receiving step and the receiving side syndrome value obtained by the obtaining step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein the obtaining step obtains the receiving side syndrome value by using the syndrome calculation based on a calculation method used for decoding Reed-Solomon codes. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein the obtaining step obtains a plurality of receiving side syndrome values based on mutually different powers of a root of a primitive polynomial used in defining a code word for the information. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of: 
<claim-text>transmitting another redundant packet containing another transmitting side syndrome value, as re-transmission from the transmitting side to the receiving side, when the receiving side cannot recover the information from the information packet and the redundant packet received by the receiving step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, further comprising the steps of: 
<claim-text>requesting the re-transmission from the receiving side to the transmitting side by specifying a number of transmitting side syndrome values to be transmitted; and </claim-text>
<claim-text>producing said another redundant packet containing the transmitting side syndrome values, as many as the number specified from the receiving side at the transmitting side. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the producing step produces said another redundant packet by calculating the transmitting side syndrome values for the information to be transmitted using a calculation method identical to the generating step. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, further comprising the steps of: 
<claim-text>receiving said another redundant packet transmitted by the re-transmitting step, as many as the receiving side should process; and </claim-text>
<claim-text>carrying out a recovery of the information by carrying out a syndrome calculation using said another redundant packet as received by the receiving step at the receiving side. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the re-transmitting step re-transmits said another redundant packet by multicast with respect to a plurality of receiving sides. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the re-transmitting step transmits said another redundant packet as many as a largest requested number of transmitting side syndrome values to be transmitted among re-transmission requests received from the plurality of receiving sides. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the re-transmitting step starts producing said another redundant packet containing the transmitting side syndrome values as many as a number of transmitting side syndrome values to be transmitted as requested from one receiving side, without waiting for receiving re-transmission requests from other receiving sides. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the transmitting step transmits the information packet and the redundant packet by multicast with respect to a plurality of receiving sides. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, further comprising the steps of: 
<claim-text>receiving the redundant packet transmitted by the transmitting step, as many as the receiving side should process; and </claim-text>
<claim-text>carrying out a recovery of the information by carrying out a syndrome calculation using the redundant packet as received by the receiving step at the receiving side. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the information to be transmitted is an IP packet and the method further comprises the step of dividing the IP packet into m pieces of divided data, where m is an integer greater than one; 
<claim-text>the generating step further divides each divided data into n pieces of information symbols, where n is an integer greater than one, and carries out a processing for generating said at least one transmitting side syndrome value for a set of m pieces of information symbols each selected from different one of the m pieces of divided data, with respect to each one of n sets of information symbols; and </claim-text>
<claim-text>the transmitting step enters the m pieces of divided data into payload sections of m pieces of information packets respectively, and enters n pieces of transmitting side syndrome values generated by the generating step into redundant packets. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the transmitting step transmits each one of the information packet and the redundant packet in a form of an IP-FEC packet. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the dividing step divides the IP packet by using an interleave matrix. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A method for transmitting an error correcting code corresponding to an information to be transmitted in a communication system, comprising the steps of: 
<claim-text>transmitting, from a transmitting side to a receiving side, packets generated by applying an error correction coding processing with respect to the information to be transmitted at the transmitting side; and </claim-text>
<claim-text>generating at least one transmitting side syndrome value by carrying out a syndrome calculation for the information to be transmitted at the transmitting side, and transmitting, from the transmitting side to the receiving side, at least one redundant packet containing the transmitting side syndrome value as a redundant part of the error correcting code, when the receiving side cannot recover the information to be transmitted from the packets received from the transmitting side and requests a re-transmission. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A transmission device for transmitting an error correcting code corresponding to an information to be transmitted in a communication system, comprising: 
<claim-text>a generation unit for generating at least one transmitting side syndrome value by carrying out a syndrome calculation for the information to be transmitted at a transmitting side; and </claim-text>
<claim-text>a transmission unit for transmitting, from the transmitting side to a receiving side, at least one information packet containing the information to be transmitted and at least one redundant packet containing the transmitting side syndrome value generated by the generation unit as a redundant part of the error correcting code. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A reception device for receiving an error correcting code corresponding to an information to be transmitted in a communication system, comprising: 
<claim-text>a reception unit for receiving at least a part of at least one information packet containing the information to be transmitted and at least one redundant packet containing at least one transmitting side syndrome value for the information to be transmitted as calculated by a transmitting side; </claim-text>
<claim-text>a calculation unit for obtaining at least one receiving side syndrome value by carrying out a syndrome calculation for an information contained in the information packet as received by the reception unit; and </claim-text>
<claim-text>a correction unit for performing error correction, if required, by calculating a difference between the transmitting side syndrome value contained in the redundant packet as received by the reception unit and the receiving side syndrome value obtained by the calculation unit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A communication system for transmitting an error correcting code corresponding to an information to be transmitted, comprising: 
<claim-text>a generation unit for generating at least one transmitting side syndrome value by carrying out a syndrome calculation for the information to be transmitted at a transmitting side; </claim-text>
<claim-text>a transmission unit for transmitting, from the transmitting side to a receiving side, at least one information packet containing the information to be transmitted and at least one redundant packet containing the transmitting side syndrome value generated by the generation unit as a redundant part of the error correcting code; </claim-text>
<claim-text>a reception unit for receiving at least a part of the information packet and the redundant packet transmitted by the transmission unit; </claim-text>
<claim-text>a calculation unit for obtaining at least one receiving side syndrome value by carrying out a syndrome calculation for an information contained in the information packet as received by the reception unit; and </claim-text>
<claim-text>a correction unit for performing error correction, if required, by calculating a difference between the transmitting side syndrome value contained in the redundant packet as received by the reception unit and the receiving side syndrome value obtained by the calculation unit.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>10</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005387A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005387A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005387A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005387A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005387A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005387A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005387A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005387A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005387A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030005387A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030005387A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030005387A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030005387A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030005387A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030005387A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030005387A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030005387A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030005387A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030005387A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
