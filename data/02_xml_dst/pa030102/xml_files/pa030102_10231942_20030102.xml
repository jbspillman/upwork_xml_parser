<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002350A1-20030102-D00000.TIF SYSTEM "US20030002350A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002350A1-20030102-D00001.TIF SYSTEM "US20030002350A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002350A1-20030102-D00002.TIF SYSTEM "US20030002350A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002350A1-20030102-D00003.TIF SYSTEM "US20030002350A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002350A1-20030102-D00004.TIF SYSTEM "US20030002350A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002350A1-20030102-D00005.TIF SYSTEM "US20030002350A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002350A1-20030102-D00006.TIF SYSTEM "US20030002350A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002350</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10231942</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020829</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G11C005/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>365</class>
<subclass>189050</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Distributed write data drivers for burst access memories</title-of-invention>
</technical-information>
<continuity-data>
<division-of>
<parent-child>
<child>
<document-id>
<doc-number>10231942</doc-number>
<kind-code>A1</kind-code>
<document-date>20020829</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09361795</doc-number>
<document-date>19990727</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</division-of>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>09361795</doc-number>
<document-date>19990727</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09031325</doc-number>
<document-date>19980226</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6381180</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<division-of>
<parent-child>
<child>
<document-id>
<doc-number>09031325</doc-number>
<document-date>19980226</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08785867</doc-number>
<document-date>19970121</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5757703</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</division-of>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>08785867</doc-number>
<document-date>19970121</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08497354</doc-number>
<document-date>19950630</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5598376</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>08497354</doc-number>
<document-date>19950630</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08386894</doc-number>
<document-date>19950210</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5610864</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-in-part-of>
</continuations>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>08386894</doc-number>
<document-date>19950210</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08370761</doc-number>
<document-date>19941223</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5526320</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-in-part-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Todd</given-name>
<middle-name>A.</middle-name>
<family-name>Merritt</family-name>
</name>
<residence>
<residence-us>
<city>Boise</city>
<state>ID</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Troy</given-name>
<middle-name>A.</middle-name>
<family-name>Manning</family-name>
</name>
<residence>
<residence-us>
<city>Boise</city>
<state>ID</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>Micron Technology, Inc.</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>SCHWEGMAN, LUNDBERG, WOESSNER &amp; KLUTH, P.A.</name-1>
<name-2></name-2>
<address>
<address-1>P.O. BOX 2938</address-1>
<city>MINNEAPOLIS</city>
<state>MN</state>
<postalcode>55402</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An integrated circuit memory device is designed to perform high speed data write cycles. An address strobe signal is used to latch a first address. During a burst access cycle the address is incremented internal to the device with additional address strobe transitions. A new memory address is only required at the beginning of each burst access. Read/Write commands are issued once per burst access eliminating the need to toggle the Read/Write control line at the device cycle frequency. A transition of the Read/Write control line during a burst access is used to terminate the burst access and initialize the device for another burst access. Write cycle times are maximized to allow for increases in burst mode operating frequencies. Local logic gates near array sense amplifiers are used to control write data drivers to provide for maximum write times without crossing current during input/output line equilibration periods. By gating global write enable signals with global equilibrate signals locally at data sense amp locations, local write cycle control signals are provided which are valid for essentially the entire cycle time minus an I/O line equilibration period in burst access memory devices. For nonburst mode memory devices such as EDO and Fast Page Mode, the write function may begin immediately following the end of the equilibration cycle to provide a maximum write time without interfering with the address setup time of the next access cycle. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation in part of application Ser. No. 08/386,894 filed Feb. 10, 1995, which is a continuation in part of application Ser. No. 08/370,761 filed Dec. 23, 1994.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates to memory device architectures designed to provide high density data storage with high speed read and write access cycles. This invention relates more specifically to circuits and methods for controlling memory write cycles. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> There is a demand for faster, higher density, random access memory integrated circuits which provide a strategy for integration into today&apos;s personal computer systems. In an effort to meet this demand, numerous alternatives to the standard DRAM architecture have been proposed. One method of providing a longer period of time when data is valid at the outputs of a DRAM without increasing the fast page mode cycle time is called Extended Data Out (EDO) mode. In an EDO DRAM the data lines are not tri-stated between read cycles in a fast page mode operation. Instead, data is held valid after /CAS goes high until sometime after the next /CAS low pulse occurs, or until /RAS or the output enable (/OE) goes high. Determining when valid data will arrive at the outputs of a fast page mode or EDO DRAM can be a complex function of when the column address inputs are valid, when /CAS falls, the state of /OE and when /CAS rose in the previous cycle. The period during which data is valid with respect to the control line signals (especially /CAS) is determined by the specific implementation of the EDO mode, as adopted by the various DRAM manufacturers. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Methods to shorten memory access cycles tend to require additional circuitry, additional control pins and nonstandard device pinouts. The proposed industry standard synchronous DRAM (SDRAM) for example has an additional pin for receiving a system clock signal. Since the system clock is connected to each device in a memory system, it is highly loaded, and it is always toggling circuitry in every device. SDRAMs also have a clock enable pin, a chip select pin and a data mask pin. Other signals which appear to be similar in name to those found on standard DRAMs have dramatically different functionality on a SDRAM. The addition of several control pins has required a deviation in device pinout from standard DRAMs which further complicates design efforts to utilize these new devices. Significant amounts of additional circuitry are required in the SDRAM devices which in turn result in higher device manufacturing costs. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> It is desirable to design and manufacture a memory device having a standard DRAM pinout and a burst mode of operation where multiple data values can be sequentially written to or read from the device in response to a single address location and multiple access strobes. It is also desirable that this new memory device operate at higher frequencies than standard DRAMs. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> There is a problem in performing write cycles at high frequencies. In standard Fast Page Mode and EDO mode DRAM devices, write cycles are performed in response to both /CAS and /WE being low after /RAS is low. If an address change occurs at approximately the same time that /CAS falls, then an additional delay is required to equilibrate input/output lines and to fire a new column prior to beginning the write cycle. Data to be written is latched, and the write cycle begins when the latter of /CAS and /WE goes low provided that the equilibrate is complete. Generally, the write time can be considered to be the period of time that /WE and /CAS are simultaneously low. However, in order to allow for maximum page mode operating frequencies, the write cycle is often timed out so that it can continue for a short period of time after /CAS or /WE goes high especially for &ldquo;late write&rdquo; cycles. Maintaining the write cycle throughout the time-out period eases the timing specifications for /CAS and /WE that the device user must meet, and reduces susceptibility to glitches on the control lines during a write cycle. The write cycle is terminated after the time out period, and if /WE is high a read access begins based on the address present on the address input lines. The read access will typically begin prior to the next /CAS falling edge so that the column address to data valid specification can be met (tAA). In order to begin the read cycle as soon as possible, it is desirable to minimize the write cycle time while guaranteeing completion of the write cycle. Minimizing the write cycle duration in turn minimizes the margin to some device operating parameters despite the speed at which the device is actually used. Circuits to model the time required to complete the write cycle typically provide an estimate of the time required to write an average memory cell. While it is desirable to minimize the write cycle time, it is also necessary to guarantee that enough time is allowed for the write to complete, so extra delay is added making the write cycle slightly longer than required. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Another aspect of controlling the write cycle timing includes delaying the write enable or write enables to guarantee that the write data drivers are not enabled prior to the completion of the equilibrate function. Equalization of internal data I/O lines is performed in response to column address transitions in preparation for reading or writing data from another memory cell, and also in response to receipt of a write command to reduce the maximum signal transition on the data lines once the write drivers are enabled. If the data lines are each equalized to one half of Vcc for example, then the write data drivers will only need to drive one line from half Vcc to ground, and the other from half Vcc to Vcc. Otherwise, if the write data is not equal to the data previously on the I/O lines, the write data drivers will need to drive both true and compliment I/O lines a full Vcc swing for each data bit being written. Equalization of the data I/O lines reduces the maximum write cycle time by eliminating the worst case signal swing conditions. A simple method of equilibrating the I/O lines is to: disable I/O line drivers; isolate the I/O lines from the digit lines; and couple complimentary I/O lines together. When a true I/O line is coupled to a complimentary I/O line, a logic high will be coupled to a logic low and each line will equalize to a potential approximately half way between a high and a low. It is important to disable the I/O line drivers during equilibration to prevent a true logic driver from being coupled to a complimentary logic driver which will draw excessive current from the logic high source to the logic low source. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Whether /CAS goes low last (early write) or /WE goes low last (late write), the column address will be valid at or before the write command is received. Hence, a delay from receipt of the write command which is greater than the equilibrate time will guarantee that an equilibrate due to a column address change is complete prior to the enabling the write drivers. If an equilibrate of internal data I/O lines is performed in response to receipt of each write command, a simple delay of the write enables will allow for the equilibrate to complete prior to enabling the write drivers. The delay value for the write cycle to write driver enable delay must account for the worst case signal delays from the equilibrate and write driver enable signal sources to the furthest data I/O line equilibrate devices and write data drivers. Since the equilibrate and write driver enable signal sources are located in a main logic area, a considerable signal propagation delay will result from the transmission of these signals across the chip to the Rest I/O line pair. Timing delays due to routing differences in the two signal paths can be very difficult to accurately model and predict To overcome these difficulties, extra delay is added for timing margin. Unfortunately, this prevents the write drivers from being enabled as soon as the equilibrate function is complete. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Throughout the memory device product lifetime, manufacturing process advances and circuit enhancements often allow for increases in device operating frequencies. The write cycle timing circuits may need to be adjusted to shorten the minimum write cycle times to match these performance improvements. Adjustments may include shortening the equilibrate time, shortening the write cycle to write driver enable time and shortening the write cycle hold time. Fine tuning of these timing circuit. is time consuming and costly. If the write cycles are too short, the device may fail under some or all operating conditions. If the write cycles are too long, the device may not be able to achieve the higher operating frequencies that are more profitable for the device manufacturers. Finally, if the equilibrate is not complete prior to enabling the write drivers, then excessive current may flow through the write drivers from Vcc to ground. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> With the increased operating frequencies of burst access memory devices a new method of generating the write cycle timing is desired which will allow for maximum write cycle times despite the operating frequency of the device. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> An integrated circuit memory device with a standard DRAM pinout is designed for high speed data access and for compatibility with existing memory systems. A high speed burst mode of operation is provided where multiple sequential accesses occur following a single column address, and read data is output relative to the /CAS control signal. In the burst mode of operation the address is incremented internal to the device eliminating the need for external address lines to switch at high frequencies. Read/Write commands are issued once per burst access eliminating the need to toggle the Read/Write control line at high speeds. Only one control line per memory chip (/CAS) must toggle at the operating frequency in order to clock the internal address counter and the data input/output latches. The load on each /CAS is typically less than the load on the other control signals (/RAS, /WE and /OE) since each /CAS typically controls only a byte width of the data bus. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> A new write cycle timing method and circuit allow for maximized write cycle timing at all operating frequencies to provide maximum write cycle timing margins. Write control is maintained throughout a write cycle such that the write operation time approaches the write cycle time. The write function is only halted between write cycles for a period of time required to select a new column of the array and to equilibrate I/O lines in the array. To maximize write cycle times, a logic device is located near the sense amplifiers of the device to control the write function directly with the use of the I/O line equilibrate signal. It is important to disable the write drivers during the equilibrate time to prevent current flow through the true and compliment data drivers while the I/O lines are coupled together. The local write enable circuit allows the write cycle time to be essentially equal to the access cycle time minus the I/O line equilibrate time in burst access memory devices. For nonburst mode memory devices such as EDO and Fast Page Mode, the write function may begin immediately following the end of the equilibration cycle to provide a maximum write time without interfering with the address setup time of the next cycle.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The features of the invention as well as objects and advantages are best understood by reference to the appended claims, detailed description of particular embodiments and accompanying drawings where: </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is an electrical schematic diagram of a memory device in accordance with one embodiment of the invention; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a timing diagram for a method of accessing the device of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a top view of a general device layout for a device designed in accordance with the teachings of the present invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is block level schematic of a data path portion of the device of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a more detailed schematic of a portion of the circuitry of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>; and </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a schematic diagram of a computer system designed in accordance with the teachings of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic representation of a sixteen megabit device designed in accordance with the present invention. The device is organized as a 2 Meg&times;8 burst EDO DRAM having an eight bit data input/output path <highlight><bold>10</bold></highlight> providing data storage for 2,097,152 bytes of information in the memory array <highlight><bold>12</bold></highlight>. The device of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> has an industry standard pinout for eight bit wide EDO DRAMs. An active-low row address strobe (/RAS) signal <highlight><bold>14</bold></highlight> is used to latch a first portion of a multiplexed memory address, from address inputs A<highlight><bold>0</bold></highlight> through A<highlight><bold>10</bold></highlight> <highlight><bold>16</bold></highlight>, in latch <highlight><bold>18</bold></highlight>. The latched row address <highlight><bold>20</bold></highlight> is decoded in row decoder <highlight><bold>22</bold></highlight>. The decoded row address is used to select a row of the memory array <highlight><bold>12</bold></highlight>. A column address strobe (/CAS) signal <highlight><bold>24</bold></highlight> is used to latch a second portion of a memory address from address inputs <highlight><bold>16</bold></highlight> into column address counter <highlight><bold>26</bold></highlight>. The latched column address <highlight><bold>28</bold></highlight> is decoded in column address decoder <highlight><bold>30</bold></highlight>. The decoded column address is used to select a column of the memory array <highlight><bold>12</bold></highlight>. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In a burst read cycle, data within the memory array located at the row and column address selected by the row and column address decoders is read out of the memory array and sent along data path <highlight><bold>32</bold></highlight> to output latches <highlight><bold>34</bold></highlight>. Data <highlight><bold>10</bold></highlight> driven from the burst EDO DRAM may be latched external to the device in synchronization with /CAS after a predetermined number of /CAS cycle delays (latency). For a two cycle latency design, the first /CAS falling edge is used to latch the initial address for the burst access. The first burst data from the memory is driven from the memory after the second /CAS falling edge, and remains valid through the third /CAS falling edge. Once the memory device begins to output data in a burst read cycle, the output drivers <highlight><bold>34</bold></highlight> continue to drive the data lines without tri-stating the data outputs during /CAS high intervals dependent on the state of the output enable and write enable (/OE and /WE) control lines, thus allowing additional time for the system to latch the output data. Once a row and a column address are selected, additional transitions of the /CAS signal are used to advance the column address within the column address counter in a predetermined sequence. The time at which data becomes valid at the outputs of the burst EDO DRAM is dependent only on the timing of the /CAS signal provided that /OE is maintained low, and /WE remains high. The output data signal levels may be driven in accordance with, but are not limited to, CMOS, TTL, LVTTL, GTL, or HSTL output level specifications. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The address may be advanced linearly, or in an interleaved fashion for maximum compatibility with the overall system requirements. The column address may be advanced with each /CAS transition, each pulse, or multiple of /CAS pulses in the event that more than one data word is read from the array with each column address. When the address is advanced with each transition of the /CAS signal, data is also driven from the part after each transition following the device latency which is then referenced to each edge of the /CAS signal. This allows for a burst access cycle where the highest switching control line (/CAS) toggles only once (high to low or low to high) for each memory cycle. This is in contrast to standard DRAMs which require /CAS to go low and then high for each cycle, and synchronous DRAMs which require a full clock cycle (high and low transitions) for each memory cycle. For maximum compatibility with existing EDO DRAM devices, the invention will be further described in reference to a device designed to initiate access cycles on falling edges of the /CAS signal. For designs where falling edges of the /CAS signal initiate an access cycle, the falling edge may be said to be the active transition of the /CAS signal. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> It may be desirable to latch and increment the column address after the first /CAS falling edge in order to apply both the latched and incremented addresses to the array at the earliest opportunity in an access cycle. For example, a device may be designed to access two data words per cycle (prefetch architecture). The memory array for a prefetch architecture device may be split into odd and even array halves. The column address least significant bit is used to select between odd and even halves while the other column address bits select a column within each of the array halves. In an interleaved access mode with column address 1, data from columns 0 and 1 are read and the data from column 1 is output followed by the data from column 0 in accordance with standard interleaved addressing as described in SDRAM specifications. In a linear access mode column address 1 is applied to the odd array half, and incremented to address 2 for accessing the even array half to fulfill the two word access. One method of implementing this type of device architecture is to provide a column address incrementing circuit between the column address counter and the even array half. The incrementing circuit increments the column address only if the initial column address in a burst access cycle is odd, and the address mode is linear. Otherwise the incrementing circuit passes the column address unaltered. For a design using a prefetch of two data accesses per cycle, the column address is advanced once for every two active edges of the /CAS signal. In a write cycle, multiple data words may be temporarily stored as they are input to the device. The actual write of data to the memory cells occurs after the last input data is latched, and may extend slightly into the next memory cycle as long as it ends prior to the next column being activated. Prefetch architectures where more than two data words are accessed are also possible. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Other memory architectures applicable to the current invention include a pipelined architecture where memory accesses are performed sequentially, but each access requires more than a single cycle to complete. In a pipelined architecture the overall throughput of the memory approaches one access per cycle, but the data out of the memory is offset by a number of cycles equal to the pipeline length and/or the desired latency from /CAS. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> In the burst access memory device, each new column address from the column address counter is decoded and is used to access additional data within the memory array without the requirement of additional column addresses being specified on the address inputs <highlight><bold>16</bold></highlight>. This burst sequence of data continues for each /CAS falling edge until a predetermined number of data accesses equal to the burst length occurs. A /CAS falling edge received after the last burst address has been generated latches another column address from the address inputs <highlight><bold>16</bold></highlight> and a new burst sequence begins. Read data is latched and output with each falling edge of /CAS after the first /CAS latency. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> For a burst write cycle, data <highlight><bold>10</bold></highlight> is latched in input data latches <highlight><bold>34</bold></highlight>. Data targeted at the first address specified by the row and column addresses is latched with the /CAS signal when the first column address is latched (write cycle data latency is zero). Other write cycle data latency values are possible; however, for today&apos;s memory systems, zero is preferred. Additional input data words for storage at incremented column address locations are latched by /CAS on successive /CAS active transitions. Input data from the input latches <highlight><bold>34</bold></highlight> is passed along data path <highlight><bold>32</bold></highlight> to the memory array where it is stored at the location selected by the row and column address decoders. As in the burst read cycle previously described, a predetermined number of burst access writes are performed without the requirement of additional column addresses being provided on the address lines <highlight><bold>16</bold></highlight>. After the predetermined number of burst writes occur, a subsequent /CAS pulse latches a new beginning column address, and another burst read or write access begins. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The memory device of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> may include the option of switching between burst EDO and standard EDO modes of operation. In this case, the write enable signal /WE <highlight><bold>36</bold></highlight> is used at the row address latch time (/RAS falling, /CAS high) to determine whether memory accesses for that row are burst or page mode cycles. If /WE is low when /RAS falls, burst access cycles are selected. If /WE is high at /RAS falling, standard extended data out (EDO) page mode cycles are selected. Both the burst and EDO page mode cycles allow for increased memory device operating frequencies by not requiring the data output drivers <highlight><bold>34</bold></highlight> to place the data lines <highlight><bold>10</bold></highlight> in a high impedance state between data read cycles while /RAS is low. DRAM control circuitry <highlight><bold>38</bold></highlight>, in addition to performing standard DRAM control functions, controls the I/O circuitry <highlight><bold>34</bold></highlight> and the column address counter/latch <highlight><bold>26</bold></highlight> in accordance with the mode selected by /WE when /RAS falls. In a burst mode only DRAM, or in a device designed with an alternate method of switching between burst and non-burst access cycles, the state of /WE when /RAS falls may be used to switch between other possible modes of operation such as interleaved versus linear addressing modes. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The write enable signal is used in burst access cycles to select read or write burst accesses when the initial column address for a burst cycle is latched by /CAS. /WE low at the column address latch time selects a burst write access. WE high at the column address latch time selects a burst read access. The level of the /WE signal must remain high for read and low for write burst accesses throughout the burst access. A low to high transition within a burst write access terminates the is burst access, preventing further writes from occurring. A high to low transition on /WE within a burst read access likewise terminates the burst read access and places the data output <highlight><bold>10</bold></highlight> in a high impedance state. Transitions of the /WE signal may be locked out during critical timing periods within an access cycle in order to reduce the possibility of triggering a false write cycle, and/or to guarantee the completion of a write cycle once it has begun. After the critical timing period the state of /WE determines whether a burst access continues, is initiated, or is terminated. Termination of a burst access places the DRAM in a state to receive another burst access command. Both /RAS and /CAS going high during a burst access also terminates the burst access cycle placing the data drivers in a high impedance output state. Read data may remain valid at the device outputs if /RAS alone goes high while /CAS is active for compatibility with hidden refresh cycles, otherwise /RAS high alone may be used to terminate a burst access. A minimum write enable pulse width is only required when it is desired to terminate a burst read and then begin another burst read, or terminate a burst write prior to performing another burst write with a minimum delay between burst accesses. In the case of burst reads, /WE transitions from high to low to terminate a first burst read, and then /WE transitions back high prior to the next falling edge of /CAS in order to specify a new burst read cycle. For burst writes, /WE transitions high to terminate a current burst write access, then back low prior to the next falling edge of /CAS to initiate another burst write access. A minimum /WE pulse width may be specified to guarantee recognition of the /WE pulse despite /WE lockout periods. If no /WE lockout circuit is used, termination of a burst access may be edge sensitive to the /WE signal. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> A basic implementation of the device of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> may include a fixed burst length of 4, a fixed /CAS latency of 2 and a fixed interleaved sequence of burst addresses. This basic implementation requires very little additional circuitry to the standard EDO page mode DRAM, and may be mass produced to provide the functions of both the standard EDO page mode and burst EDO DRAMs. This device also allows for the output enable pin (/OE) to be grounded for compatibility with many SIMM module designs. When not disabled (tied to ground), /OE is an asynchronous control which prevents data from being driven from the part in a read cycle if it is inactive (high) prior to /CAS falling and remains inactive beyond /CAS rising. If these setup and hold conditions are not met, then the read data may be driven for a portion of the read cycle. It is possible to synchronize the /OE signal with /CAS, however this typically increases the /CAS to data valid delay time and doesn&apos;t allow for the last output data to be disabled prior to /RAS high without an additional /CAS low pulse which would otherwise be unnecessary. In a preferred embodiment, if /OE transitions high at any time during a read cycle the outputs remain in a high impedance state until the next falling edge of /CAS despite further transitions of the /OE signal. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Programmability of the burst length, /CAS latency and address sequences may be accomplished through the use of a mode register <highlight><bold>40</bold></highlight> which latches the state of one or more of the address input signals <highlight><bold>16</bold></highlight> or data signals <highlight><bold>10</bold></highlight> upon receipt of a write-/CAS-before-/RAS (WCBR) programming cycle. In such a device, outputs <highlight><bold>44</bold></highlight> from the mode register control the required circuits on the DRAM. Burst length options of 2, 4, 8 and full page as well as /CAS latencies of 1, 2 and 3 may be provided. Other burst length and latency options may be provided as the operating speeds of the device increase, and computer architectures evolve. The device of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> includes programmability of the address sequence by latching the state of the least significant address bit during a WCBR cycle. The burst length and /CAS latency for this particular embodiment are fixed. Other possible alterations in the feature sets of this DRAM include having a fixed burst mode only, selecting between standard fast page mode (non-EDO) and burst mode, and using the output enable pin (/OE) <highlight><bold>42</bold></highlight> in combination with /RAS to select between modes of operation. Also, a WCBR refresh cycle could be used to select the mode of operation rather than a control signal in combination with /RAS. A more complex memory device may provide additional modes of operation such as switching between fast page mode, EDO page mode, static column mode and burst operation through the use of various combinations of /WE and /OE at /RAS falling time. One mode from a similar set of modes may be selected through the use of a WCBR cycle using multiple address or data lines to encode the desired mode. Alternately, a device with multiple modes of operation may have wire bond locations, or programmable fuses which may be used to program the mode of operation of the device. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> A preferred embodiment of a sixteen bit wide burst EDO mode DRAM is designed in accordance with the teachings of this invention has two column address strobe input pins /CASH and /CASL. For read cycles only one /CAS signal needs to toggle. The second /CAS may remain high or toggle with the other /CAS. During burst read cycles, all sixteen data bits will be driven out of part during a read cycle even if one /CAS remains inactive. In a typical system application, a microprocessor reads all data bits on a data bus in each read cycle, but may only write certain bytes of data in a write cycle. Allowing one of the /CAS control signals to remain static during read cycles helps to reduce overall power consumption and noise within the system. For burst write access cycles, each of the /CAS signals (CASH and /CASL) acts as a write enable for an eight bit width of the data. The two /CAS&apos;s are combined in an AND function to provide a single internal /CAS which will go low when the first external /CAS falls, and returns high after the last external /CAS goes high. All sixteen data inputs are latched when the first of the /CAS signals transitions low. If only one /CAS signal transitions low, then the eight bits of data associated with the /CAS that remained high are not stored in the memory. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The present invention has been described with reference to several preferred embodiments. Just as fast page mode DRAMs and EDO DRAMs are available in numerous configurations including x1, x4, x8 and x16 data widths, and 1 Megabit, 4 Megabit, 16 Megabit and 64 Megabit densities; the memory device of the present invention may take the form of many different memory organizations. It is believed that one who is skilled in the art of integrated circuit memory design can, with the aide of this specification design a variety of memory devices which do not depart from the spirit of this invention. It is therefore believed that detailed descriptions of the various memory device organizations applicable to this invention are not necessary. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> It should be noted that the pinout for this new burst EDO memory device may be identical to the pinout for a standard EDO DRAM. The common pinout allows this new device to be used in existing memory designs with minimum design changes. The common pinout also allows for ease of new designs by those of skill in the art who are familiar with the standard EDO DRAM pinout. Variations of the described invention which maintain the standard EDO DRAM pinout include driving the /CAS pin with a system clock signal to synchronize data access of the memory device with the system clock. For this embodiment, it may be desirable to use the first /CAS active edge after /RAS falls to latch the row address, a later edge may be used to latch the first column address of a burst access cycle. After row and column addresses are latched within the device, the address may be incremented internally to provide burst access cycles in synchronization with the system clock. Other pin function alternatives include driving the burst address incrementing signal on the /OE pin since the part does not require a data output disable function on this pin. Other alternate uses of the /OE pin also allow the device to maintain the standard EDO pinout, but provide increased functionality such as burst mode access. The /OE pin may be used to signal the presence of a valid column starting address, or to terminate a burst access. Each of these embodiments provides for a high speed burst access memory device which may be used in current memory systems with a minimum amount of redesign. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a timing diagram for performing a burst read followed by a burst write of the device of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. In <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> row address is latched by the /RAS signal. /WE is low when /RAS falls for an embodiment of the design where the state of the /WE pin is used to specify a burst access cycle at /RAS time, otherwise /WE may be a &ldquo;don&apos;t care&rdquo; at /RAS falls. Next, /CAS is driven low with /WE high to initiate a burst read access, and the initial column address is latched. The data out signals (DQ&apos;s) are not driven in the first /CAS cycle. On the second falling edge of the /CAS signal the internal address generation circuitry provides a column address, and another access of the array begins. The first data out is driven from the device following the second /CAS and a /CAS to data access time (tCAC) delay. Additional burst access cycles continue, for a device with a specified burst length of four, until the fifth falling edge of /CAS which latches a new column address for a new burst read access. /WE falling in the fifth /CAS cycle terminates the burst access, and initializes the device for additional burst accesses. The sixth falling edge of /CAS with /WE low is used to latch a new burst address, latch input data and begin a burst write access of the device. Additional data values are latched on successive /CAS falling edges until /RAS rises to terminate the burst access. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> It should be noted from <cross-reference target="DRAWINGS">FIG. 2</cross-reference> that for burst read cycles the data remains valid on the device outputs as long as the /OE pin is low, except for brief periods of data transition. Also, since the /WE pin is low prior to or when /CAS falls, the data input/output lines are not driven from the part during write cycles, and the /OE pin is a &ldquo;don&apos;t care&rdquo;. Only the /CAS signal and the data signals toggle at relatively high frequency, and no control signals other than /CAS are required to be in an active or inactive state for one /CAS cycle time or less. This is in contrast to SDRAMs which often require row address strobes, column address strobes, data mask, and read/write control signals to be valid for one clock cycle or less for various device functions. Typical DRAMs also allow for the column address to propagate through to the array to begin a data access prior to /CAS falling. This is done to provide fast data access from /CAS falling if the address has been valid for a sufficient period of time prior to /CAS falling for the data to have been accessed from the array. In these designs an address transition detection circuit is used to restart the memory access if the column address changes prior to /CAS. falling. This method actually requires additional time for performing a memory access since it must allow for a period of time at the beginning of each memory cycle after the last address transition to prepare for a new column address by equilibrating internal I/O lines, deselecting all columns and selecting a new column. Changes in the column address just prior to /CAS falling may increase the access time by approximately five nanoseconds. An embodiment of the present invention will not allow the column address to propagate through to the array until after /CAS has fallen. This eliminates the need for address transition detection circuitry, and allows for a fixed array access time relative to /CAS. In a preferred embodiment of the design, the address counter is advanced on /CAS rising edges, and the address generated in the counter is then presented to the array on the next /CAS falling edge in a burst access. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a topographic layout view of one embodiment of a memory device designed in accordance with the teachings of the present invention. Memory device <highlight><bold>50</bold></highlight> has a central logic region <highlight><bold>52</bold></highlight>, array regions <highlight><bold>54</bold></highlight>, and logic and pads regions <highlight><bold>56</bold></highlight>. Circuitry in region <highlight><bold>52</bold></highlight> includes write control circuitry <highlight><bold>58</bold></highlight> and equilibration control circuitry <highlight><bold>60</bold></highlight> in addition to other memory timing control circuits. Circuitry in array interface regions <highlight><bold>62</bold></highlight> includes array address drivers. Circuitry in the logic and pads areas includes data buffers and I/O pads. I/O pads running through the center of a chip in this fashion is indicative of a Leads Over Chip (LOC) packaging configuration. The layout shown is for example only. Other possible layouts include but are not limited to: a) layouts with pads and central logic circuits located on the sides and/or ends of the memory device with array circuitry occupying the center of the device; b) central logic circuits located centrally along one axis of the device with pads on the sides or ends of the device; or c) central logic in the center of the chip with pads running through the chip and on the sides or ends of the chip for a hybrid of LOC and conventional bonding. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Array regions <highlight><bold>54</bold></highlight> are broken into <highlight><bold>16</bold></highlight> subarray regions <highlight><bold>64</bold></highlight> each of which has an associated data sense amplifier <highlight><bold>66</bold></highlight> located along one edge of the array. Write enable signal <highlight><bold>68</bold></highlight> and I/O line equilibrate signal <highlight><bold>70</bold></highlight> are routed to each data sense amplifier. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is block level schematic of a data path portion of the device of <cross-reference target="DRAWINGS">figure 3</cross-reference>. Elements in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> that have the same or similar function as numbered elements in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> are given the same reference numerals. In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, data written to the memory device is received on data I/O pad <highlight><bold>100</bold></highlight>. The write data is passed through input circuit <highlight><bold>102</bold></highlight> to a global sense amp <highlight><bold>66</bold></highlight> over write data lines <highlight><bold>103</bold></highlight>. For this example, the sense amplifier includes an I/O line multiplexer <highlight><bold>104</bold></highlight> which is used to select a path from local I/O data line pair <highlight><bold>106</bold></highlight> to one of two pairs of array I/O lines <highlight><bold>108</bold></highlight> and <highlight><bold>110</bold></highlight>. Write data is driven from write data lines <highlight><bold>103</bold></highlight> to I/O lines <highlight><bold>106</bold></highlight> when enabled by a logical combination of the equilibrate signal <highlight><bold>70</bold></highlight> and the write enable signal <highlight><bold>68</bold></highlight> from timing circuit <highlight><bold>59</bold></highlight> and data path control circuit <highlight><bold>124</bold></highlight> of central logic circuitry <highlight><bold>52</bold></highlight>. In this example array I/O lines <highlight><bold>108</bold></highlight> are coupled to an adjacent section of the array (not shown). Array I/O lines <highlight><bold>110</bold></highlight> are true and compliment lines coupled to a local array sense amplifier <highlight><bold>112</bold></highlight> which is part of array section <highlight><bold>64</bold></highlight>. Column select signal <highlight><bold>114</bold></highlight> from column driver <highlight><bold>115</bold></highlight> couples array data I/O lines <highlight><bold>110</bold></highlight> to a pair of complimentary digit lines <highlight><bold>116</bold></highlight> inside the local sense amplifier <highlight><bold>112</bold></highlight>. One of the complimentary digit lines is coupled to a memory cell <highlight><bold>118</bold></highlight> through an access device which is selected by a signal on word line <highlight><bold>120</bold></highlight> from a row address decoder. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Read data follows the same path from the memory cell to the global sense amp where it is then driven on complimentary data read lines <highlight><bold>122</bold></highlight> to complimentary data lines <highlight><bold>126</bold></highlight> under control of data path control logic <highlight><bold>124</bold></highlight> and timing circuits <highlight><bold>59</bold></highlight>. Complimentary data <highlight><bold>126</bold></highlight> is driven to an I/O pad <highlight><bold>100</bold></highlight> through output circuit <highlight><bold>128</bold></highlight>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> This specific embodiment is not intended to provide an exhaustive description of all forms of the present invention. For example, I/O line multiplexer <highlight><bold>104</bold></highlight> would not be necessary if there is a global sense amp <highlight><bold>67</bold></highlight> for each pair of array I/O lines. Alternatively, additional array I/O lines could be multiplexed through the multiplexer <highlight><bold>104</bold></highlight> to allow for even fewer global sense amplifiers. Another variation is to allow read and write data to share a common path between the global sense amplifiers and the I/O pad. Also, separate input and output data pins can be provided. Numerous additional variations are possible and will be recognized by one of skill in the art. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a schematic diagram providing additional detail for portions of the circuitry of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. In <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, /WE and /CAS are logically combined in command latch and control circuit <highlight><bold>154</bold></highlight>. The write command output of circuit <highlight><bold>154</bold></highlight> is buffered through driver <highlight><bold>156</bold></highlight> to write command signal line <highlight><bold>158</bold></highlight>. The write command is coupled to a plurality of sense amps <highlight><bold>66</bold></highlight> through a distributed line resistance represented by resistor <highlight><bold>160</bold></highlight> over a signal line with distributed capacitive load represented by capacitor <highlight><bold>162</bold></highlight>. Write signal <highlight><bold>164</bold></highlight> arriving at the sense amplifier will be a delayed version of the output of the write command from the command latch. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Address inputs <highlight><bold>170</bold></highlight> are coupled to an address counter <highlight><bold>172</bold></highlight> and/or column address latch <highlight><bold>174</bold></highlight> which provide a burst column address <highlight><bold>175</bold></highlight> to the memory array. The column address and a version of the write command <highlight><bold>176</bold></highlight> are used to generate an equilibrate signal <highlight><bold>182</bold></highlight> in the address transition detection circuit <highlight><bold>180</bold></highlight>. For burst accesses, the address transition circuit may generate the equilibrate signal synchronously with an access cycle strobe signal rather than waiting for an actual address transition to be detected, especially if the address is advanced on rising /CAS edges in preparation for the next active falling edge. Equilibration control signal <highlight><bold>182</bold></highlight> passes through distributed resistance <highlight><bold>184</bold></highlight>, and is loaded by distributed capacitance <highlight><bold>186</bold></highlight>. A delayed version of the equilibrate signal <highlight><bold>188</bold></highlight> is coupled to the sense amp <highlight><bold>66</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The time delay of the write and equilibrate signals <highlight><bold>164</bold></highlight> and <highlight><bold>188</bold></highlight> at sense amp <highlight><bold>66</bold></highlight> will be dependent on which sense amp is being driven, as the distributed resistance and capacitances will vary for each sense amp location. Write command <highlight><bold>164</bold></highlight> and equilibrate signal <highlight><bold>188</bold></highlight> are combined at the global sense amp <highlight><bold>66</bold></highlight> in circuit <highlight><bold>200</bold></highlight>. In circuit <highlight><bold>200</bold></highlight>, the write command is gated with a decoded row address signal <highlight><bold>204</bold></highlight> in circuits <highlight><bold>202</bold></highlight> and <highlight><bold>208</bold></highlight>. Gated write command <highlight><bold>210</bold></highlight> is then combined with the equilibrate signal in logic gate <highlight><bold>212</bold></highlight> to form a write driver enable signal <highlight><bold>214</bold></highlight>. Equilibrate signal <highlight><bold>188</bold></highlight> provides an active low enable signal to data I/O line equilibration device <highlight><bold>232</bold></highlight>. When the equilibrate signal on line <highlight><bold>188</bold></highlight> is low, device <highlight><bold>232</bold></highlight> couples the two data I/O lines <highlight><bold>106</bold></highlight> together to equalize their potentials. A low on line <highlight><bold>188</bold></highlight> also disables logic device <highlight><bold>212</bold></highlight> preventing the write driver enable <highlight><bold>214</bold></highlight> from going active. When the equilibrate control signal <highlight><bold>188</bold></highlight> transitions high, the equilibration device <highlight><bold>232</bold></highlight> is deactivated, and the write driver enable gate <highlight><bold>212</bold></highlight> is enabled. For write cycles it is beneficial to provide the write command on line <highlight><bold>164</bold></highlight> before the equilibrate signal <highlight><bold>188</bold></highlight> goes high, then as soon as the equilibrate signal <highlight><bold>188</bold></highlight> goes high, the write command will be passed through gate <highlight><bold>212</bold></highlight> placing the write enable signal <highlight><bold>214</bold></highlight> in an active low condition without the requirement for an equilibration to write enable delay. Signal <highlight><bold>214</bold></highlight> is inverted in inverter <highlight><bold>216</bold></highlight> to provide an active high write enable <highlight><bold>218</bold></highlight>. The active low write enable goes to two NOR gates <highlight><bold>242</bold></highlight> and <highlight><bold>246</bold></highlight>. Active high write enable <highlight><bold>218</bold></highlight> is coupled to NAND gates <highlight><bold>240</bold></highlight> and <highlight><bold>244</bold></highlight>. The NOR and NAND gates pass write data to the I/O lines through devices <highlight><bold>250</bold></highlight>-<highlight><bold>256</bold></highlight> when enabled by the write driver enable signals <highlight><bold>214</bold></highlight> and <highlight><bold>218</bold></highlight>. For writing a logic &ldquo;one&rdquo; for example, the write data on line <highlight><bold>103</bold></highlight> may be high. A high on signal <highlight><bold>103</bold></highlight> in combination with a high write driver enable on signal line <highlight><bold>218</bold></highlight> will provide a low output from NAND gate <highlight><bold>240</bold></highlight> which will turn on device <highlight><bold>250</bold></highlight> to drive a logic one on the true I/O line. the high signal on data line <highlight><bold>103</bold></highlight> will disable NOR gate <highlight><bold>242</bold></highlight> to eliminate a current path to ground while NAND <highlight><bold>250</bold></highlight> is turned on. Data line <highlight><bold>103</bold></highlight> is inverted at inverter <highlight><bold>258</bold></highlight> to provide compliment data <highlight><bold>260</bold></highlight>. When data line <highlight><bold>103</bold></highlight> is high, complimentary data line <highlight><bold>260</bold></highlight> will be low which will enable NOR gate <highlight><bold>246</bold></highlight> and disable NAND gate <highlight><bold>244</bold></highlight>. Enabled NOR gate <highlight><bold>246</bold></highlight> combined with the active write driver enable signal <highlight><bold>214</bold></highlight> will provide a high output from NOR <highlight><bold>246</bold></highlight> to turn on device <highlight><bold>256</bold></highlight> and drive the complimentary I/O line low. For a maximized data write cycle time, the write command <highlight><bold>164</bold></highlight> can remain active throughout a burst write access. In this case, the write drivers are enabled and disabled by the equilibrate signal which will occur at the beginning of each access cycle. Multiple write command signals <highlight><bold>158</bold></highlight> may be utilized in devices with multiple /CAS or multiple /WE inputs to control writes to one of multiple data bytes for example. The decoded row address input prevents the write drivers from driving data on I/O lines in nonselected sections of the array. Multiplexer <highlight><bold>104</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> may be turned on during equilibrate and write portions of the cycle to allow array I/O lines to first be equilibrated and then receive write data. For nonburst mode memory devices, it is beneficial to provide the write command prior to the end of the equilibrate function to allow the write to begin as soon as possible. For these devices, the write will typically end prior to the next /CAS falling edge to allow the device to meet the column address to data valid access time in (TAA). For EDO devices in particular, the page mode cycle time is very short, but the address access time begins while /CAS is high, so the write cycles should end as soon as possible. One way to allow the write cycle to end as soon as possible is to begin it immediately after the equilibrate is complete. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> It is important to note that devices <highlight><bold>250</bold></highlight> and <highlight><bold>256</bold></highlight> will generally be enabled simultaneously, as will devices <highlight><bold>252</bold></highlight> and <highlight><bold>254</bold></highlight>. If the enable gate <highlight><bold>212</bold></highlight> were not locally present, then the write enable signal would need to be delayed from the equilibrate disable time to guarantee that a current path through devices <highlight><bold>250</bold></highlight>, <highlight><bold>232</bold></highlight> and <highlight><bold>256</bold></highlight> or devices <highlight><bold>252</bold></highlight>, <highlight><bold>232</bold></highlight> and <highlight><bold>254</bold></highlight> does not exist. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> At the end of a burst write access, the write enable may be deactivated in response to /RAS high and /CAS high, /RAS high alone, or after a time-out period following /CAS high. As stated above, the write command may be held active throughout a burst write access. Alternatively, it may be cleared at the beginning of each access cycle, and then relatched provided that /WE is low on the following /CAS high to low transition. If cleared, the period of time that the write command is inactivated within a burst write access is preferably shorter than the equilibrate time so that the write cycle can be maximized which in turn allows for a minimum cycle time. When a read command is detected (/WE high at /CAS falling), a current burst write access will be terminated and a burst read access will begin. It may be desirable to gate the equilibrate signal with the read command and the write control signal to ensure that the equilibrate signal does not end prior to the write control signal becoming invalid. This would be done to prevent the write drivers from becoming enabled for a fraction of the first read cycle in a burst read access sequence. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> By gating the write command and equilibrate signals at the sense amplifiers, numerous advantages are obtained over the simple write command delay. One advantage is a maximized write time since the write cycle can begin as soon as the equilibrate is complete for all device types, and can last until the next cycle begins in burst access devices. A second advantage is elimination of write driver enable delay circuitry which can have a variable delay dependent on the operating conditions of the memory device (supply voltage, temperature, etc.). Each driver will be fired when the equilibrate signal is locally deactivated, eliminating the possibility of crossing current through complimentary write drivers while complimentary data lines are coupled together for equilibration. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> A memory device may be designed with multiple /CAS inputs as described above. For a memory device with two /CAS inputs where each /CAS controls eight bits of a sixteen bit wide data port, a write cycle where only one /CAS is low must not write all data bits from the data input to the memory. A portion of the write data path associated with an inactive /CAS may be interrupted in a number of ways. Each of the two /CAS signals may enable half of the column address decoders such that no column will be selected in half of the memory associated with a high /CAS in a write cycle. In this case the write data drivers can be enabled, but the data I/O lines associated with a disabled column decoder will not be coupled to any memory cells. Alternately, the write control signals may be gated with the appropriate /CAS signal to prevent some of the write data drivers from being enabled. In this case, read data may be coupled from some memory cells to data I/O lines. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a schematic representation of a data processing apparatus designed in accordance with the present invention. For the purposes of this specification a microprocessor may be, but is not limited to, a central processing unit (CPU), a microprocessor, a microcontroller, a digital signal processor, or an arithmetic processor. In <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, microprocessor <highlight><bold>112</bold></highlight> is connected via address lines <highlight><bold>114</bold></highlight> and control lines <highlight><bold>116</bold></highlight> to a memory control circuit <highlight><bold>118</bold></highlight>. The memory control circuit provides address and control signals on lines <highlight><bold>122</bold></highlight> and <highlight><bold>120</bold></highlight> respectively to a burst access memory device <highlight><bold>124</bold></highlight>. The burst access memory device sends and receives data over data bus <highlight><bold>126</bold></highlight>. Optional data bus buffer <highlight><bold>130</bold></highlight> between memory data bus <highlight><bold>126</bold></highlight> and microprocessor data bus <highlight><bold>128</bold></highlight> allows for amplification of the data signals, and/or synchronization with the microprocessor and memory control signals. A fast static random access memory (SRAM) cache circuit <highlight><bold>132</bold></highlight> is also optional and provides higher speed access to data stored in the cache from the memory circuit or the microprocessor. Memory control circuit <highlight><bold>118</bold></highlight> may be incorporated within the microprocessor. The memory control circuit provides the required address strobe signals and read/write control signals required for burst mode access of the memory circuit. By providing burst access of the memory by the processor, a computer with relatively high memory bandwidth can be designed without the requirement of a fast SRAM cache. SRAMs which are fast enough to provide memory access without wait states can significantly add to the cost of a computer. Thus the burst access memory device of the present invention allows for medium to high performance computers to be manufactured at a cost which is significantly less than those manufactured today. Use of the burst access memory device of the present invention in cooperation with a fast SRAM cache allows for an even higher performance computer design by providing fast access to main memory in the event of a cache miss. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In a burst write operation, the processor <highlight><bold>112</bold></highlight> provides an initial address and a write command to the memory controller. The memory controller provides a row address to the memory with a row address strobe. The memory controller then provides a write command, a column address and a column address strobe to the memory. The memory will equilibrate internal data I/O lines in response to receipt of the write command and column address. During the equilibrate operation, write data and write command signals are passed to global sense amplifiers within the burst access memory device. At the end of the equilibrate operation, write data drivers are enabled, and write data is stored in the memory array. In a preferred embodiment, positive (low to high) transitions of /CAS will cause an internal address counter of the memory device to advance to the next burst address. Negative (high to low) transitions of /CAS will then end the previous write cycle and equilibrate the I/O lines. The negative transition of /CAS will also allow the burst address from the counter to be applied to the array. Once the equilibration is complete, the next write will be performed at the burst address from the counter. In an alternate embodiment, a clock signal is input to a burst access device to control generation of a burst address from the counter (SDRAMs for example have a clock input pin). </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In another embodiment, memory <highlight><bold>124</bold></highlight> operates in a page mode such as Fast Page Mode or EDO mode. Write commands at memory sense amps are enabled by the equilibrate signal becoming inactive at the sense amp. Using the equilibrate signal at the sense amp to gate the write signal to enable the write drivers eliminates wasted time associated with delaying the write driver enable signal to prevent excessive currents from flowing through the write drivers during the equilibration operation. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> For the purposes of this specification a node may be, but is not limited to, an intersection of conductors, a circuit input or output, or any point along a signal path. For example, the write command may be said to enter the global sense amp at node <highlight><bold>164</bold></highlight> and device <highlight><bold>250</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is said to be connected to a power source at node <highlight><bold>270</bold></highlight>. Also, the term signal may refer to but is not limited to information transferred along a conductor, or may refer to the conductor itself. For example, It may be said that the equilibrate signal <highlight><bold>188</bold></highlight> is coupled to the sense amp <highlight><bold>66</bold></highlight>. In this context, the term signal represents a physical conductor for carrying the electrical information to equilibrate the data I/O lines, and is not limited to the electrical information itself which is not present when the device is not connected to a power source. The term &ldquo;coupled&rdquo; refers to but is not limited to a connection which may be made directly, after buffering, or through another element such as a resistor, capacitor, transistor, or logic device. Typically, a device will be responsive at some time to a signal or another device which is coupled to it. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> While the present invention has been described with reference to preferred embodiments, numerous modifications and variations of the invention will be apparent to one of skill in the art without departing from the scope of the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A memory device having a plurality of internal data line pairs, an equilibration control circuit and a write cycle control circuit, the memory device further comprising: 
<claim-text>a plurality of data sense amplifiers each coupled to the equilibration control circuit, the write cycle control circuit and at least one of the data line pairs; </claim-text>
<claim-text>a plurality of write data drivers, each write data driver associated with at least one of said data sense amplifiers; and </claim-text>
<claim-text>a plurality of write data driver enable circuits, each write driver enable circuit associated with one of said write data drivers to enable said write data drivers to drive data onto at least one of the data line pairs in response to deassertion of an equilibrate signal from the equilibration control circuit while a write cycle enable signal from the write cycle control circuit is asserted. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>a burst access control circuit adapted to receive an initial address in response to an access cycle strobe signal and to generate a series of addresses, each in response to a further transition of the access cycle strobe signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, further comprising: 
<claim-text>an output buffer coupled to at least one of said data sense amplifiers and to the access cycle strobe signal, said output buffer adapted to drive data from the memory device in response to a plurality of transitions of the access cycle strobe signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the access cycle strobe signal is a column address strobe signal and the memory device is a burst extended data out dynamic random access memory device. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the memory device is adapted to operate in an Extended Data Out page mode. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A memory device comprising: 
<claim-text>a plurality of write data drivers comprising an enable input, a data input and a data output; </claim-text>
<claim-text>a plurality of data lines, each of said data lines coupled to the data output of at least one of said write data drivers; and </claim-text>
<claim-text>a plurality of write data driver enable circuits, each of said write data driver enable circuits adapted to receive a write cycle control signal and an equilibrate control signal, each of said write data driver enable circuits located in close proximity and coupled to the enable input of at least one of said write data drivers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, further comprising: 
<claim-text>a plurality of data sense amplifiers, each of said data sense amplifiers being associated with one of the plurality of write data drivers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, further comprising: 
<claim-text>a plurality of memory element subarrays, each of said subarrays coupled to at least one of said write data drivers by at least one of said data lines, and each of said subarrays coupled to at least one of said data sense amplifiers by at least one of said data lines. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, further comprising: 
<claim-text>a plurality of equilibration transistors, each of said equilibration transistors responsive to the equilibrate control signal to couple at least two of said data lines together. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein said write data drivers are disabled by said write data driver enable circuits while said equilibration transistors couple said data lines together. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A memory device comprising: 
<claim-text>a memory element array region; </claim-text>
<claim-text>a plurality of data line pairs dispersed within said memory element array region; and </claim-text>
<claim-text>a plurality of write data drivers dispersed along an edge of said memory element array region, each comprising an equilibrate input, a write active input, a write data input and a write data output, each of said write data drivers adapted to drive a data signal from the write data input to at least one of said data line pairs. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising: 
<claim-text>a main logic region outside said array region, said main logic region comprising an equilibration control circuit adapted to provide an equilibrate signal to the equilibrate input of said write data drivers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, further comprising: 
<claim-text>a pads and logic region outside said array region and outside said main logic region, wherein the equilibrate signal is routed from said main logic region through said pads and logic region to said write data drivers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, further comprising: 
<claim-text>a main logic region outside said array region, said main logic region comprising a write cycle control circuit adapted to provide a write active signal to the write active input of said write data drivers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, further comprising: 
<claim-text>a pads and logic region outside said array region and outside said main logic region, wherein the write active signal is routed from said main logic region through said pads and logic region to said write data drivers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A memory device comprising: 
<claim-text>a memory element array region; </claim-text>
<claim-text>a control circuit region, outside of said memory element array region, for generating memory control signals including an equilibrate signal and a write enable signal; </claim-text>
<claim-text>a plurality of data line pairs dispersed throughout said memory element array region; </claim-text>
<claim-text>a plurality of data sense amplifiers, said data sense amplifiers distributed along an edge of said memory element array region, each amplifier proximately located to at least one of said data line pairs; and </claim-text>
<claim-text>a distributed plurality of write data drivers each comprising an equilibrate inactive input enable responsive to the equilibrate signal and a write active input enable responsive to the write enable signal, each of said write data drivers proximately located to a data sense amplifier and associated with at least one of said data line pairs. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, further comprising: 
<claim-text>an address strobe input adapted to receive an address strobe signal; and </claim-text>
<claim-text>an address counter responsive to the address strobe signal to generate an address and to provide the address to said memory element array region. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A memory device comprising: 
<claim-text>a memory element array region; </claim-text>
<claim-text>a control circuit region; </claim-text>
<claim-text>a plurality of data line pairs dispersed throughout said memory element array region, each of said data line pairs comprising a true data line and a compliment data line; </claim-text>
<claim-text>a plurality of equilibration devices, each of said equilibration devices coupled to the true data line and the compliment data line of one of said plurality of data line pairs, and each of said equilibration devices responsive to an equilibrate signal from said control circuit region to couple the true data line to the compliment data; </claim-text>
<claim-text>a plurality of data sense amplifiers, each proximately located to at least one of said data line pairs; and </claim-text>
<claim-text>a distributed plurality of write data drivers each comprising an equilibrate inactive input responsive to the equilibrate signal, a write active input responsive to a write enable signal from said control circuit region, a true write data output coupled to the true data line of one of said data line pairs and a compliment write data output coupled to the compliment data line of one of said data line pairs, each of said write data drivers proximately located to at least one of said data sense amplifiers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, further comprising: 
<claim-text>a mode select circuit adapted to select between a mode of operation from at least EDO and Burst EDO modes, wherein said distributed plurality of write data drivers are each responsive to the mode. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A memory device comprising: 
<claim-text>a data input; </claim-text>
<claim-text>a plurality of memory element subarrays; and </claim-text>
<claim-text>a plurality of data sense amplifiers coupled to said subarrays, each of said data sense amplifiers comprising a write data driver responsive to an active write enable signal and an inactive equilibration signal, to drive write data received on said data input to a corresponding one of said subarrays. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, further comprising: 
<claim-text>an address strobe input; and </claim-text>
<claim-text>an output buffer coupled to at least two of said data sense amplifiers and to said address strobe input, said output buffer adapted to drive data from the memory device in response to an address strobe signal after a latency of at least one active transition of the address strobe signal in a burst read access. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A method of writing data into a memory device comprising steps of: 
<claim-text>providing an address for the memory device; </claim-text>
<claim-text>asserting an equilibrate signal which is coupled to an equilibration device in order to equilibrate internal data lines of the memory device in response to said step of providing an address; </claim-text>
<claim-text>coupling the equilibrate signal to a plurality of data driver enable circuits; </claim-text>
<claim-text>coupling a write enable signal to the plurality of data driver enable circuits; </claim-text>
<claim-text>deasserting the equilibrate signal after the internal data lines are equilibrated; </claim-text>
<claim-text>gating the write enable signal through at least one of the data driver enable circuits in response to said step of deasserting the equilibrate signal; </claim-text>
<claim-text>driving data onto the internal data lines in response to said step of gating; and </claim-text>
<claim-text>storing data in a memory cell in response to said step of driving data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A method of storing data in a system comprising steps of: 
<claim-text>providing a memory having a distributed plurality of data driver enable circuits; </claim-text>
<claim-text>addressing the memory; </claim-text>
<claim-text>providing data to the memory; </claim-text>
<claim-text>asserting an equilibration signal at the plurality of data driver enable circuits in response to said step of addressing; </claim-text>
<claim-text>asserting a write enable signal to the plurality of data driver enable circuits; </claim-text>
<claim-text>deasserting the equilibration signal; </claim-text>
<claim-text>gating a write enable signal through at least one of the data driver enable circuits in response to said step of deasserting; and </claim-text>
<claim-text>storing data in a memory cell of the memory in response to said step of gating a write enable signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A method of storing data in a system, comprising steps of: 
<claim-text>providing a burst access memory; </claim-text>
<claim-text>providing a first address to the memory from a microprocessor; </claim-text>
<claim-text>providing a first data bit to the memory; </claim-text>
<claim-text>asserting a write enable signal to a distributed plurality of data driver enable circuits within the memory; </claim-text>
<claim-text>storing the first data bit in a memory cell selected by the first address; </claim-text>
<claim-text>advancing an address counter within the memory to provide a second address; </claim-text>
<claim-text>providing a second data bit to the memory; </claim-text>
<claim-text>asserting an equilibration signal within the memory while maintaining the write enable signal to the plurality of data driver enable circuits; </claim-text>
<claim-text>disabling the data driver enable circuits in response to said step of asserting an equilibration signal; </claim-text>
<claim-text>deasserting the equilibration signal; and </claim-text>
<claim-text>storing the second data bit in a memory cell selected by the second address in response to said step of deasserting the equilibration signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A system comprising: 
<claim-text>a microprocessor; and </claim-text>
<claim-text>a memory device accessible by said microprocessor, said memory device responsive to a write cycle command from said microprocessor, said memory device comprising: 
<claim-text>a write cycle control input from said microprocessor; </claim-text>
<claim-text>a data input from said microprocessor; </claim-text>
<claim-text>a plurality of distributed internal data lines; and </claim-text>
<claim-text>a plurality of distributed internal write data drivers coupled to said data input and to said distributed internal data lines, each of said write data drivers comprising an equilibration signal input, a write signal input, a write data input and a write data output. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the memory device is a Burst Extended Data Out Dynamic Random Access Memory. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A method comprising: 
<claim-text>providing a memory device having a pinout consisting of a /RAS input pin, a /CAS input pin, a /WE input pin, eight or more address input pins, two or more data output pins, and a /OE input pin; </claim-text>
<claim-text>performing a burst mode access of the memory device; and </claim-text>
<claim-text>latching only one read-write control signal for the burst mode access. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein the recited steps are initiated in the recited order. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein the memory device is a burst extended data out dynamic random access memory device. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A method comprising: 
<claim-text>providing a memory device having a pinout consisting of a /RAS input pin, a /CAS input pin, a /WE input pin, eight or more address input pins, two or more data output pins, and a /OE input pin, wherein the memory device includes two or more output drivers coupled to output data through the data output pins; and </claim-text>
<claim-text>performing a burst mode access of the memory device, wherein performing the burst mode access comprises: 
<claim-text>operating the output drivers to drive a byte from memory device onto the data output pins; and </claim-text>
<claim-text>continuing operation of the drivers to drive the byte onto the data output pins without tri-stating the data output pins during predetermined intervals of a strobe signal on at least one of the /RAS or the /CAS input pins; and </claim-text>
</claim-text>
<claim-text>latching only one read-write control signal for the burst mode access. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The method of claim <highlight><bold>30</bold></highlight>, wherein the recited steps are initiated in the recited order. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The method of claim <highlight><bold>31</bold></highlight>, wherein the memory device is a burst extended data out dynamic random access memory device.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002350A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002350A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002350A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002350A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002350A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002350A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002350A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
