<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004928A1-20030102-M00001.NB SYSTEM "US20030004928A1-20030102-M00001.NB" NDATA NB>
<!ENTITY US20030004928A1-20030102-M00001.TIF SYSTEM "US20030004928A1-20030102-M00001.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-M00002.NB SYSTEM "US20030004928A1-20030102-M00002.NB" NDATA NB>
<!ENTITY US20030004928A1-20030102-M00002.TIF SYSTEM "US20030004928A1-20030102-M00002.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00000.TIF SYSTEM "US20030004928A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00001.TIF SYSTEM "US20030004928A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00002.TIF SYSTEM "US20030004928A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00003.TIF SYSTEM "US20030004928A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00004.TIF SYSTEM "US20030004928A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00005.TIF SYSTEM "US20030004928A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00006.TIF SYSTEM "US20030004928A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00007.TIF SYSTEM "US20030004928A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00008.TIF SYSTEM "US20030004928A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00009.TIF SYSTEM "US20030004928A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00010.TIF SYSTEM "US20030004928A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00011.TIF SYSTEM "US20030004928A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00012.TIF SYSTEM "US20030004928A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00013.TIF SYSTEM "US20030004928A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00014.TIF SYSTEM "US20030004928A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00015.TIF SYSTEM "US20030004928A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00016.TIF SYSTEM "US20030004928A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00017.TIF SYSTEM "US20030004928A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00018.TIF SYSTEM "US20030004928A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00019.TIF SYSTEM "US20030004928A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00020.TIF SYSTEM "US20030004928A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00021.TIF SYSTEM "US20030004928A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00022.TIF SYSTEM "US20030004928A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00023.TIF SYSTEM "US20030004928A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00024.TIF SYSTEM "US20030004928A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00025.TIF SYSTEM "US20030004928A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00026.TIF SYSTEM "US20030004928A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00027.TIF SYSTEM "US20030004928A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00028.TIF SYSTEM "US20030004928A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00029.TIF SYSTEM "US20030004928A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00030.TIF SYSTEM "US20030004928A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00031.TIF SYSTEM "US20030004928A1-20030102-D00031.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00032.TIF SYSTEM "US20030004928A1-20030102-D00032.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00033.TIF SYSTEM "US20030004928A1-20030102-D00033.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00034.TIF SYSTEM "US20030004928A1-20030102-D00034.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00035.TIF SYSTEM "US20030004928A1-20030102-D00035.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00036.TIF SYSTEM "US20030004928A1-20030102-D00036.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00037.TIF SYSTEM "US20030004928A1-20030102-D00037.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00038.TIF SYSTEM "US20030004928A1-20030102-D00038.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00039.TIF SYSTEM "US20030004928A1-20030102-D00039.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00040.TIF SYSTEM "US20030004928A1-20030102-D00040.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00041.TIF SYSTEM "US20030004928A1-20030102-D00041.TIF" NDATA TIF>
<!ENTITY US20030004928A1-20030102-D00042.TIF SYSTEM "US20030004928A1-20030102-D00042.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004928</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10232721</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020903</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2000-032625</doc-number>
</priority-application-number>
<filing-date>20000203</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>001000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method of and an apparatus for retrieiving and delivering documents and a recording media on which a program for retrieiving and delivering documents are stored</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10232721</doc-number>
<kind-code>A1</kind-code>
<document-date>20020903</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09518689</doc-number>
<document-date>20000303</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Yasuhiko</given-name>
<family-name>Inaba</family-name>
</name>
<residence>
<residence-non-us>
<city>Yokohama</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Tadataka</given-name>
<family-name>Matsubayashi</family-name>
</name>
<residence>
<residence-non-us>
<city>Yokohama</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Katsumi</given-name>
<family-name>Tada</family-name>
</name>
<residence>
<residence-non-us>
<city>Kawasaki</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Takuya</given-name>
<family-name>Okamoto</family-name>
</name>
<residence>
<residence-non-us>
<city>Machida</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Natsuko</given-name>
<family-name>Sugaya</family-name>
</name>
<residence>
<residence-non-us>
<city>Miyamae</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Yousuke</given-name>
<family-name>Ushiroji</family-name>
</name>
<residence>
<residence-non-us>
<city>Osaka</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>Hitachi, Ltd.</organization-name>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>MATTINGLY, STANGER &amp; MALUR, P.C.</name-1>
<name-2></name-2>
<address>
<address-1>1800 DIAGONAL ROAD</address-1>
<address-2>SUITE 370</address-2>
<city>ALEXANDRIA</city>
<state>VA</state>
<postalcode>22314</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Retrieval conditions inputted from a plurality of users are registered. According to the retrieval conditions, a retrieval is conducted for a text inputted. As a result of the retrieval, similarity of the text is calculated for each retrieval condition. The text is delivered to users of which the retrieval condition satisfies the similarity. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to a document retrieving and delivering technique in which an electronic document is retrieved according to a retrieval condition registered by a user in advance and documents satisfying the condition are delivered to the user. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Recently, a large amount of electronic documents (to be referred to as texts herebelow) have been delivered at every moment to users through an electronic mail or e-mail, electronic news, and the like. Information sources which transmit information through the World Wide Web (WWW) are rapidly increasing and hence an immense amount of texts have been collected from such information sources using an information collecting robot or the like. There consequently arises a need for a document retrieving and delivering system in which texts containing information requested by a user are retrieved therefrom and are delivered to the user. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> JP-A-10-27182 (to be referred to as prior art 1) describes such a document or text retrieving and delivering system. In this system, retrieval condition expressions of a plurality of users are combined with each other to process condition expressions of a plurality of users through one text scanning operation. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> However, in prior art 1, the user is required to generate retrieval condition expressions, which leads to two problems as follows. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> First, when a rarely used word is specified in a retrieval condition or when generally used words are complicatedly combined with each other in a retrieval condition specified, there appears texts which cannot be retrieved (retrieval leakage). </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Second, in contrast with the first problem, when a simple retrieval condition expression containing only generally used words is specified, there are possibly retrieved many documents or texts (to be referred to as retrieval noise) not suitable for an object of the retrieval. This leads to a problem that documents desired by the user cannot be easily attained. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In short, to obtain retrieval results in which texts not retrieved as above are minimized and in which the noise is reduced, it is difficult for the user to appropriately generate a retrieval condition expression. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Japanese Patent Application Serial No. 10-148721 (to be referred to as prior art 2) describes a technique to improve two problems above in a document retrieval system in which documents containing information desired are retrieved from documents (to be referred to as registered documents herebelow) registered to a text database. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In this technique, a keyword (called &ldquo;feature character string&rdquo; in prior art 2) is extracted from a text (to be referred to as a seed text) exemplified as a retrieval condition to calculate similarity of the seed document with respect to registered documents. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In prior art 2, the user needs only to exemplify a seed document containing information desired. Namely, the user is relieved from the troublesome job to select appropriate retrieval terms for a retrieval condition expression. The user then instructs execution of retrieval to view retrieval results sorted according to the similarity. Therefore, even when the retrieval results include some retrieval noise, the user can easily attain necessary information. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Next, description will be given of an outline and problems of the prior arts above. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, an outline of prior art 1 will be described. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In this example, three users, i.e., users <highlight><bold>1</bold></highlight> to <highlight><bold>3</bold></highlight> have registered retrieval condition expressions to a document retrieving and delivering system, i.e., document containing &ldquo;new&rdquo; and &ldquo;car&rdquo;, document containing USA, and document containing used and car, respectively. Under this condition, a scanning operation is conducted using a text collected &ldquo;price of this new car is . . . &rdquo; to determine whether or not the three conditions are satisfied. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The retrieval condition expressions registered by the users are analyzed to extract retrieval terms &ldquo;new&rdquo;, &ldquo;car&rdquo;, &ldquo;USA&rdquo;, and &ldquo;used&rdquo;. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The number of retrieval terms extracted is stored for each user in a retrieval term count table. For example, from retrieval condition expression of user <highlight><bold>1</bold></highlight>, i.e., document containing &ldquo;new&rdquo; and &ldquo;car&rdquo; registered by user <highlight><bold>1</bold></highlight>, two retrieval terms &ldquo;new&rdquo; and &ldquo;car&rdquo; are extracted and hence &ldquo;2&rdquo; is stored in an associated field of the table. In a similar fashion, &ldquo;1&rdquo; and &ldquo;2&rdquo; are stored in associated fields of the table for users <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Next, the system creates a finite automaton to collate all retrieval terms extracted. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In the finite automaton in <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> circle indicates a state of the automaton and an arrow denotes a state transition. A character next to the arrow represents input characters which cause the transition of the arrow. A numeral in the circle designates a state number of the automaton state. This example does not include an arrow to an initial state to be used when a character not indicated in the automaton is inputted (to be called a failure herebelow). </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The system then forms a user list including elements each including a user identifier of a user having specified a retrieval term. The list is linked with retrieval term detection states of the automaton respectively associated with. In this example, when &ldquo;car&rdquo; is collated, the system refers to an associated user list item according to the last state &ldquo;3&rdquo;. This indicates that users <highlight><bold>1</bold></highlight> and <highlight><bold>3</bold></highlight> have specified &ldquo;car&rdquo;. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Description will next be given of the scanning of a text &ldquo;price of this new car is&rdquo; in the automaton shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. In this example, it is detected that the text includes partial character strings in which &ldquo;car&rdquo; or &ldquo;new&rdquo; appears. In this automaton, a retrieval term having a small circle at an end thereof means that a partial character string matching the term exists in the text. Since partial character strings matching with &ldquo;car&rdquo; or &ldquo;new&rdquo; appear in the text in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, end states <highlight><bold>3</bold></highlight> and <highlight><bold>6</bold></highlight> are assigned with a small circle. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> In the texts, the number of retrieval terms matching partial character strings in the text are counted for each user and is stored in a retrieval term appearance count table. For example, since the matching state is detected for &ldquo;new&rdquo; and &ldquo;car&rdquo; or user <highlight><bold>1</bold></highlight>, &ldquo;2&rdquo; is set to the count value. Only car is matching for user <highlight><bold>3</bold></highlight>, &ldquo;1&rdquo; is counted. For user <highlight><bold>2</bold></highlight>, the matching state does not occur for any partial character strings, and hence the counting is not achieved and &ldquo;0&rdquo; is kept unchanged for the count value. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The retrieval term count table in which the retrieval term counts extracted from the retrieval condition expressions are stored is compared with the retrieval term appearance count table in which the numbers of retrieval terms appearing in partial character strings in the text are stored. When these tables match each other, it is assumed that the retrieval condition expressions of the user are satisfied and hence the text is delivered to the user. In <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the retrieval term count is &ldquo;2&rdquo; for user <highlight><bold>1</bold></highlight> in both tables and hence the text is delivered to user <highlight><bold>1</bold></highlight>. The retrieval term counts are respectively different from each other for users <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight> and hence the text is not delivered to users <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Prior art 1 has been briefly described. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In accordance with prior art 1, it is possible to implement a document retrieving and delivering system in which a text matching retrieval condition expressions given can be delivered to the user through one scanning operation. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> However, the user must generate retrieval condition expressions in prior art 1. There consequently arises a problem, namely, it is not easy for the user to appropriately generate retrieval condition expressions. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Prior art 2 has been proposed to improve the problem above in a document retrieval system. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, an outline of prior art 2 will be described. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Prior art 2 is a technique to extract keywords from a sentence of a language, e.g., Japanese not using a separation code between words. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> shows an example to extract keywords (to be described in accordance with a name &ldquo;tokuchomojiretsu (feature character string)&rdquo; in prior art 2 herebelow) from a seed document &ldquo;. . . . Keitaidenwa no shiyohji no mana ga mondai ni naru (manners of use of a cellular phone causes a problem) . . . &rdquo;. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> In step <highlight><bold>1910</bold></highlight>, a single character type seed character string extraction program is started to subdivide a seed document <highlight><bold>1920</bold></highlight> at boundaries of character types such as kanji (Chinese characters) and katakana (angular Japanese phonetic letters) to extract character strings (to be called single character type character strings herebelow) <highlight><bold>1921</bold></highlight> each including characters of one character type. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> In step <highlight><bold>1911</bold></highlight>, a check is made to determine a character type for each of the extracted strings. For a character string of Chinese or angular Japanese characters which possibly configure a complex word, a division probability comparison feature character string extraction program is executed to subdivide any complex word to extract feature character strings. For character strings of the other character types having a low probability of configuration of a complex word, the character strings of a single character type are directly extracted as feature character strings (step <highlight><bold>1912</bold></highlight>). </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> In step <highlight><bold>1913</bold></highlight>, the feature character strings thus extracted are stored in a work area. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Description has been given of an example to extract feature character strings from a seed document in prior art 2. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> In prior art 2, according to the number of appearances of feature character strings in a seed document as extracted above and the number of appearances thereof in each document in a text database, the similarity is calculated for each document to display the documents in the descending order of similarity. A method of calculating similarity has been described in prior art 2 and hence description thereof will be here avoided. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> An outline of prior art 2 has been described. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> In accordance with prior art 2, feature character strings (keywords) are extracted from a seed document and then similarity of each registered document to the seed document is calculated using the keywords. The user specifies a document containing information desired by the user such that the user then refers to results of retrieval in the descending order of similarity to obtain texts containing necessary information from the text database. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Consequently, when prior art 2 is applied to prior art 1, it is possible to assign, to a registered document including at least one of the keywords extracted from the seed document, similarity with respect to the seed document. This improves the first problem of prior art 1. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> However, for each text delivered at every moment, prior art 1 makes a check to determine the matching of the retrieval condition to instantaneously deliver any text matching the condition to the user. Therefore, although similarity can be calculated for each text with respect to the retrieval condition in prior art 2, the similarity cannot be compared with similarity thereof with respect to another text. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Namely, even when prior art 2 is simply applied to a document retrieving and delivering system of prior art 1, the results of retrieval cannot be sorted in the descending order of similarity to be delivered to the user. The second problem of prior art 1 cannot be improved. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Additionally, although statistic information in the text database can be used to extract keywords and/or to calculate similarity, texts delivered is not saved in the document retrieving and delivering system of prior art 1. This leads to a problem that the statistic information cannot be easily obtained. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> It is therefore an object of the present invention to provide a system in which according to retrieval conditions inputted by a plurality of users, a check is made to determine whether or not the conditions are satisfied with respect to a text inputted such that the text inputted is delivered to users corresponding to the retrieval conditions satisfied to thereby deliver texts desired by the users. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> To improve the problems above in accordance with the document retrieving and delivering method of the present invention, through the steps described below, similarity of each text acquired is calculated for a document (to be referred to as a seed document herebelow) containing information requested by the user to thereby deliver an appropriate text to the user. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Namely, the document retrieving and delivering method of the present invention includes a retrieval condition registering steps of registering retrieval conditions inputted from a plurality of users and a retrieval and delivery step for retrieving texts satisfying the retrieval condition from text data of document information and for delivering the texts retrieved to associated users. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The retrieval and delivery step includes calculating, from the texts, a ratio the text which matches the retrieval conditions (to be called similarity herebelow) and whether or not the retrieval conditions are satisfied is determined according to the similarity to deliver the text to the users corresponding to the retrieval conditions satisfied. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> By the operation, similarity of the text acquired can be determined with respect to a document including information desired by the user to thereby appropriately deliver the text to the user. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The retrieval condition inputted from the user may be provided in the form of a document desired by the user. In such a situation, retrieval conditions are generated according to the document in the present invention.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The objects and features of the present invention will become more apparent from the consideration of the following detailed description taken in conjunction with the accompanying drawings in which: </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram schematically showing a configuration of a first embodiment in accordance with the present invention; </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram to explain an outline of prior art 1; </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a problem analysis diagram (PAD) showing a processing procedure of system control program <highlight><bold>110</bold></highlight> of the first embodiment; </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a PAD showing a processing procedure of a retrieval condition registration control program <highlight><bold>111</bold></highlight> of the first embodiment; </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a PAD showing a processing procedure of a text retrieval and delivery control program <highlight><bold>112</bold></highlight> of the first embodiment; </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a PAD showing a processing procedure of a retrieval automaton generator program <highlight><bold>123</bold></highlight> of the first embodiment; </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a PAD showing a processing procedure of a text retrieval program <highlight><bold>131</bold></highlight> of the first embodiment; </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a diagram to explain an outline of retrieval condition registration in the first embodiment; </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram to explain an outline of text retrieval in the first embodiment; </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart showing a concrete processing flow of retrieval condition registration control program <highlight><bold>111</bold></highlight> of the first embodiment; </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flowchart showing a concrete processing flow of text retrieval program <highlight><bold>131</bold></highlight> of the first embodiment; </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a diagram to explain a method of connecting a finite automaton <highlight><bold>114</bold></highlight> to a user list <highlight><bold>115</bold></highlight> in a second embodiment in accordance with the present invention; </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a PAD showing a processing procedure of a text retrieval program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>of the second embodiment; </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a flowchart to explain a concrete processing procedure of text retrieval program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>of the second embodiment; </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a diagram showing a layout of a retrieval condition registration control program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>in a third embodiment; </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a diagram to explain a concrete processing procedure of retrieval condition registration control program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>in the third embodiment; </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a PAD showing a processing procedure of a retrieval automaton generator program <highlight><bold>123</bold></highlight><highlight><italic>a </italic></highlight>of the third embodiment; </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a diagram to explain a concrete processing procedure of retrieval condition registration control program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>of the third embodiment; </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a PAD showing a processing procedure of a text retrieval program <highlight><bold>151</bold></highlight><highlight><italic>a </italic></highlight>of the third embodiment; </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a flowchart showing a flow of feature character string extraction in prior art 2; </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a diagram showing a configuration of a fourth embodiment in accordance with the present invention; </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a PAD showing a processing flow of a system control program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>in the fourth embodiment; </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a PAD showing a processing flow of a delivery threshold update program <highlight><bold>2000</bold></highlight> in the fourth embodiment; </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is a PAD showing a processing flow of a delivery threshold setting support information program <highlight><bold>2001</bold></highlight> in the fourth embodiment; </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a flowchart to explain a specific processing flow of program <highlight><bold>2001</bold></highlight> in the fourth embodiment; </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a graph showing an example of data outputted from program <highlight><bold>2001</bold></highlight> of the fourth embodiment; </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> is a graph showing another example of data outputted from program <highlight><bold>2001</bold></highlight> of the fourth embodiment; </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> is a PAD showing a processing procedure of a delivery threshold setting trial program <highlight><bold>2002</bold></highlight> in the fourth embodiment; </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference> is a PAD to explain a concrete processing flow of program <highlight><bold>2002</bold></highlight> in the fourth embodiment; </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is a graph showing an example of data outputted from program <highlight><bold>2002</bold></highlight> of the fourth embodiment; </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> is a PAD showing a processing procedure of a text retrieval and delivery control program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>in the fourth embodiment; </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> is a flowchart to explain a concrete processing flow of program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>in the fourth embodiment; </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> is diagram showing a configuration of a fifth embodiment in accordance with the present invention; </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 34</cross-reference> is a PAD showing a processing flow of a system control program <highlight><bold>110</bold></highlight><highlight><italic>b </italic></highlight>of the fifth embodiment; </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 35</cross-reference> is a PAD showing a processing flow of an additional delivery text count setting program <highlight><bold>2900</bold></highlight> of the fifth embodiment; </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 36</cross-reference> is a PAD showing a processing flow of a text additional delivery program <highlight><bold>2901</bold></highlight> of the fifth embodiment; </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 37</cross-reference> is a flowchart to explain a concrete processing flow of program <highlight><bold>2901</bold></highlight> of the fifth embodiment; </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 38</cross-reference> is diagram showing a configuration of a sixth embodiment in accordance with the present invention; </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 39</cross-reference> is a PAD showing a processing flow of a system control program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>of the fifth embodiment; </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 40</cross-reference> is a PAD showing a processing flow of a desired delivery count setting program <highlight><bold>3400</bold></highlight> of the sixth embodiment; </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 41</cross-reference> is a PAD showing a processing flow of a saved text retrieval program <highlight><bold>3402</bold></highlight> of the sixth embodiment; </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 42</cross-reference> is a PAD showing a processing flow of a delivery threshold automatic setting program <highlight><bold>3401</bold></highlight> of the sixth embodiment; and </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 43</cross-reference> is a flowchart showing a specific processing flow of program <highlight><bold>3401</bold></highlight> of the sixth embodiment.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE EMBODIMENTS </heading>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> Referring now to the drawings, description will be given of a first embodiment in accordance with the present invention. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> First, an outline of the first embodiment will be described by referring to <cross-reference target="DRAWINGS">FIGS. 8 and 9</cross-reference>. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> Retrieval condition registration will be first briefly described by referring to <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. This diagram shows an example in which retrieval conditions of three users are registered, namely, &ldquo;the information of new car . . . &rdquo; of user <highlight><bold>1</bold></highlight>, &ldquo;today&apos;s market in USA is . . . &rdquo; of user <highlight><bold>2</bold></highlight>, and &ldquo;price of used cars are falling . . . &rdquo; of user <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> First, retrieval terms are extracted from the retrieval conditions registered by the users. In this example, three retrieval terms &ldquo;information&rdquo;, &ldquo;new&rdquo;, and &ldquo;car&rdquo; are extracted from retrieval condition user <highlight><bold>1</bold></highlight> &ldquo;the information of new car . . . &rdquo; registered by user <highlight><bold>1</bold></highlight>. Similarly, three terms &ldquo;today&rdquo;, &ldquo;market&rdquo;, and &ldquo;USA&rdquo; are extracted from the conditions of user <highlight><bold>2</bold></highlight> and four terms of &ldquo;price&rdquo;, &ldquo;used&rdquo;, &ldquo;car&rdquo;, and &ldquo;falling&rdquo; are extracted from the conditions of user <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> For all retrieval terms extracted, weights are calculated using a predetermined formula and are stored in a retrieval term weight table. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> To calculate these weights, there may be used, for example, an inverted document frequency (IDF) formula (1) described in &ldquo;Information Retrieval&rdquo; written by William B. Frakes and Ricardo Baeza-Yates in pages 363 to 391 of &ldquo;Ranking Algorithm&rdquo; published from Prentice Hall PTR. in 1992 (to be referred to as prior art 3 herebelow).  
<math-cwu id="MATH-US-00001">
<number>1</number>
<math>
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>I</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mi>D</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mrow>
            <mi>F</mi>
            <mo>&af;</mo>
            <mrow>
              <mo>(</mo>
              <mi>i</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mrow>
          <mn>1</mn>
          <mo>+</mo>
          <mrow>
            <msub>
              <mi>log</mi>
              <mn>2</mn>
            </msub>
            <mo>&it;</mo>
            <mfrac>
              <mi>N</mi>
              <mrow>
                <mi>n</mi>
                <mo>&af;</mo>
                <mrow>
                  <mo>(</mo>
                  <mi>i</mi>
                  <mo>)</mo>
                </mrow>
              </mrow>
            </mfrac>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>1</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
<mathematica-file id="MATHEMATICA-00001" file="US20030004928A1-20030102-M00001.NB"/>
<image id="EMI-M00001" wi="216.027" he="18.96615" file="US20030004928A1-20030102-M00001.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> In expression (1), IDF(i) indicates IDF of retrieval term (i), N denotes the total number of documents in the text database, and n(i) designates the number of texts in which retrieval term (i) appears. Assume that the expression is used for a text database in which about 100 thousand texts are stored. When a retrieval term &ldquo;car&rdquo; extracted from the retrieval condition of user <highlight><bold>1</bold></highlight> appears in 2000 texts, the weight of term &ldquo;car&rdquo; is calculated as &ldquo;6.6&rdquo; to be stored in the retrieval term weight table. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> The total number of documents registered to the text database and the number of texts in which the retrieval term appears may be calculated using the number of texts delivered from each news delivery source and the number n(i) of texts in which retrieval term (i) appears. Alternatively, these items may be calculated by referring to the text database to which texts delivered or other different texts are registered. By such operations, similarity calculating processing in which statistical information is used can be implemented for a document retrieving and delivering system. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Subsequently, the system creates a finite automaton to collate all retrieval terms extracted. In the finite automaton in <cross-reference target="DRAWINGS">FIG. 8, a</cross-reference> circle indicates a state of the automaton and an arrow denotes a state transition. A character next to the arrow represents an input character which causes the transition of the arrow. A numeral in the circle designates a state number of the automaton state. In this example, there is not shown an arrow to an initial state to be used when a character not indicated in the automaton is inputted (to be called &ldquo;fail&rdquo; or &ldquo;failure&rdquo; herebelow). Part of finite automatons generated in this example is omitted in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> Identifiers of users who have specified the retrieval conditions from which the respective retrieval terms are extracted are set as user list elements to be respectively linked with retrieval term detection states of the automaton. In <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, for example, when &ldquo;new&rdquo; is collated, a user list element is referred to via the last state &ldquo;6&rdquo;. Therefore, it is detected user <highlight><bold>1</bold></highlight> has specified &ldquo;new&rdquo;. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> Delivery threshold values are then extracted from the retrieval conditions registered by the users. A delivery threshold value of 8.0 is extracted from the retrieval condition of user <highlight><bold>1</bold></highlight>. Similarly, 3.5 and 7.0 are obtained as delivery threshold values from the retrieval conditions of users <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> These values are stored in a similarity control table in association with the respective user identifiers. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> An outline of the text retrieval will be described by referring now <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. In this diagram, the scanning is conducted by the automaton of <cross-reference target="DRAWINGS">FIG. 8</cross-reference> according to &ldquo;the car maker announced a new model car . . . &rdquo; to retrieve a matching retrieval condition. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> The automaton of <cross-reference target="DRAWINGS">FIG. 9</cross-reference> first calculates the number of appearance of each retrieval term in the text. In this automaton, the number of appearances of each term is shown in the vicinity of the last state. Since a partial character string matching retrieval term &ldquo;car&rdquo; appears twice, &ldquo;2&rdquo; is indicated for the last state &ldquo;3&rdquo;. A partial character string matching retrieval term &ldquo;new&rdquo; appears once and hence &ldquo;1&rdquo; is indicated for the last state &ldquo;6&rdquo;. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> For each retrieval term matching a partial character string of the text, a user list element linked with its last state is referred to and similarity of the text is calculated with respect to the retrieval conditions of the users. To calculate the similarity, it is possible to use a similarity calculation formula (2) described in prior art 3.  
<math-cwu id="MATH-US-00002">
<number>2</number>
<math>
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>S</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mi>i</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mi>m</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mi>i</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mi>l</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mi>a</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mi>r</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mi>i</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mi>t</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mi>y</mi>
        </mrow>
        <mo>=</mo>
        <mrow>
          <munderover>
            <mo>&Sum;</mo>
            <mi>i</mi>
            <mi>Q</mi>
          </munderover>
          <mo>&it;</mo>
          <mrow>
            <mo>(</mo>
            <mrow>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mi>C</mi>
                  <mo>+</mo>
                  <mrow>
                    <mi>I</mi>
                    <mo>&it;</mo>
                    <mstyle>
                      <mtext>&emsp;</mtext>
                    </mstyle>
                    <mo>&it;</mo>
                    <mi>D</mi>
                    <mo>&it;</mo>
                    <mstyle>
                      <mtext>&emsp;</mtext>
                    </mstyle>
                    <mo>&it;</mo>
                    <mrow>
                      <mi>F</mi>
                      <mo>&af;</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>i</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
              <mo>&times;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mi>K</mi>
                  <mo>+</mo>
                  <mrow>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <mn>1</mn>
                        <mo>-</mo>
                        <mi>K</mi>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                    <mo>&it;</mo>
                    <mfrac>
                      <mrow>
                        <mi>freq</mi>
                        <mo>&af;</mo>
                        <mrow>
                          <mo>(</mo>
                          <mi>i</mi>
                          <mo>)</mo>
                        </mrow>
                      </mrow>
                      <mrow>
                        <mi>max</mi>
                        <mo>&af;</mo>
                        <mrow>
                          <mo>(</mo>
                          <mrow>
                            <mi>freq</mi>
                            <mo>&af;</mo>
                            <mrow>
                              <mo>(</mo>
                              <mi>j</mi>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                          <mo>)</mo>
                        </mrow>
                      </mrow>
                    </mfrac>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>)</mo>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>2</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
<mathematica-file id="MATHEMATICA-00002" file="US20030004928A1-20030102-M00002.NB"/>
<image id="EMI-M00002" wi="216.027" he="25.9119" file="US20030004928A1-20030102-M00002.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> In the expression, Q indicates the number of retrieval terms extracted from the retrieval conditions of the users, C and K are constants, IDF(i) denotes IDF of retrieval term (i), freq(i) is the number of appearances of retrieval term (i) in the text, and max(freq(j)) is a maximum value of the number of appearances of retrieval term in the text. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> Assume in this example that constants C and K are zero. Similarity of text to the retrieval condition of user <highlight><bold>1</bold></highlight> is calculated as 9.2 (6.6&times;2/2&plus;5.1&times;1/2&equals;9.15). Similarly, the values of similarity for users <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight> are obtained as 0 and 6.6, respectively. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> When the similarity exceeds a predetermined delivery threshold value, the text is delivered to the user associated with the pertinent retrieval condition. Since the threshold value of user <highlight><bold>1</bold></highlight> is 8.0 and the text similarity is 9.2, the text is sent to user <highlight><bold>1</bold></highlight>. However, users <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight> have respectively threshold values 3.5 and 7.0 and the text similarity values thereof are respectively 0.0 and 6.6. The threshold values are not exceeded and hence the text is not delivered to users <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> In this embodiment above, the text is scanned by a finite automaton to calculate, for each retrieval term, the number of appearances thereof in the text. Similarity of the text to the retrieval conditions of the users is calculated referring to the user list. The text is delivered to any user who has specified a retrieval condition for which the similarity satisfies a delivery condition predetermined for the user. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> Resultantly, the similarity of the text with respect to the retrieval conditions of a plurality of users can be calculated through one scanning operation of the text. Since the delivery threshold value is compared with the similarity for each user, even a text having a low similarity value can be delivered to a user who requests a large amount of information. Moreover, a text having a high similarity value can be delivered to a user requesting only important information. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, description will be given in detail of a first embodiment in accordance with the present invention. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> The first embodiment of a document retrieving and delivering system in accordance with the present invention includes a display <highlight><bold>100</bold></highlight>, a keyboard <highlight><bold>101</bold></highlight>, a central processing unit (CPU) <highlight><bold>102</bold></highlight>, a main memory <highlight><bold>104</bold></highlight>, and a bus <highlight><bold>103</bold></highlight> connecting these constituent units to each other. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> Bus <highlight><bold>103</bold></highlight> is linked via a communication line <highlight><bold>105</bold></highlight> such as a local area network (LAN) with a news delivery source <highlight><bold>106</bold></highlight> to deliver news and a user <highlight><bold>107</bold></highlight> who accesses the document retrieving and delivering system. News delivery source <highlight><bold>106</bold></highlight> delivers electronic texts of new data via e-mail and/or &ldquo;electronic news&rdquo; to this system or presents texts via the Internet. User <highlight><bold>107</bold></highlight> registers retrieval conditions via e-mail to this system. The system delivers texts retrieved according to the retrieval condition to the user. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> In the description of this embodiment, news source <highlight><bold>106</bold></highlight> delivers texts via e-mail or the like to the system. However, it is also possible that source <highlight><bold>106</bold></highlight> presents texts only onto the Internet such that the texts are collected by an information collecting robot. Moreover, user <highlight><bold>107</bold></highlight> registers texts via e-mail to the system. However, the user may use the Internet for the registration. Additionally, this system delivers the texts retrieved according to the retrieval conditions via an e-mail to the pertinent users. The system may present the texts via the Internet or the like. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> Memory <highlight><bold>104</bold></highlight> is loaded with a system control program <highlight><bold>110</bold></highlight>, a retrieval condition registration control program <highlight><bold>111</bold></highlight>, a text retrieval and delivery control program <highlight><bold>112</bold></highlight>, an e-mail program <highlight><bold>113</bold></highlight>, a finite automaton <highlight><bold>114</bold></highlight>, a user list <highlight><bold>115</bold></highlight>, a retrieval term weight table <highlight><bold>116</bold></highlight>, a similarity control table <highlight><bold>117</bold></highlight>, a work area <highlight><bold>118</bold></highlight>, a retrieval condition acquiring program <highlight><bold>120</bold></highlight>, retrieval term extraction program <highlight><bold>121</bold></highlight>, a retrieval term weight calculation program <highlight><bold>122</bold></highlight>, a retrieval automaton creation program <highlight><bold>123</bold></highlight>, a delivery threshold setting program <highlight><bold>124</bold></highlight>, a text acquiring program <highlight><bold>130</bold></highlight>, a text retrieval program <highlight><bold>131</bold></highlight>, and a text generator program <highlight><bold>132</bold></highlight>. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> Retrieval automaton creation program <highlight><bold>123</bold></highlight> includes a finite automaton creation program <highlight><bold>140</bold></highlight> and a user list creation program <highlight><bold>141</bold></highlight>. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> Although a finite automaton is employed to extract retrieval terms from a text in this embodiment, the term extracting technique is not restricted by this example. Namely, in addition to the finite automaton, there may be used an extended BM method (to be referred to as prior art 3 herebelow) described in pages 175 to 189 of &ldquo;Nikkei Byte&rdquo; published in August 1987. When the extended BM method is used, the expression of &ldquo;retrieval automaton creation program&rdquo; and &ldquo;finite automaton creation program&rdquo; are not appropriate. Using a more general expression, these program will be designated, for example, &ldquo;retrieval character string collation table creation program&rdquo; and &ldquo;multiple character string collation table creation program&rdquo;. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Text retrieval program <highlight><bold>131</bold></highlight> includes a text scan program <highlight><bold>150</bold></highlight>, a similarity calculation program <highlight><bold>151</bold></highlight>, and a text delivery determination program <highlight><bold>152</bold></highlight>. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> These programs may be stored on a recording media such as a hard disk (not shown) or a floppy disk (not shown) on which data can be written or from which data can be read by a computer. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> System control program <highlight><bold>110</bold></highlight> initiates its operation on receiving an instruction of a manager of the document retrieving and delivering system from a keyboard <highlight><bold>101</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> The retrieval condition registration control program <highlight><bold>111</bold></highlight> and text retrieval and delivery program <highlight><bold>112</bold></highlight> are activated by system control program <highlight><bold>110</bold></highlight> in response to an indication of registration of a retrieval condition from user <highlight><bold>107</bold></highlight> or for text delivery from news source <highlight><bold>106</bold></highlight>. The program <highlight><bold>111</bold></highlight> controls programs <highlight><bold>120</bold></highlight> to <highlight><bold>123</bold></highlight>, and the program <highlight><bold>112</bold></highlight> controls programs <highlight><bold>130</bold></highlight> to <highlight><bold>132</bold></highlight>. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> An existing mail program generally employed in a workstation is used as E-mail program <highlight><bold>113</bold></highlight>. Program <highlight><bold>113</bold></highlight> is initiated by system control program <highlight><bold>110</bold></highlight> according to a result of processing of text retrieval and delivery control program <highlight><bold>112</bold></highlight>. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> Description will next be given of a processing procedure of the embodiment of the document retrieving and delivering system. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> First, a processing procedure of system control program <highlight><bold>110</bold></highlight> will be described by referring to a PAD (Problem Analysis Diagram) of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> In step <highlight><bold>300</bold></highlight>, program <highlight><bold>110</bold></highlight> repeatedly executes subsequent steps until an end command is inputted from keyboard <highlight><bold>101</bold></highlight>. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> In this processing, program <highlight><bold>110</bold></highlight> checks to determine in step <highlight><bold>301</bold></highlight> whether or not a retrieval condition has been received via e-mail from user <highlight><bold>107</bold></highlight>. If the condition has been received, program <highlight><bold>110</bold></highlight> initiates program <highlight><bold>111</bold></highlight> in step <highlight><bold>303</bold></highlight> to generate and to register a retrieval condition. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> In step <highlight><bold>302</bold></highlight>, program <highlight><bold>110</bold></highlight> makes a check to determine whether or not a text has been received via e-mail from news source <highlight><bold>106</bold></highlight>. If the text has been received, program <highlight><bold>110</bold></highlight> initiates program <highlight><bold>112</bold></highlight> in step <highlight><bold>304</bold></highlight> to retrieve the text. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> In step <highlight><bold>305</bold></highlight>, program <highlight><bold>110</bold></highlight> checks a result of the text retrieval conducted by program <highlight><bold>112</bold></highlight>. If at least one retrieval condition is satisfied, program initiates e-mail program <highlight><bold>113</bold></highlight> in step <highlight><bold>306</bold></highlight> to deliver the text via e-mail to the user having specified the pertinent retrieval condition. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> The processing procedure of program <highlight><bold>110</bold></highlight> has been described. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> Referring next to a PAD of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, description will be given of a processing procedure of program <highlight><bold>111</bold></highlight> activated in step <highlight><bold>303</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> In step <highlight><bold>400</bold></highlight>, program <highlight><bold>111</bold></highlight> initiates program <highlight><bold>120</bold></highlight> to acquire a retrieval condition received via e-mail from user <highlight><bold>107</bold></highlight> to store the condition in work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> In step <highlight><bold>401</bold></highlight>, program <highlight><bold>111</bold></highlight> activates program <highlight><bold>121</bold></highlight> to extract retrieval terms from a seed document in the retrieval condition stored in work area <highlight><bold>118</bold></highlight> and stores the terms in work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> In step <highlight><bold>402</bold></highlight>, program <highlight><bold>111</bold></highlight> initiates program <highlight><bold>122</bold></highlight> to calculate weights of the retrieval terms stored in work area <highlight><bold>113</bold></highlight> and stores the weights in table <highlight><bold>116</bold></highlight>. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> In step <highlight><bold>403</bold></highlight>, program <highlight><bold>111</bold></highlight> activates program <highlight><bold>123</bold></highlight> to generate finite automaton <highlight><bold>114</bold></highlight> to collate all retrieval terms contained in the retrieval condition. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> In step <highlight><bold>404</bold></highlight>, program <highlight><bold>111</bold></highlight> initiates program <highlight><bold>124</bold></highlight> to store in table <highlight><bold>117</bold></highlight> a delivery threshold value specified in the retrieval condition. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> The processing procedure of program <highlight><bold>111</bold></highlight> has been described. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, description will be given of program <highlight><bold>123</bold></highlight> initiated by program <highlight><bold>111</bold></highlight> in step <highlight><bold>403</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> In step <highlight><bold>600</bold></highlight>, program <highlight><bold>123</bold></highlight> initiates program <highlight><bold>140</bold></highlight> to create finite automaton <highlight><bold>114</bold></highlight> to collate all retrieval terms which are extracted and stored in work area <highlight><bold>118</bold></highlight> by program <highlight><bold>121</bold></highlight>. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> In step <highlight><bold>601</bold></highlight>, program <highlight><bold>123</bold></highlight> initiates program <highlight><bold>141</bold></highlight> to gather identification numbers of users <highlight><bold>107</bold></highlight> having specified the retrieval condition to generate a user list <highlight><bold>115</bold></highlight>. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> In step <highlight><bold>602</bold></highlight>, program <highlight><bold>123</bold></highlight> links user list <highlight><bold>115</bold></highlight> via a pointer to an associated output table of finite automaton <highlight><bold>114</bold></highlight>. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> The processing procedure of retrieval automaton creation program <highlight><bold>123</bold></highlight> has been described. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, description will be given of a processing flow of retrieval condition registration control program <highlight><bold>111</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> In step <highlight><bold>1000</bold></highlight>, program <highlight><bold>111</bold></highlight> extracts retrieval terms <highlight><bold>1011</bold></highlight> from retrieval conditions <highlight><bold>1010</bold></highlight> sent via e-mail from users <highlight><bold>107</bold></highlight>. In this example, three retrieval terms &ldquo;information&rdquo;, &ldquo;new&rdquo;, and &ldquo;car&rdquo; are extracted from retrieval condition user <highlight><bold>1</bold></highlight> &ldquo;the information of new car . . . &rdquo; registered by user <highlight><bold>1</bold></highlight>. In a similar way, three terms &ldquo;today&rdquo; and &ldquo;market&rdquo; are extracted from the condition of user <highlight><bold>2</bold></highlight> and four terms &ldquo;price&rdquo;, &ldquo;used&rdquo;, &ldquo;car&rdquo;, and &ldquo;falling&rdquo; are extracted from the condition of user <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> In the retrieval term extracting technique in a language including a space to separate words from each other as above, words other than those frequently used such as &ldquo;or&rdquo; and &ldquo;the&rdquo; are used as retrieval terms to be extracted. However, there may be used other methods. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> For example, in a language such as Japanese which does not use a separation code between words, there may be used a method described in JP-A-8-335222 in which words included in a seed document are extracted as retrieval terms by referring to a word dictionary through morphological analysis. However, the words not contained in the word dictionary cannot be extracted. Consequently, it is favorable, as described in prior art 2 to use statistic information in the text database to extract all words written in the document as retrieval terms without using the word dictionary. Although prior art 2 employs probability of appearance of each n-gram in the text database, it may be possible in a document retrieving and delivering system to use probability of appearance of each n-gram in all texts delivered, in a text database to which the texts delivered are registered, or in a text database to which documents other than the texts delivered are registered. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> In step <highlight><bold>1001</bold></highlight>, program <highlight><bold>111</bold></highlight> calculates, according to a predetermined calculation formula, importance for all retrieval terms <highlight><bold>1011</bold></highlight> extracted from retrieval conditions <highlight><bold>1010</bold></highlight> and stores the values of importance in weight table <highlight><bold>116</bold></highlight>. The IDF formula, i.e., expression (1) described above may be used for this purpose. Using expression (1), when retrieval term &ldquo;car&rdquo; appears in 2000 texts in a text database including, for example, 100 thousand texts, 6.6 is obtained as importance of &ldquo;car&rdquo;. The total number of documents in the database and the number of documents in which the retrieval term appears may respectively be the number of texts delivered from news source <highlight><bold>106</bold></highlight> and the number of texts in which the term appears. Alternatively, these values may be obtained by referring to a text database to which texts other than the texts delivered are registered. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> In step <highlight><bold>1002</bold></highlight>, program <highlight><bold>111</bold></highlight> creates finite automaton <highlight><bold>114</bold></highlight> to collate all retrieval terms <highlight><bold>1011</bold></highlight> extracted from conditions <highlight><bold>1010</bold></highlight>. The retrieval terms can be registered to the finite automaton in a method of prior art 1. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> Description has been given of a specific processing procedure of retrieval condition registration control program <highlight><bold>111</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, description will be given of text retrieval and delivery control program <highlight><bold>112</bold></highlight> initiated by system program <highlight><bold>110</bold></highlight> in step <highlight><bold>304</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> In step <highlight><bold>500</bold></highlight>, program <highlight><bold>112</bold></highlight> initiates program <highlight><bold>130</bold></highlight> to store a text sent via e-mail or the like from news source <highlight><bold>106</bold></highlight> in work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> In step <highlight><bold>501</bold></highlight>, program <highlight><bold>112</bold></highlight> initiates program <highlight><bold>131</bold></highlight> to retrieve the text stored in work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> In step <highlight><bold>502</bold></highlight>, program <highlight><bold>112</bold></highlight> checks to determine whether or not at least one retrieval condition exceeds a predetermined delivery threshold value. If such a condition is present, program <highlight><bold>112</bold></highlight> executes step <highlight><bold>503</bold></highlight>. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> In step <highlight><bold>503</bold></highlight>, program <highlight><bold>112</bold></highlight> initiates program <highlight><bold>132</bold></highlight> to transform the text in work area <highlight><bold>118</bold></highlight> into a format which can be delivered by e-mail program <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> The processing procedure of <highlight><bold>112</bold></highlight> has been described. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, description will be given of a processing procedure of text retrieval program <highlight><bold>131</bold></highlight> initiated in step <highlight><bold>501</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> In step <highlight><bold>700</bold></highlight>, program <highlight><bold>131</bold></highlight> resets to zero a retrieval term appearance count storage area in an output table of finite automaton <highlight><bold>114</bold></highlight>. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> In step <highlight><bold>701</bold></highlight>, program <highlight><bold>131</bold></highlight> initiates program <highlight><bold>150</bold></highlight> to scan by finite automaton <highlight><bold>114</bold></highlight> the text stored in work area <highlight><bold>118</bold></highlight> by program <highlight><bold>130</bold></highlight> to count the number of appearances of a retrieval term in partial character strings of the text. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> In step <highlight><bold>702</bold></highlight>, program <highlight><bold>131</bold></highlight> initiates program <highlight><bold>151</bold></highlight> to calculate similarity of the text to each retrieval condition registered by users <highlight><bold>107</bold></highlight> according to a predetermined similarity calculating formula using the number of appearances of the retrieval term in the text obtained by program <highlight><bold>150</bold></highlight> and a weight of the retrieval term stored in table <highlight><bold>116</bold></highlight> by program <highlight><bold>122</bold></highlight>. Program <highlight><bold>131</bold></highlight> stores the similarity in table <highlight><bold>117</bold></highlight>. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> In step <highlight><bold>703</bold></highlight>, program <highlight><bold>131</bold></highlight> initiates program <highlight><bold>152</bold></highlight> to output to program <highlight><bold>112</bold></highlight> an identifier of each user having specified a retrieval condition for which the similarity of the text exceeds the delivery threshold value stored in table <highlight><bold>117</bold></highlight>. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> The processing procedure of text retrieval program <highlight><bold>131</bold></highlight> has been described. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, description will be given in detail of a processing flow of program <highlight><bold>131</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> In step <highlight><bold>1100</bold></highlight>, program <highlight><bold>131</bold></highlight> collates by finite automaton <highlight><bold>114</bold></highlight> the retrieval terms extracted from the retrieval conditions registered by users <highlight><bold>107</bold></highlight> with a text <highlight><bold>1100</bold></highlight> stored in work area <highlight><bold>118</bold></highlight> by program <highlight><bold>130</bold></highlight> to count the number of appearance of each retrieval term in the text. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> In this example, a text &ldquo;the car maker announced a new model car . . . &rdquo; is scanned by finite automaton <highlight><bold>114</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> to retrieve a matching retrieval condition. In automaton of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the number of appearance of each retrieval term in the text is shown in the vicinity of the last state. A partial character string matching retrieval term &ldquo;car&rdquo; appears twice and hence &ldquo;2&rdquo; is indicated for the last state &ldquo;3&rdquo;. A partial character string matching retrieval term &ldquo;new&rdquo; appears once and therefore &ldquo;1&rdquo; is indicated for the last state &ldquo;6&rdquo;. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> In step <highlight><bold>1101</bold></highlight>, for the retrieval terms matching any partial character strings of the text, program <highlight><bold>131</bold></highlight> calculates similarity of the text to the retrieval conditions of the users by referring to user list elements respectively connected to the end states. Although this embodiment uses similarity calculating expression (2) to calculate the similarity, there may be employed other methods. According to expression (2), the similarity of text &ldquo;the car maker announced a new model car . . . &rdquo; to the retrieval conditions of the users is attained as follows. </paragraph>
<paragraph id="P-0164" lvl="1"><number>&lsqb;0164&rsqb;</number> User <highlight><bold>1</bold></highlight>: 9.2 </paragraph>
<paragraph id="P-0165" lvl="1"><number>&lsqb;0165&rsqb;</number> User <highlight><bold>2</bold></highlight>: 0 </paragraph>
<paragraph id="P-0166" lvl="1"><number>&lsqb;0166&rsqb;</number> User <highlight><bold>3</bold></highlight>: 6.6 </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> In step <highlight><bold>1102</bold></highlight>, program <highlight><bold>131</bold></highlight> determines whether or not the similarity exceeds an associated delivery threshold value in table <highlight><bold>117</bold></highlight>. When the condition is satisfied, the pertinent user identifier is outputted to program <highlight><bold>112</bold></highlight>. This embodiment sets the delivery threshold values of users <highlight><bold>1</bold></highlight> to <highlight><bold>3</bold></highlight> as 8.0, 3.5, and 7.0, respectively. However, the other values may be set as conditions. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> The similarity of the text to the retrieval conditions of the users is checked according to the text delivery conditions. Since the similarity of the retrieval condition registered by user <highlight><bold>1</bold></highlight>, i.e., &ldquo;the information of new car . . . &rdquo; exceeds the delivery threshold value &ldquo;8.0&rdquo; of user <highlight><bold>1</bold></highlight>. Accordingly, user identifier <highlight><bold>1111</bold></highlight>, i.e., &ldquo;user <highlight><bold>1</bold></highlight>&rdquo; is outputted to program <highlight><bold>112</bold></highlight>. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> In this embodiment as described above, the similarity of text to the retrieval conditions of a plurality of users can be calculated through only one scanning operation of the text. For each user, the delivery threshold value is compared with the similarity. Consequently, even a text having a low similarity value can be delivered to a user who requests a large amount of information. Furthermore, a text having a high similarity value can be delivered to a user requesting only essential information. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> In the description of the embodiment, the delivery threshold value can be set for each user. However, there may be used common delivery threshold values in the system. This minimizes the storage capacity necessary for similarity control table <highlight><bold>117</bold></highlight>. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> To calculate similarity of the users, similarity calculation program <highlight><bold>151</bold></highlight> of the first embodiment sequentially processes user list <highlight><bold>115</bold></highlight> connected to the output table of finite automaton <highlight><bold>114</bold></highlight>. When the number of users increases, this leads to a problem that a period of time to completely calculate similarity for all users becomes quite long. For example, even if processing for one user identifier connected to its user list takes only 0.01 second, 100 seconds are required for 10,000 user identifiers. Namely, a period of one minute 40 seconds lapse from when the similarity calculation is started to when the calculation is completed. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> To solve the problem, the second embodiment of a document retrieving and delivering system in accordance with the present invention assigns priority of delivery to each user identifier to conduct the similarity calculation beginning at a user having highest priority. The delivery is more quickly achieved for users having higher priority. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> The second embodiment is almost the same in constitution with the first embodiment of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. These embodiments differ from each other in the processing procedure of text retrieval program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>and connection between finite automaton <highlight><bold>114</bold></highlight> and user list <highlight><bold>115</bold></highlight>. As shown in PAD of <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, step <highlight><bold>1300</bold></highlight> is added to program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>in the second embodiment. As can be seen from <cross-reference target="DRAWINGS">FIG. 12, a</cross-reference> user list <highlight><bold>115</bold></highlight> is connected via a priority identifier <highlight><bold>1200</bold></highlight> to finite automaton <highlight><bold>114</bold></highlight>. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, description will be given of text retrieval program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>of the second embodiment. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> In step <highlight><bold>700</bold></highlight>, program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>resets a retrieval term appearance count storage area in an output table of finite automaton <highlight><bold>114</bold></highlight> to zero. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> In step <highlight><bold>701</bold></highlight>, program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>150</bold></highlight> to scan by finite automaton <highlight><bold>114</bold></highlight> the text stored in work area <highlight><bold>118</bold></highlight> by program <highlight><bold>130</bold></highlight> to count the number of appearances of a retrieval term in partial character strings of the text. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> In step <highlight><bold>1300</bold></highlight>, program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>repeatedly executes steps <highlight><bold>702</bold></highlight> and <highlight><bold>703</bold></highlight> in a descending order of priority indicated by priority identifier <highlight><bold>1200</bold></highlight> connected to finite automaton <highlight><bold>114</bold></highlight>. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> In step <highlight><bold>702</bold></highlight>, program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>151</bold></highlight> to calculate similarity of the text to each retrieval condition registered by users <highlight><bold>107</bold></highlight> according to a predetermined similarity calculating formula using the number of appearances of the retrieval term in the text obtained by program <highlight><bold>150</bold></highlight> and a weight of each retrieval term stored in table <highlight><bold>116</bold></highlight> by program <highlight><bold>122</bold></highlight>. Program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>then stores the similarity in table <highlight><bold>117</bold></highlight>. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> In step <highlight><bold>703</bold></highlight>, program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>152</bold></highlight> to output to program <highlight><bold>112</bold></highlight> an identifier of each user having specified a retrieval condition for which the similarity of the text exceeds the delivery threshold value stored in table <highlight><bold>117</bold></highlight>. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> The processing procedure of text retrieval program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>has been described. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> Referring to a specific example shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, description will now be given of a concrete processing procedure of text retrieval program <highlight><bold>131</bold></highlight><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> In step <highlight><bold>1100</bold></highlight>, program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>counts the number of appearances of each retrieval term in text <highlight><bold>1110</bold></highlight> stored in work area <highlight><bold>118</bold></highlight> by program <highlight><bold>130</bold></highlight>. In this example, there is obtained a result <highlight><bold>1410</bold></highlight> indicating that retrieval terms &ldquo;car&rdquo; and &ldquo;new&rdquo; respectively appear twice and once in text <highlight><bold>1110</bold></highlight> &ldquo;the car maker announced a new model car . . . .&rdquo;</paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> In step <highlight><bold>1400</bold></highlight>, program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>calculates similarity of text <highlight><bold>1110</bold></highlight> by referring to a user list connected to &ldquo;superexpress&rdquo; priority identifier <highlight><bold>1200</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. In the example of <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, similarity of text <highlight><bold>1110</bold></highlight> with respect to the retrieval condition of user <highlight><bold>1</bold></highlight> is obtained as 9.2. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> In step <highlight><bold>1401</bold></highlight>, program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>checks to determine whether or not the similarity exceeds the delivery threshold value stored in the similarity control table. If the condition is satisfied, the user identifier is outputted to program <highlight><bold>112</bold></highlight>. In this example, the delivery threshold value is 8.0 for user <highlight><bold>1</bold></highlight>. However, any other text delivery condition may be employed. Since similarity &ldquo;9.2&rdquo; exceeds threshold value &ldquo;8.0&rdquo;, &ldquo;user <highlight><bold>1</bold></highlight>&rdquo; is outputted as the user identifier. </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> In step <highlight><bold>1402</bold></highlight>, program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>calculates similarity of text <highlight><bold>1110</bold></highlight> by referring to a user list connected to &ldquo;local train&rdquo; priority identifier <highlight><bold>1200</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. In the example of <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, similarity of text <highlight><bold>1110</bold></highlight> to the retrieval conditions of users <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight> are attained as 0 and 6.6, respectively. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> In step <highlight><bold>1403</bold></highlight>, program <highlight><bold>131</bold></highlight><highlight><italic>a </italic></highlight>checks to determine whether or not each similarity exceeds the delivery threshold value stored in the similarity control table. If the condition is satisfied, the user identifier is output to program <highlight><bold>112</bold></highlight>. As a result, since the similarity values are less than the respective delivery threshold values, the identifiers of these users are not outputted. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> In this embodiment described above, the text retrieval can be preferentially conducted for users having higher priority. It is therefore possible to provide a document retrieving and delivering system in which even when the number of users becomes greater, texts can be immediately delivered to users having higher priority. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> In the description of the embodiment, priority identifier <highlight><bold>1200</bold></highlight> includes &ldquo;superexpress&rdquo; and &ldquo;local train&rdquo; assigned with respective priority levels set by the user. However, the identifier may include delivery priority according to, for example, posts in a firm such as &ldquo;division manager&rdquo; and &ldquo;section manager&rdquo; or according to a contract charging rate such as a rate for &ldquo;user&rdquo; and a rate for &ldquo;trial user&rdquo;. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 15</cross-reference>, description will be given of a third embodiment in accordance with the present invention. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> In the first and second embodiments, the similarity is calculated assuming that the retrieval terms extracted from the seed document have the same importance regardless of a type of the seed document. However, this leads to a problem that even if the subject of the seed document changes, the retrieval terms have the same weight, and hence the subject of the seed document cannot be appropriately reflected in the results. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> Fog example, retrieval term &ldquo;HiRetrieval&rdquo; extracted from retrieval condition &ldquo;bunsho kensaku shisutemu toshitewa HiRetrieval ga yoku shirarete (HiRetrieval is well known as a document retrieval system) . . . &rdquo; is an example of a document retrieving system. For retrieval condition &ldquo;HiRetrieval&rdquo;, it is possible to conduct logical operations such as AND and OR. For HiRetrieval, it is possible to register structured documents or texts described in the standard generalized markup language (SGML), the extensible markup language (XML), or the like. Furthermore, in HiRetrieval, retrieval term &ldquo;HiRetrieval&rdquo; extracted is a word representing the theme of the document and is quite important. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> In the third embodiment of the document retrieving and delivering system of the present invention, the problem above is removed by adding a retrieval term weight to the user list with respect to each retrieval condition. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> The third embodiment is almost the same in constitution as the first embodiment of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, but includes a different retrieval condition registration control program <highlight><bold>111</bold></highlight> and an additional program, i.e., retrieval condition weight calculation program <highlight><bold>1500</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. The format of user list <highlight><bold>115</bold></highlight> created by user list creation program <highlight><bold>141</bold></highlight><highlight><italic>a </italic></highlight>and the processing procedure of similarity calculation program <highlight><bold>151</bold></highlight> are different from those of the first embodiment. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 16</cross-reference>, description will be given of a processing procedure of retrieval condition registration control program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>which is different from program <highlight><bold>111</bold></highlight> of the first embodiment. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> In step <highlight><bold>400</bold></highlight>, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>120</bold></highlight>, which acquires retrieval conditions sent via e-mail from users <highlight><bold>107</bold></highlight> and which stores the conditions in work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> In step <highlight><bold>401</bold></highlight>, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>121</bold></highlight> to extract the retrieval terms from a seed document in the retrieval conditions in work area <highlight><bold>118</bold></highlight> and to store the terms in work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> In step <highlight><bold>402</bold></highlight>, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>122</bold></highlight>, which calculates weights of retrieval terms in work area <highlight><bold>118</bold></highlight> and which stores the weights in retrieval term weight table <highlight><bold>116</bold></highlight>. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> In step <highlight><bold>1600</bold></highlight>, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>1500</bold></highlight>, which calculates weights of the retrieval terms in work area <highlight><bold>118</bold></highlight> for each retrieval condition and which stores the weights in work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> In step <highlight><bold>1601</bold></highlight>, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>initiates a retrieval automaton creation program <highlight><bold>123</bold></highlight><highlight><italic>a </italic></highlight>to create finite automaton <highlight><bold>114</bold></highlight> to collate all retrieval terms in the retrieval conditions. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> In step <highlight><bold>404</bold></highlight>, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>124</bold></highlight> to store in table <highlight><bold>117</bold></highlight> the delivery threshold values specified in the retrieval conditions. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> The processing procedure of retrieval condition registration control program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>has been described. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> Referring next to the PAD of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, description will be given of a processing procedure of program <highlight><bold>123</bold></highlight><highlight><italic>a </italic></highlight>initiated in step <highlight><bold>1601</bold></highlight> by program <highlight><bold>111</bold></highlight><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> In step <highlight><bold>600</bold></highlight>, program <highlight><bold>123</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>140</bold></highlight> to generate finite automaton <highlight><bold>114</bold></highlight> to collate all retrieval terms which are extracted and stored in work area <highlight><bold>118</bold></highlight> by program <highlight><bold>121</bold></highlight>. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> In step <highlight><bold>1700</bold></highlight>, program <highlight><bold>123</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>141</bold></highlight><highlight><italic>a </italic></highlight>which couples an identifier number of user <highlight><bold>107</bold></highlight> having specified the retrieval condition with a weight of the retrieval term for the retrieval condition, the weight being stored in work area <highlight><bold>118</bold></highlight> by program <highlight><bold>1500</bold></highlight>. Program <highlight><bold>141</bold></highlight><highlight><italic>a </italic></highlight>resultantly creates a user list <highlight><bold>115</bold></highlight><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> In step <highlight><bold>1701</bold></highlight>, program <highlight><bold>123</bold></highlight><highlight><italic>a </italic></highlight>connects user list <highlight><bold>115</bold></highlight><highlight><italic>a </italic></highlight>via a pointer to an output table of finite automaton <highlight><bold>114</bold></highlight>. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> The processing procedure of retrieval automaton creation program <highlight><bold>123</bold></highlight><highlight><italic>a </italic></highlight>has been described. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, description will be given of a processing flow of a retrieval condition registration control program in the third embodiment shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> In step <highlight><bold>1000</bold></highlight>, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>extracts retrieval terms <highlight><bold>1011</bold></highlight> from retrieval conditions <highlight><bold>1010</bold></highlight> sent via e-mail from users <highlight><bold>107</bold></highlight>. In this example, three retrieval terms &ldquo;information&rdquo;, &ldquo;new&rdquo;, and &ldquo;car&rdquo; are extracted from retrieval condition user <highlight><bold>1</bold></highlight> &ldquo;the information of new car . . . &rdquo; registered by user <highlight><bold>1</bold></highlight>. In a similar fashion, three terms &ldquo;today&rdquo;, &ldquo;market&rdquo;, and &ldquo;USA&rdquo; are extracted from the condition of user <highlight><bold>2</bold></highlight> and four terms &ldquo;price&rdquo;, &ldquo;used&rdquo;, &ldquo;car&rdquo;, and &ldquo;falling&rdquo; are extracted from the condition of user <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> In the technique to extract retrieval terms in a language including a space to separate words from each other as above, words other than whose frequently used such as &ldquo;or&rdquo; and &ldquo;the&rdquo; are used as retrieval terms to be extracted. However, there may be used other methods. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> For example, in a language such as Japanese which does not use a separation code between words, there may be used a method described in JP-A-8-335222 in which words contained in the seed document are extracted as retrieval terms by referring to a word dictionary through morphological analysis. However, the words not contained in the word dictionary cannot be extracted. Consequently, it is favorable, as described in prior art 2 to use statistic information in the text database to extract all words written in the document as retrieval terms without using the word dictionary. Although prior art 2 employs probability of appearance of each n-gram (character strings each having n continual characters) in the text database, it may be possible in a document retrieving and delivering system to utilize probability of appearance of each n-gram in all texts delivered, in a text database to which the texts delivered are registered, or in a text database to which documents other than the texts delivered are registered. </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> In step <highlight><bold>1001</bold></highlight>, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>calculates, according to a predetermined calculation formula, importance for all retrieval terms <highlight><bold>1011</bold></highlight> extracted from retrieval conditions <highlight><bold>1010</bold></highlight> and stores the values of importance in weight table <highlight><bold>116</bold></highlight>. IDF formula (1) described above may be used to calculate the weight for each retrieval term. Using expression (1), when retrieval term &ldquo;car&rdquo; appears in 2000 texts in a text database including, for example, 100 thousand texts, 6.6 is obtained as importance of &ldquo;car&rdquo;. The total number of documents in the database and the number of documents in which the retrieval term appears may respectively be the number of texts delivered from news source <highlight><bold>106</bold></highlight> and the number of texts in which the term appears. Alternatively, these values may be obtained by referring to a text database to which texts other than the texts delivered are registered. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> In step <highlight><bold>1800</bold></highlight>, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>calculates, according to a predetermined calculation formula, retrieval condition importance of each retrieval term <highlight><bold>1011</bold></highlight> extracted from retrieval conditions <highlight><bold>1010</bold></highlight> with respective to each retrieval condition and then stores the importance in work area <highlight><bold>118</bold></highlight>. The importance may be the number of appearances of the term in the retrieval condition. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> In step <highlight><bold>1002</bold></highlight>, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>creates finite automaton <highlight><bold>114</bold></highlight> to collate all retrieval terms <highlight><bold>1011</bold></highlight> extracted from conditions <highlight><bold>1010</bold></highlight>. The retrieval terms can be registered to the automaton in a method of prior art 1. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> Description has been given of a specific processing procedure of retrieval condition registration control program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, description will be given of a processing procedure of a similarity calculation program <highlight><bold>151</bold></highlight><highlight><italic>a </italic></highlight>of third embodiment which is different from those of the first and second embodiments above in accordance with the present invention. </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> In step <highlight><bold>1900</bold></highlight>, program <highlight><bold>151</bold></highlight><highlight><italic>a </italic></highlight>repeatedly executes steps <highlight><bold>1901</bold></highlight> to <highlight><bold>1905</bold></highlight> for all retrieval terms collated by program <highlight><bold>150</bold></highlight>. </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> In step <highlight><bold>1901</bold></highlight>, program <highlight><bold>151</bold></highlight><highlight><italic>a </italic></highlight>obtains by program <highlight><bold>150</bold></highlight> the number of appearances of the retrieval term. In step <highlight><bold>1902</bold></highlight>, program <highlight><bold>151</bold></highlight><highlight><italic>a </italic></highlight>acquires a weight of the retrieval from weight table <highlight><bold>116</bold></highlight>. </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> Program <highlight><bold>151</bold></highlight><highlight><italic>a </italic></highlight>then repeatedly executes steps <highlight><bold>1904</bold></highlight> and <highlight><bold>1905</bold></highlight> for the user identifiers of user list <highlight><bold>115</bold></highlight><highlight><italic>a</italic></highlight>. In step <highlight><bold>1904</bold></highlight>, program <highlight><bold>151</bold></highlight><highlight><italic>a </italic></highlight>acquires a user identifier and a retrieval condition weight of the pertinent retrieval condition. In step <highlight><bold>1905</bold></highlight>, program <highlight><bold>151</bold></highlight><highlight><italic>a </italic></highlight>calculates similarity for each retrieval condition according to a predetermined calculation formula. </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> The processing procedure of similarity calculation program <highlight><bold>151</bold></highlight><highlight><italic>a </italic></highlight>has been described. </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> In accordance with the third embodiment described above, a high weight can be added to retrieval terms representing subjects of the retrieval conditions registered by the respective users. Consequently, it is possible to provide a document retrieving and delivering system having high precision. </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> Description will now be given of a fourth embodiment in accordance with the present invention. </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> In the first to third embodiments above, a text having similarity equal to or more than a predetermined value (to be referred to as a delivery threshold value herebelow) is delivered in step <highlight><bold>1102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. However, this is attended with a problem that a delivery threshold value cannot be appropriately assigned for the retrieval conditions set by the users as follows. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> For example, when a too great value is set as the threshold value, desired texts cannot be delivered to some users. Conversely, when a too small value is specified, some users receive a large amount of texts not requested. It is therefore necessary to modify the delivery threshold value initialized. This leads to a problem, i.e., how to modify the threshold value for the user to acquire all desired texts without noise. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> To solve the problem, in the fourth embodiment of a document retrieving and delivering system of the present invention, information (to be referred to as delivery threshold setting information) useful for the user to set an appropriate delivery threshold value is presented to the user. Moreover, the system displays texts in the past of which similarity calculated exceeds the delivery threshold value set by the user (to be referred to &ldquo;trial of delivery threshold value setting&rdquo; herebelow). Using these information items, the user can appropriately set a suitable delivery threshold value. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows a system configuration of a fourth embodiment in accordance with the present invention. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> The fourth embodiment is almost the same in constitution as the first embodiment shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. As can be seen from <cross-reference target="DRAWINGS">FIG. 21</cross-reference>, the configuration of the fourth embodiment additionally includes a delivery threshold update program <highlight><bold>2000</bold></highlight>, a delivery threshold setting information program <highlight><bold>2001</bold></highlight>, and a delivery threshold setting trial program <highlight><bold>2002</bold></highlight>. The system further includes a personal similarity determination information control area <highlight><bold>2003</bold></highlight> and a text save area <highlight><bold>2004</bold></highlight>. </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> In area <highlight><bold>2003</bold></highlight>, there are stored similarity calculated in the past for texts with respect to retrieval conditions of users and flags indicating whether or not texts are delivered to users. Stored in area <highlight><bold>2004</bold></highlight> are contents and reception time of texts received in the past. </paragraph>
<paragraph id="P-0228" lvl="0"><number>&lsqb;0228&rsqb;</number> In the fourth embodiment, according to information stored in areas <highlight><bold>2003</bold></highlight> and <highlight><bold>2004</bold></highlight>, program <highlight><bold>2001</bold></highlight> presents delivery threshold setting information to users. Using information in areas <highlight><bold>2003</bold></highlight> and <highlight><bold>2004</bold></highlight>, program <highlight><bold>2002</bold></highlight> similarly presents a function to set a delivery threshold value to users. The user can therefore determine an appropriate delivery threshold to register a determined threshold value to the system by program <highlight><bold>2000</bold></highlight>. The value registered is used by text retrieval and delivery control program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>to determine whether or not a text is delivered to each user. </paragraph>
<paragraph id="P-0229" lvl="0"><number>&lsqb;0229&rsqb;</number> In the description of the fourth embodiment, a user request for presentation of delivery threshold setting information, a user request for delivery threshold setting operation, and a user request for delivery threshold setting trial are transmitted in the form of e-mail. However, these requests may be sent to the system via other network applications such as Web browser. Moreover, the system sends delivery threshold setting information and results of delivery threshold setting trial via e-mail to the pertinent user. However, other network applications such as Web browser may be used for this purpose. </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> Description will now be given of a processing procedure of each program in the fourth embodiment. </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 22</cross-reference>, description will be given of system control program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>in the fourth embodiment. </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> The procedure of program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>of this embodiment is implemented by adding steps <highlight><bold>2100</bold></highlight> to <highlight><bold>2105</bold></highlight> to that of system control program <highlight><bold>110</bold></highlight> of the first embodiment. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> In iterative processing step <highlight><bold>300</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>checks after processing of steps <highlight><bold>301</bold></highlight> and <highlight><bold>302</bold></highlight> whether or not a delivery threshold value has been sent from a user. If such a value has been received, program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>2000</bold></highlight> in step <highlight><bold>2103</bold></highlight> to set a delivery threshold value of the user. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> In step <highlight><bold>2101</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>checks to determine whether or not a request for presentation of delivery threshold value setting information has been sent from user <highlight><bold>107</bold></highlight>. If such a request has been received, program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>2001</bold></highlight> to send presentation of delivery threshold value setting information to the user. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> In step <highlight><bold>2102</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>checks to determine whether or not a request for delivery threshold setting trial has been sent from user <highlight><bold>107</bold></highlight>. If such a request has been received, program <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>initiates program <highlight><bold>2002</bold></highlight> to try setting a delivery threshold. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> The processing procedure of system control program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>has been described. </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 23</cross-reference>, description will be given of delivery threshold update program <highlight><bold>2000</bold></highlight> initiated by system program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>in step <highlight><bold>2103</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 22</cross-reference>. </paragraph>
<paragraph id="P-0238" lvl="0"><number>&lsqb;0238&rsqb;</number> In step <highlight><bold>2200</bold></highlight>, program <highlight><bold>2000</bold></highlight> acquires a delivery threshold value sent from user <highlight><bold>107</bold></highlight> via e-mail. </paragraph>
<paragraph id="P-0239" lvl="0"><number>&lsqb;0239&rsqb;</number> In step <highlight><bold>2201</bold></highlight>, program <highlight><bold>2000</bold></highlight> updates user list <highlight><bold>115</bold></highlight><highlight><italic>b </italic></highlight>to replace the old delivery threshold value of the user with the value received. In list <highlight><bold>115</bold></highlight><highlight><italic>b</italic></highlight>, each delivery threshold value may be initialized to a value determined by a manager or may be set to a value inputted by user <highlight><bold>107</bold></highlight> when user <highlight><bold>107</bold></highlight> registers a retrieval condition. </paragraph>
<paragraph id="P-0240" lvl="0"><number>&lsqb;0240&rsqb;</number> The processing procedure of delivery threshold update program <highlight><bold>2000</bold></highlight> has been described. </paragraph>
<paragraph id="P-0241" lvl="0"><number>&lsqb;0241&rsqb;</number> Referring next to a PAD shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, description will be given of delivery threshold setting support information program <highlight><bold>2001</bold></highlight> initiated by the system program in step <highlight><bold>2104</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 22</cross-reference>. </paragraph>
<paragraph id="P-0242" lvl="0"><number>&lsqb;0242&rsqb;</number> Program <highlight><bold>2001</bold></highlight> provides, according to history of delivery determination for users in the past, information for users to appropriately set a threshold value. </paragraph>
<paragraph id="P-0243" lvl="0"><number>&lsqb;0243&rsqb;</number> In step <highlight><bold>2300</bold></highlight>, according to a user identifier of user <highlight><bold>107</bold></highlight> having requested threshold setting support information, program <highlight><bold>2001</bold></highlight> accesses personal similarity determination information control area <highlight><bold>2003</bold></highlight> to read therefrom personal similarity determination information of the user with respect to texts received from news source <highlight><bold>106</bold></highlight> in a predetermined period of time in the past. The similarity determination information includes data items such as similarity of each user for all texts received from news source <highlight><bold>106</bold></highlight> and a flag of delivery or non-delivery of each text. A specific example thereof will be described later. </paragraph>
<paragraph id="P-0244" lvl="0"><number>&lsqb;0244&rsqb;</number> In step <highlight><bold>2301</bold></highlight>, program <highlight><bold>2001</bold></highlight> obtains from text save area <highlight><bold>2004</bold></highlight> the contents of texts received from news source <highlight><bold>106</bold></highlight> within a predetermined period of time in the past. </paragraph>
<paragraph id="P-0245" lvl="0"><number>&lsqb;0245&rsqb;</number> In step <highlight><bold>2302</bold></highlight>, program <highlight><bold>2001</bold></highlight> extracts from the information acquired in step <highlight><bold>2301</bold></highlight> information items concerning the texts delivered to the user and produces a list in work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> In step <highlight><bold>2303</bold></highlight>, program <highlight><bold>2001</bold></highlight> draws a graph (to be referred to as similarity distribution information herebelow) in work area <highlight><bold>118</bold></highlight> in which an abscissa represents the number of texts for each similarity calculated for the retrieval condition of each user and the similarity and an ordinate represents time of text reception. The abscissa and the ordinate may represent other information items obtained in steps <highlight><bold>2301</bold></highlight> and <highlight><bold>2302</bold></highlight>. </paragraph>
<paragraph id="P-0247" lvl="0"><number>&lsqb;0247&rsqb;</number> In step <highlight><bold>2304</bold></highlight>, program <highlight><bold>2001</bold></highlight> transforms the information in work area <highlight><bold>118</bold></highlight> into a format which can be delivered by e-mail program <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0248" lvl="0"><number>&lsqb;0248&rsqb;</number> Information thus stored in work area <highlight><bold>118</bold></highlight> is delivered by e-mail program <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0249" lvl="0"><number>&lsqb;0249&rsqb;</number> The processing procedure of delivery threshold setting support information program <highlight><bold>2001</bold></highlight> has been described. </paragraph>
<paragraph id="P-0250" lvl="0"><number>&lsqb;0250&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, description will be given in detail of a processing flow of program <highlight><bold>2001</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>. </paragraph>
<paragraph id="P-0251" lvl="0"><number>&lsqb;0251&rsqb;</number> In step <highlight><bold>2300</bold></highlight>, program <highlight><bold>2001</bold></highlight> obtains from area <highlight><bold>2003</bold></highlight> personal similarity determination information <highlight><bold>2400</bold></highlight> within a predetermined period of time in the past (e.g., in the last 24 hours in this case) corresponding to the user identifier of user <highlight><bold>107</bold></highlight> having requested the support information. In this example, program <highlight><bold>2001</bold></highlight> obtains text identifiers respectively of texts <highlight><bold>1</bold></highlight> to <highlight><bold>3</bold></highlight> of user <highlight><bold>1</bold></highlight>, similarity values calculated for the texts, flags of delivery or non-delivery thereof, and delivery threshold values of user <highlight><bold>107</bold></highlight> at delivery determination. </paragraph>
<paragraph id="P-0252" lvl="0"><number>&lsqb;0252&rsqb;</number> In step <highlight><bold>2301</bold></highlight>, program <highlight><bold>2001</bold></highlight> attains from area <highlight><bold>2004</bold></highlight> the contents of texts received from new sources <highlight><bold>106</bold></highlight> within the last 24 hours. In this example, program <highlight><bold>2001</bold></highlight> obtains the contents of texts <highlight><bold>1</bold></highlight> to <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0253" lvl="0"><number>&lsqb;0253&rsqb;</number> Steps <highlight><bold>2300</bold></highlight> and <highlight><bold>2301</bold></highlight> of this embodiment process the texts received from new sources <highlight><bold>106</bold></highlight> within the last 24 hours. However, the period to receive texts may be changed, the entire period may be specified to process all texts stored, or the period may be specified by user <highlight><bold>107</bold></highlight>. </paragraph>
<paragraph id="P-0254" lvl="0"><number>&lsqb;0254&rsqb;</number> In step <highlight><bold>2302</bold></highlight>, program <highlight><bold>2001</bold></highlight> collates the information acquired in steps <highlight><bold>2300</bold></highlight> and <highlight><bold>2301</bold></highlight> according to the text identifier to extract therefrom information concerning texts delivered to the pertinent user and outputs the information in work area <highlight><bold>118</bold></highlight>. In this example, program <highlight><bold>2001</bold></highlight> outputs in work area <highlight><bold>118</bold></highlight> a list <highlight><bold>2401</bold></highlight> including text identifiers, similarity values, delivery threshold values, and delivery time for texts <highlight><bold>1</bold></highlight> and <highlight><bold>3</bold></highlight> delivered to user <highlight><bold>1</bold></highlight>. The information items to be output may include any combination of information obtained in steps <highlight><bold>2300</bold></highlight> and <highlight><bold>2301</bold></highlight>. The items are outputted in a similarity order in this embodiment. However, the items may be outputted in a text delivery time sequence, or the user may select the similarity order or the delivery time sequence. Alternatively, in place of text identifiers, a first sentence may be extracted from the contents of text to be outputted to work area <highlight><bold>118</bold></highlight>. Moreover, if there is an attribute item such as &ldquo;title&rdquo;, the item may be outputted to area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0255" lvl="0"><number>&lsqb;0255&rsqb;</number> In step <highlight><bold>2303</bold></highlight>, program <highlight><bold>2001</bold></highlight> collates the information attained in steps <highlight><bold>2300</bold></highlight> and <highlight><bold>2301</bold></highlight> according to the text identifier to generate similarity distribution information of the texts and further outputs the information to work area <highlight><bold>118</bold></highlight>. In the example of <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, program <highlight><bold>2001</bold></highlight> produces the number of texts for each similarity within the past 24 hours and generates a graph <highlight><bold>2403</bold></highlight> of text distribution in which the ordinate represents time and the abscissa represents similarity. </paragraph>
<paragraph id="P-0256" lvl="0"><number>&lsqb;0256&rsqb;</number> By referring to the graph, user <highlight><bold>107</bold></highlight> can visually and easily know the amount of texts to be delivered and the period of time in which the amount of texts are delivered for each value set to the threshold value. User <highlight><bold>107</bold></highlight> can also recognize change of the text delivery state with respect to time. For example, when the graph of <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is produced, user <highlight><bold>107</bold></highlight> can understand that the amount of desired texts (with high similarity) from the news delivery source becomes gradually decreased. In this situation, user <highlight><bold>107</bold></highlight> may lower the delivery threshold value. </paragraph>
<paragraph id="P-0257" lvl="0"><number>&lsqb;0257&rsqb;</number> User <highlight><bold>107</bold></highlight> cal also recognize a time zone in which texts desired are frequently delivered. For example, according to the graph of <cross-reference target="DRAWINGS">FIG. 27</cross-reference>, it is known that many texts desired are delivered in a time zone from 18:00 to 21:00. User <highlight><bold>107</bold></highlight> can therefore avoid an unfavorable event, for example, when a delivery threshold value is set to a time zone in which few texts desired are delivered, there is conducted local optimization, and hence the delivery threshold value is set to a value lower than an appropriate value. </paragraph>
<paragraph id="P-0258" lvl="0"><number>&lsqb;0258&rsqb;</number> Although step <highlight><bold>2303</bold></highlight> of the embodiment processes all texts delivered from news source <highlight><bold>106</bold></highlight> in the last 24 hours, it is also possible to process only texts not delivered to pertinent user <highlight><bold>107</bold></highlight>. The graph may include information to indicate whether or not texts are delivered to pertinent user <highlight><bold>107</bold></highlight>. Change with respect to time of the delivery threshold value set by pertinent user <highlight><bold>107</bold></highlight> may be presented at the same time. Although similarity is stored in personal control area <highlight><bold>2003</bold></highlight> in this embodiment, the texts in text save area <highlight><bold>2004</bold></highlight> may be again scanned and similarity thereof is again calculated with respect to the retrieval condition of the user at the pertinent point of time to use a result of the calculation as similarity. </paragraph>
<paragraph id="P-0259" lvl="0"><number>&lsqb;0259&rsqb;</number> In step <highlight><bold>2304</bold></highlight>, program <highlight><bold>2001</bold></highlight> transforms information in work area <highlight><bold>118</bold></highlight> into a format suitable for e-mail program <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0260" lvl="0"><number>&lsqb;0260&rsqb;</number> The specific processing flow of program <highlight><bold>2001</bold></highlight> has been described. Although delivery threshold setting support information is presented in response to a request from the user, the information may be presented to all users <highlight><bold>107</bold></highlight> at a predetermined point of time. </paragraph>
<paragraph id="P-0261" lvl="0"><number>&lsqb;0261&rsqb;</number> Referring next to the PAD of <cross-reference target="DRAWINGS">FIG. 28</cross-reference>, description will be given of a processing procedure of delivery threshold setting trial program <highlight><bold>2002</bold></highlight> initiated by the system control program in step <highlight><bold>2105</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 22</cross-reference>. </paragraph>
<paragraph id="P-0262" lvl="0"><number>&lsqb;0262&rsqb;</number> Program <highlight><bold>2002</bold></highlight> presents, according to the similarity calculated for texts of each user received in the past, texts in the past of which similarity values exceed a delivery threshold value specified by the user. </paragraph>
<paragraph id="P-0263" lvl="0"><number>&lsqb;0263&rsqb;</number> In step <highlight><bold>2500</bold></highlight>, program <highlight><bold>2002</bold></highlight> acquires a delivery threshold value sent from user <highlight><bold>107</bold></highlight> via e-mail. </paragraph>
<paragraph id="P-0264" lvl="0"><number>&lsqb;0264&rsqb;</number> In step <highlight><bold>2501</bold></highlight>, program <highlight><bold>2002</bold></highlight> accesses area <highlight><bold>2003</bold></highlight> according to a user identifier of the user and reads, from personal similarity determination information of the user, information of texts of which similarity exceeds the threshold value obtained in step <highlight><bold>2500</bold></highlight>. </paragraph>
<paragraph id="P-0265" lvl="0"><number>&lsqb;0265&rsqb;</number> In step <highlight><bold>2502</bold></highlight>, program <highlight><bold>2002</bold></highlight> reads from area <highlight><bold>2004</bold></highlight> the contents and reception time of a text corresponding to the text identifier of similarity determination information attained in step <highlight><bold>2501</bold></highlight> and outputs the contents, the reception time, and the information to work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0266" lvl="0"><number>&lsqb;0266&rsqb;</number> In step <highlight><bold>2503</bold></highlight>, program <highlight><bold>2002</bold></highlight> transforms the information in work area <highlight><bold>118</bold></highlight> into a format of e-mail program <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0267" lvl="0"><number>&lsqb;0267&rsqb;</number> Program <highlight><bold>113</bold></highlight> then delivers the information from work area <highlight><bold>118</bold></highlight> to the user. </paragraph>
<paragraph id="P-0268" lvl="0"><number>&lsqb;0268&rsqb;</number> The processing procedure of delivery threshold setting trial program <highlight><bold>2002</bold></highlight> has been described. </paragraph>
<paragraph id="P-0269" lvl="0"><number>&lsqb;0269&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 29</cross-reference>, description will be given in detail of a processing flow of a delivery threshold setting trial program <highlight><bold>2002</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 28</cross-reference>. </paragraph>
<paragraph id="P-0270" lvl="0"><number>&lsqb;0270&rsqb;</number> In step <highlight><bold>2500</bold></highlight>, program <highlight><bold>2002</bold></highlight> obtains delivery threshold value <highlight><bold>2600</bold></highlight> sent from user <highlight><bold>107</bold></highlight>. </paragraph>
<paragraph id="P-0271" lvl="0"><number>&lsqb;0271&rsqb;</number> In step <highlight><bold>2501</bold></highlight>, program <highlight><bold>2002</bold></highlight> acquires information <highlight><bold>2601</bold></highlight> of a text of which similarity is greater than threshold value <highlight><bold>2500</bold></highlight> obtained in step <highlight><bold>2500</bold></highlight> from area <highlight><bold>2003</bold></highlight>. In the example of <cross-reference target="DRAWINGS">FIG. 29</cross-reference>, the user of user identifier &ldquo;user <highlight><bold>1</bold></highlight>&rdquo; has specified 9.0 for the delivery threshold value and hence the contents and reception time of text <highlight><bold>1</bold></highlight> of which similarity is 10.0 (more than 9.0) are acquired from area <highlight><bold>2003</bold></highlight>. In this connection, &ldquo;User of user identifier &lsquo;user <highlight><bold>1</bold></highlight>&rsquo;&rdquo; indicates a user having a user identifier of &ldquo;user <highlight><bold>1</bold></highlight>&rdquo;. Although similarity stored in area <highlight><bold>2003</bold></highlight> is used in this embodiment, it is also possible that the texts in text save area <highlight><bold>2004</bold></highlight> is again scanned and similarity thereof is again calculated with respect to the retrieval condition of the user at the pertinent point of time to use a result of the calculation as similarity. </paragraph>
<paragraph id="P-0272" lvl="0"><number>&lsqb;0272&rsqb;</number> In step <highlight><bold>2502</bold></highlight>, program <highlight><bold>2002</bold></highlight> accesses text information stored in the text save area to obtain text information <highlight><bold>2602</bold></highlight> corresponding to the text identifier obtained in step <highlight><bold>2501</bold></highlight> and then outputs text information <highlight><bold>2602</bold></highlight> and similarity determination information <highlight><bold>2601</bold></highlight> also corresponding to the text identifier obtained in step <highlight><bold>2501</bold></highlight> to work area <highlight><bold>118</bold></highlight>. In this example, the similarity, the delivery time, and the contents of text of text <highlight><bold>1</bold></highlight> attained in step <highlight><bold>2501</bold></highlight> are outputted to work area <highlight><bold>118</bold></highlight>. It is also possible to output, in place of the contents of text, a first sentence of the contents of text to work area <highlight><bold>118</bold></highlight>. Alternatively, an attribute such as a title is present, such a title may be outputted to work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0273" lvl="0"><number>&lsqb;0273&rsqb;</number> In step <highlight><bold>2503</bold></highlight>, program <highlight><bold>2002</bold></highlight> transforms the information stored in work area <highlight><bold>118</bold></highlight> into a format which can be delivered by e-mail program <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0274" lvl="0"><number>&lsqb;0274&rsqb;</number> Assume that area <highlight><bold>2003</bold></highlight> contains information of texts delivered from news source <highlight><bold>106</bold></highlight> within the last 24 hours, a text title is outputted to area <highlight><bold>118</bold></highlight> in step <highlight><bold>2502</bold></highlight>, and user <highlight><bold>107</bold></highlight> desires reception of two texts within the last 24 hours. If user <highlight><bold>107</bold></highlight> specifies 10.0 as delivery threshold value <highlight><bold>2600</bold></highlight> for the trial, only one title (text <highlight><bold>1</bold></highlight>) is outputted to area <highlight><bold>118</bold></highlight>. If user specifies 6.0 as value <highlight><bold>2600</bold></highlight>, two text titles &ldquo;text <highlight><bold>1</bold></highlight>&rdquo; and &ldquo;text <highlight><bold>2</bold></highlight>&rdquo; are outputted to area <highlight><bold>118</bold></highlight>. As a result, if user <highlight><bold>107</bold></highlight> changes the delivery threshold value to 6.0 by delivery threshold update program <highlight><bold>2000</bold></highlight>, it can be expected that two texts are delivered within the subsequent 24 hours. </paragraph>
<paragraph id="P-0275" lvl="0"><number>&lsqb;0275&rsqb;</number> Assume the first sentence of the contents of text is outputted together with a title of text in area <highlight><bold>118</bold></highlight> In step <highlight><bold>2502</bold></highlight>. If threshold value <highlight><bold>2600</bold></highlight> is fully lowered, titles of texts and the first sentences of texts which have not been delivered because similarity thereof is less than the delivery threshold value are presented. User <highlight><bold>107</bold></highlight> checks the texts presented, and when user <highlight><bold>107</bold></highlight> detects a desired text, user <highlight><bold>107</bold></highlight> lowers the delivery threshold value below the similarity of the text by program <highlight><bold>2000</bold></highlight>. Resultantly, the delivery threshold value can be set such that all of the texts desired are delivered. </paragraph>
<paragraph id="P-0276" lvl="0"><number>&lsqb;0276&rsqb;</number> Using information outputted to area <highlight><bold>118</bold></highlight> in step <highlight><bold>2502</bold></highlight>, the system generates a graph of text similarity distribution in which the similarity and the text reception time are indicated respectively along the ordinate and the abscissa as described in conjunction with program <highlight><bold>2001</bold></highlight>. For example, as can be seen from <cross-reference target="DRAWINGS">FIG. 30</cross-reference>, of the texts delivered from news source <highlight><bold>106</bold></highlight> in the past, those having similarity exceeding trial delivery threshold value <highlight><bold>2600</bold></highlight> are presented in another color or with another symbol in the distribution graph. </paragraph>
<paragraph id="P-0277" lvl="0"><number>&lsqb;0277&rsqb;</number> In this example, it is known that if the delivery threshold value is set to the trial value, five texts are delivered within the last 24 hours. Therefore, it can be recognized that if the threshold value is set to the trial value, a similar amount of texts will be delivered within the subsequent 24 hours. As above, user <highlight><bold>107</bold></highlight> can visually and easily predict results of delivery in response to modification of trial delivery threshold value <highlight><bold>2600</bold></highlight>. It is therefore possible for user <highlight><bold>107</bold></highlight> to set an appropriate delivery threshold value. </paragraph>
<paragraph id="P-0278" lvl="0"><number>&lsqb;0278&rsqb;</number> The specific processing flow of delivery threshold setting trial program <highlight><bold>2002</bold></highlight> has been described. </paragraph>
<paragraph id="P-0279" lvl="0"><number>&lsqb;0279&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 31</cross-reference>, description will be given of a processing procedure of text retrieval and delivery control program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>initiated by the system control program in step <highlight><bold>304</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 22</cross-reference>. </paragraph>
<paragraph id="P-0280" lvl="0"><number>&lsqb;0280&rsqb;</number> Program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>determines for each user similarity of each text from news source <highlight><bold>106</bold></highlight> with respect to a retrieval condition of each user, determines delivery or non-delivery of the text for each user, and saves the contents of text and history of delivery determination of each user. </paragraph>
<paragraph id="P-0281" lvl="0"><number>&lsqb;0281&rsqb;</number> In step <highlight><bold>2700</bold></highlight>, program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>initiates text acquiring program <highlight><bold>13</bold></highlight><highlight><italic>a </italic></highlight>to store a text from news source <highlight><bold>106</bold></highlight> in work area <highlight><bold>118</bold></highlight>. Program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>further stores the contents of text and text reception time in text save area <highlight><bold>2004</bold></highlight>. </paragraph>
<paragraph id="P-0282" lvl="0"><number>&lsqb;0282&rsqb;</number> In step <highlight><bold>2701</bold></highlight>, program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>initiates text retrieval program <highlight><bold>131</bold></highlight> to retrieve a text stored in work area <highlight><bold>118</bold></highlight> to calculate similarity thereof with respect to a retrieval condition set by each user. Program <highlight><bold>131</bold></highlight> determines delivery or non-delivery of the text for each user and stores results of determination in area <highlight><bold>2003</bold></highlight>. </paragraph>
<paragraph id="P-0283" lvl="0"><number>&lsqb;0283&rsqb;</number> In step <highlight><bold>2702</bold></highlight>, program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>checks to determine whether or not at least one retrieval condition satisfying a predetermined condition is present. If such a retrieval condition is present, processing goes to step <highlight><bold>2703</bold></highlight>. </paragraph>
<paragraph id="P-0284" lvl="0"><number>&lsqb;0284&rsqb;</number> In step <highlight><bold>2703</bold></highlight>, program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>initiates text generator program <highlight><bold>132</bold></highlight> to transform the text in area <highlight><bold>118</bold></highlight> into a format for e-mail program <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0285" lvl="0"><number>&lsqb;0285&rsqb;</number> The processing procedure of program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>has been described. </paragraph>
<paragraph id="P-0286" lvl="0"><number>&lsqb;0286&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 32</cross-reference>, description will be given in detail of a processing procedure of program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>in the fourth embodiment of the present invention. </paragraph>
<paragraph id="P-0287" lvl="0"><number>&lsqb;0287&rsqb;</number> In step <highlight><bold>2700</bold></highlight>, program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>initiates text acquiring program <highlight><bold>130</bold></highlight><highlight><italic>a </italic></highlight>to store a text <highlight><bold>2810</bold></highlight> via e-mail or the like from news source <highlight><bold>106</bold></highlight> in work area <highlight><bold>118</bold></highlight>. Program <highlight><bold>130</bold></highlight><highlight><italic>a </italic></highlight>then assigns a text identifier to the text and stores the contents and reception time of text in text save area <highlight><bold>2004</bold></highlight>. </paragraph>
<paragraph id="P-0288" lvl="0"><number>&lsqb;0288&rsqb;</number> In step <highlight><bold>2800</bold></highlight>, the system executes steps <highlight><bold>700</bold></highlight> to <highlight><bold>702</bold></highlight> in a procedure described in conjunction with <cross-reference target="DRAWINGS">FIG. 7</cross-reference> of the first embodiment to store similarity in similarity control table <highlight><bold>117</bold></highlight>. </paragraph>
<paragraph id="P-0289" lvl="0"><number>&lsqb;0289&rsqb;</number> In step <highlight><bold>2801</bold></highlight>, identifiers of users of which similarity in table <highlight><bold>117</bold></highlight> exceeds delivery threshold values in user list <highlight><bold>115</bold></highlight><highlight><italic>b </italic></highlight>are passed to program <highlight><bold>112</bold></highlight><highlight><italic>a</italic></highlight>. Text identifiers, similarity calculated, delivery or non-delivery of text, current delivery threshold values are respectively stored in areas <highlight><bold>2003</bold></highlight> of the respective users. In this example, similarity is obtained as 10.0 for user <highlight><bold>1</bold></highlight>. Since this does not exceed delivery threshold value &ldquo;12.0&rdquo; of user <highlight><bold>1</bold></highlight> in user list <highlight><bold>115</bold></highlight><highlight><italic>b</italic></highlight>, the text is not delivered to user <highlight><bold>1</bold></highlight>. Similarity of &ldquo;6.6&rdquo; is calculated for user <highlight><bold>3</bold></highlight>. Since this value exceeds delivery threshold value &ldquo;5.0&rdquo; of user <highlight><bold>2</bold></highlight> in list <highlight><bold>115</bold></highlight><highlight><italic>b</italic></highlight>, the text is delivered to user <highlight><bold>3</bold></highlight>. Furthermore, information items such as text identifier &ldquo;text <highlight><bold>1</bold></highlight>&rdquo;, Delivery or non-delivery &ldquo;NO&rdquo;, and current threshold value &ldquo;12.0&rdquo; are stored in a field of user <highlight><bold>1</bold></highlight> in area <highlight><bold>2003</bold></highlight>. Processing is similarly conducted also for users <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 32</cross-reference>. These similarity determination information items are used in programs <highlight><bold>2001</bold></highlight> and <highlight><bold>2002</bold></highlight> as already described above. </paragraph>
<paragraph id="P-0290" lvl="0"><number>&lsqb;0290&rsqb;</number> In step <highlight><bold>2703</bold></highlight>, program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>transforms the information in work area <highlight><bold>118</bold></highlight> into a format for e-mail program <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0291" lvl="0"><number>&lsqb;0291&rsqb;</number> The processing procedure of program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>has been described. </paragraph>
<paragraph id="P-0292" lvl="0"><number>&lsqb;0292&rsqb;</number> Description has been given of the respective programs of the fourth embodiment. </paragraph>
<paragraph id="P-0293" lvl="0"><number>&lsqb;0293&rsqb;</number> As above, the texts received from the news delivery source and history of similarity calculation for each user are saved in the embodiment above. When the user sets a delivery threshold value, these information items are presented to the user. Therefore, the user can set an appropriate delivery threshold value by referring to the information. When it is necessary to modify a delivery threshold value initialized, it is possible for the user to set an appropriate delivery threshold value to receive all necessary texts without noise. This resultantly solves the problem of the prior art concerning the retrieval leakage and retrieval noise. </paragraph>
<paragraph id="P-0294" lvl="0"><number>&lsqb;0294&rsqb;</number> The delivery text selection described in this embodiment is not limited to the retrieval method of the finite automaton or the extended BM method. Namely, the selection method is similarly applicable to a system using other retrieval methods. </paragraph>
<paragraph id="P-0295" lvl="0"><number>&lsqb;0295&rsqb;</number> The delivery text selection described in this embodiment is not limited to the similarity calculation method for the text with respect to retrieval conditions, but may be similarly used for the similarity calculation method of the first to third embodiments as well as other similarity calculation methods. </paragraph>
<paragraph id="P-0296" lvl="0"><number>&lsqb;0296&rsqb;</number> Next, description will be given of a fifth embodiment of the present invention. </paragraph>
<paragraph id="P-0297" lvl="0"><number>&lsqb;0297&rsqb;</number> In the configuration of the fourth embodiment, the program refers to the history of similarity calculation in the past to set an appropriate delivery threshold value. However, this cannot completely cope with the text delivery state which continuously changes with respect to time. For example, even if the delivery threshold value is increased because a large amount of texts are delivered during a period of time, there may occur thereafter a period of time in which the number of texts of which similarity exceeds the delivery threshold value and texts are not delivered to the user as a result. This leads to a problem that the user cannot understand whether or not texts desired are present or whether the delivery threshold value set is too great. </paragraph>
<paragraph id="P-0298" lvl="0"><number>&lsqb;0298&rsqb;</number> To solve this problem in accordance with the fifth embodiment of a document retrieving and delivering system of the present invention, in addition to texts of which similarity exceeds the delivery threshold value set by the user, the number of texts specified by the user is delivered to the user (to be referred to as additional delivery). </paragraph>
<paragraph id="P-0299" lvl="0"><number>&lsqb;0299&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> shows a system configuration of the fifth embodiment of the present invention. </paragraph>
<paragraph id="P-0300" lvl="0"><number>&lsqb;0300&rsqb;</number> This embodiment is almost the same in constitution with the fourth embodiment shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>. The fifth embodiment additionally includes an additional delivery text count setting program <highlight><bold>2900</bold></highlight> and a text additional delivery program <highlight><bold>2901</bold></highlight>. </paragraph>
<paragraph id="P-0301" lvl="0"><number>&lsqb;0301&rsqb;</number> In the fifth embodiment, program <highlight><bold>2901</bold></highlight> additionally delivers texts to users by referring to information in areas <highlight><bold>2003</bold></highlight> and <highlight><bold>2004</bold></highlight>. The number of texts additionally delivered is set by program <highlight><bold>2900</bold></highlight>. </paragraph>
<paragraph id="P-0302" lvl="0"><number>&lsqb;0302&rsqb;</number> In the description below, it is assumed that the user sends a request to set the number of additional texts via e-mail. However, other network applications such as the Web browser may be used to send the request to this system. Moreover, it is assumed that the additional texts are delivered from the system via e-mail to the user. However, other network applications such as the Web browser may be used for this purpose. </paragraph>
<paragraph id="P-0303" lvl="0"><number>&lsqb;0303&rsqb;</number> Description will now be given of processing procedures of respective programs of the fifth embodiment. </paragraph>
<paragraph id="P-0304" lvl="0"><number>&lsqb;0304&rsqb;</number> Referring to the PAD of <cross-reference target="DRAWINGS">FIG. 34</cross-reference>, description will be given of system control program <highlight><bold>110</bold></highlight><highlight><italic>b </italic></highlight>of the fifth embodiment. </paragraph>
<paragraph id="P-0305" lvl="0"><number>&lsqb;0305&rsqb;</number> The processing procedure of program <highlight><bold>110</bold></highlight><highlight><italic>b </italic></highlight>of this embodiment is implemented by adding steps <highlight><bold>3000</bold></highlight> to <highlight><bold>3003</bold></highlight> to that of system control program <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>of the fourth embodiment. </paragraph>
<paragraph id="P-0306" lvl="0"><number>&lsqb;0306&rsqb;</number> In step <highlight><bold>3000</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>b </italic></highlight>determines whether or not a request to set the number of additional delivery texts has been received from user <highlight><bold>107</bold></highlight>. If such a request is present, program <highlight><bold>110</bold></highlight><highlight><italic>b </italic></highlight>initiates program <highlight><bold>2900</bold></highlight> in step <highlight><bold>3002</bold></highlight> to set the number of additional delivery texts for the user. </paragraph>
<paragraph id="P-0307" lvl="0"><number>&lsqb;0307&rsqb;</number> In step <highlight><bold>3001</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>b </italic></highlight>determines whether or not the current or present time satisfies a predetermined condition. If the time satisfies the condition, program <highlight><bold>10</bold></highlight><highlight><italic>b </italic></highlight>initiates program <highlight><bold>2901</bold></highlight> in step <highlight><bold>3003</bold></highlight>. It is possible to initiate program <highlight><bold>2901</bold></highlight> by setting, for example, a condition &ldquo;initiate program <highlight><bold>2901</bold></highlight> at 0:00 every day&rdquo;. </paragraph>
<paragraph id="P-0308" lvl="0"><number>&lsqb;0308&rsqb;</number> The processing procedure of program <highlight><bold>110</bold></highlight><highlight><italic>b </italic></highlight>has been described. </paragraph>
<paragraph id="P-0309" lvl="0"><number>&lsqb;0309&rsqb;</number> Referring next to the PAD of <cross-reference target="DRAWINGS">FIG. 35</cross-reference>, description will be given of a processing procedure of program <highlight><bold>2900</bold></highlight> initiated by program <highlight><bold>110</bold></highlight><highlight><italic>b </italic></highlight>in step <highlight><bold>3002</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 34</cross-reference>. </paragraph>
<paragraph id="P-0310" lvl="0"><number>&lsqb;0310&rsqb;</number> In step <highlight><bold>3100</bold></highlight>, program <highlight><bold>2900</bold></highlight> acquires the number of additional delivery texts received via e-mail from user <highlight><bold>107</bold></highlight>. </paragraph>
<paragraph id="P-0311" lvl="0"><number>&lsqb;0311&rsqb;</number> In step <highlight><bold>3101</bold></highlight>, program <highlight><bold>2900</bold></highlight> updates the number of additional delivery texts of user list <highlight><bold>115</bold></highlight><highlight><italic>c </italic></highlight>for the user. In user list <highlight><bold>115</bold></highlight><highlight><italic>c</italic></highlight>, the initial value of the number of additional delivery texts may be beforehand determined by the manager or may be inputted when user <highlight><bold>107</bold></highlight> registers a retrieval condition. </paragraph>
<paragraph id="P-0312" lvl="0"><number>&lsqb;0312&rsqb;</number> The processing procedure of program <highlight><bold>2900</bold></highlight> has been described. </paragraph>
<paragraph id="P-0313" lvl="0"><number>&lsqb;0313&rsqb;</number> Referring next to the PAD of <cross-reference target="DRAWINGS">FIG. 36</cross-reference>, description will be given of a processing procedure of program <highlight><bold>2901</bold></highlight> initiated by program <highlight><bold>110</bold></highlight><highlight><italic>b </italic></highlight>in step <highlight><bold>3003</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 34</cross-reference>. </paragraph>
<paragraph id="P-0314" lvl="0"><number>&lsqb;0314&rsqb;</number> Program <highlight><bold>2901</bold></highlight> additionally delivers texts of which similarity does not exceed the delivery threshold value so that the user receives a desired number of texts. </paragraph>
<paragraph id="P-0315" lvl="0"><number>&lsqb;0315&rsqb;</number> In step <highlight><bold>3200</bold></highlight>, program <highlight><bold>2901</bold></highlight> repeatedly executes step <highlight><bold>3201</bold></highlight> to <highlight><bold>3204</bold></highlight> for all users in user list <highlight><bold>115</bold></highlight><highlight><italic>c. </italic></highlight></paragraph>
<paragraph id="P-0316" lvl="0"><number>&lsqb;0316&rsqb;</number> In step <highlight><bold>3201</bold></highlight>, program <highlight><bold>2901</bold></highlight> reads from list <highlight><bold>115</bold></highlight><highlight><italic>c </italic></highlight>additional delivery texts desired by the user. </paragraph>
<paragraph id="P-0317" lvl="0"><number>&lsqb;0317&rsqb;</number> In step <highlight><bold>3202</bold></highlight>, program <highlight><bold>2901</bold></highlight> accesses area <highlight><bold>2003</bold></highlight> and obtains, in a similarity descending sequence, similarity determination information from the texts not delivered to the user within a predetermined period of time in the past, the number of texts being equal to that of texts read in step <highlight><bold>3201</bold></highlight>. </paragraph>
<paragraph id="P-0318" lvl="0"><number>&lsqb;0318&rsqb;</number> In step <highlight><bold>3203</bold></highlight>, program <highlight><bold>2901</bold></highlight> reads from area <highlight><bold>2004</bold></highlight> the contents of texts corresponding to text identifiers attained in step <highlight><bold>3202</bold></highlight> and then outputs the contents of texts and the similarity determination information obtained in step <highlight><bold>3202</bold></highlight> to work area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0319" lvl="0"><number>&lsqb;0319&rsqb;</number> In step <highlight><bold>3204</bold></highlight>, program <highlight><bold>2901</bold></highlight> transforms the contents of texts in work area into a format for e-mail program <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0320" lvl="0"><number>&lsqb;0320&rsqb;</number> E-mail program <highlight><bold>113</bold></highlight> then delivers the information stored in area <highlight><bold>118</bold></highlight> to the user. </paragraph>
<paragraph id="P-0321" lvl="0"><number>&lsqb;0321&rsqb;</number> The processing procedure of program <highlight><bold>2901</bold></highlight> has been described. </paragraph>
<paragraph id="P-0322" lvl="0"><number>&lsqb;0322&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 37</cross-reference>, description will be given in detail of a processing flow of program <highlight><bold>2901</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 36</cross-reference>. </paragraph>
<paragraph id="P-0323" lvl="0"><number>&lsqb;0323&rsqb;</number> In this example, program <highlight><bold>110</bold></highlight><highlight><italic>b </italic></highlight>initiates program <highlight><bold>2901</bold></highlight> at an interval of 24 hours. However, program <highlight><bold>2901</bold></highlight> may be initiated at another interval of time or at a predetermined point of time. Moreover, the program initiating time can be set for each user. </paragraph>
<paragraph id="P-0324" lvl="0"><number>&lsqb;0324&rsqb;</number> In the processing of program <highlight><bold>2901</bold></highlight>, steps <highlight><bold>3201</bold></highlight> to <highlight><bold>3204</bold></highlight> are repeatedly executed for all users as follows. </paragraph>
<paragraph id="P-0325" lvl="0"><number>&lsqb;0325&rsqb;</number> In step <highlight><bold>3201</bold></highlight>, program <highlight><bold>2901</bold></highlight> acquires the number of additional delivery texts for each predetermined period of time from user list <highlight><bold>115</bold></highlight><highlight><italic>c</italic></highlight>. In this example, user <highlight><bold>107</bold></highlight> desires that two texts are additionally delivered at an interval of 24 hours. </paragraph>
<paragraph id="P-0326" lvl="0"><number>&lsqb;0326&rsqb;</number> In step <highlight><bold>3202</bold></highlight>, program <highlight><bold>2901</bold></highlight> obtains in the similarity descending order from area <highlight><bold>2003</bold></highlight> the desired number of text identifiers of texts not delivered to the user. In this example, from texts <highlight><bold>2</bold></highlight>, <highlight><bold>4</bold></highlight>, and <highlight><bold>5</bold></highlight> not delivered to user <highlight><bold>107</bold></highlight> within the past 24 hours, program <highlight><bold>2901</bold></highlight> selects texts having two larger similarity values, i.e., texts <highlight><bold>2</bold></highlight> and <highlight><bold>5</bold></highlight> to read therefrom text identifiers and similarity of texts <highlight><bold>2</bold></highlight> and <highlight><bold>5</bold></highlight>. In this regard, it is also possible to add a delivery threshold modification presentation step after step <highlight><bold>3202</bold></highlight>. In the presentation step, program <highlight><bold>2901</bold></highlight> counts the number of texts delivered to the user. If the count value is less than a predetermined value, program <highlight><bold>2901</bold></highlight> outputs a predetermined warning message to lower the delivery threshold value to be sent to the user. If the count value is more than a predetermined value, program <highlight><bold>2901</bold></highlight> outputs a predetermined warning message to increase the delivery threshold value to work area <highlight><bold>118</bold></highlight> to send the message to the user. </paragraph>
<paragraph id="P-0327" lvl="0"><number>&lsqb;0327&rsqb;</number> In step <highlight><bold>3203</bold></highlight>, program <highlight><bold>2901</bold></highlight> reads from area <highlight><bold>2004</bold></highlight> text information corresponding to the text identifiers obtained in step <highlight><bold>3202</bold></highlight>. Program <highlight><bold>2901</bold></highlight> outputs the text information and similarity determination information obtained in step <highlight><bold>3202</bold></highlight> to work area <highlight><bold>118</bold></highlight>. In this example, program <highlight><bold>2901</bold></highlight> outputs the reception time, the similarity, and the contents respectively of texts <highlight><bold>2</bold></highlight> and <highlight><bold>5</bold></highlight> to area <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0328" lvl="0"><number>&lsqb;0328&rsqb;</number> In step <highlight><bold>3204</bold></highlight>, program <highlight><bold>2901</bold></highlight> transforms the information in area <highlight><bold>118</bold></highlight> into a format which can be delivered by e-mail program <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0329" lvl="0"><number>&lsqb;0329&rsqb;</number> The specific processing flow of program <highlight><bold>2901</bold></highlight> has been described. </paragraph>
<paragraph id="P-0330" lvl="0"><number>&lsqb;0330&rsqb;</number> Description has been given of the processing flows of respective programs of the fifth embodiment. </paragraph>
<paragraph id="P-0331" lvl="0"><number>&lsqb;0331&rsqb;</number> In accordance with the configuration of the fifth embodiment of the present invention, all texts received from the news delivery source and the history of similarity calculation of each user are saved such that texts of which similarity is equal to or less than the delivery threshold value are additionally delivered in the similarity descending order. Resultantly, even when the number of texts of which similarity exceeds the delivery threshold value set by the user is less than that of texts desired by the user, a predetermined number of texts can be additionally delivered to the user. Therefore, when no text is delivered to the user, the user can understand whether or not desired texts are absent or whether or not the delivery threshold value is too great. </paragraph>
<paragraph id="P-0332" lvl="0"><number>&lsqb;0332&rsqb;</number> In the fifth embodiment, the number of texts set by the user are additionally delivered in addition to the texts of which similarity exceeds the delivery threshold value set by the user. However, there may be used a method in which the additional text delivery is conducted such that the total of the number of texts of which similarity exceeds the delivery threshold value set by the user and that of texts to be additionally exceeded satisfies a condition of a number set by the user. </paragraph>
<paragraph id="P-0333" lvl="0"><number>&lsqb;0333&rsqb;</number> Description will now be given of the sixth embodiment of the present invention. </paragraph>
<paragraph id="P-0334" lvl="0"><number>&lsqb;0334&rsqb;</number> In the fourth embodiment, although the delivery threshold value can be changed to a suitable value, it is difficult to appropriately initialize the delivery threshold value. For example, when a retrieval condition is set to a new value, similarity of a text desired by the user with respect to the retrieval condition is unknown to the user. </paragraph>
<paragraph id="P-0335" lvl="0"><number>&lsqb;0335&rsqb;</number> In the fourth and fifth embodiments, the delivery threshold value is set to an appropriate value for the text delivery state changing at every moment. This leads to a problem that the user must quite frequently modify the delivery threshold value. </paragraph>
<paragraph id="P-0336" lvl="0"><number>&lsqb;0336&rsqb;</number> To solve the problem above in accordance with the sixth embodiment of a document retrieving and delivering system of the present invention, the user sets a desired number of delivery texts and the system appropriately modifies the delivery threshold value according to the number of delivery texts set by the user. </paragraph>
<paragraph id="P-0337" lvl="0"><number>&lsqb;0337&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 38</cross-reference> shows a system configuration of the sixth embodiment in accordance with the present invention. </paragraph>
<paragraph id="P-0338" lvl="0"><number>&lsqb;0338&rsqb;</number> This embodiment is substantially equal in constitution to the first embodiment of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. As can be seen from <cross-reference target="DRAWINGS">FIG. 38</cross-reference>, the sixth embodiment additionally includes a desired delivery count setting program <highlight><bold>3400</bold></highlight>, a delivery threshold automatic setting program <highlight><bold>3401</bold></highlight>, and a saved text retrieval program <highlight><bold>3402</bold></highlight>. </paragraph>
<paragraph id="P-0339" lvl="0"><number>&lsqb;0339&rsqb;</number> Moreover, the embodiment includes areas <highlight><bold>2003</bold></highlight> and <highlight><bold>2004</bold></highlight> employed in the fourth embodiment. </paragraph>
<paragraph id="P-0340" lvl="0"><number>&lsqb;0340&rsqb;</number> Text delivery determination program <highlight><bold>152</bold></highlight><highlight><italic>a </italic></highlight>under text retrieval program <highlight><bold>131</bold></highlight> is that used in the fourth embodiment. </paragraph>
<paragraph id="P-0341" lvl="0"><number>&lsqb;0341&rsqb;</number> In the sixth embodiment, program <highlight><bold>3401</bold></highlight> sets an appropriate delivery threshold value for each user according to information in areas <highlight><bold>2003</bold></highlight> and <highlight><bold>2004</bold></highlight> and the desired delivery count set by program <highlight><bold>3400</bold></highlight> in response to a request from the user. Program <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>refers to the delivery threshold value to determine whether or not a text received is to be sent to the pertinent user. </paragraph>
<paragraph id="P-0342" lvl="0"><number>&lsqb;0342&rsqb;</number> For the user of which personal similarity determination information has not been saved, for example, because a new retrieval condition is registered, program <highlight><bold>3402</bold></highlight> calculates similarity of a text saved in area <highlight><bold>2004</bold></highlight> and stores the similarity in area <highlight><bold>2003</bold></highlight>. </paragraph>
<paragraph id="P-0343" lvl="0"><number>&lsqb;0343&rsqb;</number> Description will be given of processing procedures of respective programs of the sixth embodiment. </paragraph>
<paragraph id="P-0344" lvl="0"><number>&lsqb;0344&rsqb;</number> Referring to the PAD of <cross-reference target="DRAWINGS">FIG. 39</cross-reference>, description will be given of a processing procedure of program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>in the sixth embodiment. </paragraph>
<paragraph id="P-0345" lvl="0"><number>&lsqb;0345&rsqb;</number> The processing procedure of program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>of the sixth embodiment is almost the same as that of system control program <highlight><bold>110</bold></highlight> of the first embodiment. However, the sixth embodiment includes additional steps <highlight><bold>3500</bold></highlight> to <highlight><bold>3504</bold></highlight>. </paragraph>
<paragraph id="P-0346" lvl="0"><number>&lsqb;0346&rsqb;</number> After step <highlight><bold>303</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>initiates desired delivery count setting program <highlight><bold>3400</bold></highlight> in step <highlight><bold>3502</bold></highlight>. </paragraph>
<paragraph id="P-0347" lvl="0"><number>&lsqb;0347&rsqb;</number> In step <highlight><bold>3503</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>initiates saved text retrieval program <highlight><bold>3402</bold></highlight>. </paragraph>
<paragraph id="P-0348" lvl="0"><number>&lsqb;0348&rsqb;</number> In step <highlight><bold>3503</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>initiates saved text retrieval program <highlight><bold>3402</bold></highlight>. </paragraph>
<paragraph id="P-0349" lvl="0"><number>&lsqb;0349&rsqb;</number> In step <highlight><bold>3504</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>initiates delivery threshold automatic setting program <highlight><bold>3401</bold></highlight>. </paragraph>
<paragraph id="P-0350" lvl="0"><number>&lsqb;0350&rsqb;</number> During the iterative processing in step <highlight><bold>300</bold></highlight>, after steps <highlight><bold>301</bold></highlight> and <highlight><bold>302</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>checks in step <highlight><bold>3500</bold></highlight> to determine whether or not a setting request for count of delivery texts within a predetermined period of time has been received from user <highlight><bold>107</bold></highlight>. If such a request has been received, program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>initiates program <highlight><bold>3400</bold></highlight> in step <highlight><bold>3505</bold></highlight>. </paragraph>
<paragraph id="P-0351" lvl="0"><number>&lsqb;0351&rsqb;</number> In step <highlight><bold>3501</bold></highlight>, program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>determines whether or not the current time is a point of time satisfying a predetermined condition. If the current time satisfies the condition, program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>initiates program <highlight><bold>3401</bold></highlight> in step <highlight><bold>3506</bold></highlight>. For example, &ldquo;initiate program <highlight><bold>3401</bold></highlight> at 0:00 every day&rdquo; may be set to initiate program <highlight><bold>3401</bold></highlight>. </paragraph>
<paragraph id="P-0352" lvl="0"><number>&lsqb;0352&rsqb;</number> The processing procedure of program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>has been described. </paragraph>
<paragraph id="P-0353" lvl="0"><number>&lsqb;0353&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 40</cross-reference>, description will be given of program <highlight><bold>3400</bold></highlight> initiated by program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>in step <highlight><bold>3502</bold></highlight> or <highlight><bold>3505</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 39</cross-reference>. </paragraph>
<paragraph id="P-0354" lvl="0"><number>&lsqb;0354&rsqb;</number> In step <highlight><bold>3600</bold></highlight>, program <highlight><bold>3400</bold></highlight> acquires from user <highlight><bold>107</bold></highlight> a specified period of time and a desired number of texts to be delivered for each specified period of time. </paragraph>
<paragraph id="P-0355" lvl="0"><number>&lsqb;0355&rsqb;</number> In step <highlight><bold>3601</bold></highlight>, program <highlight><bold>3400</bold></highlight> updates, according to a user identifier of the user, the specified period of time and the desired number of delivery texts in user list <highlight><bold>115</bold></highlight> according to the values obtained in step <highlight><bold>3600</bold></highlight>. The specified period of time and the desired number of delivery texts in user list <highlight><bold>115</bold></highlight> may be specified by the manager or may be set when user <highlight><bold>107</bold></highlight> registers a retrieval condition. </paragraph>
<paragraph id="P-0356" lvl="0"><number>&lsqb;0356&rsqb;</number> The processing procedure of program <highlight><bold>3400</bold></highlight> has been described. </paragraph>
<paragraph id="P-0357" lvl="0"><number>&lsqb;0357&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 41</cross-reference>, description will be given of program <highlight><bold>3402</bold></highlight> initiated by program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>in step <highlight><bold>3503</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 39</cross-reference>. </paragraph>
<paragraph id="P-0358" lvl="0"><number>&lsqb;0358&rsqb;</number> Program <highlight><bold>3402</bold></highlight> calculates similarity of a text saved when the history of similarity calculation is absent, for example, immediately after a new retrieval condition is registered. </paragraph>
<paragraph id="P-0359" lvl="0"><number>&lsqb;0359&rsqb;</number> In step <highlight><bold>3700</bold></highlight>, program <highlight><bold>3402</bold></highlight> repeatedly executes steps <highlight><bold>3701</bold></highlight> and <highlight><bold>3702</bold></highlight> for all texts saved in area <highlight><bold>2004</bold></highlight>. </paragraph>
<paragraph id="P-0360" lvl="0"><number>&lsqb;0360&rsqb;</number> In step <highlight><bold>3701</bold></highlight>, program <highlight><bold>3402</bold></highlight> initiates programs <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight> to calculate similarity of a text for a retrieval condition registered by program <highlight><bold>111</bold></highlight>. </paragraph>
<paragraph id="P-0361" lvl="0"><number>&lsqb;0361&rsqb;</number> In step <highlight><bold>3702</bold></highlight>, program <highlight><bold>3402</bold></highlight> stores the similarity calculated in step <highlight><bold>3701</bold></highlight> in area <highlight><bold>2003</bold></highlight>. </paragraph>
<paragraph id="P-0362" lvl="0"><number>&lsqb;0362&rsqb;</number> The processing procedure of program <highlight><bold>3402</bold></highlight> has been described. </paragraph>
<paragraph id="P-0363" lvl="0"><number>&lsqb;0363&rsqb;</number> Referring now to the PAD of <cross-reference target="DRAWINGS">FIG. 42</cross-reference>, description will be given of program <highlight><bold>3401</bold></highlight> initiated by program <highlight><bold>110</bold></highlight><highlight><italic>c </italic></highlight>in step <highlight><bold>3504</bold></highlight> or <highlight><bold>3506</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 39</cross-reference>. </paragraph>
<paragraph id="P-0364" lvl="0"><number>&lsqb;0364&rsqb;</number> Program <highlight><bold>3401</bold></highlight> sets an appropriate delivery threshold value for each user according to a distribution of similarity calculated for texts received in the past. </paragraph>
<paragraph id="P-0365" lvl="0"><number>&lsqb;0365&rsqb;</number> In step <highlight><bold>3800</bold></highlight>, program <highlight><bold>3401</bold></highlight> repeatedly executes steps <highlight><bold>3801</bold></highlight> and <highlight><bold>3804</bold></highlight> for all users in user list <highlight><bold>151</bold></highlight><highlight><italic>d. </italic></highlight></paragraph>
<paragraph id="P-0366" lvl="0"><number>&lsqb;0366&rsqb;</number> In step <highlight><bold>3801</bold></highlight>, program <highlight><bold>3401</bold></highlight> acquires for a user a specified period of time and a number of delivery texts per specified period of time associated with the user from user list <highlight><bold>115</bold></highlight><highlight><italic>d. </italic></highlight></paragraph>
<paragraph id="P-0367" lvl="0"><number>&lsqb;0367&rsqb;</number> In step <highlight><bold>3802</bold></highlight>, program <highlight><bold>3401</bold></highlight> accesses area <highlight><bold>2003</bold></highlight> to read therefrom, according to a user identifier of the user, personal similarity determination information of the user for a text received from news source <highlight><bold>106</bold></highlight> within a predetermined period of time in the past. </paragraph>
<paragraph id="P-0368" lvl="0"><number>&lsqb;0368&rsqb;</number> In step <highlight><bold>3803</bold></highlight>, program <highlight><bold>3401</bold></highlight> calculates a new delivery threshold value according to a predetermined calculation formula using the information obtained in step <highlight><bold>3802</bold></highlight>. </paragraph>
<paragraph id="P-0369" lvl="0"><number>&lsqb;0369&rsqb;</number> In step <highlight><bold>3804</bold></highlight>, program <highlight><bold>3401</bold></highlight> sets the threshold value calculated in step <highlight><bold>3803</bold></highlight> to a delivery value field of the user in user list <highlight><bold>115</bold></highlight><highlight><italic>d. </italic></highlight></paragraph>
<paragraph id="P-0370" lvl="0"><number>&lsqb;0370&rsqb;</number> The processing procedure of program <highlight><bold>3401</bold></highlight> has been described. </paragraph>
<paragraph id="P-0371" lvl="0"><number>&lsqb;0371&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 43</cross-reference>, description will be given in detail of a processing flow of program <highlight><bold>3401</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 42</cross-reference>. </paragraph>
<paragraph id="P-0372" lvl="0"><number>&lsqb;0372&rsqb;</number> In this example, program <highlight><bold>3401</bold></highlight> is initiated at an interval of 24 hours by program <highlight><bold>110</bold></highlight><highlight><italic>c</italic></highlight>. However, the interval of time may be changed or the program <highlight><bold>3401</bold></highlight> may be initiated at a predetermined point of time. Moreover, the initiating time may be set for each user. </paragraph>
<paragraph id="P-0373" lvl="0"><number>&lsqb;0373&rsqb;</number> In processing of program <highlight><bold>3401</bold></highlight>, steps <highlight><bold>3801</bold></highlight> to <highlight><bold>3804</bold></highlight> are repeatedly executed for all users. </paragraph>
<paragraph id="P-0374" lvl="0"><number>&lsqb;0374&rsqb;</number> In step <highlight><bold>3801</bold></highlight>, program <highlight><bold>3401</bold></highlight> acquires for a user a specified period of time and a desired number of delivery texts from user list <highlight><bold>115</bold></highlight><highlight><italic>d</italic></highlight>. In this example, user <highlight><bold>1</bold></highlight> requests that four texts are delivered per 48 hours, and hence program <highlight><bold>3401</bold></highlight> acquires information of &ldquo;48 hours&rdquo; as the specified period of time and &ldquo;four&rdquo; as the desired number of delivery texts. </paragraph>
<paragraph id="P-0375" lvl="0"><number>&lsqb;0375&rsqb;</number> In step <highlight><bold>3802</bold></highlight>, program <highlight><bold>3401</bold></highlight> accesses area <highlight><bold>2003</bold></highlight> to read similarity for user <highlight><bold>107</bold></highlight> from personal similarity determination information within a specified period of time in the past. In this example, program <highlight><bold>3401</bold></highlight> obtains similarity values &ldquo;10.0&rdquo;, &ldquo;5.0&rdquo;, and &ldquo;7.0&rdquo; respectively for texts <highlight><bold>1</bold></highlight> to <highlight><bold>3</bold></highlight> delivered within 24 hours in the past. </paragraph>
<paragraph id="P-0376" lvl="0"><number>&lsqb;0376&rsqb;</number> In step <highlight><bold>3803</bold></highlight>, program <highlight><bold>3401</bold></highlight> calculates a new delivery threshold value according to a predetermined calculation method using the similarity obtained in step <highlight><bold>3802</bold></highlight>. In this example, the condition of &ldquo;four texts per 48 hours&rdquo; is transformed into a condition of &ldquo;two texts per 24 hours&rdquo;. According to the similarity values obtained in step <highlight><bold>3802</bold></highlight>, an average, i.e., &ldquo;6.0&rdquo; of two high-order similarity &ldquo;7.0&rdquo; and the subsequent similarity &ldquo;5.0&rdquo; is calculated as the new delivery threshold value. Other calculation methods may be used to attain the delivery threshold value in step <highlight><bold>3803</bold></highlight>. </paragraph>
<paragraph id="P-0377" lvl="0"><number>&lsqb;0377&rsqb;</number> In step <highlight><bold>3804</bold></highlight>, program <highlight><bold>3401</bold></highlight> stores the value attained in step <highlight><bold>3803</bold></highlight> as a delivery threshold value of the user in list <highlight><bold>115</bold></highlight><highlight><italic>d. </italic></highlight></paragraph>
<paragraph id="P-0378" lvl="0"><number>&lsqb;0378&rsqb;</number> The specific processing flow of program <highlight><bold>3401</bold></highlight> has been described. </paragraph>
<paragraph id="P-0379" lvl="0"><number>&lsqb;0379&rsqb;</number> Description has been given of processing procedures of respective program in the sixth embodiment. </paragraph>
<paragraph id="P-0380" lvl="0"><number>&lsqb;0380&rsqb;</number> In accordance with the sixth embodiment above, the history of similarity calculation conducted for user in the past is saved such that the system automatically correct delivery threshold values using the historical information saved. The delivery threshold value can be set to a suitable value for each user, which consequently relieves the users from the troublesome operation to frequently modify the delivery threshold value. This solves the problem that the user frequently modifies the delivery threshold value to set an appropriate delivery threshold value due to change in the text delivery state. </paragraph>
<paragraph id="P-0381" lvl="0"><number>&lsqb;0381&rsqb;</number> Also when a new retrieval condition is set, the texts in the past are scanned to calculate an appropriate similarity value for the retrieval condition. Therefore, an appropriate delivery threshold value can be calculated and is set in the system. This accordingly removes the problem in which the user cannot predict similarity of a particular text with respect to the new retrieval condition. </paragraph>
<paragraph id="P-0382" lvl="0"><number>&lsqb;0382&rsqb;</number> It is also possible to install programs <highlight><bold>2000</bold></highlight> to <highlight><bold>2002</bold></highlight> of the fourth and fifth embodiments and programs <highlight><bold>3400</bold></highlight> to <highlight><bold>3402</bold></highlight> of the sixth embodiment in one system. In such a configuration, by additionally installing a delivery condition setting mode selection program in which a user or a system manager selects and registers either one of the systems associated with the embodiments above for subsequent operation, the system user can appropriately select the setting of the delivery threshold value or the setting of the number of delivery texts. </paragraph>
<paragraph id="P-0383" lvl="0"><number>&lsqb;0383&rsqb;</number> The selection of delivery texts described in the embodiments is not limited to the text retrieval method using the finite automaton or the extended BM method, but is also applicable to any system using other retrieval methods. </paragraph>
<paragraph id="P-0384" lvl="0"><number>&lsqb;0384&rsqb;</number> The selection of delivery texts in the embodiments above is not limited to the text similarity calculation for a retrieval condition, but can be also used in the similarity calculation described in conjunction with the first to third embodiments and in other similarity calculation. </paragraph>
<paragraph id="P-0385" lvl="0"><number>&lsqb;0385&rsqb;</number> In the first to sixth embodiments, the document retrieving and delivering system including display <highlight><bold>100</bold></highlight>, keyboard <highlight><bold>101</bold></highlight>, CPU <highlight><bold>102</bold></highlight>, memory <highlight><bold>104</bold></highlight>, and bus <highlight><bold>103</bold></highlight> connecting these constituent components to each other may be arranged at any position on the network, namely, at a position between news source <highlight><bold>106</bold></highlight> and communication line <highlight><bold>105</bold></highlight>, communication line <highlight><bold>105</bold></highlight> and user <highlight><bold>107</bold></highlight>, or the like in <cross-reference target="DRAWINGS">FIGS. 1, 21</cross-reference>, <highlight><bold>33</bold></highlight>, and <highlight><bold>38</bold></highlight>. </paragraph>
<paragraph id="P-0386" lvl="0"><number>&lsqb;0386&rsqb;</number> In accordance with the present invention, similarity of a text is calculated for retrieval conditions of a plurality of users and is compared with a delivery threshold value for each user, and hence a text having high similarity can be delivered to a user requesting more important information. </paragraph>
<paragraph id="P-0387" lvl="0"><number>&lsqb;0387&rsqb;</number> While the present invention has been described with reference to the particular illustrative embodiments, it is not to be restricted by those embodiments but only by the appended claims. It is to be appreciated that those skilled in the art can change or modify the embodiments without departing from the scope and spirit of the present invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A document retrieving and delivering method: comprising the steps of: 
<claim-text>registering retrieval conditions inputted from a plurality of users; and </claim-text>
<claim-text>retrieving, from texts of document information inputted, texts satisfying the retrieval conditions and delivering the texts to the users associated therewith, wherein 
<claim-text>the retrieval and delivery step includes the steps of: 
<claim-text>calculating similarity of the text for the retrieval condition; </claim-text>
<claim-text>determining according to the similarity whether or not the retrieval condition is satisfied; and </claim-text>
<claim-text>delivering, when the retrieval condition is satisfied, the text to the user corresponding to the retrieval condition. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>the retrieval condition registration step comprises the steps of: 
<claim-text>reading a word, a sentence, or a document (to be referred to as a seed document herebelow) from the retrieval conditions registered by the users; </claim-text>
<claim-text>analyzing seed documents registered in the seed document read step and extracting retrieval terms therefrom for retrieval; </claim-text>
<claim-text>registering, for each retrieval term extracted in the retrieval term extraction step, a user identifier of a user having specified a seed document read in the seed document read step; and </claim-text>
<claim-text>registering a delivery condition written by each user in the retrieval condition and </claim-text>
</claim-text>
<claim-text>the text retrieval and delivery step comprises the following steps of: 
<claim-text>retrieving, for each text, a retrieval term extracted by the retrieval term extraction step; </claim-text>
<claim-text>obtaining the user identifier registered for the retrieval term retrieved in the retrieval term retrieval step; </claim-text>
<claim-text>calculating similarity of the text for each retrieval condition according to a predetermined calculation formula using information of appearances of the retrieval term retrieved in the retrieval term retrieval step and the user identifier obtained in the user identifier obtaining step; and </claim-text>
<claim-text>delivering a text of which the similarity calculated in the similarity calculation step satisfies the delivery condition registered in the delivery condition registration step to a user of the delivery condition. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, further including 
<claim-text>the step of calculating a weight for the retrieval term extracted in the retrieval term extraction step, wherein: 
<claim-text>the text retrieval and delivery step includes 
<claim-text>an appearance count step, in place of the retrieval term retrieval step, of counting a number of appearances in the text of the retrieval term extracted in the retrieval term extraction step; and </claim-text>
<claim-text>a similarity calculation step, in place of the similarity calculation step, of calculating similarity of the text to each retrieval condition using the weight of the retrieval term calculated in the retrieval term calculation step and the number of appearances of the retrieval term counted in the appearance count step. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> or <highlight><bold>3</bold></highlight>, wherein the text retrieval and delivery step includes 
<claim-text>a step of controlling an order of calculating similarity of the text for the retrieval conditions. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the similarity calculation order control step includes 
<claim-text>a step of determining the similarity calculation order according to a contract charging rate including predetermined delivery priority, a delivery priority specified by the user, or delivery priority of a delivery service. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the retrieval term weight calculation step includes the steps of: 
<claim-text>calculating a number of texts in which the retrieval term extracted by the retrieval term extraction step appears; and </claim-text>
<claim-text>calculating a weight of the retrieval term using the number of texts calculated by the retrieval term appearance text count step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the text retrieval and delivery step further includes 
<claim-text>a step of saving all texts obtained and similarity of each of the text for the retrieval condition of each of the users. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, further including 
<claim-text>a delivery threshold setting support information presenting step of presenting, to the user, contents saved by the text retrieval and delivery step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the delivery threshold setting support information presenting step presents the contents in the form of a list, the contents including similarity, delivery time, a delivery threshold value at delivery of the text delivered to the user. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the delivery threshold setting support information presenting step presents the contents including a number of texts for each similarity calculated in the past to the user. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the delivery threshold setting support information presenting step presents the contents in the form of a graph of similarity of texts obtained in the past versus text reception time. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including 
<claim-text>a step of comparing a calculation result of similarity of the text with a predetermined delivery threshold value as a reference value to determine delivery or non-delivery of the text and delivering, when the similarity of the text is greater than the delivery threshold value, the text to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, further including 
<claim-text>a step of delivery threshold setting step of setting a delivery threshold value for each user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further including: 
<claim-text>the text retrieval and delivery step of claim <highlight><bold>7</bold></highlight>; and </claim-text>
<claim-text>the step of delivery threshold automatic setting step of scanning the text saved in the text retrieval and delivery step, calculating similarity of the text for the retrieval condition set by each user, and thereby calculating and setting a delivery threshold value for each user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further including: 
<claim-text>the step of delivery threshold setting support information presenting step of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, <highlight><bold>10</bold></highlight>, or <highlight><bold>11</bold></highlight>, wherein 
<claim-text>the delivery threshold setting support information presenting step presents the presenting information in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, <highlight><bold>10</bold></highlight>, or <highlight><bold>11</bold></highlight> when the user sets a delivery threshold value. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further including: 
<claim-text>the text retrieval and delivery step of claim <highlight><bold>7</bold></highlight>; and </claim-text>
<claim-text>the delivery threshold setting trial step of selecting, from all texts within a predetermined period of time in the past, texts of which the similarity of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> exceeds a new delivery threshold value set and presenting the texts selected to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> or <highlight><bold>13</bold></highlight>, further including: 
<claim-text>the text retrieval and delivery step of claim <highlight><bold>7</bold></highlight>; and </claim-text>
<claim-text>a text additional delivery step of delivering, according to the information saved in the text retrieval and delivery step, the texts of which similarity is equal to or less than the delivery threshold value of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> texts in a descending similarity order beginning at a text having highest similarity until a number of deliveries or a delivery frequency desired by the user is satisfied. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further including: 
<claim-text>the text retrieval and delivery step of claim <highlight><bold>7</bold></highlight>; and </claim-text>
<claim-text>a delivery threshold correction proposal presenting step of presenting a message to user to correct the delivery threshold value according to the information saved in the text retrieval and delivery step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including 
<claim-text>a desired delivery count setting step of setting a desired number of delivery texts desired by the user within a fixed period of time or within a period of time set by the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, further including: 
<claim-text>the text retrieval and delivery step of claim <highlight><bold>7</bold></highlight>; and </claim-text>
<claim-text>a delivery threshold automatic setting step of setting a delivery threshold for each user for each predetermined period of time according to the number of texts set in the desired delivery count setting step and the information saved in the text retrieval and delivery step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A document retrieving and delivering method in accordance with <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including: 
<claim-text>the delivery threshold setting step of claim <highlight><bold>13</bold></highlight>; </claim-text>
<claim-text>the desired delivery count setting step of claim <highlight><bold>19</bold></highlight>; and </claim-text>
<claim-text>a delivery condition setting mode selection step for enabling the user to select for operation either one of the delivery threshold setting step and the desired delivery count setting step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A document retrieving and delivering apparatus: comprising: 
<claim-text>retrieval condition registering means for registering retrieval conditions inputted from a plurality of users; and </claim-text>
<claim-text>retrieval and delivery means for retrieving, from texts of document information inputted, texts satisfying the retrieval conditions and delivering the texts to the users associated therewith, wherein 
<claim-text>the retrieval and delivery means calculates similarity of the text for the retrieval condition, determines according to the similarity whether or not the retrieval condition is satisfied, and delivers, when the retrieval condition is satisfied, the text to the user corresponding to the retrieval condition. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A document retrieving and delivering program: comprising the steps of: 
<claim-text>registering retrieval conditions inputted from a plurality of users; and </claim-text>
<claim-text>retrieving, from text data of document information inputted, texts satisfying the retrieval conditions and delivering the texts to the users associated therewith, wherein 
<claim-text>the retrieval and delivery step includes the steps of: 
<claim-text>calculating similarity of the text for the retrieval condition; </claim-text>
<claim-text>determining according to the similarity whether or not the retrieval condition is satisfied; and </claim-text>
<claim-text>delivering, when the retrieval condition is satisfied, the text to the user corresponding to the retrieval condition. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A computer-readable recording media storing therein a document retrieving and delivering program; comprising the steps of: 
<claim-text>registering retrieval conditions inputted from a plurality of users; and </claim-text>
<claim-text>retrieving, from text data of document information inputted, texts satisfying the retrieval conditions and delivering the texts to the users associated therewith, wherein 
<claim-text>the retrieval and delivery step includes the steps of: 
<claim-text>calculating similarity of the text for the retrieval condition; </claim-text>
<claim-text>determining according to the similarity whether or not the retrieval condition is satisfied; and </claim-text>
<claim-text>delivering, when the retrieval condition is satisfied, the text to the user corresponding to the retrieval condition.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>21</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004928A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004928A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004928A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004928A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004928A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004928A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004928A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004928A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004928A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004928A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004928A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004928A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004928A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004928A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004928A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030004928A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030004928A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030004928A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030004928A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030004928A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030004928A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030004928A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030004928A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030004928A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030004928A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030004928A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030004928A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030004928A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030004928A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030004928A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030004928A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030004928A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00032">
<image id="EMI-D00032" file="US20030004928A1-20030102-D00032.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00033">
<image id="EMI-D00033" file="US20030004928A1-20030102-D00033.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00034">
<image id="EMI-D00034" file="US20030004928A1-20030102-D00034.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00035">
<image id="EMI-D00035" file="US20030004928A1-20030102-D00035.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00036">
<image id="EMI-D00036" file="US20030004928A1-20030102-D00036.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00037">
<image id="EMI-D00037" file="US20030004928A1-20030102-D00037.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00038">
<image id="EMI-D00038" file="US20030004928A1-20030102-D00038.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00039">
<image id="EMI-D00039" file="US20030004928A1-20030102-D00039.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00040">
<image id="EMI-D00040" file="US20030004928A1-20030102-D00040.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00041">
<image id="EMI-D00041" file="US20030004928A1-20030102-D00041.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00042">
<image id="EMI-D00042" file="US20030004928A1-20030102-D00042.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
