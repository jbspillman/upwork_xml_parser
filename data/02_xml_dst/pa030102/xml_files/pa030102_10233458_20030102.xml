<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001760A1-20030102-D00000.TIF SYSTEM "US20030001760A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00001.TIF SYSTEM "US20030001760A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00002.TIF SYSTEM "US20030001760A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00003.TIF SYSTEM "US20030001760A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00004.TIF SYSTEM "US20030001760A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00005.TIF SYSTEM "US20030001760A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00006.TIF SYSTEM "US20030001760A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00007.TIF SYSTEM "US20030001760A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00008.TIF SYSTEM "US20030001760A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00009.TIF SYSTEM "US20030001760A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00010.TIF SYSTEM "US20030001760A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00011.TIF SYSTEM "US20030001760A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00012.TIF SYSTEM "US20030001760A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00013.TIF SYSTEM "US20030001760A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00014.TIF SYSTEM "US20030001760A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00015.TIF SYSTEM "US20030001760A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00016.TIF SYSTEM "US20030001760A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00017.TIF SYSTEM "US20030001760A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00018.TIF SYSTEM "US20030001760A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00019.TIF SYSTEM "US20030001760A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00020.TIF SYSTEM "US20030001760A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00021.TIF SYSTEM "US20030001760A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00022.TIF SYSTEM "US20030001760A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00023.TIF SYSTEM "US20030001760A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00024.TIF SYSTEM "US20030001760A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00025.TIF SYSTEM "US20030001760A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00026.TIF SYSTEM "US20030001760A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00027.TIF SYSTEM "US20030001760A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00028.TIF SYSTEM "US20030001760A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00029.TIF SYSTEM "US20030001760A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00030.TIF SYSTEM "US20030001760A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00031.TIF SYSTEM "US20030001760A1-20030102-D00031.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00032.TIF SYSTEM "US20030001760A1-20030102-D00032.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00033.TIF SYSTEM "US20030001760A1-20030102-D00033.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00034.TIF SYSTEM "US20030001760A1-20030102-D00034.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00035.TIF SYSTEM "US20030001760A1-20030102-D00035.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00036.TIF SYSTEM "US20030001760A1-20030102-D00036.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00037.TIF SYSTEM "US20030001760A1-20030102-D00037.TIF" NDATA TIF>
<!ENTITY US20030001760A1-20030102-D00038.TIF SYSTEM "US20030001760A1-20030102-D00038.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001760</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10233458</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020903</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>00200058.6</doc-number>
</priority-application-number>
<filing-date>20000107</filing-date>
<country-code>EP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>00200712.8</doc-number>
</priority-application-number>
<filing-date>20000301</filing-date>
<country-code>EP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H03M007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>341</class>
<subclass>058000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method of converting a stream of databits of a binary information signal into a stream of databits of a constrained binary channel signal, device for encoding, signal comprising a stream of databits of a constrained binary channel signal, record carrier and device for decoding</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10233458</doc-number>
<kind-code>A1</kind-code>
<document-date>20020903</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09757119</doc-number>
<document-date>20010108</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6469645</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Willem</given-name>
<middle-name>Marie Julia Marcel</middle-name>
<family-name>Coene</family-name>
</name>
<residence>
<residence-non-us>
<city>Eindhoven</city>
<country-code>NL</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>Koninklijke Philips Electronics N.V.</organization-name>
<assignee-type></assignee-type>
</assignee>
<correspondence-address>
<name-1>Corporate Patent Counsel</name-1>
<name-2>U.S. Philips Corporation</name-2>
<address>
<address-1>580 White Plains Road</address-1>
<city>Tarrytown</city>
<state>NY</state>
<postalcode>10591</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The invention relates to a method of converting a stream of databits of a binary information signal into a stream of databits of a constrained binary channel signal. This stream of databits of the binary information signal is divided into n-bit information words. These information words are converted into m<highlight><subscript>1</subscript></highlight>-bit channel words, in accordance with a channel code C<highlight><subscript>1</subscript></highlight>, or m<highlight><subscript>2</subscript></highlight>-bit channel words, in accordance with a channel code C<highlight><subscript>2</subscript></highlight>, where m<highlight><subscript>1</subscript></highlight>, m<highlight><subscript>2 </subscript></highlight>and n are integers for which it holds that m<highlight><subscript>2</subscript></highlight>&gt;m<highlight><subscript>1</subscript></highlight>&gE;n. The m<highlight><subscript>2</subscript></highlight>-bit channel word is chosen from of at least two m<highlight><subscript>2</subscript></highlight>-bit channel words, at least two of which have opposite parities, the concatenated m<highlight><subscript>1</subscript></highlight>-bit channel words and the m<highlight><subscript>2</subscript></highlight>-bit channel words complying with a runlength constraint of the binary channel signal. The method comprises the repetitive and/or alternate steps of: </paragraph>
<paragraph id="A-0002" lvl="2">selecting the m<highlight><subscript>1</subscript></highlight>-bit channel word from a set out of a plurality of sets of m<highlight><subscript>1</subscript></highlight>-bit channel words, each set comprising only m<highlight><subscript>1</subscript></highlight>-bit channel words having a beginning part out of a subset of beginning parts of the m<highlight><subscript>1</subscript></highlight>-bit channel words, each set being associated with a coding state of channel code C<highlight><subscript>1</subscript></highlight>, the coding state being established in dependence upon an end part of the preceding channel word, </paragraph>
<paragraph id="A-0003" lvl="7">or: </paragraph>
<paragraph id="A-0004" lvl="2">selecting the m<highlight><subscript>2</subscript></highlight>-bit channel word from a set out of a plurality of sets of m<highlight><subscript>2</subscript></highlight>-bit channel words, which selection depends on the end part of the preceding channel word, each set comprising only m<highlight><subscript>2</subscript></highlight>-bit channel words having a beginning part out of a subset of beginning parts of the m<highlight><subscript>2</subscript></highlight>-bit channel words belonging to said set, each set being associated with a coding state of channel code C<highlight><subscript>2</subscript></highlight>, the coding state being established in dependence upon an end part of the preceding channel word. </paragraph>
<paragraph id="A-0005" lvl="7">The end parts of the m<highlight><subscript>1</subscript></highlight>-bit channel words in a coding state of channel code C<highlight><subscript>1 </subscript></highlight>and the beginning parts of the m<highlight><subscript>2</subscript></highlight>-bit channel words in a set of channel code C<highlight><subscript>2 </subscript></highlight>are arranged to comply with said runlength constraint. </paragraph>
<paragraph id="A-0006" lvl="0">The invention further relates to a device for encoding, a signal comprising a stream of databits of a constrained binary channel signal, a record carrier and a device for decoding. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The invention relates to a method of converting a stream of databits of a binary information signal into a stream of databits of a constrained binary channel signal, wherein the stream of databits of the binary information signal is divided into n-bit information words, said information words being converted into m<highlight><subscript>1</subscript></highlight>-bit channel words in accordance with a channel code C<highlight><subscript>1</subscript></highlight>, or m<highlight><subscript>2</subscript></highlight>-bit channel words, in accordance with a channel code C<highlight><subscript>2</subscript></highlight>, where m<highlight><subscript>1</subscript></highlight>, m<highlight><subscript>2 </subscript></highlight>and n are integers for which it holds that m<highlight><subscript>2</subscript></highlight>&gt;m<highlight><subscript>1</subscript></highlight>&gE;n, wherein the m<highlight><subscript>2</subscript></highlight>-bit channel word is chosen from at least two m<highlight><subscript>2</subscript></highlight>-bit channel words, at least two of which have opposite parities, the concatenated m<highlight><subscript>1</subscript></highlight>-bit channel words and the m<highlight><subscript>2</subscript></highlight>-bit channel words complying with a runlength constraint of the binary channel signal. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The invention also relates to a device for encoding a stream of databits of a binary information signal into a stream of databits of a constrained binary channel signal. The invention also relates to a signal comprising a stream of databits of a constrained binary channel signal. The invention further relates to a record carrier and to a device for decoding the constrained binary channel signal. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The invention is in the field of channel coding, in particular in runlength limited channel coding. The length of time, expressed in channel bits, between consecutive signal transitions is usually called the runlength. Different constraints can be imposed on a channel code, e.g. resulting in a runlength limited channel code. In such a code, a sequence of channel words is characterized by two parameters, a d-constraint and a k-constraint. In (d,k) domain a logical &ldquo;one&rdquo; indicates a transition in the signal waveform. A (d,k) sequence satisfies the following two conditions: due to the d-constraint, two logic &ldquo;ones&rdquo; are separated by a run of at least d consecutive &ldquo;zeroes&rdquo;; due to the k-constraint two logic &ldquo;ones&rdquo; are separated by a run of at most k consecutive &ldquo;zeroes&rdquo;. The (d,k) sequence is converted from the (d,k) domain into a runlength-limited (RLL) sequence of the type (d,k) in the RLL domain upon precoding in a 1T precoder. This RLL sequence comprises elements with runlengths (either an array of consecutive zeroes or an array of consecutive ones) of d&plus;1 at minimum and k&plus;1 at maximum between subsequent signal reversals in the information signal. The values of (d&plus;1) and (k&plus;1) indicate the minimum and maximum runlengths of the element allowed in the sequence. It is noted that the term element can be used to indicate both an element of a (d,k) sequence or an element of an RLL sequence. An element is considered to be extending over a runlength in the RLL domain or (d,k) domain. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> In runlength limited channel coding, each information word is converted into a channel word according to predefined rules of conversion, these channel words forming a modulated signal. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> <highlight><italic>Research Disclosure, </italic></highlight>January 1992, page 32, 33340, discloses a coding method according to which n-bit information words are alternately converted into m<highlight><subscript>1</subscript></highlight>-bit channel words and m<highlight><subscript>2</subscript></highlight>-bit channel words, where n, m<highlight><subscript>1 </subscript></highlight>and m<highlight><subscript>2 </subscript></highlight>are integers and n&lE;m<highlight><subscript>1</subscript></highlight>&lt;m<highlight><subscript>2</subscript></highlight>. For each n-bit information word, there are two m<highlight><subscript>2</subscript></highlight>-bit channel words available having mutually different disparities. A channel word is selected so that the current running digital sum in the channel signal shows a behaviour in accordance with a desired pattern as a function of time, for example a DC-free coding in the channel signal. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In other words, there are two channel codes involved in the Research Disclosure, one with an n-to-m<highlight><subscript>1 </subscript></highlight>mapping of information words into channel words, which can be referred to as the main code C<highlight><subscript>1</subscript></highlight>, and the other with an n-to-m<highlight><subscript>2 </subscript></highlight>mapping, with two m<highlight><subscript>2</subscript></highlight>-bit channel words, which can be referred to as the dual code C<highlight><subscript>2</subscript></highlight>. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The efficiency of a channel code can be expressed by using the (information) rate of the channel code. This rate R of a channel code is defined as the quotient n/m, in which the code translated n binary user (or information) symbols into m binary channel symbols. As explained above, in runlength limited channel coding, the channel words must comply with certain constraints, for example a d-constraint and a k-constraint. Due to these restrictions, the number of bit combinations which may represent the information words is lowered and therefore the rate will decrease. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> It is an object of the invention to realize an efficient method of encoding a stream of information words into a constrained stream of channel words. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The method in accordance with the invention is characterized in that the method comprises the repetitive and/or alternate steps of: </paragraph>
<paragraph id="P-0010" lvl="2"><number>&lsqb;0010&rsqb;</number> selecting the m<highlight><subscript>1</subscript></highlight>-bit channel word from a set out of a plurality of sets of m<highlight><subscript>1</subscript></highlight>-bit channel words, each set comprising only m<highlight><subscript>1</subscript></highlight>-bit channel words having a beginning part out of a subset of beginning parts of the m<highlight><subscript>1</subscript></highlight>-bit channel words, each set being associated with a coding state of channel code C<highlight><subscript>1</subscript></highlight>, the coding state being established in dependence upon an end part of the preceding channel word, </paragraph>
<paragraph id="P-0011" lvl="7"><number>&lsqb;0011&rsqb;</number> or: </paragraph>
<paragraph id="P-0012" lvl="2"><number>&lsqb;0012&rsqb;</number> selecting the m<highlight><subscript>2</subscript></highlight>-bit channel word from a set out of a plurality of sets of m<highlight><subscript>2</subscript></highlight>-bit channel words, each set comprising only m<highlight><subscript>2</subscript></highlight>-bit channel words having a beginning part out of a subset of beginning parts of the m<highlight><subscript>2</subscript></highlight>-bit channel words belonging to said set, each set being associated with a coding state of channel code C<highlight><subscript>2</subscript></highlight>, the coding state being established in dependence upon an end part of the preceding channel word, </paragraph>
<paragraph id="P-0013" lvl="7"><number>&lsqb;0013&rsqb;</number> the end parts of the m<highlight><subscript>1</subscript></highlight>-bit channel words in a coding state of channel code C<highlight><subscript>1 </subscript></highlight>and the beginning parts of the m<highlight><subscript>2</subscript></highlight>-bit channel words in a set of channel code C<highlight><subscript>2 </subscript></highlight>being arranged to comply with said runlength constraint. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> By repetitively or alternately performing said steps and by arranging the end parts of the m<highlight><subscript>1</subscript></highlight>-bit channel words in a coding state of channel code C<highlight><subscript>1 </subscript></highlight>and the beginning parts of the m<highlight><subscript>2</subscript></highlight>-bit channel words in a coding state of channel code C<highlight><subscript>2</subscript></highlight>, the beginning parts of the m<highlight><subscript>2</subscript></highlight>-bit channel words can be applied to the coding states of channel code C<highlight><subscript>1</subscript></highlight>, thereby realizing the constrained binary channel signal; and vice versa when arranging the end parts of the m<highlight><subscript>2</subscript></highlight>-bit channel words and the beginning parts of the m<highlight><subscript>1</subscript></highlight>-bit channel words. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The invention is based on the recognition that the coding states of two different channel codes can be combined by arranging the beginning parts and the end parts of the channel words of the channel codes, so that end parts in the channel code C1 match with beginning parts of the sets of m<highlight><subscript>1</subscript></highlight>-bit channel words, but also with the beginning parts of the sets of m2-bit channel words. A multiple-state description of encoder and decoder yields channel codes with high efficiency or information rate. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Another method according to the invention is characterized in that the number of coding states of channel code C<highlight><subscript>1 </subscript></highlight>is equal to the number of coding states of channel code C<highlight><subscript>2</subscript></highlight>. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In the case where for the dual code C<highlight><subscript>2</subscript></highlight>, two m<highlight><subscript>2</subscript></highlight>-bit channel words with opposite parity can be used for each n-bit information word, it is possible to use these channel words for influencing predetermined properties of the binary channel signal. In order to be able to comply with the constraints of the constrained stream of channel words, it is advantageous that the end parts of the m<highlight><subscript>1</subscript></highlight>-bit channel words in a coding state of channel code C<highlight><subscript>1 </subscript></highlight>and the beginning parts of the m<highlight><subscript>2</subscript></highlight>-bit channel words in a coding state of channel code C<highlight><subscript>2 </subscript></highlight>are arranged that the number of coding states of channel code C<highlight><subscript>1 </subscript></highlight>is equal to the number of coding states of channel code C<highlight><subscript>2</subscript></highlight>. In this way, the coding tables can be limited. Parts of the coding states of channel code C<highlight><subscript>1 </subscript></highlight>can for example be similar or equal to parts of the coding states of channel code C<highlight><subscript>2</subscript></highlight>. This results in an easier implementation of coding and decoding in hardware and/or software. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The channel codes according to the invention may be uniquely described in terms of a so-called finite-state-machine (FSM). Transitions between the states of the FSM correspond to the emission of channel words in accordance with n-bit information words that enter the encoder. This implies that&mdash;in order to have a valid code&mdash;from each state of the FSM, there must be leaving at least 2<highlight><superscript>n </superscript></highlight>transitions towards all states of the FSM. With the FSM being in a given state, a given n-bit information word does not only determine the m-bit channel words, but also the next-state from which the next n-bit information word entering the encoder, is to be encoded. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Another method according to the invention is characterized in that the end part of any m<highlight><subscript>1</subscript></highlight>-bit channel word has a multiplicity y<highlight><subscript>1</subscript></highlight>, the multiplicity y<highlight><subscript>1 </subscript></highlight>being the number of different states of the channel code C<highlight><subscript>1 </subscript></highlight>said end part may establish, and that the end part of any m<highlight><subscript>2</subscript></highlight>-bit channel word has a multiplicity y<highlight><subscript>2</subscript></highlight>, the multiplicity y<highlight><subscript>2 </subscript></highlight>being the number of states of the channel code C<highlight><subscript>2 </subscript></highlight>said end may establish and in that y<highlight><subscript>1</subscript></highlight>&equals;y<highlight><subscript>2 </subscript></highlight>if the end part of the m<highlight><subscript>1</subscript></highlight>-bit channel word is equal to the end part of the m<highlight><subscript>2</subscript></highlight>-bit channel word. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Each end part of the m<highlight><subscript>1</subscript></highlight>-bit channel word has a multiplicity y<highlight><subscript>1</subscript></highlight>, the multiplicity y<highlight><subscript>1 </subscript></highlight>being the number of states of the channel code C<highlight><subscript>1 </subscript></highlight>said end part is permitted in, and each end part of the m<highlight><subscript>2</subscript></highlight>-bit channel word has a multiplicity y<highlight><subscript>2</subscript></highlight>, the multiplicity y<highlight><subscript>2 </subscript></highlight>being the number of states of the channel code C<highlight><subscript>2 </subscript></highlight>said end part is permitted in. It is not necessary that the multiplicity of an end part of a word is used for 100%. It is advantageous that y<highlight><subscript>1</subscript></highlight>&equals;y<highlight><subscript>2</subscript></highlight>, if the end part of the m<highlight><subscript>1</subscript></highlight>-bit channel word is equal to the end part of the m<highlight><subscript>2</subscript></highlight>-bit channel word. In this way the coding states of channel code C<highlight><subscript>1 </subscript></highlight>and the coding states of channel code C<highlight><subscript>2 </subscript></highlight>can be alternated in order that the constrained binary channel signal, comprising the concatenated m<highlight><subscript>1</subscript></highlight>-bit channel words and the m<highlight><subscript>2</subscript></highlight>-bit channel words, obeys a constraint of the binary channel signal. Using an equal multiplicity results in an easier implementation of coding and decoding in hardware and/or software. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Another method according to the invention is characterized in that said at least two m<highlight><subscript>2</subscript></highlight>-bit channel words establish the same state. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> We have so far defined the dual code C<highlight><subscript>2 </subscript></highlight>as having the following properties: it is a code with n-to-m<highlight><subscript>2 </subscript></highlight>mapping, where each n-bit information word can be represented by at least two channel words, among which at least two have opposite parities. The latter property is intended for influencing some envisaged properties of the encoded channel bitstream, e.g. control of the DC-content of the code. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> However, the guaranteed parity selection property of the dual code C<highlight><subscript>2 </subscript></highlight>is not satisfactory to guarantee, for instance a DC-control of a predetermined performance level. This is due to the fact that, in the FSM, both channel words of the dual code C<highlight><subscript>2 </subscript></highlight>may lead to different next-states: this would imply that the subsequent encoding paths for the two distinct choices of the channel words of C<highlight><subscript>2 </subscript></highlight>may be completely different, and that the overall parity of the bitstream between the two channel words encoded with the dual code, can be different, so that the DC-control which is driven by the decisions of the words of the dual code C<highlight><subscript>2</subscript></highlight>, gets frustrated, leading to a potentially poor performance with respect to the desired property of the channel bitstream. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> It is therefore advantageous to design the states of the FSMs of the channel codes C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2 </subscript></highlight>in order that, upon converting an n-bit information word into the two m<highlight><subscript>2</subscript></highlight>-bit channel words, the two m<highlight><subscript>2</subscript></highlight>-bit channel words not only leave from the same state in the FSM but also end in the same next-state in the FSM. In other words, both channel words of C<highlight><subscript>2</subscript></highlight>, corresponding to the same n-bit information word, have the same next-state. The use of this so-called &ldquo;same-next-state&rdquo; property of the dual code C<highlight><subscript>2 </subscript></highlight>leads to the following advantage: the above frustration of the control via C<highlight><subscript>2 </subscript></highlight>is eliminated: the encoding paths of the main code C<highlight><subscript>1 </subscript></highlight>between successive points where C<highlight><subscript>2 </subscript></highlight>is used in the stream of information words is now completely fixed, thus implying the same parity of the channel bitstream encoded with C<highlight><subscript>1 </subscript></highlight>between successive locations where C<highlight><subscript>2 </subscript></highlight>is used, independent of the coding choices of C<highlight><subscript>2</subscript></highlight>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Having a choice between the two m<highlight><subscript>2</subscript></highlight>-bit channel words, enables performing DC-control in order to achieve a so-called DC-balanced or a DC-free code. E.g. in optical recording, DC-balanced codes are employed to circumvent or reduce interaction between the data written on a record carrier and the servosystems that follow a track on the record carrier. The bytes encoded with the dual code C<highlight><subscript>2 </subscript></highlight>are the points in the channel bitstream that allow for control of the DC-content. Apart from controlling the DC-content of the channel bitstream the bytes encoded with the dual code C<highlight><subscript>2 </subscript></highlight>can be used for influencing other properties of the channel bitstream. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Straightforward DC-control procedures make a decision at each DC-control point depending on an RDS-related criterion, which is evaluated only for the channel bitstream ranging from the considered DC-control point up to the next one. Such locally optimal decision strategy does not exploit all DC-control potential of the channel code. A better approach is to apply look-ahead DC-control, i.e. to build a decision tree of depth N in which the decision at a given DC-control point is determined also by its impact on the subsequent channel bitstream in combination with the future decisions at the next N-1 DC-control points. Each path through the decision tree consists of N branches, and the RDS-criterion applies for the complete path. N-fold Look-Ahead DC-control implies 2<highlight><superscript>N </superscript></highlight>encoding paths, with the drawback of a higher encoder complexity since each byte needs to be encoded 2<highlight><superscript>N </superscript></highlight>times. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> For the channel code according to this embodiment, the path followed through the FSM during encoding does not depend on the actual path followed through the N-fold decision tree. This is due to the &ldquo;same-next-state&rdquo; property of the two coding options at the dual code C<highlight><subscript>2</subscript></highlight>. Hence, all bytes related to the main code C<highlight><subscript>1</subscript></highlight>, need to be encoded only once, whereas all bytes related to the dual code C<highlight><subscript>2</subscript></highlight>, need to be encoded just twice. This reduces the hardware complexity of the encoding tree down to that related to a simple sequential encoding without further branching. Only the N-fold decision tree of RDS-criteria along the 2<highlight><superscript>N </superscript></highlight>paths remains, resulting in a lower complexity. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> An RDS-related criterion can be, for example, the maximum absolute value of the RDS-value itself (first order spectral zero), but also the integrated RDS-value in time (second order spectral zero) or a combination of both can be used. Also the sum variance (SV) can be used as a criterion. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Another method according to the invention is characterized in that the sets of channel words of channel code C<highlight><subscript>1 </subscript></highlight>and the coding states of channel code C<highlight><subscript>2 </subscript></highlight>are arranged that binary channel signal formed by the concatenated m<highlight><subscript>1</subscript></highlight>-bit channel words and the m<highlight><subscript>2</subscript></highlight>-bit channel words comply with a Repeated-Minimum-Runlength-Limitation&equals;6 constraint on the binary channel. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Constraints can also limit the number of consecutive runlengths of the same length. For example, when imposing an RMTR (Repeated Minimum Transition Runlength) constraint of n on a d&equals;2 channel code, this constraint implies that the number of successive 3T runlengths in the sequence of channel words is limited to n. In order to realize a Repeated-Minimum-Runlength-Limitation of 6 constraint, code tables are designed from which possible channel words that could lead to the violation of the RMTR-constraint are eliminated (e.g. the word (100)<highlight><superscript>5</superscript></highlight>). In another way, the RMTR-constraint can also be obeyed by substituting channel words or patterns when an RMTR-violation would take place. More information about this RMTR (Repeated Minimum Transition Runlength) constraint can be found in published patent application WO99/63671-A1 (PHQ 98.023). </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Another method according to the invention is characterized in that the ratio between the number of m<highlight><subscript>1</subscript></highlight>-bit channel words and the number of m<highlight><subscript>2</subscript></highlight>-bit channel words is determined in dependence of a chosen measure of DC-control. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> It should be noted that the two channel codes C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2 </subscript></highlight>are independent codes each, which can also be used separately. C<highlight><subscript>1 </subscript></highlight>is typically a high-rate code with no systematic structure to steer certain extra properties of the encoded channel bitstream on top of the envisaged runlength constraints (d, k, RMTR). C<highlight><subscript>2 </subscript></highlight>is a slightly lower-rate code and the rate-loss as compared to C<highlight><subscript>1</subscript></highlight>, is used for a systematic structure aimed at steering the additionally required properties. For the invention as described in detail below, C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2 </subscript></highlight>are to be used in combination, from which the term combi-code is derived, but it should be realized that any combination pattern is possible. The more the main code C<highlight><subscript>1 </subscript></highlight>is used (relative to the use of the dual code C<highlight><subscript>2</subscript></highlight>), the higher the rate will be of the overall combination code, but also the lower the controlling capacity will be for the extra envisaged properties of the channel bitstream. With respect to the latter, a maximum of control can be achieved by using the dual code C<highlight><subscript>2 </subscript></highlight>all the time, and a minimum of control is the case when using only the main code C<highlight><subscript>1</subscript></highlight>. It can therefore be understood that the ratio between the number of m<highlight><subscript>1</subscript></highlight>-bit channel words and the number of m<highlight><subscript>2</subscript></highlight>-bit channel words can be determined in dependence upon a chosen measure of DC-control. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Another method according to the invention is characterized in that the coding state is further being established .in dependence upon the n-bit information word, thereby allowing to distinguish this n-bit information word by detecting the coding state. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In order to increase the rate of the information signal, it is advantageous that the coding state is also dependent on the n-bit information word to be encoded. As a result, the same channel word can be used more than one time. In this way, the number of different channel words necessary to construct a channel code is reduced, resulting in a more efficient code. Using states in the framework of a so-called finite-state-machine (FSM) for the characterization of the channel codes C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2</subscript></highlight>, therefore provides a possibility of establishing an overall code with a high rate due to the multiple use of the same channel word with different next-states. At the decoder, it is the channel word in combination with the next-state, that uniquely determines the corresponding information word. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Another method according to the invention is characterized in that the coding states of channel code C<highlight><subscript>1 </subscript></highlight>and the coding states of channel code C<highlight><subscript>2 </subscript></highlight>are further arranged that a limited number of channel words is substituted for other channel words or patterns, these other channel words or patterns not belonging to the sets of channel words of channel code C<highlight><subscript>1 </subscript></highlight>and channel code C<highlight><subscript>2</subscript></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> In a practical design of a channel code based on the combination of two codes C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2 </subscript></highlight>according to the invention, there is some extra room for the design of limited, stochastic control on top of the guaranteed control. Stochastic control is understood to be the kind of control in which the actual use of this control depends on the actual data content (information words) that enters the encoder. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The existence of the room for stochastic DC-control is due to the fact that&mdash;in a practical code&mdash;some specific patterns do not occur in the channel bitstream under normal application of the channel code; these patterns can then be used as substitution patterns for other patterns that are allowed in the channel bitstream. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> By substituting a limited number of channel words or patterns for other channel words or patterns not belonging to the channel words or patterns present in the binary channel signal before the substitutions, additional DC-control can be accomplished, for instance, if the substitutions imply a parity inversion. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The coding methods as described in the above embodiments have the following advantages, which are obvious or will be clarified in the Figure description, i) guaranteed DC-control, ii) reduced error-propagation because of the byte-oriented nature of the encoding, iii) simple single-pass encoding scheme, resulting in reduced encoder complexity for performing encoding with look-ahead DC-control. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The invention also relates to a device for encoding. The invention also relates to a signal comprising a stream of databits of a constrained binary channel signal. The invention further relates to a record carrier and to a device for decoding.</paragraph>
</summary-of-invention>
<brief-description-of-drawings>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> These and other aspects of the invention will be further described in the Figure description, in which </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an example of the coding method, </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an example of a 6-state Finite-State-Machine to be used for the main code (channel code C<highlight><subscript>1</subscript></highlight>), aimed for the channel constraints d&equals;2, k&equals;10, </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows an example of a 6-state Finite-State-Machine to be used for the dual code (channel code C<highlight><subscript>2</subscript></highlight>), aimed for the channel constraints d&equals;2, k&equals;10, </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows the code tables of the main code C<highlight><subscript>1</subscript></highlight>, </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the code tables of the dual code C<highlight><subscript>2</subscript></highlight>, </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows an example of how decoding of the next-state function of the channel words of the main code is performed, </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows an example of how decoding of the next-state function of the channel words of the dual code is performed, </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows a RDS-tree to be used for performing DC-control, </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows the encoder path on a byte basis to be used for performing DC-control for realizing efficient look-ahead encoding, </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows a device for encoding according to the invention, </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows a record carrier on which a signal comprising a stream of databits of a constrained binary channel signal, obtained after carrying out a method according to the invention is recorded in a track, </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows an enlarged portion of the record carrier of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows a device for decoding according to the invention, </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows a recording device according to the invention for recording information, </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows a reading device according to the invention for reading out a record carrier, </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows a Finite-State Machine, full-bit description for d&equals;1, </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows a Finite-State Machine, half-bit description for d&equals;1, </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> shows a 2-state Finite-State Machine for d&equals;1, </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> shows a code alternation of channel code C<highlight><subscript>1 </subscript></highlight>and channel code C<highlight><subscript>2 </subscript></highlight>for d&equals;1, </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> shows a 5-state Finite-State Machine, half-bit description for d&equals;1, </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows a 7-state Finite-State Machine, half-bit description for d&equals;1.</paragraph>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows graphically an example of the coding method. Using this method predetermined properties of the binary channel signal can be influenced, for example for guaranteed DC-control via the alternation of two codes C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2 </subscript></highlight>via an alternation pattern that is also known at the decoder. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> We consider two channel codes, C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2</subscript></highlight>. Both codes are applied on n-bit symbols. Channel code C<highlight><subscript>1 </subscript></highlight>is a high-rate code with n-to-m<highlight><subscript>1 </subscript></highlight>mapping, channel code C<highlight><subscript>2 </subscript></highlight>is a low-rate code with n-to-m<highlight><subscript>2 </subscript></highlight>mapping. In this example, for d&equals;2, k&equals;10, C<highlight><subscript>1 </subscript></highlight>has a 8-to-15 mapping, and C<highlight><subscript>2 </subscript></highlight>has a 8-to-17 mapping (n&equals;8, m<highlight><subscript>1</subscript></highlight>&equals;15, m<highlight><subscript>2</subscript></highlight>&equals;17). Guaranteed DC-control, i.e. DC-control for every possible sequence of information words is achieved if the following conditions are satisfied: for each n-bit symbol, channel code C<highlight><subscript>2 </subscript></highlight>has two channel words, one with even and one with odd parity in order to influence the RDS-value of the binary channel signal; for each n-bit symbol, the two possible channel representations of code C<highlight><subscript>2 </subscript></highlight>have the same next-state. The Finite-State-Machines (FSMs) of codes C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2</subscript></highlight>, indicating the states and state characterisations of the channel codes C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2</subscript></highlight>, have the same number of states, and the FSM are based on the same approximate eigenvector (according to Franazek&apos;s definition, see &sect; 5.3.1. of the book &ldquo;Codes for mass data storage systems&rdquo;, K. A. Schouhamer Immink, November 1999, Shannon Foundation Publishers (ISBN-90-74249-23-X), which implies that channel words ending with a given number of zeroes have a certain multiplicity, irrespective of the fact whether they are part of a channel word from the main code C<highlight><subscript>1 </subscript></highlight>or from the dual code C<highlight><subscript>2</subscript></highlight>. The approximate eigenvector in this case of d&equals;2, k&equals;10 which satisfies an approximate eigenvector inequality is the following: V<highlight><subscript>(d&equals;2,k&equals;10)</subscript></highlight>&equals;&lcub;2,3,4,4,4,4,3,3,3,2,1 &rcub;. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> However, the characterization of the states of FSM<highlight><subscript>1 </subscript></highlight>for C<highlight><subscript>1 </subscript></highlight>and FSM<highlight><subscript>2 </subscript></highlight>for C<highlight><subscript>2 </subscript></highlight>may be different. These state characterizations are chosen in order to realize the constraints imposed on the binary channel signal. These constraints can be, for example, runlength-limiting constraints (d,k) or an RMTR constraint. In this way, the constraints imposed on the binary channel signal, formed by concatenating the m<highlight><subscript>1</subscript></highlight>-bit channel words and the m<highlight><subscript>2</subscript></highlight>-bit channel words, are satisfied. We can call channel code C<highlight><subscript>1 </subscript></highlight>the main code, whereas channel code C<highlight><subscript>2 </subscript></highlight>is referred to as the dual code. The upper part of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> depicts an n-bit information word <highlight><bold>1</bold></highlight> which is converted into an m<highlight><subscript>1</subscript></highlight>-bit channel word <highlight><bold>2</bold></highlight> via a channel C<highlight><subscript>1 </subscript></highlight>or into an m<highlight><subscript>2</subscript></highlight>-bit channel word <highlight><bold>3</bold></highlight> via a channel code C<highlight><subscript>2</subscript></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The two available m<highlight><subscript>2</subscript></highlight>-bit channel words are indicated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> by the corresponding parities, &ldquo;0&rdquo; and &ldquo;1&rdquo;. The arrows in the lower part of this Figure depict the &ldquo;flow&rdquo; through the coding states of the Finite-State-Machines FSM<highlight><subscript>1 </subscript></highlight>and FSM<highlight><subscript>2 </subscript></highlight>when converting the information words. It can be seen that when converting an information word into an m<highlight><subscript>1</subscript></highlight>-bit channel word, only one arrow points from the coding state of the channel word to the coding state of the next channel word, whereas when converting an information word into an m<highlight><subscript>2</subscript></highlight>-bit channel word, two arrows point from the coding state of the channel word to the coding state of the next channel word, indicating the choice between the two available m<highlight><subscript>2</subscript></highlight>-bit channel words. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The lower part of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> depicts that for each information word (256 entries as the information words are 8 bits long, n&equals;8) two m<highlight><subscript>2</subscript></highlight>-bit channel words are available with opposite parities and with the same next-state. When converting an n-bit information word into an m<highlight><subscript>2</subscript></highlight>-bit channel word, this m<highlight><subscript>2</subscript></highlight>-bit channel word can be chosen from the two available m<highlight><subscript>2</subscript></highlight>-bit channel words. In this example, this choice in used to create a DC-balanced or DC-free channel code. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an example of the state characterization for a 6-state Finite-State-Machine to be used for the main code (channel code C<highlight><subscript>1</subscript></highlight>). In this example the channel constraints to be complied with are d&equals;2 and k&equals;10 and the channel code C<highlight><subscript>1 </subscript></highlight>has a 8-15 mapping. <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows an example of a 6-state Finite-State-Machine to be used for the dual code (channel code C<highlight><subscript>2</subscript></highlight>). In this example the channel constraints to be complied with are d&equals;2 and k&equals;10 and the channel code C<highlight><subscript>2 </subscript></highlight>has a 8-17 mapping. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> In these Figures, a notation of &ldquo;&minus;<highlight><bold>10</bold></highlight><highlight><superscript>2&rdquo;, </superscript></highlight>as can be found in the column words IN in state <highlight><bold>1</bold></highlight> of the main code, indicates all channel words with an ending &ldquo;100&rdquo;. In the same way &ldquo;&verbar;010<highlight><superscript>10</superscript></highlight>1&minus;&rdquo;, as can be found in the column words OUT of state <highlight><bold>2</bold></highlight> of the main code, indicates all channel words with a beginning &ldquo;0100000000001&rdquo;. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The Finite-State-Machines (FSMs) of codes C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2 </subscript></highlight>have the same number of states, and the FSMs are based on the same approximate eigenvector, which implies that channel words ending with a given number of zeroes have a certain multiplicity, irrespective of the fact whether they are part of a channel word from the main code C<highlight><subscript>1 </subscript></highlight>or from the dual code C<highlight><subscript>2</subscript></highlight>. In the FSM of the dual code C<highlight><subscript>2</subscript></highlight>, each branch leaving a state corresponds to two possible channel words (word-pair) with i) opposite parity and ii) the same next-state. The <cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference> show that the multiplicity of any channel word in the 6-state FSMs ranges between 1 and 4. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> A lot of channel words or word-pairs are used more than once across different states. By appropriate mating, i.e. grouping of the same combination of channel words or word-pairs together with next-states to one single table entry for more than one state, error propagation can be reduced because a precise distinction of the states leading to the given channel word has become irrelevant for these channel words or word pairs. In fact, the codes C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2 </subscript></highlight>allow full state-independent decoding. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> The skilled person is familiar with channel codes comprising different states, the states forming a Finite-State-Machine. Detailed information on state-coding can be found in literature, for example in European Patent Specification EP 0 745 254 B 1 (PHN 14.746) or in the book &ldquo;Codes for mass data storage systems&rdquo;, K. A. Schouhamer Immink, November 1999, Shannon Foundation Publishers (ISBN-90-74249-23-X). </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> In &sect; 5.3 of this book it is explained that, in order to be able to construct a sequence of channel words complying with the constraints imposed on a channel code, at least M words that terminate at the same or other principal states must emanate from each coding state. The existence of a set of coding states is therefore a necessary condition for the existence of a code for the specified number of information words (256 in case of an 8-bit information word). It can be shown that if an approximate eigenvector satisfies an approximate eigenvector inequality, then a fixed-length code with the predetermined constraints and other parameters of the code can be ascertained. More details can be found in &sect; 5.3.1 of this book and in the literature references therein. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The invention in the above embodiment is not limited to a method of encoding in order to realize a binary channel signal with guaranteed DC-control and reduced error-propagation, with the parameters d&equals;2, k&equals;10, n&equals;8, m<highlight><subscript>1</subscript></highlight>&equals;15, m<highlight><subscript>2</subscript></highlight>&equals;17; a skilled person can apply the teaching of the method of encoding according to the invention, without departing from the scope of the invention, to generate a binary channel signal with, for example, d&equals;2, n&equals;7 or d&equals;2 or n&equals;13. He can, for example, also generate a binary channel signal with a d&equals;1 constraint. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> For d&equals;2 channel coding, the dual code C<highlight><subscript>2 </subscript></highlight>of the combi-code needs two channel bits extra for each channel word, in comparison with the channel words of the main code (8-to-17 and 8-to-15 mappings of main and dual code, respectively). As a rule of thumb, the extra overhead in terms of channel bits, needed for the design of the dual code is the inverse value of the rate R of the channel code. For d&equals;2, k&equals;10 the maxentropic capacity (theoretical upper limit for the rate) equals 0.5418, thus around 1.846 &ldquo;bits&rdquo; are needed, which is rounded towards 2. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> For d&equals;1 channel coding, the situation is quite different. The maxentropic capacity (without k-constraint) equals 0.6942, so that usually codes are designed with a rate equal to &frac23;. Byte-oriented codes with an 8-to-12 mapping can then be used for the main code. The extra number of &ldquo;bits&rdquo; needed for the channel words of the dual code now amounts to 1.441 &ldquo;bits&rdquo;. Rounding towards 2 would lead to a dual code with an 8-to-14 mapping, but then a rate-loss of more than a half bit results, which makes the combi-code approach as such less interesting from the point of view of capacity. An extra measure, which will be discussed in the following, is needed in order to avoid the above rate-loss. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> The present solution is worked out for the case d&equals;1: for other d-constraints, similar solutions can be devised. The solution for d&equals;1 is to describe the channel coding in terms of half-bits, instead of the common description in terms of full bits. The standard full-bit FSM for d&equals;1, and the half-bit FSM are shown in <cross-reference target="DRAWINGS">FIGS. 16 and 17</cross-reference>, respectively. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> In the half-bit FSM, one can make a distinction between Even States, where words entering these states have an even number of trailing zeroes, and Odd States, where words entering these states have an odd number of trailing zeroes. The Even States are numbered &lcub;1,3,5&rcub;, the Odd States are numbered &lcub;2,4&rcub;. In the half-bit FSM, we consider an 8-to-24 mapping for the main code, and an 8-to-27 mapping for the dual code. There exist now two versions of the main code: one with E-to-E coding, going from one of the states &lcub;1,3,5&rcub; towards one of the states &lcub;1,3,5&rcub;, the other with O-to-O coding, going from one of the states &lcub;2,4&rcub; towards one of the states &lcub;2,4&rcub;. There also exist two versions of the dual code: one with E-to-O coding, going from one of the states &lcub;1,3,5&rcub; towards one of the states &lcub;2,4&rcub;, the other with O-to-E coding, going from one of the states &lcub;2,4&rcub; towards one of the states &lcub;1,3,5&rcub;. It is convenient to consider a two-state FSM for the encoding with the combi-code, consisting of the E and the O state, as shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. Encoding with the main code does not lead to a state change (E&rarr;E or O&rarr;O), whereas encoding with the dual code always leads to a state change (E&rarr;O or O&rarr;E) because the number of half-bits in a channel word of the dual code is odd. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> The encoding sequence for successive segments of the combi-code is shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>. A segment is a sequence of source words (bytes), the first of which is to be encoded with the dual code C<highlight><subscript>2</subscript></highlight>, and all subsequent source words (bytes) are to be encoded with the main code C<highlight><subscript>1</subscript></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> For the generation of channel words for the two main codes, we adopt the following argumentation. A full-bit channel word (of length 12 bits) can be converted into a half-bit channel word (of length 24 half-bits) for the E-state via the conversion rules 0&rarr;00 and 1&rarr;01, implying that a full-bit channel word &verbar;0<highlight><superscript>n</superscript></highlight>1&rarr;10<highlight><superscript>m</superscript></highlight>&verbar; is converted into &verbar;0<highlight><superscript>2n&plus;1</superscript></highlight>1&rarr;10<highlight><superscript>2m</superscript></highlight>&verbar;. The arrow from &ldquo;1&rdquo; to &ldquo;1&rdquo; indicates any valid sequence according to the respective FSMs. Note that due to the conversion, there can only be an odd number of zeroes in between two ones of the half-bit word, in agreement with the half-bit FSM. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> A full-bit channel word can be converted into a half-bit channel word for the O-state via the conversion rules 0&rarr;00 and 1&rarr;10, implying that a full-bit channel word &verbar;0<highlight><superscript>n</superscript></highlight>1&rarr;10<highlight><superscript>m</superscript></highlight>&verbar; is converted into &verbar;0<highlight><superscript>2n</superscript></highlight>1&rarr;10<highlight><superscript>2m&plus;1</superscript></highlight>&verbar;. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> The generation of words for the dual codes is slightly more involved. For the E-state, we convert a 13-bit channel word &verbar;0<highlight><superscript>n</superscript></highlight>1&rarr;10<highlight><superscript>m</superscript></highlight>&verbar; first into a half-bit channel word of length <highlight><bold>26</bold></highlight>, and supply an extra bit x at the end: &verbar;0<highlight><superscript>2n&plus;1</superscript></highlight>1&rarr;10<highlight><superscript>2m</superscript></highlight>&verbar;. It is obvious that for the E-state, only x&equals;0 is allowed. The concatenation with the extra bit x&equals;0 implies the construction of a half-bit channel word of length <highlight><bold>27</bold></highlight>, with the next-states being converted from &lcub;1&rcub; to &lcub;2&rcub;, and from &lcub;3,5&rcub; to &lcub;4&rcub;. For the O-state, a similar procedure leads to the 27-half-bit channel word &verbar;0<highlight><superscript>2n</superscript></highlight>1&rarr;10<highlight><superscript>2m&plus;1</superscript></highlight>&verbar;x, where x&equals;1 is allowed only if m&gE;1, then leading to state <highlight><bold>1</bold></highlight> as next-state. The other possibility x&equals;0 is always allowed, leading to state <highlight><bold>3</bold></highlight> as next-state if m is even, and to state <highlight><bold>5</bold></highlight> as next-state if m is odd. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> The possibility of constructing such a code is easily enumerated. We consider the approximate eigenvector &lcub;2,2,3,4,3&rcub; for the states of the half-bit FSM. Further, we restrict n&lE;5 and m&lE;5 (in view of a k-constraint, which is not imposed via the FSM). It is not our present aim to construct a most optimal code (in terms of the k-constraint, given d&equals;1), but we merely want to show the feasibility of the proposed measures for the design of combi-codes for d&equals;1. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> For the main code, in state E with states &lcub;1,3,5&rcub;, i.e. code C<highlight><subscript>1</subscript></highlight><highlight><superscript>E</superscript></highlight>, we have for words leaving from state <highlight><bold>1</bold></highlight> that n&gE;1, and 519 words are available, which is enough since the state multiplicity of state <highlight><bold>1</bold></highlight> equals 2, thus 512 words are needed; for words leaving from states <highlight><bold>3</bold></highlight> and <highlight><bold>5</bold></highlight>, we have that n&gE;0, and 872 words are available, which is enough since the state multiplicity of states <highlight><bold>3</bold></highlight> and <highlight><bold>5</bold></highlight> equals 3, thus 768 words are needed. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> For the main code, in state O with states &lcub;2,4&rcub;, i.e. code C<highlight><subscript>1</subscript></highlight><highlight><superscript>O</superscript></highlight>, we have for words leaving from state <highlight><bold>2</bold></highlight> that n&gE;1, and 638 words are available, which is enough since the state multiplicity of state <highlight><bold>2</bold></highlight> equals 2, thus 512 words are needed; for state <highlight><bold>4</bold></highlight>, we have that n&gE;0, and 1072 words are available, which is enough since the state multiplicity of state <highlight><bold>4</bold></highlight> equals 4, thus 1024 words are needed. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> For the dual code, we have to account for the &ldquo;same next-state&rdquo; property according to the present invention. For the dual code, in state E with states &lcub;1,3,5&rcub;, i.e. code C<highlight><subscript>2</subscript></highlight><highlight><superscript>E</superscript></highlight>, we have for words leaving from state <highlight><bold>1</bold></highlight> that n&gE;1, and there are 132 even-parity and 130 odd-parity channel words with state <highlight><bold>2</bold></highlight> as the next-state, and there are 384 even-parity and 388 odd-parity channel words with state <highlight><bold>4</bold></highlight> as the next-state, yielding a total of 514 possible entries for the dual code, which is enough since the state multiplicity of state <highlight><bold>1</bold></highlight> equals 2, requiring 512 entries; for words leaving from states <highlight><bold>3</bold></highlight> and <highlight><bold>5</bold></highlight>, we have that n&gE;0, and there are 220 even-parity and 220 odd-parity channel words with state <highlight><bold>2</bold></highlight> as the next-state, and there are 648 even-parity and 648 odd-parity channel words with state <highlight><bold>4</bold></highlight> as the next-state, yielding a total of 868 possible entries for the dual code, which is enough since the state multiplicity of states <highlight><bold>3</bold></highlight> and <highlight><bold>5</bold></highlight> equals 3, requiring 768 entries. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> For the dual code, in state O with states &lcub;2,4&rcub;, i.e. code C<highlight><subscript>2</subscript></highlight><highlight><superscript>O</superscript></highlight>, we have for words leaving from state <highlight><bold>2</bold></highlight> that n&gE;1, and there are 194 even-parity an d 192 odd-parity channel words with state <highlight><bold>1</bold></highlight> as the next-state, and there are 300 even-parity and 300 odd-parity channel words with state <highlight><bold>3</bold></highlight> as the next-state, and there are 186 even-parity and 186 odd-parity channel words with state <highlight><bold>5</bold></highlight> as the next-state, yielding a total of 678 possible entries for the dual code, which is enough since the state multiplicity of state <highlight><bold>2</bold></highlight> equals 2, requiring 512 entries; for words leaving from state <highlight><bold>4</bold></highlight>, we have that n&gE;0, and there are 324 even-parity and 324 odd-parity channel words with state <highlight><bold>1</bold></highlight> as the next-state, and there are 504 even-parity and 504 odd-parity channel words with state <highlight><bold>3</bold></highlight> as the next-state, and there are 312 even-parity and 312 odd-parity channel words with state <highlight><bold>5</bold></highlight> as the next-state, yielding a total of 1140 possible entries for the dual code, which is enough since the state multiplicity of state <highlight><bold>4</bold></highlight> equals 4, requiring 1024 entries. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> In the case of d&equals;1, k&equals;7, the following eigenvector satisfies an approximate eigenvector inequality: V<highlight><subscript>(d&equals;1,k&equals;7,s&equals;2)</subscript></highlight>&equals;&lcub;3,4,5,6,5,6,4,6,3,3,3,3,3,3,2,2&rcub;. The accompanying Finite-State Machines, a 5-state and a 7-state Finite-State Machine, half-bit description for d&equals;1, are shown in <cross-reference target="DRAWINGS">FIG. 20</cross-reference> and <cross-reference target="DRAWINGS">FIG. 21</cross-reference>. In the columns Fan-Out Main Code and Fan-Out Dual Code of these Figures the number channel words is indicated. It can be seen that the number of redundant words can be different for the main code or the dual code. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows the code tables of the main code (channel code C<highlight><subscript>1</subscript></highlight>), d&equals;2, k&equals;10, RMTR&equals;6, with the entry index representing the index of the 8-bit information symbol (0-255). For each entry, one 15-bit long channel word is listed together with the corresponding next-state. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the code tables of the dual code C<highlight><subscript>2 </subscript></highlight>(channel code C<highlight><subscript>1</subscript></highlight>), d&equals;2, k&equals;10, RMTR&equals;6, with the entry index representing the index of the 8-bit information symbol (0-255). For each entry, the two 17-bit long channel words (word-pairs) are listed together with the corresponding next-states. These next-states are identical. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> The systematic structure of the main code C<highlight><subscript>1 </subscript></highlight>and the dual code C<highlight><subscript>2 </subscript></highlight>realized a guaranteed control of the extra desired properties of the channel bitstream (like a DC-free property). In an embodiment of a channel code based on the combination of two codes C<highlight><subscript>1 </subscript></highlight>and C<highlight><subscript>2</subscript></highlight>, there is some extra room for the design of (limited) stochastic control on top of the guaranteed control. Stochastic control is understood to be of control in which the actual use of this control depends on the actual data content that enters the encoder. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> The existence of the room for stochastic DC-control is due to the fact that&mdash;in a practical code&mdash;some specific patterns do not occur in the channel bitstream under normal application of the channel code; these patterns can then be used as substitution patterns for other patterns that are allowed in the channel bitstream. For instance, if the substitutions imply a parity inversion, then the substitutions can be used for additional DC-control, in the same sense as the substitution table is used in the EFM-Plus code. The evaluation which pattern is to be selected can be performed on the basis of an RDS-related criterion, e.g. with one byte look-ahead. Although the invention as described so far is related to a channel code with a guaranteed control in the combination of two codes, the invention also relates to using this stochastic control in a limited number of substitutions. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> We will outline below some of the possibilities (referred to as A to O) of stochastic control for the main code C<highlight><subscript>1 </subscript></highlight>and dual code C<highlight><subscript>2 </subscript></highlight>according to the code tables of <cross-reference target="DRAWINGS">FIGS. 4 and 5</cross-reference>. We limit ourselves here to those which are the easiest to be implemented. For both the main and dual code we have the possible substitutions (where bits between brackets, like (zu) refer to 17-bit channel words of channel code C<highlight><subscript>2</subscript></highlight>): </paragraph>
<paragraph id="P-0094" lvl="7"><number>&lsqb;0094&rsqb;</number> A. </paragraph>
<paragraph id="P-0095" lvl="1"><number>&lsqb;0095&rsqb;</number> &verbar;100 100 000 100 0 xy (zu)&rarr;&verbar;100 100 100 100 0 xy (zu) </paragraph>
<paragraph id="P-0096" lvl="1"><number>&lsqb;0096&rsqb;</number> , if the RMTR&equals;6 constant is not violated. </paragraph>
<paragraph id="P-0097" lvl="7"><number>&lsqb;0097&rsqb;</number> B. </paragraph>
<paragraph id="P-0098" lvl="1"><number>&lsqb;0098&rsqb;</number> &verbar;010 010 000 010 00x (yz)&rarr;&verbar;010 010 010 010 00x (yz) </paragraph>
<paragraph id="P-0099" lvl="1"><number>&lsqb;0099&rsqb;</number> , if the RMTR&equals;6 constraint is not violated, and when the current state is not state <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0100" lvl="7"><number>&lsqb;0100&rsqb;</number> C. </paragraph>
<paragraph id="P-0101" lvl="1"><number>&lsqb;0101&rsqb;</number> &verbar;001 001 000 001 000 (xy)&rarr;&verbar;001 001 001 001 000 (xy) </paragraph>
<paragraph id="P-0102" lvl="1"><number>&lsqb;0102&rsqb;</number> , if the RMTR&equals;6 constraint is not violated and when the current state is not state <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0103" lvl="7"><number>&lsqb;0103&rsqb;</number> D. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> If a channel word has as an ending: &minus;10<highlight><superscript>2</superscript></highlight>, the following substitutions can be applied on the next channel word: </paragraph>
<paragraph id="P-0105" lvl="1"><number>&lsqb;0105&rsqb;</number> 10<highlight><superscript>5</superscript></highlight>1&minus;&rarr;0<highlight><superscript>6</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0106" lvl="1"><number>&lsqb;0106&rsqb;</number> 10<highlight><superscript>6</superscript></highlight>1&minus;&rarr;0<highlight><superscript>7</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0107" lvl="1"><number>&lsqb;0107&rsqb;</number> 10<highlight><superscript>7</superscript></highlight>1&minus;&rarr;0<highlight><superscript>8</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0108" lvl="7"><number>&lsqb;0108&rsqb;</number> E. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> If a channel word has as an ending: &minus;10<highlight><superscript>3</superscript></highlight>, the following substitutions can be applied on the next channel word: </paragraph>
<paragraph id="P-0110" lvl="1"><number>&lsqb;0110&rsqb;</number> 10<highlight><superscript>5</superscript></highlight>1&minus;&rarr;0<highlight><superscript>6</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0111" lvl="1"><number>&lsqb;0111&rsqb;</number> 10<highlight><superscript>6</superscript></highlight>1&minus;&rarr;0<highlight><superscript>7</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0112" lvl="7"><number>&lsqb;0112&rsqb;</number> F. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> If a channel word has an ending: &minus;10<highlight><superscript>4</superscript></highlight>, the following substitutions can be applied on the next channel word: </paragraph>
<paragraph id="P-0114" lvl="1"><number>&lsqb;0114&rsqb;</number> 10<highlight><superscript>5</superscript></highlight>1&minus;&rarr;0<highlight><superscript>6</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0115" lvl="7"><number>&lsqb;0115&rsqb;</number> G. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> If a channel word has as an ending: &minus;10<highlight><superscript>6</superscript></highlight>, the following substitutions can be applied on the next channel word: </paragraph>
<paragraph id="P-0117" lvl="1"><number>&lsqb;0117&rsqb;</number> 10<highlight><superscript>2</superscript></highlight>1&minus;&rarr;0<highlight><superscript>3</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0118" lvl="1"><number>&lsqb;0118&rsqb;</number> 10<highlight><superscript>3</superscript></highlight>1&minus;&rarr;0<highlight><superscript>4</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0119" lvl="7"><number>&lsqb;0119&rsqb;</number> H. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> If a channel word has as an ending: &minus;10<highlight><superscript>7</superscript></highlight>, the following substitutions can be applied on the next channel word: </paragraph>
<paragraph id="P-0121" lvl="1"><number>&lsqb;0121&rsqb;</number> 10<highlight><superscript>2</superscript></highlight>1&minus;&rarr;0<highlight><superscript>3</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0122" lvl="7"><number>&lsqb;0122&rsqb;</number> I. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> If a channel word has as an ending: &minus;10<highlight><superscript>9</superscript></highlight>, the following substitutions can be applied on the next channel word: </paragraph>
<paragraph id="P-0124" lvl="1"><number>&lsqb;0124&rsqb;</number> 010<highlight><superscript>5</superscript></highlight>1&minus;&rarr;010<highlight><superscript>2</superscript></highlight>10<highlight><superscript>2</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0125" lvl="1"><number>&lsqb;0125&rsqb;</number> , if the RMTR&equals;6 constraint is not violated. </paragraph>
<paragraph id="P-0126" lvl="7"><number>&lsqb;0126&rsqb;</number> J. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> If a channel word has as an ending: &minus;10<highlight><superscript>10</superscript></highlight>, the following substitutions can be applied on the next channel word: </paragraph>
<paragraph id="P-0128" lvl="1"><number>&lsqb;0128&rsqb;</number> 10<highlight><superscript>2</superscript></highlight>10<highlight><superscript>2</superscript></highlight>1&minus;&rarr;10<highlight><superscript>5</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0129" lvl="1"><number>&lsqb;0129&rsqb;</number> 10<highlight><superscript>2</superscript></highlight>10<highlight><superscript>3</superscript></highlight>1&minus;&rarr;10<highlight><superscript>6</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0130" lvl="1"><number>&lsqb;0130&rsqb;</number> 10<highlight><superscript>2</superscript></highlight>10<highlight><superscript>4</superscript></highlight>1&minus;&rarr;10<highlight><superscript>7</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0131" lvl="1"><number>&lsqb;0131&rsqb;</number> 10<highlight><superscript>2</superscript></highlight>10<highlight><superscript>7</superscript></highlight>1&minus;&rarr;10<highlight><superscript>10</superscript></highlight>1&minus;</paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> For the main code C<highlight><subscript>1 </subscript></highlight>only, we have as extra substitutions: </paragraph>
<paragraph id="P-0133" lvl="7"><number>&lsqb;0133&rsqb;</number> K. </paragraph>
<paragraph id="P-0134" lvl="1"><number>&lsqb;0134&rsqb;</number> &verbar;10<highlight><superscript>2</superscript></highlight>10<highlight><superscript>5</superscript></highlight>10<highlight><superscript>4</superscript></highlight>x&verbar;&rarr;&verbar;10<highlight><superscript>8</superscript></highlight>10<highlight><superscript>4</superscript></highlight>x&verbar;</paragraph>
<paragraph id="P-0135" lvl="7"><number>&lsqb;0135&rsqb;</number> L. </paragraph>
<paragraph id="P-0136" lvl="1"><number>&lsqb;0136&rsqb;</number> &verbar;10<highlight><superscript>2</superscript></highlight>10<highlight><superscript>6</superscript></highlight>10<highlight><superscript>2</superscript></highlight>xy&verbar;&rarr;&verbar;10<highlight><superscript>9</superscript></highlight>10<highlight><superscript>2</superscript></highlight>xy&verbar;</paragraph>
<paragraph id="P-0137" lvl="7"><number>&lsqb;0137&rsqb;</number> M. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> If a channel word has as an ending: &minus;10<highlight><superscript>n</superscript></highlight>, the following substitutions can be applied on the next channel word: </paragraph>
<paragraph id="P-0139" lvl="1"><number>&lsqb;0139&rsqb;</number> &verbar;0<highlight><superscript>2</superscript></highlight>10<highlight><superscript>2</superscript></highlight>10<highlight><superscript>7</superscript></highlight>10&verbar;&rarr;&verbar;0<highlight><superscript>2</superscript></highlight>10<highlight><superscript>10</superscript></highlight>10&verbar;</paragraph>
<paragraph id="P-0140" lvl="1"><number>&lsqb;0140&rsqb;</number> For 2&lE;n&lE;8. </paragraph>
<paragraph id="P-0141" lvl="7"><number>&lsqb;0141&rsqb;</number> N. </paragraph>
<paragraph id="P-0142" lvl="1"><number>&lsqb;0142&rsqb;</number> &verbar;0<highlight><superscript>5</superscript></highlight>10<highlight><superscript>2</superscript></highlight>10<highlight><superscript>5</superscript></highlight>x&verbar;&rarr;&verbar;0<highlight><superscript>5</superscript></highlight>10<highlight><superscript>8</superscript></highlight>x&verbar;</paragraph>
<paragraph id="P-0143" lvl="7"><number>&lsqb;0143&rsqb;</number> O. </paragraph>
<paragraph id="P-0144" lvl="1"><number>&lsqb;0144&rsqb;</number> &verbar;0<highlight><superscript>9</superscript></highlight>10<highlight><superscript>2</superscript></highlight>10<highlight><superscript>2</superscript></highlight>&verbar;&rarr;&verbar;0<highlight><superscript>9</superscript></highlight>10<highlight><superscript>5</superscript></highlight>&verbar;</paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> It must be stressed that whenever a possible substitution (under A up to O) violates the run length constraints (k&equals;10, RMTR&equals;6), the substitution is not performed. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is shown of how the next-state can be decoded for the channel words of the main code. In <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is shown how the next-state can be decoded for the channel words of the dual code. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> When decoding a channel word, either from the main code C<highlight><subscript>1 </subscript></highlight>or from the dual code C<highlight><subscript>2</subscript></highlight>, into an 8-bit information word, no knowledge of the current state is needed. Therefore, this decoding is called state-independent decoding. On the other hand, knowledge of the next-state is needed in order to be able to uniquely decode the channel words in the case of multiple occurrence of the given channel word. In fact, a code word is uniquely represented not only by the given channel word, but by the combination of channel word and next-state. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> In <cross-reference target="DRAWINGS">FIGS. 6 and 7</cross-reference> it can be seen that, for determination of the next-state, a decoding window with a decoder look-ahead of a maximum of 12 bits and 14 bits into the next channel word must be performed, in case the next channel word is encoded with the main or dual code respectively. The entries in the tables of <cross-reference target="DRAWINGS">FIGS. 6 and 7</cross-reference> where this maximum decoder look-ahead is necessary are indicated with arrows. This decoder look-ahead must not be confused with the look-ahead encoding for improved DC-control. The asterisks in the <cross-reference target="DRAWINGS">FIGS. 6 and 7</cross-reference> indicate that all possible bit-combinations are allowed, as long as the imposed constraints are met. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> When decoding the channel words into the information words, a so-called hashing-technique can be used, as will be explained below. Using this technique results in a reduced hardware complexity, i.e. a smaller number of gates, necessary to implement the decoder algorithm. We will describe one particular implementation in more detail. Decoding the channel words of the main code, using the hashing technique is performed as follows. Via enumerative decoding for d&equals;2 the 15-bit channel word is converted into a 9-bit word by 15-to-9 mapping. Enumerative decoding is decoding in which the channel words to be decoded are computed by an algorithmic procedure based on the d&equals;2 constraint instead of storing all the channel words in a table (for more information about enumerative coding refer to chapter 6 of the book &ldquo;Codes for mass data storage systems&rdquo;, K. A. Schouhamer Immink, November 1999, Shannon Foundation Publishers, ISBN-90-74249-23-X). The number of the next-state is decoded via 2-bit coding in 2 bits because the maximum multiplicity of channel words equals 4. The 9-bit word and the 2-bit state word results in an 11-bit index. This 11-bit index is converted into the 8-bit information word with a hashing table for the main code, this hashing table comprising a table with at maximum 2048 entries (&equals;2<highlight><superscript>11</superscript></highlight>) (state-independent decoding). </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> When decoding the channel words of the dual code, the hashing technique is performed as follows. Via enumerative decoding for d&equals;2 the 17-bit channel word is converted into a 10-bit word by 17-to-10 mapping. The number of the next-state is decoded via 2-bit coding in 2 bits. The 10-bit word and the 2-bit state word results in a 12-bit index. This 12-bit index is converted into the 8-bit information word with a hashing table for the dual code, this hashing table comprising one single table for all 6 states and both parities and 4096 entries (&equals;2<highlight><superscript>12</superscript></highlight>). </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 8</cross-reference> an RDS-tree to be used for performing DC-control is shown. RDS stands for the Running Digital Sum, which is a measure of the DC-content of the binary channel signal. As said before, for each m<highlight><subscript>2</subscript></highlight>-bit channel word to be encoded, DC-control can be performed. In order to realize the most effective DC-control, it is advisable to &ldquo;look-ahead&rdquo; in order to determine which choice of m<highlight><subscript>2</subscript></highlight>-bit channel word, out of the two available m<highlight><subscript>2</subscript></highlight>-bit channel words, results in the best RDS-value. As can be seen in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, in order to be able to look-ahead N decisions, 2<highlight><superscript>N </superscript></highlight>possible paths of the RDS-tree must be calculated. For N&equals;3, 8 possible paths must be calculated. It is clear that the number of paths to be calculated is only depending on the number of m<highlight><subscript>2</subscript></highlight>-bit channel words to be encoded; the number of m<highlight><superscript>1</superscript></highlight>-bit channel words is not important as no additional paths are added when encoding an m<highlight><subscript>1</subscript></highlight>-bit channel word. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows the decision tree with depth N, as it applies in general, i.e. both to the encoding along the distinct paths and to the evaluation criterion. <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows the encoding tree with largely reduced complexity, which becomes possible due to the &ldquo;same-next-state&rdquo; property of the dual code C<highlight><subscript>2</subscript></highlight>. Although the RDS-criterion needs still to be evaluated along the distinct paths, the encoding of bytes with C<highlight><subscript>1 </subscript></highlight>needs to be done only a single time, whereas bytes to be encoded with C<highlight><subscript>2</subscript></highlight>, need, of course, to be encoded twice. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> Consider a block of N*n<highlight><subscript>B </subscript></highlight>bytes, comprising N bytes related to a channel word of the dual code and comprising N*(n<highlight><subscript>B</subscript></highlight>&minus;1) bytes related to channel words of the main code. It can be calculated that, in the case of the RDS-tree of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the number of bytes to be encoded in order to perform look-ahead DC-control is (2<highlight><superscript>N</superscript></highlight>*n<highlight><subscript>B</subscript></highlight>) bytes; It can similarly be calculated that, in the case of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the number of bytes to be encoded in order to perform look-ahead DC-control is N*(n<highlight><subscript>B</subscript></highlight>&plus;1) bytes. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> In conclusion, it is shown that, in order to realize efficient look ahead encoding for DC-control, the coding method according to the invention is arranged so that for each n-bit symbol, the two possible channel representations of code C<highlight><subscript>2 </subscript></highlight>have the same next-state. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows a device for encoding according to the invention. In this encoding device <highlight><bold>100</bold></highlight>, a stream of databits of a binary information signal <highlight><bold>101</bold></highlight> is converted into a stream of databits of a constrained binary channel signal <highlight><bold>103</bold></highlight>. The encoding device <highlight><bold>100</bold></highlight> comprises a converter <highlight><bold>102</bold></highlight> for converting the n-bit information words into m<highlight><subscript>1</subscript></highlight>-bit channel words and for converting the n-bit information words into m<highlight><subscript>2</subscript></highlight>-bit channel words, in accordance with the coding method, for example in accordance with the code table of the main code C<highlight><subscript>1 </subscript></highlight>and the dual code C<highlight><subscript>2 </subscript></highlight>as shown in <cross-reference target="DRAWINGS">FIGS. 4 and 5</cross-reference>. The encoding device <highlight><bold>100</bold></highlight> further comprises state-establishing means <highlight><bold>104</bold></highlight> for establishing a coding state of the m<highlight><subscript>1</subscript></highlight>-bit channel words and of the m<highlight><subscript>2</subscript></highlight>-bit channel words. Using this coding state, the converter <highlight><bold>102</bold></highlight> can convert the next n-bit information word. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows, by way of example, a record carrier <highlight><bold>110</bold></highlight> on which a signal comprising a stream of databits of a constrained binary channel signal, obtained after carrying out a method according to the invention is recorded in a track. <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows an enlarged portion of the record carrier of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> The record carrier shown is of an optically detectable type. The record carrier may also be of a different type, for example, a magnetically readable type. The record carrier comprises information patterns arranged in tracks <highlight><bold>111</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows an enlarged portion <highlight><bold>112</bold></highlight> of one of the tracks <highlight><bold>111</bold></highlight>. The information pattern in the track portion <highlight><bold>112</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> comprises first sections <highlight><bold>113</bold></highlight>, for example, in the form of optically detectable marks and second sections <highlight><bold>114</bold></highlight>, for example, intermediate areas lying between the marks. The first and second sections alternate in a direction of the track <highlight><bold>115</bold></highlight>. The first sections <highlight><bold>113</bold></highlight> present first detectable properties and the second sections <highlight><bold>114</bold></highlight> present second properties which are distinguishable from the first detectable properties, The first sections <highlight><bold>113</bold></highlight> represent bit cells <highlight><bold>116</bold></highlight> of the modulated binary signal S having one signal level, for example the low signal level L. The second sections <highlight><bold>114</bold></highlight> represent bit cells <highlight><bold>117</bold></highlight> having the other signal level, for example the high signal level H. The record carrier <highlight><bold>110</bold></highlight> may be obtained by first generating the modulated binary channel signal and then providing the record carrier with the information pattern. If the record carrier is an optically detectable type, the record carrier can then be obtained by means of mastering and replica techniques known to a person skilled in the art. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows a device for decoding. In this decoding device <highlight><bold>132</bold></highlight>, a stream of databits of a constrained binary channel signal <highlight><bold>131</bold></highlight> is converted into a stream of databits of a binary information signal <highlight><bold>134</bold></highlight>. The decoding device <highlight><bold>132</bold></highlight> comprises a converter for converting the constrained binary channel signal <highlight><bold>131</bold></highlight> into the stream of databits of a binary information signal. Decoding can be accomplished, for example, by using a hashing technique as described in and with reference to <cross-reference target="DRAWINGS">FIGS. 6 and 7</cross-reference>. When decoding the binary channel signal <highlight><bold>131</bold></highlight>, information about the next channel word to be decoded is needed, as is explained in and with reference to <cross-reference target="DRAWINGS">FIGS. 6 and 7</cross-reference>. This information <highlight><bold>133</bold></highlight> is supplied to the decoding device <highlight><bold>132</bold></highlight> before decoding the present channel word. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows a recording device for recording information. The Figure shows a recording device for recording information, in which the device for encoding according to the invention is used, for example the device for encoding <highlight><bold>100</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. The signal line <highlight><bold>141</bold></highlight> supplies the information words to be encoded to the device for encoding <highlight><bold>100</bold></highlight>. In the recording device the signal line <highlight><bold>142</bold></highlight> for supplying the modulated binary channel signal is connected to a control circuit <highlight><bold>143</bold></highlight> for a write head <highlight><bold>144</bold></highlight> along which a record carrier <highlight><bold>145</bold></highlight> of a writable type is moved. The write head <highlight><bold>144</bold></highlight> is of a customary type which is capable of introducing marks having detectable changes on the record carrier <highlight><bold>145</bold></highlight>. The control circuit <highlight><bold>143</bold></highlight> may also be of a customary type generating a control signal for the write head in response to the modulated signal applied to the control circuit <highlight><bold>143</bold></highlight>, so that the write head <highlight><bold>144</bold></highlight> introduces a pattern of marks that corresponds to the modulated signal. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows a reading device for reading out a record carrier. This Figure shows a reading device in which a device for decoding according to the invention is used, for example, the decoding device <highlight><bold>132</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. The reading device comprises a read head <highlight><bold>152</bold></highlight> of a customary type for reading out a record carrier <highlight><bold>151</bold></highlight> according to the invention which record carrier <highlight><bold>151</bold></highlight> carries an information pattern that corresponds to the modulated binary channel signal according to the invention. The read head <highlight><bold>152</bold></highlight> then produces an analog read signal modulated in accordance with the information pattern read out by the read head <highlight><bold>152</bold></highlight>. Detection circuit <highlight><bold>153</bold></highlight> converts this read signal in customary fashion into a binary signal, which is applied to the decoding circuit <highlight><bold>132</bold></highlight>. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> Whilst the invention has been described with reference to preferred embodiments therefor, it is to be understood that these are not limitative examples. Thus, various modifications may become apparent to those skilled in the art, without departing from the scope of the invention, as defined by the claims. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> For example, instead of using one main code and one dual code, it is also possible to create a stream of channel words, without departing from the scope of the invention, by using a combination of more than one main code and/or more than one dual code. By appropriately mixing these codes, the constraints of the stream of channel words can still be complied with. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> For example, the scope of the invention is not limited to a method of encoding an information word into one m<highlight><subscript>1</subscript></highlight>-bit channel word followed by one m<highlight><subscript>2</subscript></highlight>-bit channel word. The number of information words to be encoded into m<highlight><subscript>1</subscript></highlight>-bit channel words before encoding an information word into a m<highlight><subscript>2</subscript></highlight>-bit channel word is not prescribed. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> For example, the scope of the invention is not limited to a binary code. Without deviating from the gist of the invention, the invention can be applied to multi-level codes, ternary codes or other M-ary codes. The number of different m<highlight><subscript>2</subscript></highlight>-bit channel words for each n-bit information word must at least be two and in an advantageous situation, this number is equal to the number of values of the multivalued &ldquo;parity&rdquo;-parameter, while the &ldquo;parities&rdquo; of the channel words must at least cover all the different values at least once. In the case of a ternary code (with values &minus;1, 0 and 1) this implies that at least three different m<highlight><subscript>2</subscript></highlight>-bit channel words with &ldquo;parities&rdquo; &minus;1, 0 and 1 are present in the channel code C<highlight><subscript>2 </subscript></highlight>(with the same next-state). </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> Furthermore, the invention resides in each and every novel characteristic feature or each and every combination of characteristic features. </paragraph>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of converting a stream of databits of a binary information signal into a stream of databits of a constrained binary channel signal, wherein the stream of databits of the binary information signal is divided into n-bit information words, said information words being converted into m<highlight><subscript>1</subscript></highlight>-bit channel words in accordance with a channel code C<highlight><subscript>1</subscript></highlight>, or m<highlight><subscript>2</subscript></highlight>-bit channel words, in accordance with a channel code C<highlight><subscript>2</subscript></highlight>, where m<highlight><subscript>1</subscript></highlight>, m<highlight><subscript>2 </subscript></highlight>and n are integers for which it holds that m<highlight><subscript>2</subscript></highlight>&gt;m<highlight><subscript>1</subscript></highlight>&gE;n, wherein the m<highlight><subscript>2</subscript></highlight>-bit channel word is chosen from at least two m<highlight><subscript>2</subscript></highlight>-bit channel words, at least two of which have opposite parities, the concatenated m<highlight><subscript>1</subscript></highlight>-bit channel words and the m<highlight><subscript>2</subscript></highlight>-bit channel words complying with a runlength constraint of the binary channel signal, 
<claim-text>characterized in that </claim-text>
<claim-text>the method comprises the repetitive and/or alternate steps of: 
<claim-text>selecting the m<highlight><subscript>1</subscript></highlight>-bit channel word from a set out of a plurality of sets of m<highlight><subscript>1</subscript></highlight>-bit channel words, each set comprising only m<highlight><subscript>1</subscript></highlight>-bit channel words having a beginning part out of a subset of beginning parts of the m<highlight><subscript>1</subscript></highlight>-bit channel words, each set being associated with a coding state of channel code C<highlight><subscript>1</subscript></highlight>, the coding state being established in dependence upon an end part of the preceding channel word, </claim-text>
</claim-text>
<claim-text>or: 
<claim-text>selecting the m<highlight><subscript>2</subscript></highlight>-bit channel word from a set out of a plurality of sets of m<highlight><subscript>2</subscript></highlight>-bit channel words, each set comprising only m<highlight><subscript>2</subscript></highlight>-bit channel words having a beginning part out of a subset of beginning parts of the m<highlight><subscript>2</subscript></highlight>-bit channel words belonging to said set, each set being associated with a coding state of channel code C<highlight><subscript>2</subscript></highlight>, the coding state being established in dependence upon an end part of the preceding channel word, </claim-text>
<claim-text>the end parts of the m<highlight><subscript>1</subscript></highlight>-bit channel words in a coding state of channel code C<highlight><subscript>1 </subscript></highlight>and the beginning parts of the m<highlight><subscript>2</subscript></highlight>-bit channel words in a set of channel code C<highlight><subscript>2 </subscript></highlight>being arranged to comply with said runlength constraint. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, characterized in that the number of coding states of channel code C<highlight><subscript>1 </subscript></highlight>is equal to the number of coding states of channel code C<highlight><subscript>2</subscript></highlight>. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> or <highlight><bold>2</bold></highlight>, characterized in that the end part of any m<highlight><subscript>1</subscript></highlight>-bit channel word has a multiplicity y<highlight><superscript>1</superscript></highlight>, the multiplicity y<highlight><subscript>1 </subscript></highlight>being the number of different states of the channel code C<highlight><subscript>1 </subscript></highlight>said end part may establish, and that the end part of any m<highlight><subscript>2</subscript></highlight>-bit channel word has a multiplicity y<highlight><subscript>2</subscript></highlight>, the multiplicity y<highlight><subscript>2 </subscript></highlight>being the number of states of the channel code C<highlight><subscript>2 </subscript></highlight>said end part may establish and in that y<highlight><subscript>1</subscript></highlight>&equals;y<highlight><subscript>2 </subscript></highlight>if the end part of the m<highlight><subscript>1</subscript></highlight>-bit channel word is equal to the end part of the m<highlight><subscript>2</subscript></highlight>-bit channel word. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, <highlight><bold>2</bold></highlight> or <highlight><bold>3</bold></highlight>, characterized in that said at least two m<highlight><subscript>2</subscript></highlight>-bit channel words establish the same state. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, characterized in that the sets of channel words of channel code C<highlight><subscript>1 </subscript></highlight>and the sets of channel words of channel code C<highlight><subscript>2 </subscript></highlight>are arranged that binary channel signal formed by the concatenated m<highlight><subscript>1</subscript></highlight>-bit channel words and the m<highlight><subscript>2</subscript></highlight>-bit channel words comply with a d&equals;2 constraint and a k&equals;10 constraint. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> or <highlight><bold>5</bold></highlight>, characterized in that the sets of channel words of channel code C<highlight><subscript>1 </subscript></highlight>and the coding states of channel code C<highlight><subscript>2 </subscript></highlight>are arranged that binary channel signal formed by the concatenated m<highlight><subscript>1</subscript></highlight>-bit channel words and the m<highlight><subscript>2</subscript></highlight>-bit channel words comply with a Repeated-Minimum-Runlength-Limitation&equals;6 constraint on the binary channel. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, characterized in that n&equals;8, m<highlight><subscript>1</subscript></highlight>&equals;15, m<highlight><subscript>2</subscript></highlight>&equals;17. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, <highlight><bold>2</bold></highlight>, <highlight><bold>3</bold></highlight> or <highlight><bold>4</bold></highlight>, characterized in that the ratio between the number of m<highlight><subscript>1</subscript></highlight>-bit channel words and the number of m<highlight><subscript>2</subscript></highlight>-bit channel words is determined in dependence of a chosen measure of DC-control. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, characterized in that the coding state is further being established in dependence upon the n-bit information word, thereby allowing to distinguish this n-bit information word by detecting the coding state. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A method as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, <highlight><bold>2</bold></highlight>, <highlight><bold>3</bold></highlight> or <highlight><bold>4</bold></highlight>, characterized in that the coding states of channel code C<highlight><subscript>1 </subscript></highlight>and the coding states of channel code C<highlight><subscript>2 </subscript></highlight>are further arranged that a limited number of channel words is substituted for other channel words or patterns, these other channel words or patterns not belonging to the sets of channel words of channel code C<highlight><subscript>1 </subscript></highlight>and channel code C<highlight><subscript>2</subscript></highlight>. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A device for encoding a stream of databits of a binary information signal into a stream of databits of a constrained binary channel signal, for performing one of the methods as claimed, the device comprising an n-to-m<highlight><subscript>1</subscript></highlight>-bit converter for converting the n-bit information words into m<highlight><subscript>1</subscript></highlight>-bit channel words, an n-to-m<highlight><subscript>2</subscript></highlight>-bit converter for converting the n-bit information words into m<highlight><subscript>2</subscript></highlight>-bit channel words, state-establishing means for establishing a coding state of the m<highlight><subscript>1</subscript></highlight>-bit channel words and of the m<highlight><subscript>2</subscript></highlight>-bit channel words, which n-to-m<highlight><subscript>1 </subscript></highlight>bit converter is further arranged for selecting the m<highlight><subscript>1</subscript></highlight>-bit channel word depending on the end part of the preceding channel word, which n-to-m<highlight><subscript>2 </subscript></highlight>bit converter is further arranged for selecting the m<highlight><subscript>2</subscript></highlight>-bit channel word depending on the end part of the preceding channel word. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A device for encoding according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, characterized in that the device further comprises writing means for writing an information pattern on a record carrier. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A signal comprising a stream of databits of a constrained binary channel signal, obtained after carrying out one of the methods as claimed. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A record carrier on which the signal as claimed is recorded in a track, in which information patterns represent the signal portions, which information patterns comprise first and second parts, alternating in the direction of the track, the first parts presenting detectable properties and the second parts presenting detectable properties which are distinguishable from the first properties, the parts having the first properties representing bit cells having the first logic value and the parts having the second properties representing the bit cells having the second logic value. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A device for decoding a stream of databits of a constrained binary channel signal into a stream of databits of a binary information signal, the device comprising converting means for converting the signal as claimed into a bit string of bits having a first or a second value, the signal containing the m<highlight><subscript>1</subscript></highlight>-bit channel words and the m<highlight><subscript>2</subscript></highlight>-bit channel words, the bit string comprising the n-bit information words, the converting means being arranged to convert the m<highlight><subscript>1</subscript></highlight>-bit channel words and m<highlight><subscript>2</subscript></highlight>-bit channel words into n-bit information words, wherein one information word is assigned to one channel word to be converted. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A device for decoding according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, characterized in that the device further comprises reading means for reading out an information pattern from a record carrier.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>19</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001760A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001760A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001760A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001760A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001760A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001760A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030001760A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030001760A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030001760A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030001760A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030001760A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030001760A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030001760A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030001760A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030001760A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030001760A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030001760A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030001760A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030001760A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030001760A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030001760A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030001760A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030001760A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030001760A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030001760A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030001760A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030001760A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030001760A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030001760A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030001760A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030001760A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030001760A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00032">
<image id="EMI-D00032" file="US20030001760A1-20030102-D00032.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00033">
<image id="EMI-D00033" file="US20030001760A1-20030102-D00033.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00034">
<image id="EMI-D00034" file="US20030001760A1-20030102-D00034.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00035">
<image id="EMI-D00035" file="US20030001760A1-20030102-D00035.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00036">
<image id="EMI-D00036" file="US20030001760A1-20030102-D00036.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00037">
<image id="EMI-D00037" file="US20030001760A1-20030102-D00037.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00038">
<image id="EMI-D00038" file="US20030001760A1-20030102-D00038.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
