<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002652A1-20030102-D00000.TIF SYSTEM "US20030002652A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002652A1-20030102-D00001.TIF SYSTEM "US20030002652A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002652A1-20030102-D00002.TIF SYSTEM "US20030002652A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002652A1-20030102-D00003.TIF SYSTEM "US20030002652A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002652A1-20030102-D00004.TIF SYSTEM "US20030002652A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002652A1-20030102-D00005.TIF SYSTEM "US20030002652A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002652A1-20030102-D00006.TIF SYSTEM "US20030002652A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002652A1-20030102-D00007.TIF SYSTEM "US20030002652A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002652A1-20030102-D00008.TIF SYSTEM "US20030002652A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002652</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10234691</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020903</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04M003/00</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>H04M005/00</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>379</class>
<subclass>265010</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Call and data correspondence in a call-in center employing virtual restructuring for computer telephony integrated functionality</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10234691</doc-number>
<kind-code>A1</kind-code>
<document-date>20020903</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08949566</doc-number>
<document-date>19971014</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6480600</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<division-of>
<parent-child>
<child>
<document-id>
<doc-number>08949566</doc-number>
<document-date>19971014</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08928861</doc-number>
<document-date>19970912</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</division-of>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>08928861</doc-number>
<document-date>19970912</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08869815</doc-number>
<document-date>19970604</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6148074</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-in-part-of>
</continuations>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>08869815</doc-number>
<document-date>19970604</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08802667</doc-number>
<document-date>19970219</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6201863</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-in-part-of>
</continuations>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>08802667</doc-number>
<document-date>19970219</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08797420</doc-number>
<document-date>19970210</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6185291</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-in-part-of>
</continuations>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>08802667</doc-number>
<document-date>19970219</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08833340</doc-number>
<document-date>19970403</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-in-part-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Igor</given-name>
<family-name>Neyman</family-name>
</name>
<residence>
<residence-us>
<city>Palo Alto</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Michail</given-name>
<family-name>Barskiy</family-name>
</name>
<residence>
<residence-us>
<city>San Mateo</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Alec</given-name>
<family-name>Miloslavsky</family-name>
</name>
<residence>
<residence-us>
<city>San Carlos</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Oleg</given-name>
<family-name>Bondarenko</family-name>
</name>
<residence>
<residence-us>
<city>San Francisco</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Valeriy</given-name>
<family-name>Issayev</family-name>
</name>
<residence>
<residence-us>
<city>San Bruno</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Andrei</given-name>
<family-name>Petrov</family-name>
</name>
<residence>
<residence-us>
<city>Palo Alto</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Paul</given-name>
<family-name>Karpenko</family-name>
</name>
<residence>
<residence-us>
<city>Walnut Creek</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>CENTRAL COAST PATENT AGENCY</name-1>
<name-2></name-2>
<address>
<address-1>PO BOX 187</address-1>
<city>AROMAS</city>
<state>CA</state>
<postalcode>95004</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A call center having agent stations comprising telephones connected to computer stations by a Telephone Application Programming Interface (TAPI)-compliant bridge has data pertaining to callers stored in a database on a local area network (LAN) to which the computer stations are also connected. Origination data for incoming calls, both conventional calls to the telephones and computer-simulated calls to the computer platforms, is used as a key to extract data pertaining to calls from the database for display on video display units (VDUs) of the computer workstations where the calls are terminated. In some cases, data is only extracted and displayed for calls from previously listed origination points. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS-REFERENCE TO RELATED DOCUMENTS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present application is a Divisional application of copending patent application Ser. No. 08/928,861, which is a Continuation-In-Part (CIP) of prior copending patent application Ser. No. 08/869,815, which is a CIP of copending application Ser. No. 08/802,667, which is a CIP of copending patent application Ser. No. 08/797,420. The present application is also a CIP of copending application Ser. No. 08/833,340, and of a copending application having an Attorney Docket number P3226, filed Jul. 9, 1997. Titled &ldquo;Methods in Computer Simulation of Telephony Systems&rdquo;, for which the USPTO has not, at the time of the present application, returned a S/N.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention is in the area of telephone call processing and switching, and pertains more particularly to intelligent call-routing systems, and equipment and methods for customizing and personalizing Routing Rules and Protocol. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Telephone call processing and switching systems are, at the time of the present patent application, relatively sophisticated, computerized systems, and development and introduction of new systems continues. Much information on the nature of such hardware and software is available in a number of publications accessible to the present inventor and to those with skill in the art in general. For this reason, much minute detail of known systems is not reproduced here, as to do so would obscure the facts of the invention. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> One document which provides considerable information on intelligent networks is &ldquo;ITU-T Recommendation Q.1219, Intelligent Network User&apos;s Guide for Capability Set 1&rdquo;, dated April, 1994. This document is incorporated herein by reference. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> At the time of filing the present patent application there continues to be remarkable growth in telephone routing systems, with routing done both at or near point-of origin of incoming calls, and at call destinations. For example, systems are known to the present inventor that perform initial call processing before routing an incoming call to a destination switch, and further routing is done at the call destination in computerized telephony equipment, often termed customer premises equipment (CPE). The present invention pertains most particularly to routing at customer premises. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> There are, at the time of the present patent application a considerable range of CPE systems available for use from various manufacturers, and, as state-of-the-art routing systems are typically computerized, there is a broad variety of software available for such systems as well. It is the software in general wherein routing rules are set, and the routing rules determine the decision-making paths a system follows in routing calls. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In current art, although there are widely varying systems in the art relative to routing rules, all such systems exhibit a common drawback. Typically such systems, once set up (programmed) to follow certain routing rules and practices, cannot easily vary, and individual users or groups of users, cannot change the rules arbitrarily. To tinker with the routing rules in CPE typically requires a highly-trained maintenance technician (system administrator). </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> What is clearly needed is method and apparatus which allows an individual user of a routing system, or a group of users, to alter and customize the routing rules of the system for particular purposes, which may change from time to time, depending on the users. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In a preferred embodiment of the present invention a telephony call-in center is provided, comprising a plurality of agent stations, individual ones of the agent stations having a telephone and a computer platform including a video display unit (VDU), the telephone and computer platform connected by a Telephone Application Programming Interface (TAPI)-compliant data link; a local area network (LAN) connecting at least some of the computer platforms at the agent stations; and a first computer processor connected on the LAN, having a wide area network connection (WAN) adapted to receive computer-simulated telephone calls, and having access to a database. The computer platform is adapted to retrieve origination data for incoming calls to the telephone, and to use the origination data to correlate the caller with further data retrieved from the database for display on the VDU. In some embodiments the the first computer processor is adapted to service calls from specific Service Control Points (SCPs) and to block display of data at agent station VDUs for any call not identified as originating at one of the specific SCPs. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In preferred embodiments the computer platforms are adapted to report the origination data to the first processor, and the first processor is adapted to correlate the caller with further data retrieved from the database for display on the VDU. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In an alternative embodiment a telephone call-routing system is provided, comprising a call-in center comprising a plurality of agent stations, individual ones of the agent stations having a telephone and a computer platform including a video display unit (VDU), the telephone and the computer platform connected by a Telephone Application Programming Interface (TAPI)-compliant bridge, with a plurality of the computer workstations connected to one another, to a first processor, and to a database on a local area network (LAN); and a call-routing center comprising a telephony switch adapted to switch telephone calls to the telephones at the call-in center and a processor adapted to route computer-simulated telephone calls to the computer platforms at the agent stations. In this embodiment the computer workstation is adapted to retrieve origination data for incoming calls, both conventional telephony and computer-simulated, and to report the origination data to the first processor, and wherein the first processor is adapted to use the origination data to correlate the caller with further data retrieved from the database for display on the VDU. IN some instances the first processor is adapted to service calls from specific Service Control Points (SCPs) and to block display of data at agent station VDUs for any call not identified as originating at one of the specific SCPs. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In yet another embodiment an agent station for a call-in center is provided, comprising a computer platform having a local area network (LAN) adapter, the computer platform adapted for receiving and processing computer-simulated telephone calls; a telephone having a telephone line port; and a Telephone Application Programming Interface (TAPI)-compliant bridge connecting the computer workstation and the telephone. The computer workstation is adapted to retrieve origination data for calls, both calls to the telephone and computer-simulated calls to the computer platform, and to report the origination data on a LAN via the LAN adapter to a processor connected to the LAN. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In still another embodiment a method for correlating displayed data with incoming conventional telephone and computer-simulated telephone calls at a call-in center is provided, comprising steps of (a) connecting individual telephones at the call-in center by a Telephone Application Programming Interace (TAPI)-compliant bridge to individual computer platforms; (b) connecting each telephone-connected computer workstation on a local area network (LAN) to a processor connected on the LAN, the processor having access to a database storing data to be displayed; (c) monitoring origination information of incoming calls by the computer workstations; (d) providing the origination information over the LAN to the LAN-connected processor; and (e) using the origination information via the processor to correlate data to be displayed with the incoming calls. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In the various embodiments of the invention described in enabling detail below, call centers without call-switching apparatus and capable of also processing computer-simulated calls are enabled, while also providing means of correlating stored data pertaining to callers with calls to agent stations, displaying the data on VDUs at the agent stations while calls are in progress. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWING FIGURES </heading>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a system diagram of a call-routing system in an embodiment of the present invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a sample of a broadcast announcement record in an embodiment of the present invention. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a sample user interface screen in an embodiment of the present invention. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a system diagram of a call-routing system implemented in client-server mode in an embodiment of the present invention. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram of a call-routing system in the prior art. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a block diagram of a call-routing and call-in system according to embodiments of inventions known to the present inventors. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram of a call and information routing and call-center system according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a block diagram depicting a simulated system according to a preferred embodiment of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a system diagram of a call-routing system according to a preferred embodiment of the present invention. Dotted lines <highlight><bold>123</bold></highlight> enclose elements of the system native to a customer&apos;s premises (CPE). This equipment in a preferred embodiment comprises a computerized telephony central switch <highlight><bold>121</bold></highlight> connected by a data link <highlight><bold>212</bold></highlight> to a processor <highlight><bold>223</bold></highlight> running an instance of a unique telephony server (T-Server) T-S <highlight><bold>207</bold></highlight>. Switch <highlight><bold>121</bold></highlight> in conventional art distributes incoming calls (on line <highlight><bold>105</bold></highlight>) to connected telephones, such as telephone <highlight><bold>131</bold></highlight> at a workstation <highlight><bold>361</bold></highlight> and telephone <highlight><bold>132</bold></highlight> at a second workstation <highlight><bold>362</bold></highlight>. In various embodiments of the present invention T-Server <highlight><bold>207</bold></highlight> running on processor <highlight><bold>223</bold></highlight> exerts controlling influence on routing of incoming calls, as is described in further detail below. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In various embodiments of the present invention each workstation (<highlight><bold>361</bold></highlight>, <highlight><bold>362</bold></highlight>) has a PC with a video display, such as PC/VDU <highlight><bold>331</bold></highlight> at workstation <highlight><bold>361</bold></highlight> and PC/VDU <highlight><bold>332</bold></highlight> at workstation <highlight><bold>362</bold></highlight>. There will be in most architectures many more than the two telephone workstations shown, each with an associated PC, but two are considered adequate by the inventors to illustrate embodiments of the present invention. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> PC/VDUs <highlight><bold>331</bold></highlight> and <highlight><bold>332</bold></highlight> in various embodiments are connected on a local area network (LAN) <highlight><bold>301</bold></highlight> which also connects to a data file server <highlight><bold>303</bold></highlight> and to processor <highlight><bold>223</bold></highlight> running an instance of T-Server <highlight><bold>207</bold></highlight>. The arrangement of PC/VDU plus telephone at each workstation is a common arrangement for many company facilities, and has become more common as more and more people become computer literate. Moreover, many companies are actively training employees in use of computers, and providing PC-type computer equipment, usually interconnected by company LAN, for employees to use. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In the exemplary system shown, calls may originate at any remote call-in point, which is represented in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> by region <highlight><bold>100</bold></highlight>, referred to herein as the network cloud. Network cloud <highlight><bold>100</bold></highlight> may be a small regional portion of the world-wide network of connected telephony equipment, or may represent the entire world-wide network. An incoming call at any point in network cloud <highlight><bold>100</bold></highlight> is represented by vector <highlight><bold>107</bold></highlight> to service control point (SCP) <highlight><bold>101</bold></highlight> (typically a telephony central switch), which in this example is connected to an adjunct processor <highlight><bold>103</bold></highlight> and coupled thereby to an intelligent peripheral (I-P) <highlight><bold>102</bold></highlight>, a distribution processor <highlight><bold>104</bold></highlight> and a processor <highlight><bold>208</bold></highlight> running a second instance of unique T-Server <highlight><bold>207</bold></highlight> as well as a statistical server (stat-server) <highlight><bold>209</bold></highlight>. In this system calls are forwarded to switch <highlight><bold>121</bold></highlight> at the customer premises equipment over telephone line <highlight><bold>105</bold></highlight>, and associated data is forwarded in parallel to processor <highlight><bold>223</bold></highlight> over a digital network link <highlight><bold>210</bold></highlight>. Such systems, wherein data associated with a call is forwarded on a separate link from the call itself, are, to the inventor&apos;s knowledge at the time of the present patent application, not known in the art, but are known to the inventor. This feature, however, is not required in practice of the present invention, but preferred in some embodiments. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> In embodiments of the present invention a call originating in the network cloud and routed to switch <highlight><bold>121</bold></highlight>, destined for one of telephones <highlight><bold>131</bold></highlight> or <highlight><bold>132</bold></highlight> or to another destination at the customer&apos;s premises, typically carries a destination number, which may include a direct inward dialing (DID) feature, whereby a limited number of lines may be used to carry calls to a larger number of final destinations, accomplished principally by software techniques. Destination may also be to a virtual number, of which many may be programmed, and T-Server <highlight><bold>207</bold></highlight> may be adapted to further route calls forwarded to such virtual numbers. The phone call may also have caller ID attached (originating caller&apos;s phone number), and in those cases wherein a separate network digital data link is accomplished between processors at the origination end (<highlight><bold>208</bold></highlight>) and the customer&apos;s premises (<highlight><bold>223</bold></highlight>) cases a data packet associated with the call may be forwarded over link <highlight><bold>210</bold></highlight>. Also, T-S <highlight><bold>207</bold></highlight>, which interacts continuously with switch <highlight><bold>121</bold></highlight> in this embodiment, is capable of transacting with data file server <highlight><bold>303</bold></highlight>, given caller ID and/or other data associated with a call, to retrieve further information about the caller from data file server <highlight><bold>303</bold></highlight>. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> It will be apparent to those with skill in the art that incoming calls are not limited to two telephones as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. There may be many more than two telephones connected to switch <highlight><bold>121</bold></highlight>, other telephony equipment, such as facsimile equipment and data lines may also be connected and involved in routing decisions and transactions according to embodiments of the present invention. Moreover, existing techniques, such as virtual expansion for routing calls with a certain number to multiple destinations on some pre-programmed protocol may also be involved. The simple diagram of a switch with two telephones connected is meant to be illustrative for description of embodiments of the present invention. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> It will be apparent to those with skill in the art as well, that a separate processor shown as processor <highlight><bold>223</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, is not strictly required in embodiments of the invention, depending on the level of machine intelligence and sophistication of switch <highlight><bold>121</bold></highlight>. Switches for customer premises continue to be developed with new levels of intelligent capability, and some may be capable of interacting with other elements of the present invention without a separate processor between the switch and a LAN such as LAN <highlight><bold>301</bold></highlight>. Processor <highlight><bold>223</bold></highlight> will be required to practice various embodiments of the invention with many existing telephony switches which may be used as element <highlight><bold>121</bold></highlight>. In virtually all cases in practicing the present invention, an instance of unique T-Server <highlight><bold>207</bold></highlight> executing on a computerized platform will be required. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> In a preferred embodiment of the present invention routing intelligence is no longer confined to a central location such as telephony switch <highlight><bold>121</bold></highlight> or T-Server <highlight><bold>207</bold></highlight> running on a connected processor, but distributed in a manner that individual users of the system may customize routing at their own workstations, using individual PCs. This is accomplished in large part by control code executable at a user&apos;s computer workstation. It is not required that the actual code be always at the user&apos;s workstation, as it may be shared code resident at, for example a file server on LAN <highlight><bold>301</bold></highlight>, such as file server <highlight><bold>303</bold></highlight>. The unique code may be accessed from such a server and executed at any one of several workstations such as workstations <highlight><bold>361</bold></highlight> and <highlight><bold>362</bold></highlight> by PC/VDU <highlight><bold>331</bold></highlight> and PC/VDU <highlight><bold>332</bold></highlight> respectively. The location of stored code, and access to such code is not, however germane to the invention. In embodiments of the invention, an individual PC executes unique code to provide call-routing control for an individual. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> In embodiments of the present invention, T-Server <highlight><bold>207</bold></highlight> is adapted to cooperate with code executed at individual PCs to route incoming calls. In this unique routing process there are at least two different mechanisms that may be used. In one mechanism, all calls are routed to a single routing point, and each individual routing application registers with that routing point. In this case a record of each call is broadcast on LAN <highlight><bold>301</bold></highlight>, as will be described more fully below, and filtering occurs at each PC router. In a second mechanism there may be a virtual routing point for each PC using a personal router on the LAN. In this second case there is no need to broadcast call particulars on the LAN. This second alternative is typically more expensive than the first, and there are currently rather severe limitations on how many automatic call distribution (ACD) queues or routing points may be allocated on a typical central switch. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, and presuming the first of the two mechanisms described immediately above, with each incoming call, an overall record of the call, prior to routing, is broadcast on LAN <highlight><bold>301</bold></highlight>. This overall record can take a number of different forms, of which the example in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is just one exemplary form. In this example the overall record consists of four data portions. One data portion consists of elements <highlight><bold>201</bold></highlight> and <highlight><bold>202</bold></highlight>. Data element <highlight><bold>201</bold></highlight> identifies this portion as the caller ID associated with the incoming call, and element <highlight><bold>202</bold></highlight> is the caller ID number. A second data portion consists of data elements <highlight><bold>203</bold></highlight> and <highlight><bold>204</bold></highlight>. This portion is a data set which may be transmitted via link <highlight><bold>210</bold></highlight> to processor <highlight><bold>223</bold></highlight> in parallel with the incoming call, or may be composed partly of data retrieved from server <highlight><bold>303</bold></highlight>, using other call data as a pointer. Element <highlight><bold>203</bold></highlight> identifies the data as a data set, and element <highlight><bold>204</bold></highlight> is the pointer. Similarly elements <highlight><bold>205</bold></highlight> and <highlight><bold>206</bold></highlight> constitute a direct inward dialing (DID) number, and elements <highlight><bold>207</bold></highlight> and <highlight><bold>208</bold></highlight> fix number of rings. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> A central element in the present invention is that a user at an individual PC runs an instance of a personal router application, providing that user with instant and complete control over routing of calls meant for that user (or, in some cases, associated users). The user&apos;s PC, such as PC/VDU <highlight><bold>331</bold></highlight> is connected typically by LAN to a processor such as processor <highlight><bold>223</bold></highlight>, in turn connected to the central switch, such as switch <highlight><bold>121</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> At the computer portion of an individual workstation, such as PC/VDU <highlight><bold>331</bold></highlight> at workstation <highlight><bold>361</bold></highlight>, the user has access to the local application which is interactive with code executed at T-Server <highlight><bold>207</bold></highlight> at processor <highlight><bold>223</bold></highlight>, to control and customize routing for incoming calls, depending on certain data elements in the broadcast announcement record (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). As a part of this unique capability to program routing responses, the individual user may in some embodiments load to his/her VDU a unique user interface, an example of which is shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a window presentable to a user at an individual workstation, compatible, for example, with Windows operating systems. This is an input and display interface for a personal router, a variation of which may be assigned to each of selected employees to provide these individuals with an ability in conjunction with the premises telephone equipment to customize and periodically adjust the routing of certain incoming calls. In this example, the interface is for company XYZ and limited to employee John Doe. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Through the individual interface, John Doe in this instance, may program in a relatively high-level language, routing preferences for certain incoming calls, according to data broadcast for such calls on LAN <highlight><bold>301</bold></highlight>. In the case where each user has a dedicated routing point, an incoming call is directed to the individual&apos;s computer, and the broadcast is not necessary. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In this example John Doe has programmed his interface to pick up all calls having Caller ID matched with a list &ldquo;list<highlight><bold>1</bold></highlight>&rdquo; after n1 rings. List<highlight><bold>1</bold></highlight> is resident in John Doe&apos;s database associated with his own Personal Router, and John Doe may call up this list and amend, delete, and expand it as he wishes. The number of rings n1 may be any convenient number to accomplish John&apos;s purpose. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> John Doe may program negative lists as well. Although not specifically recommended, a negative list could be used to hang up on all calls that have an ID associated with a company or individual that has been making harassing calls to an employee, or to shunt such calls to a special tracking program or the like. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> John Doe in this instance has also programmed his personal router to send all calls bearing his assigned DID number to the telephone at his desk after 0 rings, and to an answering machine after n2 rings. Associations with data sets may also be made, comparing such data sets to stored profiles and the like. At the bottom of the display in this example a status summary of calls may be provided. A user may choose to have this window resident on his computer screen as a pix-on-pix, or to hide it and call it as needed. Also, it will be apparent to those with skill in the art that it is not strictly required that each selected person having an associated routing interface assigned have a computer at his/her elbow. For those persons not, for one reason or another, inclined to program their own routing, the interface may be called up and done by another, with appropriate access security applied. A secretary or system administrator may perform such functions, using any workstation connected to company LAN <highlight><bold>301</bold></highlight>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The user interface at the user&apos;s workstation can take any of a variety of forms, and have a variety of functionality. Typically, when the user logs on, his system will be configured to execute the unique application to run in the background, and to monitor for incoming calls at all times the user is present and active. It will be apparent to those with skill in the art that this can be done in a variety of ways. The interface, for example, may be a Graphic User Interface (GUI) wherein icons may be used to represent calls, callers, and other users, and the individual user at one workstation may select to display icons as desired. In this alternative embodiment an incoming call may appear on a user&apos;s PC VDU as a small telephone in an announcement bar. Such announcement bars are familiar to those with skill in the art, such as seen on Operating System Desktops, where an e-mail arrival may be indicated by a letter icon and a sound. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> In such an embodiment, by moving the screen cursor to the telephone icon, which may be programmed to &ldquo;ring&rdquo; or to vibrate as though it is ringing, the user may activate a text balloon announcing the caller ID or other call data, or such data may be displayed directly in the icon. The system can be configured in such an embodiment to allow the user to route the call to his own phone with a click, to hang up with a double click, to drag the call to a holding queue (represented by a basket, for example,) to send the call to an answering machine, which may be done by dragging and dropping the telephone icon to an answering machine icon, to transfer the call to another person by dragging and dropping the telephone icon to an icon representing another user (such as the instant user&apos;s secretary or supervisor for example). Those with skill in the art will recognize that the functionality through the use of click and drag-and-drop procedures is very broad indeed. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Actions taken at the personal router interface at an individual PC on LAN <highlight><bold>301</bold></highlight> in embodiments of the present invention are codified as instructions on the LAN to T-Server <highlight><bold>207</bold></highlight> (in most cases) running on a processor such as processor <highlight><bold>223</bold></highlight>, connected to central switch <highlight><bold>121</bold></highlight>. If an individual user at a workstation, for example, has received an indicator of a waiting call, and has dragged the ringing telephone to his secretary&apos;s desk icon in his interface, his personal router interacts with T-Server <highlight><bold>207</bold></highlight> to instruct switch <highlight><bold>121</bold></highlight> to reroute the call to the secretary&apos;s telephone. In a similar manner, most actions at a personal router become instructions to switch <highlight><bold>121</bold></highlight>, and in general each user having access to such a personal router can program responses to calls and respond to incoming calls in real time with a broad set of available responses. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> In embodiments of the invention, not necessarily all calls are routed by personal routers executed on PCs on LAN <highlight><bold>301</bold></highlight>. There may also be overriding routing rules programmed into switch <highlight><bold>121</bold></highlight>, such that certain calls or types of calls are always handled in a certain way. Rules in switch <highlight><bold>121</bold></highlight> may also determine the fate of calls that are not eventually routed by personal routers. For example, all calls alive after seven rings may be switched to a recorded announcement, and the like. In this manner a very broad freedom of routing may be accomplished, with security and flexibility to adapt for changes in the organization. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> It will be apparent to those with skill in the art that the division of code and functionality between server <highlight><bold>303</bold></highlight>, T-Server <highlight><bold>207</bold></highlight> running on processor <highlight><bold>223</bold></highlight>, and individual workstations on the LAN is somewhat arbitrary, with the requirement that individuals at the workstations have interface access to customize and update personal routing rules. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> In another aspect of the present invention a Personal Desktop Router is implemented in a Client-Server architecture. This embodiment is illustrated with the aid of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. In this embodiment a router <highlight><bold>401</bold></highlight> is provided and executes on processor <highlight><bold>223</bold></highlight> which also executes an instance of T-Server <highlight><bold>207</bold></highlight>. Router <highlight><bold>401</bold></highlight> in this instance is a central router having routing rules divided in sections dedicated to each assigned user or DN on LAN <highlight><bold>301</bold></highlight>. Unique Client Interface Packages represented by elements <highlight><bold>401</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>401</bold></highlight><highlight><italic>b </italic></highlight>are provided at individual workstations such as workstation <highlight><bold>361</bold></highlight> and workstation <highlight><bold>362</bold></highlight> connected to LAN <highlight><bold>301</bold></highlight>. Client Interface Packages <highlight><bold>401</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>401</bold></highlight><highlight><italic>b </italic></highlight>are for the purpose of allowing users at the workstations to edit their own personal routing rules, much as has been described above for personal routers according to embodiments of the present invention, wherein the routers execute at the workstations. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> In this Client-Server embodiment of the present invention, the actual router software exists and executes as one router <highlight><bold>401</bold></highlight>. Client Packages <highlight><bold>410</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>410</bold></highlight><highlight><italic>b </italic></highlight>may be implemented as a Graphical User Interface (GUI) with iconic drag and drop features as described above with reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, or may be of another suitable type designed to allow interaction with router <highlight><bold>401</bold></highlight>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> It will be apparent to one with skill in the art that router <highlight><bold>401</bold></highlight>, in this embodiment, is not required to reside in processor <highlight><bold>223</bold></highlight>, but may reside in any other machine capable of executing the router and connected or coupled to LAN <highlight><bold>301</bold></highlight>, such as switch <highlight><bold>121</bold></highlight>. The router could be executed, for example, on a server on the Internet, and accessed by a WEB browser by a client connected to LAN <highlight><bold>301</bold></highlight>. It will also be apparent to one with skill in the art that while router function does not occur at individual workstations <highlight><bold>361</bold></highlight> and <highlight><bold>362</bold></highlight> in this particular embodiment, editing capabilities provided to the user via client packages <highlight><bold>401</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>401</bold></highlight><highlight><italic>b </italic></highlight>can remain essentially the same as described in previous embodiments taught herein. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> In typical embodiments, router <highlight><bold>401</bold></highlight> is configured to allow a group manager or system agent to perform higher level configurations to routing rules, such as type of calls available, call parameters, user function or location changes, etc., while individual users may, through their interfaces, configure routing rules for their own calls, within the boundaries set by the supervisor. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> It will be apparent to one with skill in the art that any configurational division of editing capabilities may be employed with reference to routing rules as they may exist in any given application without departing from the spirit and scope of the present invention. A server-based router such as router <highlight><bold>401</bold></highlight> in this embodiment, wherein a unique client package is provided for editing purposes at a user&apos;s workstation, such as workstation <highlight><bold>361</bold></highlight>, is heretofore unknown to the inventor. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In the embodiment illustrated by <cross-reference target="DRAWINGS">FIG. 4</cross-reference> communication over analog lines <highlight><bold>105</bold></highlight> and data link <highlight><bold>210</bold></highlight>, and other functions of the system, is essentially the same in method as is illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and described above with reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Also, network cloud <highlight><bold>100</bold></highlight> and the components therein are essentially the same as in the embodiment in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. For this reason much detail as to the dynamics of and paths of communication in an embodiment of the present invention with respect to <cross-reference target="DRAWINGS">FIG. 4</cross-reference> are not repeated here. </paragraph>
</section>
<section>
<heading lvl="1">Virtualized Computer-Telephony Integrated Link (<highlight><bold>3211</bold></highlight>-<highlight><bold>3213</bold></highlight>) </heading>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> To help create a context for a detailed description of preferred embodiments of the present invention which follow, attention is first directed to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, which is a block diagram of a call-routing system in the prior art. In the system of <cross-reference target="DRAWINGS">FIG. 5 a</cross-reference> call-in center <highlight><bold>1150</bold></highlight> is illustrated having two telephones <highlight><bold>1162</bold></highlight> and <highlight><bold>1172</bold></highlight>. As was described above in the background section, the present invention is particularly adaptable to such call-in centers wherein a telephony switch is not a part of the equipment at the call-in center, thus no telephony switch is shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> at call-in center <highlight><bold>1150</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> It will be apparent to those with skill in the art that there may be just one phone in call-in center, or there may be several more than the two shown. Two telephones is an arbitrary choice for purposes of illustration and description. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> It is common and desirable at call-in centers for agents who man the phones to have at hand a personal computer (PC) or a data terminal of some description including a video display and processor. Access to such a computerized system allows the agent to recall and display data pertaining to a caller, and also other information of use in dealing with and helping caller, such as technical information about products and product use. Although several types of such data terminals are known, PCs are assumed here for purposes of description and illustration. A PC <highlight><bold>1161</bold></highlight> with a display is shown at hand for an agent using telephone <highlight><bold>1162</bold></highlight> and a PC <highlight><bold>1171</bold></highlight> is shown proximate telephone <highlight><bold>1172</bold></highlight> for use by an agent at telephone <highlight><bold>1172</bold></highlight>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> In a very simple system there may be just one telephone and one PC proximate the telephone, therefore just a single equipped agent constituting the call-in center. In the system of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> having two telephones, there are also two PCs. Each PC and associated telephone is considered here to constitute an agent station. Agent station <highlight><bold>1160</bold></highlight> comprises telephone <highlight><bold>1162</bold></highlight> and PC <highlight><bold>1161</bold></highlight>, and agent-station <highlight><bold>1170</bold></highlight> comprises telephone <highlight><bold>1172</bold></highlight> and PC <highlight><bold>1171</bold></highlight>. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> In systems of the sort depicted by <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, having two or more agent stations, it is desirable that the PCs be connected in a Local Area Network (LAN), and this connectivity is shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> with PCs <highlight><bold>1161</bold></highlight> and <highlight><bold>1171</bold></highlight> connected on a LAN <highlight><bold>1152</bold></highlight> wherein a data file server <highlight><bold>1153</bold></highlight> is also connected. Data file server <highlight><bold>1153</bold></highlight> in this system is the repository of customer data and the like accessible to agents manning the phones. Though not shown in FIG. <highlight><bold>5</bold></highlight> it will be apparent to those with skill in the art that there may be other servers on the LAN or elsewhere in the network as known in the art. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Telephone calls in the system of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> are provided to telephone <highlight><bold>1162</bold></highlight> on line <highlight><bold>1164</bold></highlight> and to telephone <highlight><bold>1172</bold></highlight> on line <highlight><bold>1174</bold></highlight> from essentially anywhere represented by network cloud <highlight><bold>1100</bold></highlight>. Cloud <highlight><bold>1100</bold></highlight> could represent a relatively small local calling area, a regional area, a single phone company or even the phone system of the entire planet. Calls are forwarded by telephony switches represented by telephony switch <highlight><bold>1120</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Calls <highlight><bold>1104</bold></highlight> intended specifically for call-in center <highlight><bold>1150</bold></highlight> typically are received at Service Control Points (SCP) represented by SCP <highlight><bold>1102</bold></highlight>, which are organized typically with one or more 800 numbers or the like. Calls received and processed at SCP <highlight><bold>1102</bold></highlight> are forwarded to switch <highlight><bold>1120</bold></highlight> which routes the calls to whatever area code and number is assigned to telephones <highlight><bold>1162</bold></highlight> and <highlight><bold>1172</bold></highlight>. Other calls <highlight><bold>1122</bold></highlight> may also come into telephony switch <highlight><bold>1120</bold></highlight> and be routed to call-in center <highlight><bold>1150</bold></highlight>. As is known in the art, SCP <highlight><bold>1102</bold></highlight> is also a telephony switch. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Also as is known in the art, there may be equipment associated with SCP <highlight><bold>1102</bold></highlight> to provided some additional functionality, such as an adjunct processor and an intelligent peripheral. For simplicity&apos;s sake these are not shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, but <cross-reference target="DRAWINGS">FIG. 5</cross-reference> may be considered as typical of many prior art systems. In the rather simple system of the prior art represented by <cross-reference target="DRAWINGS">FIG. 5</cross-reference> some data (such as caller ID for example, and Dialed Number Information Service &lcub;DNIS&rcub;), may be associated with calls forwarded to call-in center <highlight><bold>1150</bold></highlight>. Such data to be useful in the system of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> must be received by specialized equipment, such as familiar caller-ID boxes or telephone sets adapted to use the information being sold to people for home and business use. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> Attention is now directed to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, wherein a call-in system known to the present inventors is illustrated. In this system SCP <highlight><bold>1102</bold></highlight> receiving calls <highlight><bold>1104</bold></highlight> intended for call-in center <highlight><bold>1150</bold></highlight> has a connection to an adjunct processor <highlight><bold>1106</bold></highlight> in communication with both an intelligent peripheral <highlight><bold>1101</bold></highlight> and a call-distribution processor <highlight><bold>1108</bold></highlight>. There is further a processor <highlight><bold>1116</bold></highlight> connected by a two-way communication link to call-distribution processor <highlight><bold>1110</bold></highlight>. Processor <highlight><bold>1116</bold></highlight> comprises an instance of a unique application termed by the inventors a Telephony Server <highlight><bold>1114</bold></highlight>, or T-Server, and a Statistical Server (Stat-Server) <highlight><bold>1112</bold></highlight>. T-Server <highlight><bold>1114</bold></highlight> and functions provided by the T-Server are described in detail in the related patent applications listed above and incorporated herein by reference. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> In the system of <cross-reference target="DRAWINGS">FIG. 6 a</cross-reference> processor <highlight><bold>1151</bold></highlight> is provided at call-in center <highlight><bold>1150</bold></highlight>, running a second instance of T-Server application <highlight><bold>1114</bold></highlight>. Processor <highlight><bold>1151</bold></highlight> is coupled to processor <highlight><bold>1116</bold></highlight> in network cloud <highlight><bold>1100</bold></highlight> by a network link <highlight><bold>1118</bold></highlight>, and to LAN <highlight><bold>1152</bold></highlight> by a network adapter. There is in addition a CTI connection <highlight><bold>1119</bold></highlight> between telephony switch <highlight><bold>1120</bold></highlight> in network cloud <highlight><bold>1100</bold></highlight> and processor <highlight><bold>1151</bold></highlight> at call-in center <highlight><bold>1150</bold></highlight>. CTI connection <highlight><bold>1119</bold></highlight> may be an ISDN link or other data-type connection allowing transfer of CTI data and commands. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> In the system of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> information garnered in initial processing with use of IP <highlight><bold>1101</bold></highlight> may be provided by T-Server <highlight><bold>1114</bold></highlight> at processor <highlight><bold>1116</bold></highlight> to T-Server <highlight><bold>1114</bold></highlight> running on processor <highlight><bold>1151</bold></highlight> at the call-in center. This data can be used, then, ahead of a routed call, to, for example, to extract further data regarding a caller from a customer data base in file server <highlight><bold>1153</bold></highlight>, and to provide the transferred and retrieved data at the PC display, such as PC <highlight><bold>1161</bold></highlight>, proximate the telephone to which a call has been routed, for use by the agent manning that telephone. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Further, CTI transactional data retrieved from switch <highlight><bold>1120</bold></highlight> (line busy, line available, and the like), may be provided to T-Server <highlight><bold>1114</bold></highlight> at processor <highlight><bold>1116</bold></highlight>, and in some cases in raw or processed form to Stat-Server <highlight><bold>1112</bold></highlight> to be used in routing by CD processor <highlight><bold>1108</bold></highlight>. Many other functions described in the related applications listed above may now also be accomplished. Still further, Stat-Server <highlight><bold>1114</bold></highlight> running on processor <highlight><bold>1151</bold></highlight> can issue CTI commands to switch <highlight><bold>1120</bold></highlight> in the network cloud via CTI link <highlight><bold>1119</bold></highlight>. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Although the system of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> may be used to provide many CTI functions, there is a great dependence on telephony switch <highlight><bold>1120</bold></highlight>. Some older switches are not capable of CTI functions and data sharing, and some others are very limited in their functions. Moreover, the organization that provides a call-in center under these circumstances has no control over the switches in the network cloud, and it may not be practical for such an organization to purchase and install an expensive CTI-capable switch on the premises of the call-in center. What is needed is an apparatus and methods that will provide CTI functionality in the absence of a workable CTI link, such as link <highlight><bold>1119</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0064" lvl="7"><number>&lsqb;0064&rsqb;</number> Virtual CTI Link </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram of a call and information routing and call-center system according to an embodiment of the present invention. The system of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> has all of the connectivity and functionality of the system of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, plus a data connection between each telephone in the call-in center and the associated PC. For example, in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, PC <highlight><bold>1161</bold></highlight> is connected to telephone <highlight><bold>1162</bold></highlight> by link <highlight><bold>1163</bold></highlight>, and PC <highlight><bold>1171</bold></highlight> is connected to telephone <highlight><bold>1172</bold></highlight> by data link <highlight><bold>1173</bold></highlight>. Moreover, as previously described, each PC is connected on LAN <highlight><bold>1152</bold></highlight>, which also connects to file server <highlight><bold>1153</bold></highlight> and to processor <highlight><bold>1151</bold></highlight> running an instance of T-Server <highlight><bold>1114</bold></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> There are a number of different ways a telephone and PC may be connected, such as by a serial port and circuitry in the telephone and operating code in the PC such that the PC may monitor transactions of the telephone, including on-hook, off-hook, incoming caller-ID, ringing instance, and so forth. The PC via the data link may also exercise control over telephone functions. With this unique connectivity and adaptation, assuming all of the telephones in a call-in center are thus connected and adapted, T-Server <highlight><bold>1114</bold></highlight> running on processor <highlight><bold>1151</bold></highlight> may acquire in aggregate all of the information otherwise available from switch <highlight><bold>1120</bold></highlight> via CTI connection <highlight><bold>1119</bold></highlight>. T-Server <highlight><bold>1114</bold></highlight> on processor <highlight><bold>1151</bold></highlight> may then perform as though a fully workable CTI connection <highlight><bold>1119</bold></highlight> to switch <highlight><bold>1120</bold></highlight> is established. </paragraph>
<paragraph id="P-0067" lvl="7"><number>&lsqb;0067&rsqb;</number> Call and Data Correspondence </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> One of the important functions performed is identification of callers, retrieval of data relating to callers, and transmittal of such data to be displayed at the PC associated with each telephone at each agent station. The advantage to all is readily apparent. The agent fielding a call is thus more prepared to deal with the caller, and will have information readily at hand. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> To provide the call and data display functionality desired it is, of course, necessary that a caller&apos;s identity be established and the caller&apos;s correct data be retrieved for display. There are some instances in the system depicted in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> and described herein, wherein such correspondence may be a problem. Consider, for example, the circumstance wherein an original call has been routed to telephone <highlight><bold>1162</bold></highlight>. The origination of the call and caller ID are not available in the system of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> (with a non-functioning link <highlight><bold>1119</bold></highlight>) until the call is connected to telephone <highlight><bold>1162</bold></highlight>. At that point the necessary information is transferred to T-Server <highlight><bold>1114</bold></highlight> at processor <highlight><bold>1151</bold></highlight>, and data specific to the caller may be retrieved and displayed at PC <highlight><bold>1161</bold></highlight>. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Consider now the further circumstance that after the agent answers and the data retrieval begins, the original caller hangs up or is otherwise disconnected, and a second call <highlight><bold>1122</bold></highlight>, a random call, entering the system not through SCP <highlight><bold>1102</bold></highlight> but directly into switch <highlight><bold>1120</bold></highlight>, goes to telephone <highlight><bold>1162</bold></highlight>. This circumstance could occur in a number of different ways, including a misdialed or misrouted call. There are also other sequences of events that could result in the same mismatch between call and data. Unless some action is taken, the data will be retrieved and displayed, although there will no correspondence between the data and the caller. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> In this circumstance the origination information, which may be such as caller ID information or DNIS information, for the second (random) call will not indicate the call originates at SCP <highlight><bold>1102</bold></highlight>. In an embodiment of the present invention, origination data transmitted to T-Server <highlight><bold>1114</bold></highlight> at processor <highlight><bold>1151</bold></highlight> indicating the call last received was not through a valid SCP will cause any data being prepared for display at the agent station to be halted. In some embodiments, depending on the capability of switch <highlight><bold>1120</bold></highlight>, T-Server <highlight><bold>1114</bold></highlight> on processor <highlight><bold>1151</bold></highlight> may cause such non-SCP calls to be disconnected and/or rerouted, by command over link <highlight><bold>1119</bold></highlight>. </paragraph>
<paragraph id="P-0072" lvl="7"><number>&lsqb;0072&rsqb;</number> Voice Extensions Through Integrated Agent Workstations </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> The direct connection of a telephone to a PC connected on a LAN to a processor with an operating T-Server provides a platform for a number of voice extensions useful in the overall process of customer service through call-in centers. Several such voice extensions in embodiments of the present invention are described herein below. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> Call recording is a major need in customer service operations of the sort described herein, especially in operations dealing with financial markets and utilities. Such recording operations in current art are typically quite expensive to implement and difficult to manage. In an embodiment of the present invention an improved call recording facility is provided by virtue of the connection of the telephone to the PC by data link, and the functionality afforded through LAN <highlight><bold>1152</bold></highlight> and code as a part of T-Server <highlight><bold>1114</bold></highlight>. In this embodiment a digital voice rendition of both parties to a call is transmitted on link <highlight><bold>163</bold></highlight> (for example) to PC <highlight><bold>1161</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> In one embodiment of the present invention all calls are recorded, subject of course to local laws governing such matters, and provision is made for selective archiving of recorded conversations. The recording is all digital, and may be accomplished in a number of ways, utilizing a number of commercially available hardware and software entities, such as those marketed under the name SoundBlaster&trade;. The LAN connection and availability of data servers such as server <highlight><bold>1153</bold></highlight> provide for the rather large amount of digital data needed for such a recording operation. In this embodiment organization of the recorded database can be done in a variety of ways, categorized by agent, by subject, by product, and so on, and relational cross-referencing may be done as well, providing a well of information not before available in such call-in centers. In addition interactive search and retrieve functionality, and interactive report generation is provided. In another embodiment of the invention digital voice recording is provided on demand, under control of the resident agent and/or the agent&apos;s supervisor. It will be apparent to those with skill in the art that there are many different schemes that may be employed for digital voice recording, using the uniquely connected and managed apparatus of the present invention. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> In other embodiments of the present invention voice playback is provided, with pre-recorded massages played to a caller under agent or Host control. Such pre-recorded messages may be recorded by an agent or other person, and stored either locally in the PC or more remotely, such as on a server connected to LAN <highlight><bold>152</bold></highlight>. Such messages can include greetings, mandatory messages required under law in some cases, disclaimers, and all kinds of messages that may be very repetitive for an agent. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> In other embodiments of the present invention voice recognition routines are used allowing an agent to invoke displays with spoken initiators on the telephone, recognized in the PC and acted upon either in the PC or through the PC by means of LAN <highlight><bold>1152</bold></highlight> by other servers on the LAN or by T-Server <highlight><bold>1114</bold></highlight>. Voice recognition may also be used to detect upselling opportunities in the course of calls at PC connected telephones. Other voice recognition routines are used in embodiments of the invention to detect abusive or threatening speech, and to automatically save calls or portions of calls that match patterns for such speech. </paragraph>
</section>
<section>
<heading lvl="1">Methods in Computer Simulation of Telephony Systems (<highlight><bold>3226</bold></highlight>) </heading>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The present invention in embodiments described below pertains to computer simulation of telephony call centers and activity and functionality of such centers, and to computer telephony integration (CTI) as applied to such centers. It is well-known in the art that call center architecture and functionality is a rich and varied subject, and it is beyond the scope of the present specification to describe all of the rich variation in call center technology. There are, however, commonalties. Every call center, for example, is centered on a telephony switch, either at a customer&apos;s premises or provided by a telephone company. The telephony switch involved in a call center typically has one or more incoming trunks of telephone channels for receiving telephone calls, and typically one or more outgoing trunks as well, for placing calls back into the network. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Also common to call centers is the fact of connections to telephones at agent stations, which are typically assigned directory numbers. There may be just a few, dozens or even thousands of agent stations controlled by a single call center. In some call centers, only telephones are provided at agent stations. In others there may be computer terminals with display monitors, and the computer terminals may be interconnected on a local area network (LAN) along with network servers of various sorts. Call centers have recently been developed for providing video conferencing with agents. It may be seen that the architecture can be quite varied. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Telephone switches at call centers, depending on the model and manufacture, are capable of certain functions in switching, such as Automatic Call Distribution (ACD), queuing, playing recorded announcements to callers, and much more, and typically the functions available, and the manner in which the functions operate is specific to the make and model of the telephony switch. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> In addition to all of the above, the systems of interest for the present invention are systems having a CTI link capability, enabling connection of a processor executing one or more usually customer-specific applications. According to the reference incorporated above, CTI involves three areas: (1) Call Control, which includes an ability to control and observe telephony calls, switching features and status, automatic call distribution (ACD) systems and ACD agents, and to use switching resources including tone generators and detectors; (2) Telephone Control, which is an ability to control and observe telephone devices; and (3) Media Access, which includes binding telephone calls to other media services. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> In accomplishing the observation and control functions of CTI as listed above, applications executed on a CTI processor can be quite varied in function, really limited only to the imagination of application developers, and presently include such functions as agent-level routing, which will be familiar to those with skill in the art. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a block diagram depicting a simulated system according to a preferred embodiment of the present invention. In <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, boundary <highlight><bold>2100</bold></highlight> encloses software modules that emulate a call center and associated objects; boundary <highlight><bold>2110</bold></highlight> represents a unique CTI Link Interface Library (CLIL); and boundary <highlight><bold>2120</bold></highlight> represents a CTI application. Each of the three broad elements introduced here is described in further detail below. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> In simulating a call center and associated elements as represented in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> by group <highlight><bold>2100</bold></highlight>, it is necessary to simulate both physical and logical elements. These include, but are not necessarily limited to (a) agents telephones and stations, (b) ACD, (c) ACD groups, (d) ACD queues, (e) incoming trunks, (f) outgoing trunks, (g) abstractions of communication relationship between one or more devices, and (h) communication with user applications. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> In the example of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, call center group <highlight><bold>2100</bold></highlight> comprises a software module <highlight><bold>2101</bold></highlight>, termed a Simulated Incoming Call Module (SICM), which emulates incoming calls via one or more trunks <highlight><bold>2104</bold></highlight> to a switch <highlight><bold>2102</bold></highlight>. The SICM operates with an ACD list, and simulates calls to ACD groups. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> Switch <highlight><bold>2102</bold></highlight> is termed in embodiments of the invention a Simulated Telephony Objects Module (STOM), and comprises a variety of micro-emulated objects represented here by elements <highlight><bold>2130</bold></highlight>-<highlight><bold>2132</bold></highlight>, which represent such as agents, ACD queues, and the like, as listed above. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Agent&apos;s telephones and agent stations as micro-emulated objects in a call center simulation will have attributes and statuses including, but not necessarily limited to two-line connections; perhaps a group relationship; and an equipment configuration mode (status when call offered, and status when call released). </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> Other entities that may become micro-emulated objects in a call center module, as represented by elements <highlight><bold>2130</bold></highlight>-<highlight><bold>2132</bold></highlight> include such as an Interactive Voice Response (IVR) system, remote access agents, media services that may appear in a call center switch, and generally, any feature that a call center switch can perform. Outgoing trunks have parameters including but not limited to a list of the outgoing trunks and a probability of answer result, such as answer, not answer, busy, answering machine, fax/modem, SIT tones, and so forth. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> Calls in the simulation procedure have attributes and parameters including but not limited to origination party; destination party; PBX call identifier, DNIS number, ANI, and call status, such as connecting, waiting, alerting, or conferencing. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> Elements <highlight><bold>2130</bold></highlight>-<highlight><bold>2132</bold></highlight>, represented here as icons, may be, as indicated above, any function or behavior associated with STOM <highlight><bold>2102</bold></highlight>, and it will be apparent to those with skill in the art that the three elements shown are not enough to depict all physical and logical elements that would have to be provided for STOM <highlight><bold>2102</bold></highlight> to make a realistic simulation. The elements shown, however, will be sufficient to teach to practice of the invention to those with skill in the art. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Software module <highlight><bold>2103</bold></highlight> represents an outgoing and return module, termed a Simulated Outgoing Dialing Module (SODM), wherein calls placed by STOM <highlight><bold>2102</bold></highlight> over path <highlight><bold>2106</bold></highlight> are modeled, and calls returned as a function of the outgoing calls over path <highlight><bold>2105</bold></highlight> are also modeled. STOM <highlight><bold>2102</bold></highlight> communicates with Interface Library <highlight><bold>2110</bold></highlight> via paths <highlight><bold>2108</bold></highlight> and <highlight><bold>2109</bold></highlight>. Link <highlight><bold>2113</bold></highlight> represents a CTI link from application <highlight><bold>2120</bold></highlight> to switch <highlight><bold>2102</bold></highlight> via CLIL <highlight><bold>2110</bold></highlight>. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> The STOM notifies an application <highlight><bold>2120</bold></highlight> through CLIL <highlight><bold>2110</bold></highlight> of arriving calls, and data associated with arriving calls, as well changing status of telephony objects and statuses. STOM <highlight><bold>2102</bold></highlight> receives requests from application <highlight><bold>2120</bold></highlight> via CLIL <highlight><bold>2110</bold></highlight> to change status of agents phones and stations, such as login, logout, ready, not ready, or and busy. Requests are also received to change call status, such as answer, reconnect, disconnect, produce new call, transfer call, and include a call to a conference. If requested changes are available the STOM produces the changes and sends notification o the changes to application <highlight><bold>2120</bold></highlight> through CLIL <highlight><bold>2110</bold></highlight>. If requested changes are not available, negative notification is sent. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> In the embodiment of the invention illustrated by <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, although several computer functions are represented that may in a real system, rather than an emulated system, be executed on separate but connected and intercommunicating processors, all of the system represented by <cross-reference target="DRAWINGS">FIG. 8</cross-reference> will be typically executed on a single, relatively powerful computer. The various elements represented are software modules written to intercommunicate, and to simulate the behavior of real telephony systems. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is more than a block diagram representing a system of the invention. <cross-reference target="DRAWINGS">FIG. 8</cross-reference> also represents a user interface wherein the elements are objects represented on a graphical user interface (GUI) as icons. The system of the invention is adapted such that object elements may be selected from a library and interchanged into an interconnected system. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> As an example of the object-oriented nature of the GUI of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, attention is directed to SICM <highlight><bold>2101</bold></highlight>. This software module is a micro-application that, when initiated and operating may simulate calls to STOM <highlight><bold>2102</bold></highlight>. A master SICM is developed that includes all of the characteristics of incoming calls. The master module has input parameters that allow a user to configure the module for certain behavior of interest. As an example, it may be of interest to test an application running as element <highlight><bold>2120</bold></highlight> against a rush of Christmas shoppers placing calls within a certain time frame at a certain rate, with the calls statistically distributed for a range of products for which agents at the emulated call center are adapted to enter orders and schedule deliveries. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> The matter of importance in describing this invention is not the particular nature or statistical distribution of the calls, but the fact that the module has alterable parameters, also known as properties, which a user may manipulate to represent behavior of interest, and that the module is adapted to the system as an object, which may be removed and replaced by another object having a different parameter set. One may then quickly and conveniently alter the incoming conditions for a simulation, and new modules with different parameter sets may be developed off line and switched into the system. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> Attention is now directed to STOM <highlight><bold>2102</bold></highlight>. Iconic elements <highlight><bold>2130</bold></highlight>-<highlight><bold>2132</bold></highlight> are shown as three different shapes in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Each of these elements is a micro emulated object having alterable parameters. Description of an agent object should be adequate to illustrate the nature of the invention in this aspect. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Consider that element <highlight><bold>2130</bold></highlight> is a micro emulated agent module. This module may be selected from a library in the fashion described above for the SICM module, and dragged and dropped into switch <highlight><bold>2132</bold></highlight>. Either before or after addition to the switch, parameters for the module may be accessed and set. It will be apparent to those with skill in the art that there may be a large number of agents assigned to a single call center, and that all of the agents may not have the same assignments or characteristics. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> As an example of the versatility of the unique system, there may be, for example, agents for English speakers who call, and agents who speak Spanish for handling calls from Spanish-speaking customers. Certain agents may be trained for certain functions: to sell certain products, for example, or to provide technical assistance in certain situations. There may be, however, multiple instances of a micro-emulated agent. For example, of a Spanish-speaking agent assigned to first shift duty and trained to sell three specific related products. An icon represented agent, then, will have a multiplicity parameter. In setting up a simulation a user may select an agent, set certain parameters, then set the multiplicity parameter so that the call center will behave as though there were, say, twenty such agents. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> It will be apparent to those with skill in the art that there are several ways parameters may be accessed and set for a micro-emulated object, such as element <highlight><bold>2130</bold></highlight>, which may, for example, represent an agent having particular attributes. In one embodiment, for example, a selected icon representing a micro-emulated object may be caused to display an associated window in the GUI, and the window will have programming fields wherein a user may access and alter (edit) parameters. If the object is an agent, there may be, for example, a parameter field for language, for product knowledge, for shift assignment, and so forth; and, as indicated above, there may also be a parameter for multiplicity. If a simulated agent having a complete set of behavior parameters is to be represented multiple times in a call center simulation, the multiplicity parameter may be set for &ldquo;n&rdquo; instances, then the object will behave in operation of the simulation as &ldquo;n&rdquo; objects. The behavior of such objects can be in preferred embodiments, randomized, so the behavior, where there is a range, is not always the statistical average. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> For example, even though there may be multiple instances of an agent with a certain characterization, it will never be true that every such agent will behave in exactly the same way. Some of the agents may habitually come late or leave early, and others may take longer than others for processing after calls are released. In an aspect of the invention such variations are accounted for by access to a statistical database and random generator. Typically the statistical average behavior of all such agents will be known, and may be stored in a manner to be accessible to the system. Multiple agents, otherwise identical in behavior, are caused to randomly alter their behavior in a way that the statistical average behavior is met. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> It will be apparent to those with skill in the art that the above description of agent functionality and variation, and the method of applying parameters, multiplicity, and statistical behavior is not necessarily limiting in the invention. Many variations are possible, even including programming an individual module for each an every agent in a setup of interest. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> Attention is now directed to CLIL <highlight><bold>2110</bold></highlight> and communication between STOM <highlight><bold>2102</bold></highlight> and CLIL <highlight><bold>2110</bold></highlight>. CLIL is an interface library whose function it is to translate between STOM <highlight><bold>2102</bold></highlight> and application <highlight><bold>2120</bold></highlight> in a particular manner. STOM <highlight><bold>2102</bold></highlight> is configured in a manner that will be common to any of the several makes and models of available telephony switches currently available. Different makes and models of telephony switches communicate with CTI applications in different ways, however, and provide significantly different behavior specific to a particular make and model of switch. Communication may also be characterized by latency considerations. For example, in some real world situations one might wish to test, the telephony switch will be on the customer&apos;s premises, and in others, the telephony switch might be in the network, remote from the customer&apos;s premises. Latency issues in communication will differ by the different switch location, even with the same physical switch. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> CLIL is a switch-dependent layer that controls communication of commands and status over data paths <highlight><bold>2108</bold></highlight>/<highlight><bold>2109</bold></highlight> and CTI link <highlight><bold>2113</bold></highlight>. The function of CLIL <highlight><bold>2110</bold></highlight> is to add switch dependent characteristics to the communication, so one simulated generic call center can be made to appear to a CTI application as a particular make and model of a switch connected in a specific manner. The particular value of CLIL <highlight><bold>2110</bold></highlight> is that an application may be tested against one make and model of a switch, and, by selecting a different layer of software from CLIL <highlight><bold>22110</bold></highlight>, one may then test the same CTI application against a different make and model of switch and/or location and connectivity of a switch user may quickly and conveniently substitute one CLIL setup for another for communication with a switch of interest. </paragraph>
<paragraph id="P-0105" lvl="7"><number>&lsqb;0105&rsqb;</number> Internet Protocol Network Telephony (IPNT) </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> In all of the embodiments and aspects of the invention described above specific example have been drawn from the technological area of conventional intelligent telephony networks, other than what is now known as Internet protocol network telephony, wherein computers simulate telephones through software, microphones, and speakers, and telephony data between such equipped computers is transmitted over Internet connections and directed by servers, such as destination number servers (DNS) in the Internet. In the IPNT world IP addresses are used instead of telephone numbers, and there are differences in the way data packets are formulated and transmitted. Moreover, what may be termed routing is done by such as IP switches and hubs, wherein destination addresses may be changed. These differences, however, are not limiting in embodiments of the present invention. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> In many embodiments of the invention described, the inventions are involved with new and unique ways to use machine intelligence for telephony functions, particularly, but not exclusively, as these functions relate to call centers and intelligent routing of calls. In instances of the invention described, the principles of the invention may also be applied to IPNT without undue experimentation. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> As examples of IPNT application, in those embodiments dealing with personal routing and personal routers, the methods and apparatus described may also be adapted to IPNT so personal routing rules, negotiation, and the like may be provided for IPNT calls as well. In the aspects of the invention dealing with simulation of CTI applications and testing, the applications may apply to IPNT telephony as well as to more conventional telephony systems. Other examples will be apparent to those with skill in the telephony arts. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> It will be apparent to those with skill in the art that there are many alterations that may be made in the embodiments of the invention herein described without departing from the spirit and scope of the invention. Some of these have been described above, such as the use of a telephony server like T-Server <highlight><bold>1207</bold></highlight> running on processor <highlight><bold>1223</bold></highlight>. In some cases such a server is not needed to practice the invention, as was described above. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Many of the functional units of the system in embodiments of the invention may be implemented as code routines in computerized telephony equipment, computer servers, and individual workstations. It is well-known that programmers are highly individualistic, and may implement similar functionality by considerably different routines. Also, the invention may be applied to widely varying hardware systems. Further, hardware used to practice the invention may vary in many ways. There are similarly many other alterations in the embodiments described herein which will fall within the spirit and scope of the present invention in it&apos;s several aspects described. The invention is limited only by the breadth of the claims below. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A telephony call-in center, comprising: 
<claim-text>a plurality of agent stations, individual ones of the agent stations having a telephone and a computer platform including a video display unit (VDU), the telephone and computer platform connected by a Telephone Application Programming Interface (TAPI)-compliant data link; </claim-text>
<claim-text>a local area network (LAN) connecting at least some of the computer platforms at the agent stations; and </claim-text>
<claim-text>a first computer processor connected on the LAN, having a wide area network connection (WAN) adapted to receive computer-simulated telephone calls, and having access to a database; </claim-text>
<claim-text>wherein the computer platform is adapted to retrieve origination data for incoming calls to the telephone, and to use the origination data to correlate the caller with further data retrieved from the database for display on the VDU. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The telephony call-in center of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the first computer processor is adapted to service calls from specific Service Control Points (SCPs) and to block display of data at agent station VDUs for any call not identified as originating at one of the specific SCPs. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The telephony call-in center of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein one or more of the computer platforms are personal computers (PCs). </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The telephony call-in center of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the computer platforms are adapted to report the origination data to the first processor, and the first processor is adapted to correlate the caller with further data retrieved from the database for display on the VDU. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A telephone call-routing system, comprising: 
<claim-text>a call-in center comprising a plurality of agent stations, individual ones of the agent stations having a telephone and a computer platform including a video display unit (VDU), the telephone and the computer platform connected by a Telephone Application Programming Interface (TAPI)-compliant bridge, with a plurality of the computer workstations connected to one another, to a first processor, and to a database on a local area network (LAN); and </claim-text>
<claim-text>a call-routing center comprising a telephony switch adapted to switch telephone calls to the telephones at the call-in center and a processor adapted to route computer-simulated telephone calls to the computer platforms at the agent stations; </claim-text>
<claim-text>wherein the computer workstation is adapted to retrieve origination data for incoming calls, both conventional telephony and computer-simulated, and to report the origination data to the first processor, and wherein the first processor is adapted to use the origination data to correlate the caller with further data retrieved from the database for display on the VDU. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The telephone call-routing system of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein the first processor is adapted to service calls from specific Service Control Points (SCPs) and to block display of data at agent station VDUs for any call not identified as originating at one of the specific SCPs. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The telephone call-routing system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> wherein one or more of the computer workstations are personal computers (PCs). </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. An agent station for a call-in center, comprising: 
<claim-text>a computer platform having a local area network (LAN) adapter, the computer platform adapted for receiving and processing computer-simulated telephone calls; </claim-text>
<claim-text>a telephone having a telephone line port; and </claim-text>
<claim-text>a Telephone Application Programming Interface (TAPI)-compliant bridge connecting the computer workstation and the telephone; </claim-text>
<claim-text>wherein the computer workstation is adapted to retrieve origination data for calls, both calls to the telephone and computer-simulated calls to the computer platform, and to report the origination data on a LAN via the LAN adapter to a processor connected to the LAN. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The agent station of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the computer platform is a personal computer (PC) having a video display unit (VDU). </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A method for correlating displayed data with incoming conventional telephone and computer-simulated telephone calls at a call-in center, comprising steps of: 
<claim-text>(a) connecting individual telephones at the call-in center by a Telephone Application Programming Interace (TAPI)-compliant bridge to individual computer platforms; </claim-text>
<claim-text>(b) connecting each telephone-connected computer workstation on a local area network (LAN) to a processor connected on the LAN, the processor having access to a database storing data to be displayed; </claim-text>
<claim-text>(c) monitoring origination information of incoming calls by the computer workstations; </claim-text>
<claim-text>(d) providing the origination information over the LAN to the LAN-connected processor; and </claim-text>
<claim-text>(e) using the origination information via the processor to correlate data to be displayed with the incoming calls.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002652A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002652A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002652A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002652A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002652A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002652A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002652A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002652A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002652A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
