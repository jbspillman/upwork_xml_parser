<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002587A1-20030102-D00000.TIF SYSTEM "US20030002587A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002587A1-20030102-D00001.TIF SYSTEM "US20030002587A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002587A1-20030102-D00002.TIF SYSTEM "US20030002587A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002587A1-20030102-D00003.TIF SYSTEM "US20030002587A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002587A1-20030102-D00004.TIF SYSTEM "US20030002587A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002587A1-20030102-D00005.TIF SYSTEM "US20030002587A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002587A1-20030102-D00006.TIF SYSTEM "US20030002587A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002587</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10235533</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020906</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04N007/12</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>375</class>
<subclass>240280</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>375</class>
<subclass>240120</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>375</class>
<subclass>240250</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>375</class>
<subclass>240260</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method for dealing with missing or untimely synchronization signals in digital communications systems</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10235533</doc-number>
<kind-code>A1</kind-code>
<document-date>20020906</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09583947</doc-number>
<document-date>20000531</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6470049</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Phuong</given-name>
<middle-name>Vinh</middle-name>
<family-name>Nguyen</family-name>
</name>
<residence>
<residence-us>
<city>Cotati</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>NEXT LEVEL COMMUNICATIONS, INC.</organization-name>
<address>
<city>Rohnert Park</city>
<state>CA</state>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>COVINGTON &amp; BURLING</name-1>
<name-2>ATTN: PATENT DOCKETING</name-2>
<address>
<address-1>1201 PENNSYLVANIA AVENUE, N.W.</address-1>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20004-2401</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method for handling missing or untimely synchronization signals in digital communications systems. Upon detecting the absence of a synchronization signal, an estimation of the absent synchronization signal is made based on a plurality of previously received synchronization signals, and the estimated synchronization signal is used in place of the absent synchronization signal. The estimated synchronization signal is corrected upon the receipt of a subsequent synchronization signal. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to methods for dealing with missing or untimely signals in digital communications systems. More particularly, the present invention relates to methods for handling missing or untimely synchronization signals, including MPEG Program Clock Reference (PRC) signals, in digital communications systems. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> An important constraint in communications systems is the capacity or bandwidth of communications channels. Bandwidth limitations may, for example, limit the amount of information that can be transmitted using a particular channel. Accordingly, considerable effort has been devoted to the development of techniques for compressing the information of a voice conversation or a video program, for example, so that such information can be transmitted using a channel with restricted bandwidth. Compression techniques known to those of skill in the art allow multiple digitized video programs, such as movies, to be transmitted across communications channels that have a fixed amount of bandwidth. Such channels include those derived using twisted wire pair cable, which were historically installed in local telephone systems, and which were designed primarily for analog voice communication. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> A digitized video program, which typically comprises one video signal, one or more audio signals, and one or more data signals, may be compressed by an encoder using a standard such as ISO/IEC Standard 13818, also known as MPEG-2, which is know to those of skill in the art. This may involve, among other techniques, organizing the video program into frames, compressing the video information (for example by eliminating or reducing redundant information in each frame, as well as in adjacent frames), and producing information that enables a decoder or a receiver to &ldquo;decompress&rdquo; or restore the original video program from the compressed information. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Because video compression may employ both temporal as well as spatial compression techniques, an encoder may reorder the compressed video frames before transmitting them. Under such circumstances, the encoder typically embeds synchronization signals in the header of the compressed video frames that tell the decoder when to decode and when to present the corresponding frames. Synchronization signals also help the decoder to keep the video and audio data of each program locked together. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> When multiple programs are multiplexed into a transport stream, an encoder may also need to embed an additional synchronization signal into the transport stream. This additional synchronization signal, which is referred to as the Program Clock Reference (PCR) in the MPEG-2 standard, represents the system clock used to encode a particular program. The system clock signal needs to be transmitted to the decoder in order to help the decoder properly decode and display programs that were encoded using different clocks. That is, time stamps and other synchronization signals embedded by an encoder into a compressed program are only meaningful if the encoder system clock can be recreated at the decoder. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> After a transport stream consisting of multiple compressed programs has been encoded and assembled, the transport stream may also be packetized and passed on to a lower layer in the communications network, which may repacketize the transport stream and embed further information, such as Forward Error Correction (FEC) information, before actually transmitting the stream across a network. For example, MPEG transport stream packets may be placed into a Convergence Sublayer Protocol Data Unit (CS-PDU), mapped into multiple Asynchronous Transfer Mode (ATM) cells, and finally transmitted to a receiving system across an ATM network using twisted wire cable, fiber optic cable, or radio or other communications media. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> As the digital signals in ATM cells travel through an ATM network, the signals, including synchronization signals, can be corrupted due to cell loss, cell misrouting, and bit errors that occur during transmission. In addition, network congestion and traffic conditions may lead to the delay in the transmission or receipt of the digital signals, including the synchronization signals. Because the efficiency of ATM and other packet networks relies in part on the ability of receivers in the networks, as well as the networks themselves, to deal with occasional packet delay and packet loss, it is inevitable that synchronization and other types of signals transmitted across such networks will occasionally be delayed, corrupted, or lost altogether. When compressed video programs are transmitted across packet networks, such delays, corruption, and losses of synchronization signals typically result in a reduction in the quality of the video image presented or displayed at the receiver, or the loss of the image altogether. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> For the foregoing reasons, there is a need for a method of enabling decoders and other digital communications systems receivers to continue to operate when synchronization signals are either delayed, corrupted, or lost altogether. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The present invention is directed to a method for dealing with or handling missing or untimely synchronization signals, such as Presentation Time Stamp (PTS) and Program Clock Reference (PCR) signals, in digital communications systems. Under normal operating conditions, a decoder or other type of receiver receives periodic synchronization signals. In the present invention, when the decoder detects the absence of a synchronization signal, it estimates what the absent synchronization signal would have been, based on the previously received synchronization signals. The decoder then uses the estimated synchronization signal in place of the absent synchronization signal. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In a preferred embodiment, when the decoder receives a subsequent, valid synchronization signal, it corrects the previous estimated synchronization signal, based on the valid synchronization signal. Correcting the estimated synchronization signal results in improved estimation of future missing synchronization signals. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The MPEG-2 standard provides for the transmission of three types of compressed video frames. An Intra-frame, or I-frame, is a complete, digitized video frame that can be decoded without reference to any other frame. A Prediction frame, or P-frame, does not include a complete video image; rather, a P-frame includes information that enables the decoder to predict, with an acceptable degree of accuracy, what the video frame should display, based on prior I-frames or P-frames. A Bi-directional frame, or B-frame, also does not include a complete video image; rather, a B-frame includes information that enables the decoder to predict what the video frame should display, based on either prior or subsequent I-frames or P-frames. If a B-frame depends on a subsequent I-frame or P-frame, the decoder needs to transmit the subsequent I-frame or P-frame prior to the B-frame. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Thus, an I-frame may itself be thought of as a type of synchronization signal, as I-frames &ldquo;reset&rdquo; the decoder, in that the decoder can decode I-frames without reference to any previously received frames. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> When a decoder detects the absence of an I-frame, the present invention teaches that the decoder should keep decoding and processing subsequently-received P-frames and B-frames as if the I-frame had been received. Although the resulting picture quality will not be perfect, it has been found that it will be acceptable, especially in narrowband transmission networks such as twisted wire pair cable networks. Furthermore, it has also been found that the picture quality will improve as more P-frames and B-frames are decoded and presented subsequent to the missing I-frame. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Alternatively, the decoder can construct a &ldquo;null&rdquo; I-frame, comprising an estimated synchronization signal and no video data, and decode the &ldquo;null&rdquo; I-frame in place of the absent I-frame. As before, the estimated synchronization signal can be corrected when the next valid synchronization signal is received, so as to improve the quality of future synchronization signal estimates. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Sometimes synchronization signals are received by a decoder, but on an untimely basis. For example, variations in queueing delays in network switches can result in packet delay variation, or jitter. The presence of jitter introduced by the underlying network or by the protocol layers below the MPEG-2 layer may distort the reconstructed clock at the MPEG-2 decoder. That, in turn, may degrade the quality of the video frames when the synchronization signals are generated from the recovered clock. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Although an MPEG decoder is designed to adjust its phase-locked loop (PLL) to match the frequency of the PCR signal transmitted by an encoder, jitter can result in a phase error between the decoder&apos;s PLL and the PCR signal. According to the present invention, the PLL should be adjusted based on the phase error, but only if the phase error is below a predetermined phase error threshold. If the phase error is at or above the predetermined phase error threshold, the decoder should determine if the error is a spike or an anomaly. If it is, the phase error should be ignored. If it is not, the decoder&apos;s PLL should be adjusted based on a large-error-correction procedure. This avoids adjusting the PLL by the entire amount of the phase error, which could cause undesirable artifacts in the presented image. The specific parameters of the large-error-correction procedure depend on the particular system configuration (e.g., whether the underlying communications network system is an Asymmetric Digital Subscriber Loop (ADSL) system, a Very-high-speed Digital Subscriber Loop (VDSL) system, or a satellite system). </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In addition, the present invention teaches that a decoder can increment an error count every time it detects a phase error, so that the decoder can be reset when the error count reaches a predetermined threshold. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> It is an object of the present invention to improve the performance of MPEG decoders and other digital receivers in the absence of synchronization signals. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> It is another object of the present invention to enable an MPEG decoder or other type of digital communications receiver to handle missing synchronization signals. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> It is a further object of the present invention to enable an MPEG decoder or other type of receiver to estimate absent synchronization signals based on previously received synchronization signals. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> It is a further object of the present invention to enable an MPEG decoder or other type of receiver to correct an estimated synchronization signal upon receipt of a subsequent valid synchronization signal. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> It is a further object of the present invention to enable an MPEG decoder to handle missing I-frames. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> It is a further object of the present invention to reduce the effects of jitter in synchronization signals such as Program Clock Reference (PRC) signals. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The foregoing and other features, aspects, and advantages of the present invention will become more apparent from the following detailed description, which should be read in conjunction with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The accompanying drawings, which are incorporated into and form a part of the specification, illustrate the embodiments of the present invention and, together with the description, serve to explain the principles of the invention. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In the drawings: </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates an MPEG-2 encoder that compresses and transmits multiple programs across a communications network; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an MPEG-2 decoder in which the methods of the present invention may be utilized; </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a simplified MPEG-2 elementary stream; </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an MPEG-2 transport stream packet; </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> provides a flow chart depicting a preferred embodiment of the method of the present invention for handling missing synchronization signals; and </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> provides a flow chart depicting a preferred embodiment of the method of the present invention for handling untimely synchronization information.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The present invention will now be described with reference to the accompanying drawings, which are provided as illustrative examples of preferred embodiments of the present invention. In describing the preferred embodiments illustrated in the drawings, specific terminology is used for the sake of clarity. However, the invention is not intended to be limited to the specific terms that are selected. Rather, each specific term is intended to include all equivalents that operate in a similar or substantially similar manner to accomplish a similar or substantially similar result. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> With reference to the drawings in general, and <cross-reference target="DRAWINGS">FIGS. 1 through 6</cross-reference> in particular, the methods of the present invention are disclosed. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates an MPEG-2 encoder that compresses and transmits multiple programs across a communications network. As depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, Program <highlight><bold>1</bold></highlight> is comprised of video data stream <highlight><bold>101</bold></highlight> and audio data stream <highlight><bold>103</bold></highlight>. Video encoder <highlight><bold>105</bold></highlight> encodes video data stream <highlight><bold>101</bold></highlight> into an MPEG video elementary stream <highlight><bold>111</bold></highlight>. Packetizer <highlight><bold>115</bold></highlight> then packetizes video elementary stream <highlight><bold>111</bold></highlight> into a video packetized elementary stream (PES) <highlight><bold>121</bold></highlight>. Similarly, audio encoder <highlight><bold>107</bold></highlight> encodes audio data stream <highlight><bold>103</bold></highlight> into an MPEG audio elementary stream <highlight><bold>113</bold></highlight>. Packetizer <highlight><bold>117</bold></highlight> then packetizes audio elementary stream <highlight><bold>113</bold></highlight> into an audio PES <highlight><bold>123</bold></highlight>. A 27 MHz clock <highlight><bold>110</bold></highlight> drives both video encoder <highlight><bold>105</bold></highlight> and audio encoder <highlight><bold>107</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the video and data signals comprising Program <highlight><bold>2</bold></highlight> undergo a similar process. Video encoder <highlight><bold>155</bold></highlight> encodes video data stream <highlight><bold>151</bold></highlight> into video elementary stream <highlight><bold>161</bold></highlight>, which packetizer <highlight><bold>165</bold></highlight> then packetizes into video PES <highlight><bold>171</bold></highlight>. Audio encoder <highlight><bold>157</bold></highlight> encodes audio data stream <highlight><bold>153</bold></highlight> into audio elementary stream <highlight><bold>163</bold></highlight>, which packetizer <highlight><bold>167</bold></highlight> then packetizes into audio PES <highlight><bold>173</bold></highlight>. Clock <highlight><bold>160</bold></highlight> drives both video encoder <highlight><bold>155</bold></highlight> and audio encoder <highlight><bold>157</bold></highlight>. Although clock <highlight><bold>110</bold></highlight> and clock <highlight><bold>160</bold></highlight> are both nominally 27 MHz clocks, their actual frequencies may differ slightly. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In the configuration shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, each program has one video data stream and one audio data stream. In alternative configurations (not shown), a program may have no video or audio stream, or multiple video or audio streams. Alternatively, a program may also have data streams that represent neither video nor audio signals. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Returning to the configuration shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, video PES <highlight><bold>121</bold></highlight>, audio PES <highlight><bold>123</bold></highlight>, and clock <highlight><bold>110</bold></highlight> signals are fed into transport stream multiplexer <highlight><bold>180</bold></highlight>. Video PES <highlight><bold>171</bold></highlight>, audio PES <highlight><bold>173</bold></highlight>, and clock <highlight><bold>160</bold></highlight> signals are also fed into transport stream multiplexer <highlight><bold>180</bold></highlight>. In an alternative configuration (not shown), either only one program, or three or more programs may be fed into a transport stream multiplexer. As depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, transport stream multiplexer <highlight><bold>180</bold></highlight> multiplexes the compressed video and data signals of Program <highlight><bold>1</bold></highlight>, the compressed video and data signals of Program <highlight><bold>2</bold></highlight>, a program clock reference (PCR) signal that represents clock <highlight><bold>110</bold></highlight>, and a program clock reference (PCR) signal that represents clock <highlight><bold>160</bold></highlight>, into a combined MPEG transport stream <highlight><bold>191</bold></highlight>. Transport stream <highlight><bold>191</bold></highlight> is then transmitted across communications network <highlight><bold>195</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an MPEG-2 decoder in which the methods of the present invention may be utilized. As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, transport stream decoder <highlight><bold>200</bold></highlight> receives MPEG transport stream <highlight><bold>191</bold></highlight> from communications network <highlight><bold>195</bold></highlight>. Transport stream decoder <highlight><bold>200</bold></highlight> then selects the video and audio streams that correspond to the program that is to be decoded. In the configuration shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, transport stream decoder <highlight><bold>200</bold></highlight> feeds video elementary stream <highlight><bold>201</bold></highlight> into video decoder <highlight><bold>205</bold></highlight>, which decodes video elementary stream <highlight><bold>201</bold></highlight> into video data stream <highlight><bold>211</bold></highlight>. Similarly, transport stream decoder <highlight><bold>200</bold></highlight> feeds audio elementary stream <highlight><bold>203</bold></highlight> into audio decoder <highlight><bold>207</bold></highlight>, which decodes audio elementary stream <highlight><bold>203</bold></highlight> into audio data stream <highlight><bold>213</bold></highlight>. In an alternative configuration (not shown), multiple video, audio, or data streams may be decoded. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, transport stream decoder <highlight><bold>200</bold></highlight> also feeds the PCR signal corresponding to the clock of the program being decoded into a phase-locked loop (PLL). More specifically, the MPEG-2 decoder shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> comprises 27 MHz voltage-controlled oscillator (VCO) <highlight><bold>260</bold></highlight>, whose output clocks the MPEG-2 decoder. Phase detector <highlight><bold>263</bold></highlight> measures the phase difference between the clock signal generated by VCO <highlight><bold>260</bold></highlight> and PCR signal <highlight><bold>250</bold></highlight>. As depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the phase difference is filtered through low-pass filter <highlight><bold>265</bold></highlight> and fed back into VCO <highlight><bold>260</bold></highlight>. The feedback into VCO <highlight><bold>260</bold></highlight> is designed to adjust VCO <highlight><bold>260</bold></highlight> to match PCR signal <highlight><bold>250</bold></highlight>. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a simplified depiction of an MPEG-2 video elementary stream. The segment of the stream shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is comprised of six frames. The frames are either I-frames, P-frames, or B-frames. Encoded with each frame in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a Presentation Time Stamp (PTS), which instructs the decoder when to present or display the corresponding frame, and a Decode Time Stamp (DTS), which instructs the decoder when to decode the corresponding time stamp. Both time stamps are needed because bi-directional temporal compression requires frames to be sent to the decoder out of sequence. Thus, in the example shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, P-frame <highlight><bold>303</bold></highlight>, which is to be presented at time n&plus;<highlight><bold>4</bold></highlight>, is sent to the decoder before B-frame <highlight><bold>305</bold></highlight> and B-frame <highlight><bold>307</bold></highlight>, which are to be presented at times n&plus;<highlight><bold>2</bold></highlight> and n&plus;<highlight><bold>3</bold></highlight>, respectively. This is because the decoder may need to refer to P-frame <highlight><bold>303</bold></highlight> before it can decode B-frame <highlight><bold>305</bold></highlight> and B-frame <highlight><bold>307</bold></highlight>. As the Decode Time Stamps (DTS) show, in the example depicted in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the decoder is to decode P-frame <highlight><bold>303</bold></highlight> at time n&plus;<highlight><bold>1</bold></highlight>, decode B-frame <highlight><bold>305</bold></highlight> as soon as it is received and present it at time n&plus;<highlight><bold>2</bold></highlight>, decode B-frame <highlight><bold>307</bold></highlight> as soon as it is received and present it at time n&plus;<highlight><bold>3</bold></highlight>, and present P-frame <highlight><bold>303</bold></highlight> at time n&plus;<highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is an illustration of an MPEG-2 transport stream packet. In the illustration shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the overall length of the transport stream packet is fixed at 188 bytes, but the length of the packet header (and correspondingly the length of the packet payload) may vary. In the example shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the packet header <highlight><bold>401</bold></highlight> comprises a Program Clock Reference (PCR) signal <highlight><bold>410</bold></highlight>, which represents the 27 MHz clock used by the encoder of the payload data. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> provides a flow chart depicting a preferred embodiment of the method of the present invention for handling missing synchronization signals. In Step <highlight><bold>500</bold></highlight> of the embodiment depicted in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the MPEG decoder determines if it receives a synchronization signal. If so, the method proceeds to Step <highlight><bold>510</bold></highlight>, where the decoder determines whether the absent-synchronization-signal flag is set. Under non-error conditions, the flag will not be set, and the method proceeds to Step <highlight><bold>520</bold></highlight>, where it records synchronization information based on the received synchronization signals. In a preferred embodiment, the recorded synchronization information may simply comprise a log of the received synchronization signals. In an alternative preferred embodiment, the recorded synchronization information may be a histogram of the interarrival times of the synchronization signals. Following Step <highlight><bold>520</bold></highlight>, the method proceeds back to Step <highlight><bold>500</bold></highlight>, where the decoder again determines if it receives a synchronization signal. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> In the preferred embodiment shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, if the decoder does not receive a synchronization signal, it proceeds to Step <highlight><bold>530</bold></highlight>, where it sets a flag indicating an absent synchronization signal, and then to Step <highlight><bold>540</bold></highlight>, where it estimates the absent synchronization signal based on recorded synchronization information. In a preferred embodiment in which the recorded synchronization information comprises a histogram of the interarrival times of the synchronization signals, the estimated synchronization signal may be the arrival time of the previous synchronization signal plus the mean of the histogram of the interarrival times of the synchronization signals. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, in a preferred embodiment the method then proceeds to Step <highlight><bold>550</bold></highlight>, where the estimated synchronization signal is used in place of the absent synchronization signal. In a preferred embodiment depicted in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the method then returns to Step <highlight><bold>500</bold></highlight>, where the decoder again determines if it receives a synchronization signal. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> As described above, when the decoder receives a synchronization signal, the preferred embodiment depicted in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> proceeds to Step <highlight><bold>510</bold></highlight>, where the decoder determines whether the absent-synchronization-signal flag is set. In the preferred embodiment shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, if the flag is set, the method proceeds to Step <highlight><bold>560</bold></highlight>, where the previously estimated synchronization signal is corrected based on the received synchronization signal. In an alternative preferred embodiment (not shown), the correction of the estimated synchronization signal may also be based on the recorded synchronization information. Returning to the preferred embodiment depicted in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the method then proceeds to Step <highlight><bold>570</bold></highlight>, where the absent-synchronization-signal flag is reset, and then to Step <highlight><bold>520</bold></highlight>, where the method records synchronization information based on the received synchronization signals. Following Step <highlight><bold>520</bold></highlight>, the preferred embodiment of the method shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> proceeds back to Step <highlight><bold>500</bold></highlight>, where the decoder again determines if it receives a synchronization signal. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> provides a flow chart depicting a preferred embodiment of the method of the present invention for reducing the effects of untimely synchronization signals. In Step <highlight><bold>600</bold></highlight> of the embodiment depicted in <cross-reference target="DRAWINGS">FIG. 6, a</cross-reference> phase error is measured between the signal generated by the phase-locked Loop (PLL) of the decoder and the Program Clock Reference (PCR) synchronization signal received by the decoder. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> As shown in Step <highlight><bold>610</bold></highlight>, if there is no phase error, the method returns to Step <highlight><bold>600</bold></highlight>, where it again measures the phase error between the decoder&apos;s PLL signal and the received PCR signal. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In the preferred embodiment shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, if there is a phase error, the method proceeds to Step <highlight><bold>620</bold></highlight>, where it increments an error count, and then to Step <highlight><bold>630</bold></highlight>, where the error count is compared against a predetermined error count threshold. If the error count exceeds the error count threshold, the preferred embodiment of the method depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> proceeds to Step <highlight><bold>640</bold></highlight>, where it resets the decoder, and then starts over at Step <highlight><bold>600</bold></highlight>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> As shown in the preferred embodiment depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, if the error count is below the error count threshold, the method proceeds to Step <highlight><bold>650</bold></highlight>, where the phase error is compared to a predetermined phase error threshold. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> In the preferred embodiment depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, if the phase error is below the phase error threshold, the method proceeds to Step <highlight><bold>660</bold></highlight>, where the decoder PLL is adjusted based on the measured value of the phase error. Following Step <highlight><bold>660</bold></highlight>, the preferred embodiment of the method shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> returns to Step <highlight><bold>600</bold></highlight>, where the method starts over. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> If the phase error exceeds the predetermined phase error threshold, the preferred embodiment of the method shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> proceeds to Step <highlight><bold>670</bold></highlight>, where a determination is made if the phase error is a spike or an anomaly, meaning that a similarly large error has not occurred within a predetermined previous time period. In a preferred embodiment involving a VDSL transmission system in a communications networks comprised of twisted wire pair cables, the predetermined time period is approximately 0.75 milliseconds. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> In the preferred embodiment depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, if it is determined that the phase error is a spike, the phase error is simply ignored, as shown in Step <highlight><bold>680</bold></highlight>, since the phase error is likely to have been caused by a noise burst or other anomaly that is not likely to occur again. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> In a preferred embodiment, if it is determined that the phase error is not a spike, the decoder PLL needs to be adjusted. However, the PLL should not be adjusted by the entire phase error, as doing so may cause undesirable artifacts in the presented image. Rather, the PLL is preferably adjusted according to a large-error-correction procedure, as shown in Step <highlight><bold>690</bold></highlight> of the preferred embodiment shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. Such a procedure may involve adjusting the PLL by a predetermined fixed amount, or by a fraction of the measured phase error. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> In a preferred embodiment involving a VDSL transmission system over a communications network comprised of twisted wire pair cables, the decoder stores both the maximum correction that the PLL can tolerate, and an average of the magnitude of previous PLL error corrections. If the measured phase error is substantially larger than the maximum tolerable PLL correction&mdash;e.g., 3-4 times larger than the maximum tolerable correction&mdash;the PLL is adjusted by the maximum tolerable correction. Otherwise, the PLL is adjusted by the average of previous PLL error corrections. Other suitable procedures will be apparent to those of skill in the art. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, in a preferred embodiment, after the phase error is either ignored in Step <highlight><bold>680</bold></highlight> or acted upon in Step <highlight><bold>690</bold></highlight>, the method returns to Step <highlight><bold>600</bold></highlight>, where the method starts over. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Although the invention has been particularly described by reference to specific embodiments, it should be readily apparent to those of ordinary skill in the art that various changes and modifications may be made in form and details without departing from the spirit and scope of the invention. The appended claims are intended to cover such changes and modifications, so as to afford broad protection to the invention and its equivalents. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. In an MPEG decoder for receiving video signals formed into a combination of I-frames, P-frames, and B-frames, a method for decoding MPEG signals when the absence of an I-frame is detected, comprising the step of decoding P-frames and B-frames that are received subsequent to the absent I-frame as if the absent I-frame had been received. </claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. In an MPEG decoder for receiving video signals formed into a combination of I-frames, P-frames, and B-frames, a method for decoding MPEG signals when the absence of an I-frame is detected, comprising the steps of: 
<claim-text>a) creating a new I-frame comprising an estimated synchronization signal; and </claim-text>
<claim-text>b) decoding the new I-frame in place of the absent I-frame. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the estimated synchronization signal comprises an estimated Presentation Time Stamp (PTS). </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the estimated synchronization signal comprises an estimated Program Clock Reference (PCR). </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. In an MPEG decoder for receiving video signals formed into a combination of I-frames, P-frames, and B-frames, a method for decoding MPEG signals when the absence of an I-frame is detected, comprising: 
<claim-text>(a) receiving a plurality of synchronization signals prior to detecting the absence of an I-frame; </claim-text>
<claim-text>(b) creating a new I-frame comprising an estimated synchronization signal wherein the estimated synchronization signal is based on the plurality of received synchronization signals; and </claim-text>
<claim-text>(c) decoding the new I-frame in place of the absent I-frame. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, further comprising the steps of: 
<claim-text>a) receiving a valid synchronization signal after detecting the absence of an I-frame; and </claim-text>
<claim-text>b) correcting the estimated synchronization signal based on the valid synchronization signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the correcting step is further based on the plurality of received synchronization signals. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. In an MPEG decoder comprised of a Phase-Locked Loop (PLL) that generates a synchronization signal, wherein the MPEG decoder receives a plurality of Program Clock Reference (PCR) signals, a method for reducing the effect of jitter in the PCR signals, comprising the steps of: 
<claim-text>a) measuring a phase error between the PLL synchronization signal and the received PCR signal; and </claim-text>
<claim-text>b) adjusting the PLL based on the phase error if the phase error is below a predetermined phase error threshold. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. In an MPEG decoder comprised of a Phase-Locked Loop (PLL) that generates a synchronization signal, wherein is the MPEG decoder receives a plurality of Program Clock Reference (PCR) signals, a method for reducing the effect of jitter in the PCR signals, comprising the steps of: 
<claim-text>a) measuring a phase error between the PLL synchronization signal and the received PCR signal; and </claim-text>
<claim-text>b) adjusting the PLL based on the phase error if the phase error is below a predetermined phase error threshold. </claim-text>
<claim-text>c) determining, when the phase error is above a predetermined phase error threshold, whether the phase error is a spike; </claim-text>
<claim-text>d) ignoring the phase error if the phase error is a spike; and </claim-text>
<claim-text>e) adjusting the PLL according to a predetermined large-error-correction procedure if the phase error is not a spike. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. In an MPEG decoder comprised of a Phase-Locked Loop (PLL) that generates a synchronization signal, wherein the MPEG decoder receives a plurality of Program Clock Reference (PCR) signals, a method for reducing the effect of jitter in the PCR signals, comprising the steps of: 
<claim-text>a) measuring a phase error between the PLL synchronization signal and the received PCR signal; and </claim-text>
<claim-text>b) adjusting the PLL based on the phase error if the phase error is below a predetermined phase error threshold. </claim-text>
<claim-text>c) incrementing an error count responsive to the phase error; and </claim-text>
<claim-text>d) resetting the MPEG decoder if the error count reaches a predetermined error count threshold. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. In an MPEG decoder comprised of a Phase-Locked Loop (PLL) that generates a synchronization signal, wherein the MPEG decoder receives a plurality of Program Clock Reference (PCR) signals, a method for reducing the effect of jitter in the PCR signals, comprising the steps of: 
<claim-text>a) measuring a phase error between the PLL synchronization signal and the received PCR signal; and </claim-text>
<claim-text>b) adjusting the PLL based on the phase error if the phase error is below a predetermined phase error threshold; </claim-text>
<claim-text>c) determining, when the phase error is above a predetermined phase error threshold, whether the phase error is a spike; </claim-text>
<claim-text>d) ignoring the phase error if the phase error is a spike; </claim-text>
<claim-text>e) adjusting the PLL according to a predetermined large-error-correction procedure if the phase error is not a spike. </claim-text>
<claim-text>f) incrementing an error count responsive to the phase error; and </claim-text>
<claim-text>g) resetting the MPEG decoder if the error count reaches a predetermined error count threshold.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>5</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002587A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002587A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002587A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002587A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002587A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002587A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002587A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
